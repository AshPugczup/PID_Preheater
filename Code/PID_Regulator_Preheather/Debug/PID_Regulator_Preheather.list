
PID_Regulator_Preheather.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000000c0  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000933c  080000c0  080000c0  000010c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00002d34  08009400  08009400  0000a400  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  0800c134  0800c134  0000e1f8  2**0
                  CONTENTS, READONLY
  4 .ARM          00000000  0800c134  0800c134  0000e1f8  2**0
                  CONTENTS, READONLY
  5 .preinit_array 00000000  0800c134  0800c134  0000e1f8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800c134  0800c134  0000d134  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  0800c138  0800c138  0000d138  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         000001f8  20000000  0800c13c  0000e000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000079c  200001f8  0800c334  0000e1f8  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  20000994  0800c334  0000e994  2**0
                  ALLOC
 11 .ARM.attributes 00000028  00000000  00000000  0000e1f8  2**0
                  CONTENTS, READONLY
 12 .debug_info   00016772  00000000  00000000  0000e220  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00002fe6  00000000  00000000  00024992  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_loclists 0000bbea  00000000  00000000  00027978  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000f70  00000000  00000000  00033568  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 00000fe6  00000000  00000000  000344d8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00011dda  00000000  00000000  000354be  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00019ed6  00000000  00000000  00047298  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    000673d5  00000000  00000000  0006116e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000043  00000000  00000000  000c8543  2**0
                  CONTENTS, READONLY
 21 .debug_frame  00003ef4  00000000  00000000  000c8588  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line_str 00000095  00000000  00000000  000cc47c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080000c0 <__do_global_dtors_aux>:
 80000c0:	b510      	push	{r4, lr}
 80000c2:	4c06      	ldr	r4, [pc, #24]	@ (80000dc <__do_global_dtors_aux+0x1c>)
 80000c4:	7823      	ldrb	r3, [r4, #0]
 80000c6:	2b00      	cmp	r3, #0
 80000c8:	d107      	bne.n	80000da <__do_global_dtors_aux+0x1a>
 80000ca:	4b05      	ldr	r3, [pc, #20]	@ (80000e0 <__do_global_dtors_aux+0x20>)
 80000cc:	2b00      	cmp	r3, #0
 80000ce:	d002      	beq.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d0:	4804      	ldr	r0, [pc, #16]	@ (80000e4 <__do_global_dtors_aux+0x24>)
 80000d2:	e000      	b.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d4:	bf00      	nop
 80000d6:	2301      	movs	r3, #1
 80000d8:	7023      	strb	r3, [r4, #0]
 80000da:	bd10      	pop	{r4, pc}
 80000dc:	200001f8 	.word	0x200001f8
 80000e0:	00000000 	.word	0x00000000
 80000e4:	080093e4 	.word	0x080093e4

080000e8 <frame_dummy>:
 80000e8:	4b04      	ldr	r3, [pc, #16]	@ (80000fc <frame_dummy+0x14>)
 80000ea:	b510      	push	{r4, lr}
 80000ec:	2b00      	cmp	r3, #0
 80000ee:	d003      	beq.n	80000f8 <frame_dummy+0x10>
 80000f0:	4903      	ldr	r1, [pc, #12]	@ (8000100 <frame_dummy+0x18>)
 80000f2:	4804      	ldr	r0, [pc, #16]	@ (8000104 <frame_dummy+0x1c>)
 80000f4:	e000      	b.n	80000f8 <frame_dummy+0x10>
 80000f6:	bf00      	nop
 80000f8:	bd10      	pop	{r4, pc}
 80000fa:	46c0      	nop			@ (mov r8, r8)
 80000fc:	00000000 	.word	0x00000000
 8000100:	200001fc 	.word	0x200001fc
 8000104:	080093e4 	.word	0x080093e4

08000108 <strlen>:
 8000108:	2300      	movs	r3, #0
 800010a:	5cc2      	ldrb	r2, [r0, r3]
 800010c:	3301      	adds	r3, #1
 800010e:	2a00      	cmp	r2, #0
 8000110:	d1fb      	bne.n	800010a <strlen+0x2>
 8000112:	1e58      	subs	r0, r3, #1
 8000114:	4770      	bx	lr
	...

08000118 <__gnu_thumb1_case_uqi>:
 8000118:	b402      	push	{r1}
 800011a:	4671      	mov	r1, lr
 800011c:	0849      	lsrs	r1, r1, #1
 800011e:	0049      	lsls	r1, r1, #1
 8000120:	5c09      	ldrb	r1, [r1, r0]
 8000122:	0049      	lsls	r1, r1, #1
 8000124:	448e      	add	lr, r1
 8000126:	bc02      	pop	{r1}
 8000128:	4770      	bx	lr
 800012a:	46c0      	nop			@ (mov r8, r8)

0800012c <__gnu_thumb1_case_shi>:
 800012c:	b403      	push	{r0, r1}
 800012e:	4671      	mov	r1, lr
 8000130:	0849      	lsrs	r1, r1, #1
 8000132:	0040      	lsls	r0, r0, #1
 8000134:	0049      	lsls	r1, r1, #1
 8000136:	5e09      	ldrsh	r1, [r1, r0]
 8000138:	0049      	lsls	r1, r1, #1
 800013a:	448e      	add	lr, r1
 800013c:	bc03      	pop	{r0, r1}
 800013e:	4770      	bx	lr

08000140 <__udivsi3>:
 8000140:	2200      	movs	r2, #0
 8000142:	0843      	lsrs	r3, r0, #1
 8000144:	428b      	cmp	r3, r1
 8000146:	d374      	bcc.n	8000232 <__udivsi3+0xf2>
 8000148:	0903      	lsrs	r3, r0, #4
 800014a:	428b      	cmp	r3, r1
 800014c:	d35f      	bcc.n	800020e <__udivsi3+0xce>
 800014e:	0a03      	lsrs	r3, r0, #8
 8000150:	428b      	cmp	r3, r1
 8000152:	d344      	bcc.n	80001de <__udivsi3+0x9e>
 8000154:	0b03      	lsrs	r3, r0, #12
 8000156:	428b      	cmp	r3, r1
 8000158:	d328      	bcc.n	80001ac <__udivsi3+0x6c>
 800015a:	0c03      	lsrs	r3, r0, #16
 800015c:	428b      	cmp	r3, r1
 800015e:	d30d      	bcc.n	800017c <__udivsi3+0x3c>
 8000160:	22ff      	movs	r2, #255	@ 0xff
 8000162:	0209      	lsls	r1, r1, #8
 8000164:	ba12      	rev	r2, r2
 8000166:	0c03      	lsrs	r3, r0, #16
 8000168:	428b      	cmp	r3, r1
 800016a:	d302      	bcc.n	8000172 <__udivsi3+0x32>
 800016c:	1212      	asrs	r2, r2, #8
 800016e:	0209      	lsls	r1, r1, #8
 8000170:	d065      	beq.n	800023e <__udivsi3+0xfe>
 8000172:	0b03      	lsrs	r3, r0, #12
 8000174:	428b      	cmp	r3, r1
 8000176:	d319      	bcc.n	80001ac <__udivsi3+0x6c>
 8000178:	e000      	b.n	800017c <__udivsi3+0x3c>
 800017a:	0a09      	lsrs	r1, r1, #8
 800017c:	0bc3      	lsrs	r3, r0, #15
 800017e:	428b      	cmp	r3, r1
 8000180:	d301      	bcc.n	8000186 <__udivsi3+0x46>
 8000182:	03cb      	lsls	r3, r1, #15
 8000184:	1ac0      	subs	r0, r0, r3
 8000186:	4152      	adcs	r2, r2
 8000188:	0b83      	lsrs	r3, r0, #14
 800018a:	428b      	cmp	r3, r1
 800018c:	d301      	bcc.n	8000192 <__udivsi3+0x52>
 800018e:	038b      	lsls	r3, r1, #14
 8000190:	1ac0      	subs	r0, r0, r3
 8000192:	4152      	adcs	r2, r2
 8000194:	0b43      	lsrs	r3, r0, #13
 8000196:	428b      	cmp	r3, r1
 8000198:	d301      	bcc.n	800019e <__udivsi3+0x5e>
 800019a:	034b      	lsls	r3, r1, #13
 800019c:	1ac0      	subs	r0, r0, r3
 800019e:	4152      	adcs	r2, r2
 80001a0:	0b03      	lsrs	r3, r0, #12
 80001a2:	428b      	cmp	r3, r1
 80001a4:	d301      	bcc.n	80001aa <__udivsi3+0x6a>
 80001a6:	030b      	lsls	r3, r1, #12
 80001a8:	1ac0      	subs	r0, r0, r3
 80001aa:	4152      	adcs	r2, r2
 80001ac:	0ac3      	lsrs	r3, r0, #11
 80001ae:	428b      	cmp	r3, r1
 80001b0:	d301      	bcc.n	80001b6 <__udivsi3+0x76>
 80001b2:	02cb      	lsls	r3, r1, #11
 80001b4:	1ac0      	subs	r0, r0, r3
 80001b6:	4152      	adcs	r2, r2
 80001b8:	0a83      	lsrs	r3, r0, #10
 80001ba:	428b      	cmp	r3, r1
 80001bc:	d301      	bcc.n	80001c2 <__udivsi3+0x82>
 80001be:	028b      	lsls	r3, r1, #10
 80001c0:	1ac0      	subs	r0, r0, r3
 80001c2:	4152      	adcs	r2, r2
 80001c4:	0a43      	lsrs	r3, r0, #9
 80001c6:	428b      	cmp	r3, r1
 80001c8:	d301      	bcc.n	80001ce <__udivsi3+0x8e>
 80001ca:	024b      	lsls	r3, r1, #9
 80001cc:	1ac0      	subs	r0, r0, r3
 80001ce:	4152      	adcs	r2, r2
 80001d0:	0a03      	lsrs	r3, r0, #8
 80001d2:	428b      	cmp	r3, r1
 80001d4:	d301      	bcc.n	80001da <__udivsi3+0x9a>
 80001d6:	020b      	lsls	r3, r1, #8
 80001d8:	1ac0      	subs	r0, r0, r3
 80001da:	4152      	adcs	r2, r2
 80001dc:	d2cd      	bcs.n	800017a <__udivsi3+0x3a>
 80001de:	09c3      	lsrs	r3, r0, #7
 80001e0:	428b      	cmp	r3, r1
 80001e2:	d301      	bcc.n	80001e8 <__udivsi3+0xa8>
 80001e4:	01cb      	lsls	r3, r1, #7
 80001e6:	1ac0      	subs	r0, r0, r3
 80001e8:	4152      	adcs	r2, r2
 80001ea:	0983      	lsrs	r3, r0, #6
 80001ec:	428b      	cmp	r3, r1
 80001ee:	d301      	bcc.n	80001f4 <__udivsi3+0xb4>
 80001f0:	018b      	lsls	r3, r1, #6
 80001f2:	1ac0      	subs	r0, r0, r3
 80001f4:	4152      	adcs	r2, r2
 80001f6:	0943      	lsrs	r3, r0, #5
 80001f8:	428b      	cmp	r3, r1
 80001fa:	d301      	bcc.n	8000200 <__udivsi3+0xc0>
 80001fc:	014b      	lsls	r3, r1, #5
 80001fe:	1ac0      	subs	r0, r0, r3
 8000200:	4152      	adcs	r2, r2
 8000202:	0903      	lsrs	r3, r0, #4
 8000204:	428b      	cmp	r3, r1
 8000206:	d301      	bcc.n	800020c <__udivsi3+0xcc>
 8000208:	010b      	lsls	r3, r1, #4
 800020a:	1ac0      	subs	r0, r0, r3
 800020c:	4152      	adcs	r2, r2
 800020e:	08c3      	lsrs	r3, r0, #3
 8000210:	428b      	cmp	r3, r1
 8000212:	d301      	bcc.n	8000218 <__udivsi3+0xd8>
 8000214:	00cb      	lsls	r3, r1, #3
 8000216:	1ac0      	subs	r0, r0, r3
 8000218:	4152      	adcs	r2, r2
 800021a:	0883      	lsrs	r3, r0, #2
 800021c:	428b      	cmp	r3, r1
 800021e:	d301      	bcc.n	8000224 <__udivsi3+0xe4>
 8000220:	008b      	lsls	r3, r1, #2
 8000222:	1ac0      	subs	r0, r0, r3
 8000224:	4152      	adcs	r2, r2
 8000226:	0843      	lsrs	r3, r0, #1
 8000228:	428b      	cmp	r3, r1
 800022a:	d301      	bcc.n	8000230 <__udivsi3+0xf0>
 800022c:	004b      	lsls	r3, r1, #1
 800022e:	1ac0      	subs	r0, r0, r3
 8000230:	4152      	adcs	r2, r2
 8000232:	1a41      	subs	r1, r0, r1
 8000234:	d200      	bcs.n	8000238 <__udivsi3+0xf8>
 8000236:	4601      	mov	r1, r0
 8000238:	4152      	adcs	r2, r2
 800023a:	4610      	mov	r0, r2
 800023c:	4770      	bx	lr
 800023e:	e7ff      	b.n	8000240 <__udivsi3+0x100>
 8000240:	b501      	push	{r0, lr}
 8000242:	2000      	movs	r0, #0
 8000244:	f000 f8f0 	bl	8000428 <__aeabi_idiv0>
 8000248:	bd02      	pop	{r1, pc}
 800024a:	46c0      	nop			@ (mov r8, r8)

0800024c <__aeabi_uidivmod>:
 800024c:	2900      	cmp	r1, #0
 800024e:	d0f7      	beq.n	8000240 <__udivsi3+0x100>
 8000250:	e776      	b.n	8000140 <__udivsi3>
 8000252:	4770      	bx	lr

08000254 <__divsi3>:
 8000254:	4603      	mov	r3, r0
 8000256:	430b      	orrs	r3, r1
 8000258:	d47f      	bmi.n	800035a <__divsi3+0x106>
 800025a:	2200      	movs	r2, #0
 800025c:	0843      	lsrs	r3, r0, #1
 800025e:	428b      	cmp	r3, r1
 8000260:	d374      	bcc.n	800034c <__divsi3+0xf8>
 8000262:	0903      	lsrs	r3, r0, #4
 8000264:	428b      	cmp	r3, r1
 8000266:	d35f      	bcc.n	8000328 <__divsi3+0xd4>
 8000268:	0a03      	lsrs	r3, r0, #8
 800026a:	428b      	cmp	r3, r1
 800026c:	d344      	bcc.n	80002f8 <__divsi3+0xa4>
 800026e:	0b03      	lsrs	r3, r0, #12
 8000270:	428b      	cmp	r3, r1
 8000272:	d328      	bcc.n	80002c6 <__divsi3+0x72>
 8000274:	0c03      	lsrs	r3, r0, #16
 8000276:	428b      	cmp	r3, r1
 8000278:	d30d      	bcc.n	8000296 <__divsi3+0x42>
 800027a:	22ff      	movs	r2, #255	@ 0xff
 800027c:	0209      	lsls	r1, r1, #8
 800027e:	ba12      	rev	r2, r2
 8000280:	0c03      	lsrs	r3, r0, #16
 8000282:	428b      	cmp	r3, r1
 8000284:	d302      	bcc.n	800028c <__divsi3+0x38>
 8000286:	1212      	asrs	r2, r2, #8
 8000288:	0209      	lsls	r1, r1, #8
 800028a:	d065      	beq.n	8000358 <__divsi3+0x104>
 800028c:	0b03      	lsrs	r3, r0, #12
 800028e:	428b      	cmp	r3, r1
 8000290:	d319      	bcc.n	80002c6 <__divsi3+0x72>
 8000292:	e000      	b.n	8000296 <__divsi3+0x42>
 8000294:	0a09      	lsrs	r1, r1, #8
 8000296:	0bc3      	lsrs	r3, r0, #15
 8000298:	428b      	cmp	r3, r1
 800029a:	d301      	bcc.n	80002a0 <__divsi3+0x4c>
 800029c:	03cb      	lsls	r3, r1, #15
 800029e:	1ac0      	subs	r0, r0, r3
 80002a0:	4152      	adcs	r2, r2
 80002a2:	0b83      	lsrs	r3, r0, #14
 80002a4:	428b      	cmp	r3, r1
 80002a6:	d301      	bcc.n	80002ac <__divsi3+0x58>
 80002a8:	038b      	lsls	r3, r1, #14
 80002aa:	1ac0      	subs	r0, r0, r3
 80002ac:	4152      	adcs	r2, r2
 80002ae:	0b43      	lsrs	r3, r0, #13
 80002b0:	428b      	cmp	r3, r1
 80002b2:	d301      	bcc.n	80002b8 <__divsi3+0x64>
 80002b4:	034b      	lsls	r3, r1, #13
 80002b6:	1ac0      	subs	r0, r0, r3
 80002b8:	4152      	adcs	r2, r2
 80002ba:	0b03      	lsrs	r3, r0, #12
 80002bc:	428b      	cmp	r3, r1
 80002be:	d301      	bcc.n	80002c4 <__divsi3+0x70>
 80002c0:	030b      	lsls	r3, r1, #12
 80002c2:	1ac0      	subs	r0, r0, r3
 80002c4:	4152      	adcs	r2, r2
 80002c6:	0ac3      	lsrs	r3, r0, #11
 80002c8:	428b      	cmp	r3, r1
 80002ca:	d301      	bcc.n	80002d0 <__divsi3+0x7c>
 80002cc:	02cb      	lsls	r3, r1, #11
 80002ce:	1ac0      	subs	r0, r0, r3
 80002d0:	4152      	adcs	r2, r2
 80002d2:	0a83      	lsrs	r3, r0, #10
 80002d4:	428b      	cmp	r3, r1
 80002d6:	d301      	bcc.n	80002dc <__divsi3+0x88>
 80002d8:	028b      	lsls	r3, r1, #10
 80002da:	1ac0      	subs	r0, r0, r3
 80002dc:	4152      	adcs	r2, r2
 80002de:	0a43      	lsrs	r3, r0, #9
 80002e0:	428b      	cmp	r3, r1
 80002e2:	d301      	bcc.n	80002e8 <__divsi3+0x94>
 80002e4:	024b      	lsls	r3, r1, #9
 80002e6:	1ac0      	subs	r0, r0, r3
 80002e8:	4152      	adcs	r2, r2
 80002ea:	0a03      	lsrs	r3, r0, #8
 80002ec:	428b      	cmp	r3, r1
 80002ee:	d301      	bcc.n	80002f4 <__divsi3+0xa0>
 80002f0:	020b      	lsls	r3, r1, #8
 80002f2:	1ac0      	subs	r0, r0, r3
 80002f4:	4152      	adcs	r2, r2
 80002f6:	d2cd      	bcs.n	8000294 <__divsi3+0x40>
 80002f8:	09c3      	lsrs	r3, r0, #7
 80002fa:	428b      	cmp	r3, r1
 80002fc:	d301      	bcc.n	8000302 <__divsi3+0xae>
 80002fe:	01cb      	lsls	r3, r1, #7
 8000300:	1ac0      	subs	r0, r0, r3
 8000302:	4152      	adcs	r2, r2
 8000304:	0983      	lsrs	r3, r0, #6
 8000306:	428b      	cmp	r3, r1
 8000308:	d301      	bcc.n	800030e <__divsi3+0xba>
 800030a:	018b      	lsls	r3, r1, #6
 800030c:	1ac0      	subs	r0, r0, r3
 800030e:	4152      	adcs	r2, r2
 8000310:	0943      	lsrs	r3, r0, #5
 8000312:	428b      	cmp	r3, r1
 8000314:	d301      	bcc.n	800031a <__divsi3+0xc6>
 8000316:	014b      	lsls	r3, r1, #5
 8000318:	1ac0      	subs	r0, r0, r3
 800031a:	4152      	adcs	r2, r2
 800031c:	0903      	lsrs	r3, r0, #4
 800031e:	428b      	cmp	r3, r1
 8000320:	d301      	bcc.n	8000326 <__divsi3+0xd2>
 8000322:	010b      	lsls	r3, r1, #4
 8000324:	1ac0      	subs	r0, r0, r3
 8000326:	4152      	adcs	r2, r2
 8000328:	08c3      	lsrs	r3, r0, #3
 800032a:	428b      	cmp	r3, r1
 800032c:	d301      	bcc.n	8000332 <__divsi3+0xde>
 800032e:	00cb      	lsls	r3, r1, #3
 8000330:	1ac0      	subs	r0, r0, r3
 8000332:	4152      	adcs	r2, r2
 8000334:	0883      	lsrs	r3, r0, #2
 8000336:	428b      	cmp	r3, r1
 8000338:	d301      	bcc.n	800033e <__divsi3+0xea>
 800033a:	008b      	lsls	r3, r1, #2
 800033c:	1ac0      	subs	r0, r0, r3
 800033e:	4152      	adcs	r2, r2
 8000340:	0843      	lsrs	r3, r0, #1
 8000342:	428b      	cmp	r3, r1
 8000344:	d301      	bcc.n	800034a <__divsi3+0xf6>
 8000346:	004b      	lsls	r3, r1, #1
 8000348:	1ac0      	subs	r0, r0, r3
 800034a:	4152      	adcs	r2, r2
 800034c:	1a41      	subs	r1, r0, r1
 800034e:	d200      	bcs.n	8000352 <__divsi3+0xfe>
 8000350:	4601      	mov	r1, r0
 8000352:	4152      	adcs	r2, r2
 8000354:	4610      	mov	r0, r2
 8000356:	4770      	bx	lr
 8000358:	e05d      	b.n	8000416 <__divsi3+0x1c2>
 800035a:	0fca      	lsrs	r2, r1, #31
 800035c:	d000      	beq.n	8000360 <__divsi3+0x10c>
 800035e:	4249      	negs	r1, r1
 8000360:	1003      	asrs	r3, r0, #32
 8000362:	d300      	bcc.n	8000366 <__divsi3+0x112>
 8000364:	4240      	negs	r0, r0
 8000366:	4053      	eors	r3, r2
 8000368:	2200      	movs	r2, #0
 800036a:	469c      	mov	ip, r3
 800036c:	0903      	lsrs	r3, r0, #4
 800036e:	428b      	cmp	r3, r1
 8000370:	d32d      	bcc.n	80003ce <__divsi3+0x17a>
 8000372:	0a03      	lsrs	r3, r0, #8
 8000374:	428b      	cmp	r3, r1
 8000376:	d312      	bcc.n	800039e <__divsi3+0x14a>
 8000378:	22fc      	movs	r2, #252	@ 0xfc
 800037a:	0189      	lsls	r1, r1, #6
 800037c:	ba12      	rev	r2, r2
 800037e:	0a03      	lsrs	r3, r0, #8
 8000380:	428b      	cmp	r3, r1
 8000382:	d30c      	bcc.n	800039e <__divsi3+0x14a>
 8000384:	0189      	lsls	r1, r1, #6
 8000386:	1192      	asrs	r2, r2, #6
 8000388:	428b      	cmp	r3, r1
 800038a:	d308      	bcc.n	800039e <__divsi3+0x14a>
 800038c:	0189      	lsls	r1, r1, #6
 800038e:	1192      	asrs	r2, r2, #6
 8000390:	428b      	cmp	r3, r1
 8000392:	d304      	bcc.n	800039e <__divsi3+0x14a>
 8000394:	0189      	lsls	r1, r1, #6
 8000396:	d03a      	beq.n	800040e <__divsi3+0x1ba>
 8000398:	1192      	asrs	r2, r2, #6
 800039a:	e000      	b.n	800039e <__divsi3+0x14a>
 800039c:	0989      	lsrs	r1, r1, #6
 800039e:	09c3      	lsrs	r3, r0, #7
 80003a0:	428b      	cmp	r3, r1
 80003a2:	d301      	bcc.n	80003a8 <__divsi3+0x154>
 80003a4:	01cb      	lsls	r3, r1, #7
 80003a6:	1ac0      	subs	r0, r0, r3
 80003a8:	4152      	adcs	r2, r2
 80003aa:	0983      	lsrs	r3, r0, #6
 80003ac:	428b      	cmp	r3, r1
 80003ae:	d301      	bcc.n	80003b4 <__divsi3+0x160>
 80003b0:	018b      	lsls	r3, r1, #6
 80003b2:	1ac0      	subs	r0, r0, r3
 80003b4:	4152      	adcs	r2, r2
 80003b6:	0943      	lsrs	r3, r0, #5
 80003b8:	428b      	cmp	r3, r1
 80003ba:	d301      	bcc.n	80003c0 <__divsi3+0x16c>
 80003bc:	014b      	lsls	r3, r1, #5
 80003be:	1ac0      	subs	r0, r0, r3
 80003c0:	4152      	adcs	r2, r2
 80003c2:	0903      	lsrs	r3, r0, #4
 80003c4:	428b      	cmp	r3, r1
 80003c6:	d301      	bcc.n	80003cc <__divsi3+0x178>
 80003c8:	010b      	lsls	r3, r1, #4
 80003ca:	1ac0      	subs	r0, r0, r3
 80003cc:	4152      	adcs	r2, r2
 80003ce:	08c3      	lsrs	r3, r0, #3
 80003d0:	428b      	cmp	r3, r1
 80003d2:	d301      	bcc.n	80003d8 <__divsi3+0x184>
 80003d4:	00cb      	lsls	r3, r1, #3
 80003d6:	1ac0      	subs	r0, r0, r3
 80003d8:	4152      	adcs	r2, r2
 80003da:	0883      	lsrs	r3, r0, #2
 80003dc:	428b      	cmp	r3, r1
 80003de:	d301      	bcc.n	80003e4 <__divsi3+0x190>
 80003e0:	008b      	lsls	r3, r1, #2
 80003e2:	1ac0      	subs	r0, r0, r3
 80003e4:	4152      	adcs	r2, r2
 80003e6:	d2d9      	bcs.n	800039c <__divsi3+0x148>
 80003e8:	0843      	lsrs	r3, r0, #1
 80003ea:	428b      	cmp	r3, r1
 80003ec:	d301      	bcc.n	80003f2 <__divsi3+0x19e>
 80003ee:	004b      	lsls	r3, r1, #1
 80003f0:	1ac0      	subs	r0, r0, r3
 80003f2:	4152      	adcs	r2, r2
 80003f4:	1a41      	subs	r1, r0, r1
 80003f6:	d200      	bcs.n	80003fa <__divsi3+0x1a6>
 80003f8:	4601      	mov	r1, r0
 80003fa:	4663      	mov	r3, ip
 80003fc:	4152      	adcs	r2, r2
 80003fe:	105b      	asrs	r3, r3, #1
 8000400:	4610      	mov	r0, r2
 8000402:	d301      	bcc.n	8000408 <__divsi3+0x1b4>
 8000404:	4240      	negs	r0, r0
 8000406:	2b00      	cmp	r3, #0
 8000408:	d500      	bpl.n	800040c <__divsi3+0x1b8>
 800040a:	4249      	negs	r1, r1
 800040c:	4770      	bx	lr
 800040e:	4663      	mov	r3, ip
 8000410:	105b      	asrs	r3, r3, #1
 8000412:	d300      	bcc.n	8000416 <__divsi3+0x1c2>
 8000414:	4240      	negs	r0, r0
 8000416:	b501      	push	{r0, lr}
 8000418:	2000      	movs	r0, #0
 800041a:	f000 f805 	bl	8000428 <__aeabi_idiv0>
 800041e:	bd02      	pop	{r1, pc}

08000420 <__aeabi_idivmod>:
 8000420:	2900      	cmp	r1, #0
 8000422:	d0f8      	beq.n	8000416 <__divsi3+0x1c2>
 8000424:	e716      	b.n	8000254 <__divsi3>
 8000426:	4770      	bx	lr

08000428 <__aeabi_idiv0>:
 8000428:	4770      	bx	lr
 800042a:	46c0      	nop			@ (mov r8, r8)

0800042c <__aeabi_cdrcmple>:
 800042c:	4684      	mov	ip, r0
 800042e:	0010      	movs	r0, r2
 8000430:	4662      	mov	r2, ip
 8000432:	468c      	mov	ip, r1
 8000434:	0019      	movs	r1, r3
 8000436:	4663      	mov	r3, ip
 8000438:	e000      	b.n	800043c <__aeabi_cdcmpeq>
 800043a:	46c0      	nop			@ (mov r8, r8)

0800043c <__aeabi_cdcmpeq>:
 800043c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800043e:	f002 f84b 	bl	80024d8 <__ledf2>
 8000442:	2800      	cmp	r0, #0
 8000444:	d401      	bmi.n	800044a <__aeabi_cdcmpeq+0xe>
 8000446:	2100      	movs	r1, #0
 8000448:	42c8      	cmn	r0, r1
 800044a:	bd1f      	pop	{r0, r1, r2, r3, r4, pc}

0800044c <__aeabi_dcmpeq>:
 800044c:	b510      	push	{r4, lr}
 800044e:	f001 ff8f 	bl	8002370 <__eqdf2>
 8000452:	4240      	negs	r0, r0
 8000454:	3001      	adds	r0, #1
 8000456:	bd10      	pop	{r4, pc}

08000458 <__aeabi_dcmplt>:
 8000458:	b510      	push	{r4, lr}
 800045a:	f002 f83d 	bl	80024d8 <__ledf2>
 800045e:	2800      	cmp	r0, #0
 8000460:	db01      	blt.n	8000466 <__aeabi_dcmplt+0xe>
 8000462:	2000      	movs	r0, #0
 8000464:	bd10      	pop	{r4, pc}
 8000466:	2001      	movs	r0, #1
 8000468:	bd10      	pop	{r4, pc}
 800046a:	46c0      	nop			@ (mov r8, r8)

0800046c <__aeabi_dcmple>:
 800046c:	b510      	push	{r4, lr}
 800046e:	f002 f833 	bl	80024d8 <__ledf2>
 8000472:	2800      	cmp	r0, #0
 8000474:	dd01      	ble.n	800047a <__aeabi_dcmple+0xe>
 8000476:	2000      	movs	r0, #0
 8000478:	bd10      	pop	{r4, pc}
 800047a:	2001      	movs	r0, #1
 800047c:	bd10      	pop	{r4, pc}
 800047e:	46c0      	nop			@ (mov r8, r8)

08000480 <__aeabi_dcmpgt>:
 8000480:	b510      	push	{r4, lr}
 8000482:	f001 ffb9 	bl	80023f8 <__gedf2>
 8000486:	2800      	cmp	r0, #0
 8000488:	dc01      	bgt.n	800048e <__aeabi_dcmpgt+0xe>
 800048a:	2000      	movs	r0, #0
 800048c:	bd10      	pop	{r4, pc}
 800048e:	2001      	movs	r0, #1
 8000490:	bd10      	pop	{r4, pc}
 8000492:	46c0      	nop			@ (mov r8, r8)

08000494 <__aeabi_dcmpge>:
 8000494:	b510      	push	{r4, lr}
 8000496:	f001 ffaf 	bl	80023f8 <__gedf2>
 800049a:	2800      	cmp	r0, #0
 800049c:	da01      	bge.n	80004a2 <__aeabi_dcmpge+0xe>
 800049e:	2000      	movs	r0, #0
 80004a0:	bd10      	pop	{r4, pc}
 80004a2:	2001      	movs	r0, #1
 80004a4:	bd10      	pop	{r4, pc}
 80004a6:	46c0      	nop			@ (mov r8, r8)

080004a8 <__aeabi_cfrcmple>:
 80004a8:	4684      	mov	ip, r0
 80004aa:	0008      	movs	r0, r1
 80004ac:	4661      	mov	r1, ip
 80004ae:	e7ff      	b.n	80004b0 <__aeabi_cfcmpeq>

080004b0 <__aeabi_cfcmpeq>:
 80004b0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80004b2:	f000 fbc3 	bl	8000c3c <__lesf2>
 80004b6:	2800      	cmp	r0, #0
 80004b8:	d401      	bmi.n	80004be <__aeabi_cfcmpeq+0xe>
 80004ba:	2100      	movs	r1, #0
 80004bc:	42c8      	cmn	r0, r1
 80004be:	bd1f      	pop	{r0, r1, r2, r3, r4, pc}

080004c0 <__aeabi_fcmpeq>:
 80004c0:	b510      	push	{r4, lr}
 80004c2:	f000 fb4b 	bl	8000b5c <__eqsf2>
 80004c6:	4240      	negs	r0, r0
 80004c8:	3001      	adds	r0, #1
 80004ca:	bd10      	pop	{r4, pc}

080004cc <__aeabi_fcmplt>:
 80004cc:	b510      	push	{r4, lr}
 80004ce:	f000 fbb5 	bl	8000c3c <__lesf2>
 80004d2:	2800      	cmp	r0, #0
 80004d4:	db01      	blt.n	80004da <__aeabi_fcmplt+0xe>
 80004d6:	2000      	movs	r0, #0
 80004d8:	bd10      	pop	{r4, pc}
 80004da:	2001      	movs	r0, #1
 80004dc:	bd10      	pop	{r4, pc}
 80004de:	46c0      	nop			@ (mov r8, r8)

080004e0 <__aeabi_fcmple>:
 80004e0:	b510      	push	{r4, lr}
 80004e2:	f000 fbab 	bl	8000c3c <__lesf2>
 80004e6:	2800      	cmp	r0, #0
 80004e8:	dd01      	ble.n	80004ee <__aeabi_fcmple+0xe>
 80004ea:	2000      	movs	r0, #0
 80004ec:	bd10      	pop	{r4, pc}
 80004ee:	2001      	movs	r0, #1
 80004f0:	bd10      	pop	{r4, pc}
 80004f2:	46c0      	nop			@ (mov r8, r8)

080004f4 <__aeabi_fcmpgt>:
 80004f4:	b510      	push	{r4, lr}
 80004f6:	f000 fb59 	bl	8000bac <__gesf2>
 80004fa:	2800      	cmp	r0, #0
 80004fc:	dc01      	bgt.n	8000502 <__aeabi_fcmpgt+0xe>
 80004fe:	2000      	movs	r0, #0
 8000500:	bd10      	pop	{r4, pc}
 8000502:	2001      	movs	r0, #1
 8000504:	bd10      	pop	{r4, pc}
 8000506:	46c0      	nop			@ (mov r8, r8)

08000508 <__aeabi_fcmpge>:
 8000508:	b510      	push	{r4, lr}
 800050a:	f000 fb4f 	bl	8000bac <__gesf2>
 800050e:	2800      	cmp	r0, #0
 8000510:	da01      	bge.n	8000516 <__aeabi_fcmpge+0xe>
 8000512:	2000      	movs	r0, #0
 8000514:	bd10      	pop	{r4, pc}
 8000516:	2001      	movs	r0, #1
 8000518:	bd10      	pop	{r4, pc}
 800051a:	46c0      	nop			@ (mov r8, r8)

0800051c <__aeabi_f2uiz>:
 800051c:	219e      	movs	r1, #158	@ 0x9e
 800051e:	b510      	push	{r4, lr}
 8000520:	05c9      	lsls	r1, r1, #23
 8000522:	1c04      	adds	r4, r0, #0
 8000524:	f7ff fff0 	bl	8000508 <__aeabi_fcmpge>
 8000528:	2800      	cmp	r0, #0
 800052a:	d103      	bne.n	8000534 <__aeabi_f2uiz+0x18>
 800052c:	1c20      	adds	r0, r4, #0
 800052e:	f000 ff8b 	bl	8001448 <__aeabi_f2iz>
 8000532:	bd10      	pop	{r4, pc}
 8000534:	219e      	movs	r1, #158	@ 0x9e
 8000536:	1c20      	adds	r0, r4, #0
 8000538:	05c9      	lsls	r1, r1, #23
 800053a:	f000 fd21 	bl	8000f80 <__aeabi_fsub>
 800053e:	f000 ff83 	bl	8001448 <__aeabi_f2iz>
 8000542:	2380      	movs	r3, #128	@ 0x80
 8000544:	061b      	lsls	r3, r3, #24
 8000546:	469c      	mov	ip, r3
 8000548:	4460      	add	r0, ip
 800054a:	e7f2      	b.n	8000532 <__aeabi_f2uiz+0x16>

0800054c <__aeabi_fadd>:
 800054c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800054e:	024b      	lsls	r3, r1, #9
 8000550:	0a5a      	lsrs	r2, r3, #9
 8000552:	4694      	mov	ip, r2
 8000554:	004a      	lsls	r2, r1, #1
 8000556:	0fc9      	lsrs	r1, r1, #31
 8000558:	46ce      	mov	lr, r9
 800055a:	4647      	mov	r7, r8
 800055c:	4689      	mov	r9, r1
 800055e:	0045      	lsls	r5, r0, #1
 8000560:	0246      	lsls	r6, r0, #9
 8000562:	0e2d      	lsrs	r5, r5, #24
 8000564:	0e12      	lsrs	r2, r2, #24
 8000566:	b580      	push	{r7, lr}
 8000568:	0999      	lsrs	r1, r3, #6
 800056a:	0a77      	lsrs	r7, r6, #9
 800056c:	0fc4      	lsrs	r4, r0, #31
 800056e:	09b6      	lsrs	r6, r6, #6
 8000570:	1aab      	subs	r3, r5, r2
 8000572:	454c      	cmp	r4, r9
 8000574:	d020      	beq.n	80005b8 <__aeabi_fadd+0x6c>
 8000576:	2b00      	cmp	r3, #0
 8000578:	dd0c      	ble.n	8000594 <__aeabi_fadd+0x48>
 800057a:	2a00      	cmp	r2, #0
 800057c:	d134      	bne.n	80005e8 <__aeabi_fadd+0x9c>
 800057e:	2900      	cmp	r1, #0
 8000580:	d02a      	beq.n	80005d8 <__aeabi_fadd+0x8c>
 8000582:	1e5a      	subs	r2, r3, #1
 8000584:	2b01      	cmp	r3, #1
 8000586:	d100      	bne.n	800058a <__aeabi_fadd+0x3e>
 8000588:	e08f      	b.n	80006aa <__aeabi_fadd+0x15e>
 800058a:	2bff      	cmp	r3, #255	@ 0xff
 800058c:	d100      	bne.n	8000590 <__aeabi_fadd+0x44>
 800058e:	e0cd      	b.n	800072c <__aeabi_fadd+0x1e0>
 8000590:	0013      	movs	r3, r2
 8000592:	e02f      	b.n	80005f4 <__aeabi_fadd+0xa8>
 8000594:	2b00      	cmp	r3, #0
 8000596:	d060      	beq.n	800065a <__aeabi_fadd+0x10e>
 8000598:	1b53      	subs	r3, r2, r5
 800059a:	2d00      	cmp	r5, #0
 800059c:	d000      	beq.n	80005a0 <__aeabi_fadd+0x54>
 800059e:	e0ee      	b.n	800077e <__aeabi_fadd+0x232>
 80005a0:	2e00      	cmp	r6, #0
 80005a2:	d100      	bne.n	80005a6 <__aeabi_fadd+0x5a>
 80005a4:	e13e      	b.n	8000824 <__aeabi_fadd+0x2d8>
 80005a6:	1e5c      	subs	r4, r3, #1
 80005a8:	2b01      	cmp	r3, #1
 80005aa:	d100      	bne.n	80005ae <__aeabi_fadd+0x62>
 80005ac:	e16b      	b.n	8000886 <__aeabi_fadd+0x33a>
 80005ae:	2bff      	cmp	r3, #255	@ 0xff
 80005b0:	d100      	bne.n	80005b4 <__aeabi_fadd+0x68>
 80005b2:	e0b9      	b.n	8000728 <__aeabi_fadd+0x1dc>
 80005b4:	0023      	movs	r3, r4
 80005b6:	e0e7      	b.n	8000788 <__aeabi_fadd+0x23c>
 80005b8:	2b00      	cmp	r3, #0
 80005ba:	dc00      	bgt.n	80005be <__aeabi_fadd+0x72>
 80005bc:	e0a4      	b.n	8000708 <__aeabi_fadd+0x1bc>
 80005be:	2a00      	cmp	r2, #0
 80005c0:	d069      	beq.n	8000696 <__aeabi_fadd+0x14a>
 80005c2:	2dff      	cmp	r5, #255	@ 0xff
 80005c4:	d100      	bne.n	80005c8 <__aeabi_fadd+0x7c>
 80005c6:	e0b1      	b.n	800072c <__aeabi_fadd+0x1e0>
 80005c8:	2280      	movs	r2, #128	@ 0x80
 80005ca:	04d2      	lsls	r2, r2, #19
 80005cc:	4311      	orrs	r1, r2
 80005ce:	2b1b      	cmp	r3, #27
 80005d0:	dc00      	bgt.n	80005d4 <__aeabi_fadd+0x88>
 80005d2:	e0e9      	b.n	80007a8 <__aeabi_fadd+0x25c>
 80005d4:	002b      	movs	r3, r5
 80005d6:	3605      	adds	r6, #5
 80005d8:	08f7      	lsrs	r7, r6, #3
 80005da:	2bff      	cmp	r3, #255	@ 0xff
 80005dc:	d100      	bne.n	80005e0 <__aeabi_fadd+0x94>
 80005de:	e0a5      	b.n	800072c <__aeabi_fadd+0x1e0>
 80005e0:	027a      	lsls	r2, r7, #9
 80005e2:	0a52      	lsrs	r2, r2, #9
 80005e4:	b2d8      	uxtb	r0, r3
 80005e6:	e030      	b.n	800064a <__aeabi_fadd+0xfe>
 80005e8:	2dff      	cmp	r5, #255	@ 0xff
 80005ea:	d100      	bne.n	80005ee <__aeabi_fadd+0xa2>
 80005ec:	e09e      	b.n	800072c <__aeabi_fadd+0x1e0>
 80005ee:	2280      	movs	r2, #128	@ 0x80
 80005f0:	04d2      	lsls	r2, r2, #19
 80005f2:	4311      	orrs	r1, r2
 80005f4:	2001      	movs	r0, #1
 80005f6:	2b1b      	cmp	r3, #27
 80005f8:	dc08      	bgt.n	800060c <__aeabi_fadd+0xc0>
 80005fa:	0008      	movs	r0, r1
 80005fc:	2220      	movs	r2, #32
 80005fe:	40d8      	lsrs	r0, r3
 8000600:	1ad3      	subs	r3, r2, r3
 8000602:	4099      	lsls	r1, r3
 8000604:	000b      	movs	r3, r1
 8000606:	1e5a      	subs	r2, r3, #1
 8000608:	4193      	sbcs	r3, r2
 800060a:	4318      	orrs	r0, r3
 800060c:	1a36      	subs	r6, r6, r0
 800060e:	0173      	lsls	r3, r6, #5
 8000610:	d400      	bmi.n	8000614 <__aeabi_fadd+0xc8>
 8000612:	e071      	b.n	80006f8 <__aeabi_fadd+0x1ac>
 8000614:	01b6      	lsls	r6, r6, #6
 8000616:	09b7      	lsrs	r7, r6, #6
 8000618:	0038      	movs	r0, r7
 800061a:	f003 f835 	bl	8003688 <__clzsi2>
 800061e:	003b      	movs	r3, r7
 8000620:	3805      	subs	r0, #5
 8000622:	4083      	lsls	r3, r0
 8000624:	4285      	cmp	r5, r0
 8000626:	dd4d      	ble.n	80006c4 <__aeabi_fadd+0x178>
 8000628:	4eb4      	ldr	r6, [pc, #720]	@ (80008fc <__aeabi_fadd+0x3b0>)
 800062a:	1a2d      	subs	r5, r5, r0
 800062c:	401e      	ands	r6, r3
 800062e:	075a      	lsls	r2, r3, #29
 8000630:	d068      	beq.n	8000704 <__aeabi_fadd+0x1b8>
 8000632:	220f      	movs	r2, #15
 8000634:	4013      	ands	r3, r2
 8000636:	2b04      	cmp	r3, #4
 8000638:	d064      	beq.n	8000704 <__aeabi_fadd+0x1b8>
 800063a:	3604      	adds	r6, #4
 800063c:	0173      	lsls	r3, r6, #5
 800063e:	d561      	bpl.n	8000704 <__aeabi_fadd+0x1b8>
 8000640:	1c68      	adds	r0, r5, #1
 8000642:	2dfe      	cmp	r5, #254	@ 0xfe
 8000644:	d154      	bne.n	80006f0 <__aeabi_fadd+0x1a4>
 8000646:	20ff      	movs	r0, #255	@ 0xff
 8000648:	2200      	movs	r2, #0
 800064a:	05c0      	lsls	r0, r0, #23
 800064c:	4310      	orrs	r0, r2
 800064e:	07e4      	lsls	r4, r4, #31
 8000650:	4320      	orrs	r0, r4
 8000652:	bcc0      	pop	{r6, r7}
 8000654:	46b9      	mov	r9, r7
 8000656:	46b0      	mov	r8, r6
 8000658:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800065a:	22fe      	movs	r2, #254	@ 0xfe
 800065c:	4690      	mov	r8, r2
 800065e:	1c68      	adds	r0, r5, #1
 8000660:	0002      	movs	r2, r0
 8000662:	4640      	mov	r0, r8
 8000664:	4210      	tst	r0, r2
 8000666:	d16b      	bne.n	8000740 <__aeabi_fadd+0x1f4>
 8000668:	2d00      	cmp	r5, #0
 800066a:	d000      	beq.n	800066e <__aeabi_fadd+0x122>
 800066c:	e0dd      	b.n	800082a <__aeabi_fadd+0x2de>
 800066e:	2e00      	cmp	r6, #0
 8000670:	d100      	bne.n	8000674 <__aeabi_fadd+0x128>
 8000672:	e102      	b.n	800087a <__aeabi_fadd+0x32e>
 8000674:	2900      	cmp	r1, #0
 8000676:	d0b3      	beq.n	80005e0 <__aeabi_fadd+0x94>
 8000678:	2280      	movs	r2, #128	@ 0x80
 800067a:	1a77      	subs	r7, r6, r1
 800067c:	04d2      	lsls	r2, r2, #19
 800067e:	4217      	tst	r7, r2
 8000680:	d100      	bne.n	8000684 <__aeabi_fadd+0x138>
 8000682:	e136      	b.n	80008f2 <__aeabi_fadd+0x3a6>
 8000684:	464c      	mov	r4, r9
 8000686:	1b8e      	subs	r6, r1, r6
 8000688:	d061      	beq.n	800074e <__aeabi_fadd+0x202>
 800068a:	2001      	movs	r0, #1
 800068c:	4216      	tst	r6, r2
 800068e:	d130      	bne.n	80006f2 <__aeabi_fadd+0x1a6>
 8000690:	2300      	movs	r3, #0
 8000692:	08f7      	lsrs	r7, r6, #3
 8000694:	e7a4      	b.n	80005e0 <__aeabi_fadd+0x94>
 8000696:	2900      	cmp	r1, #0
 8000698:	d09e      	beq.n	80005d8 <__aeabi_fadd+0x8c>
 800069a:	1e5a      	subs	r2, r3, #1
 800069c:	2b01      	cmp	r3, #1
 800069e:	d100      	bne.n	80006a2 <__aeabi_fadd+0x156>
 80006a0:	e0ca      	b.n	8000838 <__aeabi_fadd+0x2ec>
 80006a2:	2bff      	cmp	r3, #255	@ 0xff
 80006a4:	d042      	beq.n	800072c <__aeabi_fadd+0x1e0>
 80006a6:	0013      	movs	r3, r2
 80006a8:	e791      	b.n	80005ce <__aeabi_fadd+0x82>
 80006aa:	1a71      	subs	r1, r6, r1
 80006ac:	014b      	lsls	r3, r1, #5
 80006ae:	d400      	bmi.n	80006b2 <__aeabi_fadd+0x166>
 80006b0:	e0d1      	b.n	8000856 <__aeabi_fadd+0x30a>
 80006b2:	018f      	lsls	r7, r1, #6
 80006b4:	09bf      	lsrs	r7, r7, #6
 80006b6:	0038      	movs	r0, r7
 80006b8:	f002 ffe6 	bl	8003688 <__clzsi2>
 80006bc:	003b      	movs	r3, r7
 80006be:	3805      	subs	r0, #5
 80006c0:	4083      	lsls	r3, r0
 80006c2:	2501      	movs	r5, #1
 80006c4:	2220      	movs	r2, #32
 80006c6:	1b40      	subs	r0, r0, r5
 80006c8:	3001      	adds	r0, #1
 80006ca:	1a12      	subs	r2, r2, r0
 80006cc:	001e      	movs	r6, r3
 80006ce:	4093      	lsls	r3, r2
 80006d0:	40c6      	lsrs	r6, r0
 80006d2:	1e5a      	subs	r2, r3, #1
 80006d4:	4193      	sbcs	r3, r2
 80006d6:	431e      	orrs	r6, r3
 80006d8:	d039      	beq.n	800074e <__aeabi_fadd+0x202>
 80006da:	0773      	lsls	r3, r6, #29
 80006dc:	d100      	bne.n	80006e0 <__aeabi_fadd+0x194>
 80006de:	e11b      	b.n	8000918 <__aeabi_fadd+0x3cc>
 80006e0:	230f      	movs	r3, #15
 80006e2:	2500      	movs	r5, #0
 80006e4:	4033      	ands	r3, r6
 80006e6:	2b04      	cmp	r3, #4
 80006e8:	d1a7      	bne.n	800063a <__aeabi_fadd+0xee>
 80006ea:	2001      	movs	r0, #1
 80006ec:	0172      	lsls	r2, r6, #5
 80006ee:	d57c      	bpl.n	80007ea <__aeabi_fadd+0x29e>
 80006f0:	b2c0      	uxtb	r0, r0
 80006f2:	01b2      	lsls	r2, r6, #6
 80006f4:	0a52      	lsrs	r2, r2, #9
 80006f6:	e7a8      	b.n	800064a <__aeabi_fadd+0xfe>
 80006f8:	0773      	lsls	r3, r6, #29
 80006fa:	d003      	beq.n	8000704 <__aeabi_fadd+0x1b8>
 80006fc:	230f      	movs	r3, #15
 80006fe:	4033      	ands	r3, r6
 8000700:	2b04      	cmp	r3, #4
 8000702:	d19a      	bne.n	800063a <__aeabi_fadd+0xee>
 8000704:	002b      	movs	r3, r5
 8000706:	e767      	b.n	80005d8 <__aeabi_fadd+0x8c>
 8000708:	2b00      	cmp	r3, #0
 800070a:	d023      	beq.n	8000754 <__aeabi_fadd+0x208>
 800070c:	1b53      	subs	r3, r2, r5
 800070e:	2d00      	cmp	r5, #0
 8000710:	d17b      	bne.n	800080a <__aeabi_fadd+0x2be>
 8000712:	2e00      	cmp	r6, #0
 8000714:	d100      	bne.n	8000718 <__aeabi_fadd+0x1cc>
 8000716:	e086      	b.n	8000826 <__aeabi_fadd+0x2da>
 8000718:	1e5d      	subs	r5, r3, #1
 800071a:	2b01      	cmp	r3, #1
 800071c:	d100      	bne.n	8000720 <__aeabi_fadd+0x1d4>
 800071e:	e08b      	b.n	8000838 <__aeabi_fadd+0x2ec>
 8000720:	2bff      	cmp	r3, #255	@ 0xff
 8000722:	d002      	beq.n	800072a <__aeabi_fadd+0x1de>
 8000724:	002b      	movs	r3, r5
 8000726:	e075      	b.n	8000814 <__aeabi_fadd+0x2c8>
 8000728:	464c      	mov	r4, r9
 800072a:	4667      	mov	r7, ip
 800072c:	2f00      	cmp	r7, #0
 800072e:	d100      	bne.n	8000732 <__aeabi_fadd+0x1e6>
 8000730:	e789      	b.n	8000646 <__aeabi_fadd+0xfa>
 8000732:	2280      	movs	r2, #128	@ 0x80
 8000734:	03d2      	lsls	r2, r2, #15
 8000736:	433a      	orrs	r2, r7
 8000738:	0252      	lsls	r2, r2, #9
 800073a:	20ff      	movs	r0, #255	@ 0xff
 800073c:	0a52      	lsrs	r2, r2, #9
 800073e:	e784      	b.n	800064a <__aeabi_fadd+0xfe>
 8000740:	1a77      	subs	r7, r6, r1
 8000742:	017b      	lsls	r3, r7, #5
 8000744:	d46b      	bmi.n	800081e <__aeabi_fadd+0x2d2>
 8000746:	2f00      	cmp	r7, #0
 8000748:	d000      	beq.n	800074c <__aeabi_fadd+0x200>
 800074a:	e765      	b.n	8000618 <__aeabi_fadd+0xcc>
 800074c:	2400      	movs	r4, #0
 800074e:	2000      	movs	r0, #0
 8000750:	2200      	movs	r2, #0
 8000752:	e77a      	b.n	800064a <__aeabi_fadd+0xfe>
 8000754:	22fe      	movs	r2, #254	@ 0xfe
 8000756:	1c6b      	adds	r3, r5, #1
 8000758:	421a      	tst	r2, r3
 800075a:	d149      	bne.n	80007f0 <__aeabi_fadd+0x2a4>
 800075c:	2d00      	cmp	r5, #0
 800075e:	d000      	beq.n	8000762 <__aeabi_fadd+0x216>
 8000760:	e09f      	b.n	80008a2 <__aeabi_fadd+0x356>
 8000762:	2e00      	cmp	r6, #0
 8000764:	d100      	bne.n	8000768 <__aeabi_fadd+0x21c>
 8000766:	e0ba      	b.n	80008de <__aeabi_fadd+0x392>
 8000768:	2900      	cmp	r1, #0
 800076a:	d100      	bne.n	800076e <__aeabi_fadd+0x222>
 800076c:	e0cf      	b.n	800090e <__aeabi_fadd+0x3c2>
 800076e:	1872      	adds	r2, r6, r1
 8000770:	0153      	lsls	r3, r2, #5
 8000772:	d400      	bmi.n	8000776 <__aeabi_fadd+0x22a>
 8000774:	e0cd      	b.n	8000912 <__aeabi_fadd+0x3c6>
 8000776:	0192      	lsls	r2, r2, #6
 8000778:	2001      	movs	r0, #1
 800077a:	0a52      	lsrs	r2, r2, #9
 800077c:	e765      	b.n	800064a <__aeabi_fadd+0xfe>
 800077e:	2aff      	cmp	r2, #255	@ 0xff
 8000780:	d0d2      	beq.n	8000728 <__aeabi_fadd+0x1dc>
 8000782:	2080      	movs	r0, #128	@ 0x80
 8000784:	04c0      	lsls	r0, r0, #19
 8000786:	4306      	orrs	r6, r0
 8000788:	2001      	movs	r0, #1
 800078a:	2b1b      	cmp	r3, #27
 800078c:	dc08      	bgt.n	80007a0 <__aeabi_fadd+0x254>
 800078e:	0030      	movs	r0, r6
 8000790:	2420      	movs	r4, #32
 8000792:	40d8      	lsrs	r0, r3
 8000794:	1ae3      	subs	r3, r4, r3
 8000796:	409e      	lsls	r6, r3
 8000798:	0033      	movs	r3, r6
 800079a:	1e5c      	subs	r4, r3, #1
 800079c:	41a3      	sbcs	r3, r4
 800079e:	4318      	orrs	r0, r3
 80007a0:	464c      	mov	r4, r9
 80007a2:	0015      	movs	r5, r2
 80007a4:	1a0e      	subs	r6, r1, r0
 80007a6:	e732      	b.n	800060e <__aeabi_fadd+0xc2>
 80007a8:	0008      	movs	r0, r1
 80007aa:	2220      	movs	r2, #32
 80007ac:	40d8      	lsrs	r0, r3
 80007ae:	1ad3      	subs	r3, r2, r3
 80007b0:	4099      	lsls	r1, r3
 80007b2:	000b      	movs	r3, r1
 80007b4:	1e5a      	subs	r2, r3, #1
 80007b6:	4193      	sbcs	r3, r2
 80007b8:	4303      	orrs	r3, r0
 80007ba:	18f6      	adds	r6, r6, r3
 80007bc:	0173      	lsls	r3, r6, #5
 80007be:	d59b      	bpl.n	80006f8 <__aeabi_fadd+0x1ac>
 80007c0:	3501      	adds	r5, #1
 80007c2:	2dff      	cmp	r5, #255	@ 0xff
 80007c4:	d100      	bne.n	80007c8 <__aeabi_fadd+0x27c>
 80007c6:	e73e      	b.n	8000646 <__aeabi_fadd+0xfa>
 80007c8:	2301      	movs	r3, #1
 80007ca:	494d      	ldr	r1, [pc, #308]	@ (8000900 <__aeabi_fadd+0x3b4>)
 80007cc:	0872      	lsrs	r2, r6, #1
 80007ce:	4033      	ands	r3, r6
 80007d0:	400a      	ands	r2, r1
 80007d2:	431a      	orrs	r2, r3
 80007d4:	0016      	movs	r6, r2
 80007d6:	0753      	lsls	r3, r2, #29
 80007d8:	d004      	beq.n	80007e4 <__aeabi_fadd+0x298>
 80007da:	230f      	movs	r3, #15
 80007dc:	4013      	ands	r3, r2
 80007de:	2b04      	cmp	r3, #4
 80007e0:	d000      	beq.n	80007e4 <__aeabi_fadd+0x298>
 80007e2:	e72a      	b.n	800063a <__aeabi_fadd+0xee>
 80007e4:	0173      	lsls	r3, r6, #5
 80007e6:	d500      	bpl.n	80007ea <__aeabi_fadd+0x29e>
 80007e8:	e72a      	b.n	8000640 <__aeabi_fadd+0xf4>
 80007ea:	002b      	movs	r3, r5
 80007ec:	08f7      	lsrs	r7, r6, #3
 80007ee:	e6f7      	b.n	80005e0 <__aeabi_fadd+0x94>
 80007f0:	2bff      	cmp	r3, #255	@ 0xff
 80007f2:	d100      	bne.n	80007f6 <__aeabi_fadd+0x2aa>
 80007f4:	e727      	b.n	8000646 <__aeabi_fadd+0xfa>
 80007f6:	1871      	adds	r1, r6, r1
 80007f8:	0849      	lsrs	r1, r1, #1
 80007fa:	074a      	lsls	r2, r1, #29
 80007fc:	d02f      	beq.n	800085e <__aeabi_fadd+0x312>
 80007fe:	220f      	movs	r2, #15
 8000800:	400a      	ands	r2, r1
 8000802:	2a04      	cmp	r2, #4
 8000804:	d02b      	beq.n	800085e <__aeabi_fadd+0x312>
 8000806:	1d0e      	adds	r6, r1, #4
 8000808:	e6e6      	b.n	80005d8 <__aeabi_fadd+0x8c>
 800080a:	2aff      	cmp	r2, #255	@ 0xff
 800080c:	d08d      	beq.n	800072a <__aeabi_fadd+0x1de>
 800080e:	2080      	movs	r0, #128	@ 0x80
 8000810:	04c0      	lsls	r0, r0, #19
 8000812:	4306      	orrs	r6, r0
 8000814:	2b1b      	cmp	r3, #27
 8000816:	dd24      	ble.n	8000862 <__aeabi_fadd+0x316>
 8000818:	0013      	movs	r3, r2
 800081a:	1d4e      	adds	r6, r1, #5
 800081c:	e6dc      	b.n	80005d8 <__aeabi_fadd+0x8c>
 800081e:	464c      	mov	r4, r9
 8000820:	1b8f      	subs	r7, r1, r6
 8000822:	e6f9      	b.n	8000618 <__aeabi_fadd+0xcc>
 8000824:	464c      	mov	r4, r9
 8000826:	000e      	movs	r6, r1
 8000828:	e6d6      	b.n	80005d8 <__aeabi_fadd+0x8c>
 800082a:	2e00      	cmp	r6, #0
 800082c:	d149      	bne.n	80008c2 <__aeabi_fadd+0x376>
 800082e:	2900      	cmp	r1, #0
 8000830:	d068      	beq.n	8000904 <__aeabi_fadd+0x3b8>
 8000832:	4667      	mov	r7, ip
 8000834:	464c      	mov	r4, r9
 8000836:	e77c      	b.n	8000732 <__aeabi_fadd+0x1e6>
 8000838:	1870      	adds	r0, r6, r1
 800083a:	0143      	lsls	r3, r0, #5
 800083c:	d574      	bpl.n	8000928 <__aeabi_fadd+0x3dc>
 800083e:	4930      	ldr	r1, [pc, #192]	@ (8000900 <__aeabi_fadd+0x3b4>)
 8000840:	0840      	lsrs	r0, r0, #1
 8000842:	4001      	ands	r1, r0
 8000844:	0743      	lsls	r3, r0, #29
 8000846:	d009      	beq.n	800085c <__aeabi_fadd+0x310>
 8000848:	230f      	movs	r3, #15
 800084a:	4003      	ands	r3, r0
 800084c:	2b04      	cmp	r3, #4
 800084e:	d005      	beq.n	800085c <__aeabi_fadd+0x310>
 8000850:	2302      	movs	r3, #2
 8000852:	1d0e      	adds	r6, r1, #4
 8000854:	e6c0      	b.n	80005d8 <__aeabi_fadd+0x8c>
 8000856:	2301      	movs	r3, #1
 8000858:	08cf      	lsrs	r7, r1, #3
 800085a:	e6c1      	b.n	80005e0 <__aeabi_fadd+0x94>
 800085c:	2302      	movs	r3, #2
 800085e:	08cf      	lsrs	r7, r1, #3
 8000860:	e6be      	b.n	80005e0 <__aeabi_fadd+0x94>
 8000862:	2520      	movs	r5, #32
 8000864:	0030      	movs	r0, r6
 8000866:	40d8      	lsrs	r0, r3
 8000868:	1aeb      	subs	r3, r5, r3
 800086a:	409e      	lsls	r6, r3
 800086c:	0033      	movs	r3, r6
 800086e:	1e5d      	subs	r5, r3, #1
 8000870:	41ab      	sbcs	r3, r5
 8000872:	4303      	orrs	r3, r0
 8000874:	0015      	movs	r5, r2
 8000876:	185e      	adds	r6, r3, r1
 8000878:	e7a0      	b.n	80007bc <__aeabi_fadd+0x270>
 800087a:	2900      	cmp	r1, #0
 800087c:	d100      	bne.n	8000880 <__aeabi_fadd+0x334>
 800087e:	e765      	b.n	800074c <__aeabi_fadd+0x200>
 8000880:	464c      	mov	r4, r9
 8000882:	4667      	mov	r7, ip
 8000884:	e6ac      	b.n	80005e0 <__aeabi_fadd+0x94>
 8000886:	1b8f      	subs	r7, r1, r6
 8000888:	017b      	lsls	r3, r7, #5
 800088a:	d52e      	bpl.n	80008ea <__aeabi_fadd+0x39e>
 800088c:	01bf      	lsls	r7, r7, #6
 800088e:	09bf      	lsrs	r7, r7, #6
 8000890:	0038      	movs	r0, r7
 8000892:	f002 fef9 	bl	8003688 <__clzsi2>
 8000896:	003b      	movs	r3, r7
 8000898:	3805      	subs	r0, #5
 800089a:	4083      	lsls	r3, r0
 800089c:	464c      	mov	r4, r9
 800089e:	3501      	adds	r5, #1
 80008a0:	e710      	b.n	80006c4 <__aeabi_fadd+0x178>
 80008a2:	2e00      	cmp	r6, #0
 80008a4:	d100      	bne.n	80008a8 <__aeabi_fadd+0x35c>
 80008a6:	e740      	b.n	800072a <__aeabi_fadd+0x1de>
 80008a8:	2900      	cmp	r1, #0
 80008aa:	d100      	bne.n	80008ae <__aeabi_fadd+0x362>
 80008ac:	e741      	b.n	8000732 <__aeabi_fadd+0x1e6>
 80008ae:	2380      	movs	r3, #128	@ 0x80
 80008b0:	03db      	lsls	r3, r3, #15
 80008b2:	429f      	cmp	r7, r3
 80008b4:	d200      	bcs.n	80008b8 <__aeabi_fadd+0x36c>
 80008b6:	e73c      	b.n	8000732 <__aeabi_fadd+0x1e6>
 80008b8:	459c      	cmp	ip, r3
 80008ba:	d300      	bcc.n	80008be <__aeabi_fadd+0x372>
 80008bc:	e739      	b.n	8000732 <__aeabi_fadd+0x1e6>
 80008be:	4667      	mov	r7, ip
 80008c0:	e737      	b.n	8000732 <__aeabi_fadd+0x1e6>
 80008c2:	2900      	cmp	r1, #0
 80008c4:	d100      	bne.n	80008c8 <__aeabi_fadd+0x37c>
 80008c6:	e734      	b.n	8000732 <__aeabi_fadd+0x1e6>
 80008c8:	2380      	movs	r3, #128	@ 0x80
 80008ca:	03db      	lsls	r3, r3, #15
 80008cc:	429f      	cmp	r7, r3
 80008ce:	d200      	bcs.n	80008d2 <__aeabi_fadd+0x386>
 80008d0:	e72f      	b.n	8000732 <__aeabi_fadd+0x1e6>
 80008d2:	459c      	cmp	ip, r3
 80008d4:	d300      	bcc.n	80008d8 <__aeabi_fadd+0x38c>
 80008d6:	e72c      	b.n	8000732 <__aeabi_fadd+0x1e6>
 80008d8:	464c      	mov	r4, r9
 80008da:	4667      	mov	r7, ip
 80008dc:	e729      	b.n	8000732 <__aeabi_fadd+0x1e6>
 80008de:	2900      	cmp	r1, #0
 80008e0:	d100      	bne.n	80008e4 <__aeabi_fadd+0x398>
 80008e2:	e734      	b.n	800074e <__aeabi_fadd+0x202>
 80008e4:	2300      	movs	r3, #0
 80008e6:	08cf      	lsrs	r7, r1, #3
 80008e8:	e67a      	b.n	80005e0 <__aeabi_fadd+0x94>
 80008ea:	464c      	mov	r4, r9
 80008ec:	2301      	movs	r3, #1
 80008ee:	08ff      	lsrs	r7, r7, #3
 80008f0:	e676      	b.n	80005e0 <__aeabi_fadd+0x94>
 80008f2:	2f00      	cmp	r7, #0
 80008f4:	d100      	bne.n	80008f8 <__aeabi_fadd+0x3ac>
 80008f6:	e729      	b.n	800074c <__aeabi_fadd+0x200>
 80008f8:	08ff      	lsrs	r7, r7, #3
 80008fa:	e671      	b.n	80005e0 <__aeabi_fadd+0x94>
 80008fc:	fbffffff 	.word	0xfbffffff
 8000900:	7dffffff 	.word	0x7dffffff
 8000904:	2280      	movs	r2, #128	@ 0x80
 8000906:	2400      	movs	r4, #0
 8000908:	20ff      	movs	r0, #255	@ 0xff
 800090a:	03d2      	lsls	r2, r2, #15
 800090c:	e69d      	b.n	800064a <__aeabi_fadd+0xfe>
 800090e:	2300      	movs	r3, #0
 8000910:	e666      	b.n	80005e0 <__aeabi_fadd+0x94>
 8000912:	2300      	movs	r3, #0
 8000914:	08d7      	lsrs	r7, r2, #3
 8000916:	e663      	b.n	80005e0 <__aeabi_fadd+0x94>
 8000918:	2001      	movs	r0, #1
 800091a:	0172      	lsls	r2, r6, #5
 800091c:	d500      	bpl.n	8000920 <__aeabi_fadd+0x3d4>
 800091e:	e6e7      	b.n	80006f0 <__aeabi_fadd+0x1a4>
 8000920:	0031      	movs	r1, r6
 8000922:	2300      	movs	r3, #0
 8000924:	08cf      	lsrs	r7, r1, #3
 8000926:	e65b      	b.n	80005e0 <__aeabi_fadd+0x94>
 8000928:	2301      	movs	r3, #1
 800092a:	08c7      	lsrs	r7, r0, #3
 800092c:	e658      	b.n	80005e0 <__aeabi_fadd+0x94>
 800092e:	46c0      	nop			@ (mov r8, r8)

08000930 <__aeabi_fdiv>:
 8000930:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000932:	4646      	mov	r6, r8
 8000934:	464f      	mov	r7, r9
 8000936:	46d6      	mov	lr, sl
 8000938:	0245      	lsls	r5, r0, #9
 800093a:	b5c0      	push	{r6, r7, lr}
 800093c:	0fc3      	lsrs	r3, r0, #31
 800093e:	0047      	lsls	r7, r0, #1
 8000940:	4698      	mov	r8, r3
 8000942:	1c0e      	adds	r6, r1, #0
 8000944:	0a6d      	lsrs	r5, r5, #9
 8000946:	0e3f      	lsrs	r7, r7, #24
 8000948:	d05b      	beq.n	8000a02 <__aeabi_fdiv+0xd2>
 800094a:	2fff      	cmp	r7, #255	@ 0xff
 800094c:	d021      	beq.n	8000992 <__aeabi_fdiv+0x62>
 800094e:	2380      	movs	r3, #128	@ 0x80
 8000950:	00ed      	lsls	r5, r5, #3
 8000952:	04db      	lsls	r3, r3, #19
 8000954:	431d      	orrs	r5, r3
 8000956:	2300      	movs	r3, #0
 8000958:	4699      	mov	r9, r3
 800095a:	469a      	mov	sl, r3
 800095c:	3f7f      	subs	r7, #127	@ 0x7f
 800095e:	0274      	lsls	r4, r6, #9
 8000960:	0073      	lsls	r3, r6, #1
 8000962:	0a64      	lsrs	r4, r4, #9
 8000964:	0e1b      	lsrs	r3, r3, #24
 8000966:	0ff6      	lsrs	r6, r6, #31
 8000968:	2b00      	cmp	r3, #0
 800096a:	d020      	beq.n	80009ae <__aeabi_fdiv+0x7e>
 800096c:	2bff      	cmp	r3, #255	@ 0xff
 800096e:	d043      	beq.n	80009f8 <__aeabi_fdiv+0xc8>
 8000970:	2280      	movs	r2, #128	@ 0x80
 8000972:	2000      	movs	r0, #0
 8000974:	00e4      	lsls	r4, r4, #3
 8000976:	04d2      	lsls	r2, r2, #19
 8000978:	4314      	orrs	r4, r2
 800097a:	3b7f      	subs	r3, #127	@ 0x7f
 800097c:	4642      	mov	r2, r8
 800097e:	1aff      	subs	r7, r7, r3
 8000980:	464b      	mov	r3, r9
 8000982:	4072      	eors	r2, r6
 8000984:	2b0f      	cmp	r3, #15
 8000986:	d900      	bls.n	800098a <__aeabi_fdiv+0x5a>
 8000988:	e09d      	b.n	8000ac6 <__aeabi_fdiv+0x196>
 800098a:	4971      	ldr	r1, [pc, #452]	@ (8000b50 <__aeabi_fdiv+0x220>)
 800098c:	009b      	lsls	r3, r3, #2
 800098e:	58cb      	ldr	r3, [r1, r3]
 8000990:	469f      	mov	pc, r3
 8000992:	2d00      	cmp	r5, #0
 8000994:	d15a      	bne.n	8000a4c <__aeabi_fdiv+0x11c>
 8000996:	2308      	movs	r3, #8
 8000998:	4699      	mov	r9, r3
 800099a:	3b06      	subs	r3, #6
 800099c:	0274      	lsls	r4, r6, #9
 800099e:	469a      	mov	sl, r3
 80009a0:	0073      	lsls	r3, r6, #1
 80009a2:	27ff      	movs	r7, #255	@ 0xff
 80009a4:	0a64      	lsrs	r4, r4, #9
 80009a6:	0e1b      	lsrs	r3, r3, #24
 80009a8:	0ff6      	lsrs	r6, r6, #31
 80009aa:	2b00      	cmp	r3, #0
 80009ac:	d1de      	bne.n	800096c <__aeabi_fdiv+0x3c>
 80009ae:	2c00      	cmp	r4, #0
 80009b0:	d13b      	bne.n	8000a2a <__aeabi_fdiv+0xfa>
 80009b2:	2301      	movs	r3, #1
 80009b4:	4642      	mov	r2, r8
 80009b6:	4649      	mov	r1, r9
 80009b8:	4072      	eors	r2, r6
 80009ba:	4319      	orrs	r1, r3
 80009bc:	290e      	cmp	r1, #14
 80009be:	d818      	bhi.n	80009f2 <__aeabi_fdiv+0xc2>
 80009c0:	4864      	ldr	r0, [pc, #400]	@ (8000b54 <__aeabi_fdiv+0x224>)
 80009c2:	0089      	lsls	r1, r1, #2
 80009c4:	5841      	ldr	r1, [r0, r1]
 80009c6:	468f      	mov	pc, r1
 80009c8:	4653      	mov	r3, sl
 80009ca:	2b02      	cmp	r3, #2
 80009cc:	d100      	bne.n	80009d0 <__aeabi_fdiv+0xa0>
 80009ce:	e0b8      	b.n	8000b42 <__aeabi_fdiv+0x212>
 80009d0:	2b03      	cmp	r3, #3
 80009d2:	d06e      	beq.n	8000ab2 <__aeabi_fdiv+0x182>
 80009d4:	4642      	mov	r2, r8
 80009d6:	002c      	movs	r4, r5
 80009d8:	2b01      	cmp	r3, #1
 80009da:	d140      	bne.n	8000a5e <__aeabi_fdiv+0x12e>
 80009dc:	2000      	movs	r0, #0
 80009de:	2400      	movs	r4, #0
 80009e0:	05c0      	lsls	r0, r0, #23
 80009e2:	4320      	orrs	r0, r4
 80009e4:	07d2      	lsls	r2, r2, #31
 80009e6:	4310      	orrs	r0, r2
 80009e8:	bce0      	pop	{r5, r6, r7}
 80009ea:	46ba      	mov	sl, r7
 80009ec:	46b1      	mov	r9, r6
 80009ee:	46a8      	mov	r8, r5
 80009f0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80009f2:	20ff      	movs	r0, #255	@ 0xff
 80009f4:	2400      	movs	r4, #0
 80009f6:	e7f3      	b.n	80009e0 <__aeabi_fdiv+0xb0>
 80009f8:	2c00      	cmp	r4, #0
 80009fa:	d120      	bne.n	8000a3e <__aeabi_fdiv+0x10e>
 80009fc:	2302      	movs	r3, #2
 80009fe:	3fff      	subs	r7, #255	@ 0xff
 8000a00:	e7d8      	b.n	80009b4 <__aeabi_fdiv+0x84>
 8000a02:	2d00      	cmp	r5, #0
 8000a04:	d105      	bne.n	8000a12 <__aeabi_fdiv+0xe2>
 8000a06:	2304      	movs	r3, #4
 8000a08:	4699      	mov	r9, r3
 8000a0a:	3b03      	subs	r3, #3
 8000a0c:	2700      	movs	r7, #0
 8000a0e:	469a      	mov	sl, r3
 8000a10:	e7a5      	b.n	800095e <__aeabi_fdiv+0x2e>
 8000a12:	0028      	movs	r0, r5
 8000a14:	f002 fe38 	bl	8003688 <__clzsi2>
 8000a18:	2776      	movs	r7, #118	@ 0x76
 8000a1a:	1f43      	subs	r3, r0, #5
 8000a1c:	409d      	lsls	r5, r3
 8000a1e:	2300      	movs	r3, #0
 8000a20:	427f      	negs	r7, r7
 8000a22:	4699      	mov	r9, r3
 8000a24:	469a      	mov	sl, r3
 8000a26:	1a3f      	subs	r7, r7, r0
 8000a28:	e799      	b.n	800095e <__aeabi_fdiv+0x2e>
 8000a2a:	0020      	movs	r0, r4
 8000a2c:	f002 fe2c 	bl	8003688 <__clzsi2>
 8000a30:	1f43      	subs	r3, r0, #5
 8000a32:	409c      	lsls	r4, r3
 8000a34:	2376      	movs	r3, #118	@ 0x76
 8000a36:	425b      	negs	r3, r3
 8000a38:	1a1b      	subs	r3, r3, r0
 8000a3a:	2000      	movs	r0, #0
 8000a3c:	e79e      	b.n	800097c <__aeabi_fdiv+0x4c>
 8000a3e:	2303      	movs	r3, #3
 8000a40:	464a      	mov	r2, r9
 8000a42:	431a      	orrs	r2, r3
 8000a44:	4691      	mov	r9, r2
 8000a46:	2003      	movs	r0, #3
 8000a48:	33fc      	adds	r3, #252	@ 0xfc
 8000a4a:	e797      	b.n	800097c <__aeabi_fdiv+0x4c>
 8000a4c:	230c      	movs	r3, #12
 8000a4e:	4699      	mov	r9, r3
 8000a50:	3b09      	subs	r3, #9
 8000a52:	27ff      	movs	r7, #255	@ 0xff
 8000a54:	469a      	mov	sl, r3
 8000a56:	e782      	b.n	800095e <__aeabi_fdiv+0x2e>
 8000a58:	2803      	cmp	r0, #3
 8000a5a:	d02c      	beq.n	8000ab6 <__aeabi_fdiv+0x186>
 8000a5c:	0032      	movs	r2, r6
 8000a5e:	0038      	movs	r0, r7
 8000a60:	307f      	adds	r0, #127	@ 0x7f
 8000a62:	2800      	cmp	r0, #0
 8000a64:	dd47      	ble.n	8000af6 <__aeabi_fdiv+0x1c6>
 8000a66:	0763      	lsls	r3, r4, #29
 8000a68:	d004      	beq.n	8000a74 <__aeabi_fdiv+0x144>
 8000a6a:	230f      	movs	r3, #15
 8000a6c:	4023      	ands	r3, r4
 8000a6e:	2b04      	cmp	r3, #4
 8000a70:	d000      	beq.n	8000a74 <__aeabi_fdiv+0x144>
 8000a72:	3404      	adds	r4, #4
 8000a74:	0123      	lsls	r3, r4, #4
 8000a76:	d503      	bpl.n	8000a80 <__aeabi_fdiv+0x150>
 8000a78:	0038      	movs	r0, r7
 8000a7a:	4b37      	ldr	r3, [pc, #220]	@ (8000b58 <__aeabi_fdiv+0x228>)
 8000a7c:	3080      	adds	r0, #128	@ 0x80
 8000a7e:	401c      	ands	r4, r3
 8000a80:	28fe      	cmp	r0, #254	@ 0xfe
 8000a82:	dcb6      	bgt.n	80009f2 <__aeabi_fdiv+0xc2>
 8000a84:	01a4      	lsls	r4, r4, #6
 8000a86:	0a64      	lsrs	r4, r4, #9
 8000a88:	b2c0      	uxtb	r0, r0
 8000a8a:	e7a9      	b.n	80009e0 <__aeabi_fdiv+0xb0>
 8000a8c:	2480      	movs	r4, #128	@ 0x80
 8000a8e:	2200      	movs	r2, #0
 8000a90:	20ff      	movs	r0, #255	@ 0xff
 8000a92:	03e4      	lsls	r4, r4, #15
 8000a94:	e7a4      	b.n	80009e0 <__aeabi_fdiv+0xb0>
 8000a96:	2380      	movs	r3, #128	@ 0x80
 8000a98:	03db      	lsls	r3, r3, #15
 8000a9a:	421d      	tst	r5, r3
 8000a9c:	d001      	beq.n	8000aa2 <__aeabi_fdiv+0x172>
 8000a9e:	421c      	tst	r4, r3
 8000aa0:	d00b      	beq.n	8000aba <__aeabi_fdiv+0x18a>
 8000aa2:	2480      	movs	r4, #128	@ 0x80
 8000aa4:	03e4      	lsls	r4, r4, #15
 8000aa6:	432c      	orrs	r4, r5
 8000aa8:	0264      	lsls	r4, r4, #9
 8000aaa:	4642      	mov	r2, r8
 8000aac:	20ff      	movs	r0, #255	@ 0xff
 8000aae:	0a64      	lsrs	r4, r4, #9
 8000ab0:	e796      	b.n	80009e0 <__aeabi_fdiv+0xb0>
 8000ab2:	4646      	mov	r6, r8
 8000ab4:	002c      	movs	r4, r5
 8000ab6:	2380      	movs	r3, #128	@ 0x80
 8000ab8:	03db      	lsls	r3, r3, #15
 8000aba:	431c      	orrs	r4, r3
 8000abc:	0264      	lsls	r4, r4, #9
 8000abe:	0032      	movs	r2, r6
 8000ac0:	20ff      	movs	r0, #255	@ 0xff
 8000ac2:	0a64      	lsrs	r4, r4, #9
 8000ac4:	e78c      	b.n	80009e0 <__aeabi_fdiv+0xb0>
 8000ac6:	016d      	lsls	r5, r5, #5
 8000ac8:	0160      	lsls	r0, r4, #5
 8000aca:	4285      	cmp	r5, r0
 8000acc:	d22d      	bcs.n	8000b2a <__aeabi_fdiv+0x1fa>
 8000ace:	231b      	movs	r3, #27
 8000ad0:	2400      	movs	r4, #0
 8000ad2:	3f01      	subs	r7, #1
 8000ad4:	2601      	movs	r6, #1
 8000ad6:	0029      	movs	r1, r5
 8000ad8:	0064      	lsls	r4, r4, #1
 8000ada:	006d      	lsls	r5, r5, #1
 8000adc:	2900      	cmp	r1, #0
 8000ade:	db01      	blt.n	8000ae4 <__aeabi_fdiv+0x1b4>
 8000ae0:	4285      	cmp	r5, r0
 8000ae2:	d301      	bcc.n	8000ae8 <__aeabi_fdiv+0x1b8>
 8000ae4:	1a2d      	subs	r5, r5, r0
 8000ae6:	4334      	orrs	r4, r6
 8000ae8:	3b01      	subs	r3, #1
 8000aea:	2b00      	cmp	r3, #0
 8000aec:	d1f3      	bne.n	8000ad6 <__aeabi_fdiv+0x1a6>
 8000aee:	1e6b      	subs	r3, r5, #1
 8000af0:	419d      	sbcs	r5, r3
 8000af2:	432c      	orrs	r4, r5
 8000af4:	e7b3      	b.n	8000a5e <__aeabi_fdiv+0x12e>
 8000af6:	2301      	movs	r3, #1
 8000af8:	1a1b      	subs	r3, r3, r0
 8000afa:	2b1b      	cmp	r3, #27
 8000afc:	dd00      	ble.n	8000b00 <__aeabi_fdiv+0x1d0>
 8000afe:	e76d      	b.n	80009dc <__aeabi_fdiv+0xac>
 8000b00:	0021      	movs	r1, r4
 8000b02:	379e      	adds	r7, #158	@ 0x9e
 8000b04:	40d9      	lsrs	r1, r3
 8000b06:	40bc      	lsls	r4, r7
 8000b08:	000b      	movs	r3, r1
 8000b0a:	1e61      	subs	r1, r4, #1
 8000b0c:	418c      	sbcs	r4, r1
 8000b0e:	4323      	orrs	r3, r4
 8000b10:	0759      	lsls	r1, r3, #29
 8000b12:	d004      	beq.n	8000b1e <__aeabi_fdiv+0x1ee>
 8000b14:	210f      	movs	r1, #15
 8000b16:	4019      	ands	r1, r3
 8000b18:	2904      	cmp	r1, #4
 8000b1a:	d000      	beq.n	8000b1e <__aeabi_fdiv+0x1ee>
 8000b1c:	3304      	adds	r3, #4
 8000b1e:	0159      	lsls	r1, r3, #5
 8000b20:	d413      	bmi.n	8000b4a <__aeabi_fdiv+0x21a>
 8000b22:	019b      	lsls	r3, r3, #6
 8000b24:	2000      	movs	r0, #0
 8000b26:	0a5c      	lsrs	r4, r3, #9
 8000b28:	e75a      	b.n	80009e0 <__aeabi_fdiv+0xb0>
 8000b2a:	231a      	movs	r3, #26
 8000b2c:	2401      	movs	r4, #1
 8000b2e:	1a2d      	subs	r5, r5, r0
 8000b30:	e7d0      	b.n	8000ad4 <__aeabi_fdiv+0x1a4>
 8000b32:	1e98      	subs	r0, r3, #2
 8000b34:	4243      	negs	r3, r0
 8000b36:	4158      	adcs	r0, r3
 8000b38:	4240      	negs	r0, r0
 8000b3a:	0032      	movs	r2, r6
 8000b3c:	2400      	movs	r4, #0
 8000b3e:	b2c0      	uxtb	r0, r0
 8000b40:	e74e      	b.n	80009e0 <__aeabi_fdiv+0xb0>
 8000b42:	4642      	mov	r2, r8
 8000b44:	20ff      	movs	r0, #255	@ 0xff
 8000b46:	2400      	movs	r4, #0
 8000b48:	e74a      	b.n	80009e0 <__aeabi_fdiv+0xb0>
 8000b4a:	2001      	movs	r0, #1
 8000b4c:	2400      	movs	r4, #0
 8000b4e:	e747      	b.n	80009e0 <__aeabi_fdiv+0xb0>
 8000b50:	08009400 	.word	0x08009400
 8000b54:	08009440 	.word	0x08009440
 8000b58:	f7ffffff 	.word	0xf7ffffff

08000b5c <__eqsf2>:
 8000b5c:	b570      	push	{r4, r5, r6, lr}
 8000b5e:	0042      	lsls	r2, r0, #1
 8000b60:	024e      	lsls	r6, r1, #9
 8000b62:	004c      	lsls	r4, r1, #1
 8000b64:	0245      	lsls	r5, r0, #9
 8000b66:	0a6d      	lsrs	r5, r5, #9
 8000b68:	0e12      	lsrs	r2, r2, #24
 8000b6a:	0fc3      	lsrs	r3, r0, #31
 8000b6c:	0a76      	lsrs	r6, r6, #9
 8000b6e:	0e24      	lsrs	r4, r4, #24
 8000b70:	0fc9      	lsrs	r1, r1, #31
 8000b72:	2aff      	cmp	r2, #255	@ 0xff
 8000b74:	d010      	beq.n	8000b98 <__eqsf2+0x3c>
 8000b76:	2cff      	cmp	r4, #255	@ 0xff
 8000b78:	d00c      	beq.n	8000b94 <__eqsf2+0x38>
 8000b7a:	2001      	movs	r0, #1
 8000b7c:	42a2      	cmp	r2, r4
 8000b7e:	d10a      	bne.n	8000b96 <__eqsf2+0x3a>
 8000b80:	42b5      	cmp	r5, r6
 8000b82:	d108      	bne.n	8000b96 <__eqsf2+0x3a>
 8000b84:	428b      	cmp	r3, r1
 8000b86:	d00f      	beq.n	8000ba8 <__eqsf2+0x4c>
 8000b88:	2a00      	cmp	r2, #0
 8000b8a:	d104      	bne.n	8000b96 <__eqsf2+0x3a>
 8000b8c:	0028      	movs	r0, r5
 8000b8e:	1e43      	subs	r3, r0, #1
 8000b90:	4198      	sbcs	r0, r3
 8000b92:	e000      	b.n	8000b96 <__eqsf2+0x3a>
 8000b94:	2001      	movs	r0, #1
 8000b96:	bd70      	pop	{r4, r5, r6, pc}
 8000b98:	2001      	movs	r0, #1
 8000b9a:	2cff      	cmp	r4, #255	@ 0xff
 8000b9c:	d1fb      	bne.n	8000b96 <__eqsf2+0x3a>
 8000b9e:	4335      	orrs	r5, r6
 8000ba0:	d1f9      	bne.n	8000b96 <__eqsf2+0x3a>
 8000ba2:	404b      	eors	r3, r1
 8000ba4:	0018      	movs	r0, r3
 8000ba6:	e7f6      	b.n	8000b96 <__eqsf2+0x3a>
 8000ba8:	2000      	movs	r0, #0
 8000baa:	e7f4      	b.n	8000b96 <__eqsf2+0x3a>

08000bac <__gesf2>:
 8000bac:	b530      	push	{r4, r5, lr}
 8000bae:	0042      	lsls	r2, r0, #1
 8000bb0:	0244      	lsls	r4, r0, #9
 8000bb2:	024d      	lsls	r5, r1, #9
 8000bb4:	0fc3      	lsrs	r3, r0, #31
 8000bb6:	0048      	lsls	r0, r1, #1
 8000bb8:	0a64      	lsrs	r4, r4, #9
 8000bba:	0e12      	lsrs	r2, r2, #24
 8000bbc:	0a6d      	lsrs	r5, r5, #9
 8000bbe:	0e00      	lsrs	r0, r0, #24
 8000bc0:	0fc9      	lsrs	r1, r1, #31
 8000bc2:	2aff      	cmp	r2, #255	@ 0xff
 8000bc4:	d018      	beq.n	8000bf8 <__gesf2+0x4c>
 8000bc6:	28ff      	cmp	r0, #255	@ 0xff
 8000bc8:	d00a      	beq.n	8000be0 <__gesf2+0x34>
 8000bca:	2a00      	cmp	r2, #0
 8000bcc:	d11e      	bne.n	8000c0c <__gesf2+0x60>
 8000bce:	2800      	cmp	r0, #0
 8000bd0:	d10a      	bne.n	8000be8 <__gesf2+0x3c>
 8000bd2:	2d00      	cmp	r5, #0
 8000bd4:	d029      	beq.n	8000c2a <__gesf2+0x7e>
 8000bd6:	2c00      	cmp	r4, #0
 8000bd8:	d12d      	bne.n	8000c36 <__gesf2+0x8a>
 8000bda:	0048      	lsls	r0, r1, #1
 8000bdc:	3801      	subs	r0, #1
 8000bde:	bd30      	pop	{r4, r5, pc}
 8000be0:	2d00      	cmp	r5, #0
 8000be2:	d125      	bne.n	8000c30 <__gesf2+0x84>
 8000be4:	2a00      	cmp	r2, #0
 8000be6:	d101      	bne.n	8000bec <__gesf2+0x40>
 8000be8:	2c00      	cmp	r4, #0
 8000bea:	d0f6      	beq.n	8000bda <__gesf2+0x2e>
 8000bec:	428b      	cmp	r3, r1
 8000bee:	d019      	beq.n	8000c24 <__gesf2+0x78>
 8000bf0:	2001      	movs	r0, #1
 8000bf2:	425b      	negs	r3, r3
 8000bf4:	4318      	orrs	r0, r3
 8000bf6:	e7f2      	b.n	8000bde <__gesf2+0x32>
 8000bf8:	2c00      	cmp	r4, #0
 8000bfa:	d119      	bne.n	8000c30 <__gesf2+0x84>
 8000bfc:	28ff      	cmp	r0, #255	@ 0xff
 8000bfe:	d1f7      	bne.n	8000bf0 <__gesf2+0x44>
 8000c00:	2d00      	cmp	r5, #0
 8000c02:	d115      	bne.n	8000c30 <__gesf2+0x84>
 8000c04:	2000      	movs	r0, #0
 8000c06:	428b      	cmp	r3, r1
 8000c08:	d1f2      	bne.n	8000bf0 <__gesf2+0x44>
 8000c0a:	e7e8      	b.n	8000bde <__gesf2+0x32>
 8000c0c:	2800      	cmp	r0, #0
 8000c0e:	d0ef      	beq.n	8000bf0 <__gesf2+0x44>
 8000c10:	428b      	cmp	r3, r1
 8000c12:	d1ed      	bne.n	8000bf0 <__gesf2+0x44>
 8000c14:	4282      	cmp	r2, r0
 8000c16:	dceb      	bgt.n	8000bf0 <__gesf2+0x44>
 8000c18:	db04      	blt.n	8000c24 <__gesf2+0x78>
 8000c1a:	42ac      	cmp	r4, r5
 8000c1c:	d8e8      	bhi.n	8000bf0 <__gesf2+0x44>
 8000c1e:	2000      	movs	r0, #0
 8000c20:	42ac      	cmp	r4, r5
 8000c22:	d2dc      	bcs.n	8000bde <__gesf2+0x32>
 8000c24:	0058      	lsls	r0, r3, #1
 8000c26:	3801      	subs	r0, #1
 8000c28:	e7d9      	b.n	8000bde <__gesf2+0x32>
 8000c2a:	2c00      	cmp	r4, #0
 8000c2c:	d0d7      	beq.n	8000bde <__gesf2+0x32>
 8000c2e:	e7df      	b.n	8000bf0 <__gesf2+0x44>
 8000c30:	2002      	movs	r0, #2
 8000c32:	4240      	negs	r0, r0
 8000c34:	e7d3      	b.n	8000bde <__gesf2+0x32>
 8000c36:	428b      	cmp	r3, r1
 8000c38:	d1da      	bne.n	8000bf0 <__gesf2+0x44>
 8000c3a:	e7ee      	b.n	8000c1a <__gesf2+0x6e>

08000c3c <__lesf2>:
 8000c3c:	b530      	push	{r4, r5, lr}
 8000c3e:	0042      	lsls	r2, r0, #1
 8000c40:	0244      	lsls	r4, r0, #9
 8000c42:	024d      	lsls	r5, r1, #9
 8000c44:	0fc3      	lsrs	r3, r0, #31
 8000c46:	0048      	lsls	r0, r1, #1
 8000c48:	0a64      	lsrs	r4, r4, #9
 8000c4a:	0e12      	lsrs	r2, r2, #24
 8000c4c:	0a6d      	lsrs	r5, r5, #9
 8000c4e:	0e00      	lsrs	r0, r0, #24
 8000c50:	0fc9      	lsrs	r1, r1, #31
 8000c52:	2aff      	cmp	r2, #255	@ 0xff
 8000c54:	d017      	beq.n	8000c86 <__lesf2+0x4a>
 8000c56:	28ff      	cmp	r0, #255	@ 0xff
 8000c58:	d00a      	beq.n	8000c70 <__lesf2+0x34>
 8000c5a:	2a00      	cmp	r2, #0
 8000c5c:	d11b      	bne.n	8000c96 <__lesf2+0x5a>
 8000c5e:	2800      	cmp	r0, #0
 8000c60:	d10a      	bne.n	8000c78 <__lesf2+0x3c>
 8000c62:	2d00      	cmp	r5, #0
 8000c64:	d01d      	beq.n	8000ca2 <__lesf2+0x66>
 8000c66:	2c00      	cmp	r4, #0
 8000c68:	d12d      	bne.n	8000cc6 <__lesf2+0x8a>
 8000c6a:	0048      	lsls	r0, r1, #1
 8000c6c:	3801      	subs	r0, #1
 8000c6e:	e011      	b.n	8000c94 <__lesf2+0x58>
 8000c70:	2d00      	cmp	r5, #0
 8000c72:	d10e      	bne.n	8000c92 <__lesf2+0x56>
 8000c74:	2a00      	cmp	r2, #0
 8000c76:	d101      	bne.n	8000c7c <__lesf2+0x40>
 8000c78:	2c00      	cmp	r4, #0
 8000c7a:	d0f6      	beq.n	8000c6a <__lesf2+0x2e>
 8000c7c:	428b      	cmp	r3, r1
 8000c7e:	d10c      	bne.n	8000c9a <__lesf2+0x5e>
 8000c80:	0058      	lsls	r0, r3, #1
 8000c82:	3801      	subs	r0, #1
 8000c84:	e006      	b.n	8000c94 <__lesf2+0x58>
 8000c86:	2c00      	cmp	r4, #0
 8000c88:	d103      	bne.n	8000c92 <__lesf2+0x56>
 8000c8a:	28ff      	cmp	r0, #255	@ 0xff
 8000c8c:	d105      	bne.n	8000c9a <__lesf2+0x5e>
 8000c8e:	2d00      	cmp	r5, #0
 8000c90:	d015      	beq.n	8000cbe <__lesf2+0x82>
 8000c92:	2002      	movs	r0, #2
 8000c94:	bd30      	pop	{r4, r5, pc}
 8000c96:	2800      	cmp	r0, #0
 8000c98:	d106      	bne.n	8000ca8 <__lesf2+0x6c>
 8000c9a:	2001      	movs	r0, #1
 8000c9c:	425b      	negs	r3, r3
 8000c9e:	4318      	orrs	r0, r3
 8000ca0:	e7f8      	b.n	8000c94 <__lesf2+0x58>
 8000ca2:	2c00      	cmp	r4, #0
 8000ca4:	d0f6      	beq.n	8000c94 <__lesf2+0x58>
 8000ca6:	e7f8      	b.n	8000c9a <__lesf2+0x5e>
 8000ca8:	428b      	cmp	r3, r1
 8000caa:	d1f6      	bne.n	8000c9a <__lesf2+0x5e>
 8000cac:	4282      	cmp	r2, r0
 8000cae:	dcf4      	bgt.n	8000c9a <__lesf2+0x5e>
 8000cb0:	dbe6      	blt.n	8000c80 <__lesf2+0x44>
 8000cb2:	42ac      	cmp	r4, r5
 8000cb4:	d8f1      	bhi.n	8000c9a <__lesf2+0x5e>
 8000cb6:	2000      	movs	r0, #0
 8000cb8:	42ac      	cmp	r4, r5
 8000cba:	d2eb      	bcs.n	8000c94 <__lesf2+0x58>
 8000cbc:	e7e0      	b.n	8000c80 <__lesf2+0x44>
 8000cbe:	2000      	movs	r0, #0
 8000cc0:	428b      	cmp	r3, r1
 8000cc2:	d1ea      	bne.n	8000c9a <__lesf2+0x5e>
 8000cc4:	e7e6      	b.n	8000c94 <__lesf2+0x58>
 8000cc6:	428b      	cmp	r3, r1
 8000cc8:	d1e7      	bne.n	8000c9a <__lesf2+0x5e>
 8000cca:	e7f2      	b.n	8000cb2 <__lesf2+0x76>

08000ccc <__aeabi_fmul>:
 8000ccc:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000cce:	464f      	mov	r7, r9
 8000cd0:	4646      	mov	r6, r8
 8000cd2:	46d6      	mov	lr, sl
 8000cd4:	0044      	lsls	r4, r0, #1
 8000cd6:	b5c0      	push	{r6, r7, lr}
 8000cd8:	0246      	lsls	r6, r0, #9
 8000cda:	1c0f      	adds	r7, r1, #0
 8000cdc:	0a76      	lsrs	r6, r6, #9
 8000cde:	0e24      	lsrs	r4, r4, #24
 8000ce0:	0fc5      	lsrs	r5, r0, #31
 8000ce2:	2c00      	cmp	r4, #0
 8000ce4:	d100      	bne.n	8000ce8 <__aeabi_fmul+0x1c>
 8000ce6:	e0da      	b.n	8000e9e <__aeabi_fmul+0x1d2>
 8000ce8:	2cff      	cmp	r4, #255	@ 0xff
 8000cea:	d074      	beq.n	8000dd6 <__aeabi_fmul+0x10a>
 8000cec:	2380      	movs	r3, #128	@ 0x80
 8000cee:	00f6      	lsls	r6, r6, #3
 8000cf0:	04db      	lsls	r3, r3, #19
 8000cf2:	431e      	orrs	r6, r3
 8000cf4:	2300      	movs	r3, #0
 8000cf6:	4699      	mov	r9, r3
 8000cf8:	469a      	mov	sl, r3
 8000cfa:	3c7f      	subs	r4, #127	@ 0x7f
 8000cfc:	027b      	lsls	r3, r7, #9
 8000cfe:	0a5b      	lsrs	r3, r3, #9
 8000d00:	4698      	mov	r8, r3
 8000d02:	007b      	lsls	r3, r7, #1
 8000d04:	0e1b      	lsrs	r3, r3, #24
 8000d06:	0fff      	lsrs	r7, r7, #31
 8000d08:	2b00      	cmp	r3, #0
 8000d0a:	d074      	beq.n	8000df6 <__aeabi_fmul+0x12a>
 8000d0c:	2bff      	cmp	r3, #255	@ 0xff
 8000d0e:	d100      	bne.n	8000d12 <__aeabi_fmul+0x46>
 8000d10:	e08e      	b.n	8000e30 <__aeabi_fmul+0x164>
 8000d12:	4642      	mov	r2, r8
 8000d14:	2180      	movs	r1, #128	@ 0x80
 8000d16:	00d2      	lsls	r2, r2, #3
 8000d18:	04c9      	lsls	r1, r1, #19
 8000d1a:	4311      	orrs	r1, r2
 8000d1c:	3b7f      	subs	r3, #127	@ 0x7f
 8000d1e:	002a      	movs	r2, r5
 8000d20:	18e4      	adds	r4, r4, r3
 8000d22:	464b      	mov	r3, r9
 8000d24:	407a      	eors	r2, r7
 8000d26:	4688      	mov	r8, r1
 8000d28:	b2d2      	uxtb	r2, r2
 8000d2a:	2b0a      	cmp	r3, #10
 8000d2c:	dc75      	bgt.n	8000e1a <__aeabi_fmul+0x14e>
 8000d2e:	464b      	mov	r3, r9
 8000d30:	2000      	movs	r0, #0
 8000d32:	2b02      	cmp	r3, #2
 8000d34:	dd0f      	ble.n	8000d56 <__aeabi_fmul+0x8a>
 8000d36:	4649      	mov	r1, r9
 8000d38:	2301      	movs	r3, #1
 8000d3a:	408b      	lsls	r3, r1
 8000d3c:	21a6      	movs	r1, #166	@ 0xa6
 8000d3e:	00c9      	lsls	r1, r1, #3
 8000d40:	420b      	tst	r3, r1
 8000d42:	d169      	bne.n	8000e18 <__aeabi_fmul+0x14c>
 8000d44:	2190      	movs	r1, #144	@ 0x90
 8000d46:	0089      	lsls	r1, r1, #2
 8000d48:	420b      	tst	r3, r1
 8000d4a:	d000      	beq.n	8000d4e <__aeabi_fmul+0x82>
 8000d4c:	e100      	b.n	8000f50 <__aeabi_fmul+0x284>
 8000d4e:	2188      	movs	r1, #136	@ 0x88
 8000d50:	4219      	tst	r1, r3
 8000d52:	d000      	beq.n	8000d56 <__aeabi_fmul+0x8a>
 8000d54:	e0f5      	b.n	8000f42 <__aeabi_fmul+0x276>
 8000d56:	4641      	mov	r1, r8
 8000d58:	0409      	lsls	r1, r1, #16
 8000d5a:	0c09      	lsrs	r1, r1, #16
 8000d5c:	4643      	mov	r3, r8
 8000d5e:	0008      	movs	r0, r1
 8000d60:	0c35      	lsrs	r5, r6, #16
 8000d62:	0436      	lsls	r6, r6, #16
 8000d64:	0c1b      	lsrs	r3, r3, #16
 8000d66:	0c36      	lsrs	r6, r6, #16
 8000d68:	4370      	muls	r0, r6
 8000d6a:	4369      	muls	r1, r5
 8000d6c:	435e      	muls	r6, r3
 8000d6e:	435d      	muls	r5, r3
 8000d70:	1876      	adds	r6, r6, r1
 8000d72:	0c03      	lsrs	r3, r0, #16
 8000d74:	199b      	adds	r3, r3, r6
 8000d76:	4299      	cmp	r1, r3
 8000d78:	d903      	bls.n	8000d82 <__aeabi_fmul+0xb6>
 8000d7a:	2180      	movs	r1, #128	@ 0x80
 8000d7c:	0249      	lsls	r1, r1, #9
 8000d7e:	468c      	mov	ip, r1
 8000d80:	4465      	add	r5, ip
 8000d82:	0400      	lsls	r0, r0, #16
 8000d84:	0419      	lsls	r1, r3, #16
 8000d86:	0c00      	lsrs	r0, r0, #16
 8000d88:	1809      	adds	r1, r1, r0
 8000d8a:	018e      	lsls	r6, r1, #6
 8000d8c:	1e70      	subs	r0, r6, #1
 8000d8e:	4186      	sbcs	r6, r0
 8000d90:	0c1b      	lsrs	r3, r3, #16
 8000d92:	0e89      	lsrs	r1, r1, #26
 8000d94:	195b      	adds	r3, r3, r5
 8000d96:	430e      	orrs	r6, r1
 8000d98:	019b      	lsls	r3, r3, #6
 8000d9a:	431e      	orrs	r6, r3
 8000d9c:	011b      	lsls	r3, r3, #4
 8000d9e:	d46c      	bmi.n	8000e7a <__aeabi_fmul+0x1ae>
 8000da0:	0023      	movs	r3, r4
 8000da2:	337f      	adds	r3, #127	@ 0x7f
 8000da4:	2b00      	cmp	r3, #0
 8000da6:	dc00      	bgt.n	8000daa <__aeabi_fmul+0xde>
 8000da8:	e0b1      	b.n	8000f0e <__aeabi_fmul+0x242>
 8000daa:	0015      	movs	r5, r2
 8000dac:	0771      	lsls	r1, r6, #29
 8000dae:	d00b      	beq.n	8000dc8 <__aeabi_fmul+0xfc>
 8000db0:	200f      	movs	r0, #15
 8000db2:	0021      	movs	r1, r4
 8000db4:	4030      	ands	r0, r6
 8000db6:	2804      	cmp	r0, #4
 8000db8:	d006      	beq.n	8000dc8 <__aeabi_fmul+0xfc>
 8000dba:	3604      	adds	r6, #4
 8000dbc:	0132      	lsls	r2, r6, #4
 8000dbe:	d503      	bpl.n	8000dc8 <__aeabi_fmul+0xfc>
 8000dc0:	4b6e      	ldr	r3, [pc, #440]	@ (8000f7c <__aeabi_fmul+0x2b0>)
 8000dc2:	401e      	ands	r6, r3
 8000dc4:	000b      	movs	r3, r1
 8000dc6:	3380      	adds	r3, #128	@ 0x80
 8000dc8:	2bfe      	cmp	r3, #254	@ 0xfe
 8000dca:	dd00      	ble.n	8000dce <__aeabi_fmul+0x102>
 8000dcc:	e0bd      	b.n	8000f4a <__aeabi_fmul+0x27e>
 8000dce:	01b2      	lsls	r2, r6, #6
 8000dd0:	0a52      	lsrs	r2, r2, #9
 8000dd2:	b2db      	uxtb	r3, r3
 8000dd4:	e048      	b.n	8000e68 <__aeabi_fmul+0x19c>
 8000dd6:	2e00      	cmp	r6, #0
 8000dd8:	d000      	beq.n	8000ddc <__aeabi_fmul+0x110>
 8000dda:	e092      	b.n	8000f02 <__aeabi_fmul+0x236>
 8000ddc:	2308      	movs	r3, #8
 8000dde:	4699      	mov	r9, r3
 8000de0:	3b06      	subs	r3, #6
 8000de2:	469a      	mov	sl, r3
 8000de4:	027b      	lsls	r3, r7, #9
 8000de6:	0a5b      	lsrs	r3, r3, #9
 8000de8:	4698      	mov	r8, r3
 8000dea:	007b      	lsls	r3, r7, #1
 8000dec:	24ff      	movs	r4, #255	@ 0xff
 8000dee:	0e1b      	lsrs	r3, r3, #24
 8000df0:	0fff      	lsrs	r7, r7, #31
 8000df2:	2b00      	cmp	r3, #0
 8000df4:	d18a      	bne.n	8000d0c <__aeabi_fmul+0x40>
 8000df6:	4642      	mov	r2, r8
 8000df8:	2a00      	cmp	r2, #0
 8000dfa:	d164      	bne.n	8000ec6 <__aeabi_fmul+0x1fa>
 8000dfc:	4649      	mov	r1, r9
 8000dfe:	3201      	adds	r2, #1
 8000e00:	4311      	orrs	r1, r2
 8000e02:	4689      	mov	r9, r1
 8000e04:	290a      	cmp	r1, #10
 8000e06:	dc08      	bgt.n	8000e1a <__aeabi_fmul+0x14e>
 8000e08:	407d      	eors	r5, r7
 8000e0a:	2001      	movs	r0, #1
 8000e0c:	b2ea      	uxtb	r2, r5
 8000e0e:	2902      	cmp	r1, #2
 8000e10:	dc91      	bgt.n	8000d36 <__aeabi_fmul+0x6a>
 8000e12:	0015      	movs	r5, r2
 8000e14:	2200      	movs	r2, #0
 8000e16:	e027      	b.n	8000e68 <__aeabi_fmul+0x19c>
 8000e18:	0015      	movs	r5, r2
 8000e1a:	4653      	mov	r3, sl
 8000e1c:	2b02      	cmp	r3, #2
 8000e1e:	d100      	bne.n	8000e22 <__aeabi_fmul+0x156>
 8000e20:	e093      	b.n	8000f4a <__aeabi_fmul+0x27e>
 8000e22:	2b03      	cmp	r3, #3
 8000e24:	d01a      	beq.n	8000e5c <__aeabi_fmul+0x190>
 8000e26:	2b01      	cmp	r3, #1
 8000e28:	d12c      	bne.n	8000e84 <__aeabi_fmul+0x1b8>
 8000e2a:	2300      	movs	r3, #0
 8000e2c:	2200      	movs	r2, #0
 8000e2e:	e01b      	b.n	8000e68 <__aeabi_fmul+0x19c>
 8000e30:	4643      	mov	r3, r8
 8000e32:	34ff      	adds	r4, #255	@ 0xff
 8000e34:	2b00      	cmp	r3, #0
 8000e36:	d055      	beq.n	8000ee4 <__aeabi_fmul+0x218>
 8000e38:	2103      	movs	r1, #3
 8000e3a:	464b      	mov	r3, r9
 8000e3c:	430b      	orrs	r3, r1
 8000e3e:	0019      	movs	r1, r3
 8000e40:	2b0a      	cmp	r3, #10
 8000e42:	dc00      	bgt.n	8000e46 <__aeabi_fmul+0x17a>
 8000e44:	e092      	b.n	8000f6c <__aeabi_fmul+0x2a0>
 8000e46:	2b0f      	cmp	r3, #15
 8000e48:	d000      	beq.n	8000e4c <__aeabi_fmul+0x180>
 8000e4a:	e08c      	b.n	8000f66 <__aeabi_fmul+0x29a>
 8000e4c:	2280      	movs	r2, #128	@ 0x80
 8000e4e:	03d2      	lsls	r2, r2, #15
 8000e50:	4216      	tst	r6, r2
 8000e52:	d003      	beq.n	8000e5c <__aeabi_fmul+0x190>
 8000e54:	4643      	mov	r3, r8
 8000e56:	4213      	tst	r3, r2
 8000e58:	d100      	bne.n	8000e5c <__aeabi_fmul+0x190>
 8000e5a:	e07d      	b.n	8000f58 <__aeabi_fmul+0x28c>
 8000e5c:	2280      	movs	r2, #128	@ 0x80
 8000e5e:	03d2      	lsls	r2, r2, #15
 8000e60:	4332      	orrs	r2, r6
 8000e62:	0252      	lsls	r2, r2, #9
 8000e64:	0a52      	lsrs	r2, r2, #9
 8000e66:	23ff      	movs	r3, #255	@ 0xff
 8000e68:	05d8      	lsls	r0, r3, #23
 8000e6a:	07ed      	lsls	r5, r5, #31
 8000e6c:	4310      	orrs	r0, r2
 8000e6e:	4328      	orrs	r0, r5
 8000e70:	bce0      	pop	{r5, r6, r7}
 8000e72:	46ba      	mov	sl, r7
 8000e74:	46b1      	mov	r9, r6
 8000e76:	46a8      	mov	r8, r5
 8000e78:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000e7a:	2301      	movs	r3, #1
 8000e7c:	0015      	movs	r5, r2
 8000e7e:	0871      	lsrs	r1, r6, #1
 8000e80:	401e      	ands	r6, r3
 8000e82:	430e      	orrs	r6, r1
 8000e84:	0023      	movs	r3, r4
 8000e86:	3380      	adds	r3, #128	@ 0x80
 8000e88:	1c61      	adds	r1, r4, #1
 8000e8a:	2b00      	cmp	r3, #0
 8000e8c:	dd41      	ble.n	8000f12 <__aeabi_fmul+0x246>
 8000e8e:	0772      	lsls	r2, r6, #29
 8000e90:	d094      	beq.n	8000dbc <__aeabi_fmul+0xf0>
 8000e92:	220f      	movs	r2, #15
 8000e94:	4032      	ands	r2, r6
 8000e96:	2a04      	cmp	r2, #4
 8000e98:	d000      	beq.n	8000e9c <__aeabi_fmul+0x1d0>
 8000e9a:	e78e      	b.n	8000dba <__aeabi_fmul+0xee>
 8000e9c:	e78e      	b.n	8000dbc <__aeabi_fmul+0xf0>
 8000e9e:	2e00      	cmp	r6, #0
 8000ea0:	d105      	bne.n	8000eae <__aeabi_fmul+0x1e2>
 8000ea2:	2304      	movs	r3, #4
 8000ea4:	4699      	mov	r9, r3
 8000ea6:	3b03      	subs	r3, #3
 8000ea8:	2400      	movs	r4, #0
 8000eaa:	469a      	mov	sl, r3
 8000eac:	e726      	b.n	8000cfc <__aeabi_fmul+0x30>
 8000eae:	0030      	movs	r0, r6
 8000eb0:	f002 fbea 	bl	8003688 <__clzsi2>
 8000eb4:	2476      	movs	r4, #118	@ 0x76
 8000eb6:	1f43      	subs	r3, r0, #5
 8000eb8:	409e      	lsls	r6, r3
 8000eba:	2300      	movs	r3, #0
 8000ebc:	4264      	negs	r4, r4
 8000ebe:	4699      	mov	r9, r3
 8000ec0:	469a      	mov	sl, r3
 8000ec2:	1a24      	subs	r4, r4, r0
 8000ec4:	e71a      	b.n	8000cfc <__aeabi_fmul+0x30>
 8000ec6:	4640      	mov	r0, r8
 8000ec8:	f002 fbde 	bl	8003688 <__clzsi2>
 8000ecc:	464b      	mov	r3, r9
 8000ece:	1a24      	subs	r4, r4, r0
 8000ed0:	3c76      	subs	r4, #118	@ 0x76
 8000ed2:	2b0a      	cmp	r3, #10
 8000ed4:	dca1      	bgt.n	8000e1a <__aeabi_fmul+0x14e>
 8000ed6:	4643      	mov	r3, r8
 8000ed8:	3805      	subs	r0, #5
 8000eda:	4083      	lsls	r3, r0
 8000edc:	407d      	eors	r5, r7
 8000ede:	4698      	mov	r8, r3
 8000ee0:	b2ea      	uxtb	r2, r5
 8000ee2:	e724      	b.n	8000d2e <__aeabi_fmul+0x62>
 8000ee4:	464a      	mov	r2, r9
 8000ee6:	3302      	adds	r3, #2
 8000ee8:	4313      	orrs	r3, r2
 8000eea:	002a      	movs	r2, r5
 8000eec:	407a      	eors	r2, r7
 8000eee:	b2d2      	uxtb	r2, r2
 8000ef0:	2b0a      	cmp	r3, #10
 8000ef2:	dc92      	bgt.n	8000e1a <__aeabi_fmul+0x14e>
 8000ef4:	4649      	mov	r1, r9
 8000ef6:	0015      	movs	r5, r2
 8000ef8:	2900      	cmp	r1, #0
 8000efa:	d026      	beq.n	8000f4a <__aeabi_fmul+0x27e>
 8000efc:	4699      	mov	r9, r3
 8000efe:	2002      	movs	r0, #2
 8000f00:	e719      	b.n	8000d36 <__aeabi_fmul+0x6a>
 8000f02:	230c      	movs	r3, #12
 8000f04:	4699      	mov	r9, r3
 8000f06:	3b09      	subs	r3, #9
 8000f08:	24ff      	movs	r4, #255	@ 0xff
 8000f0a:	469a      	mov	sl, r3
 8000f0c:	e6f6      	b.n	8000cfc <__aeabi_fmul+0x30>
 8000f0e:	0015      	movs	r5, r2
 8000f10:	0021      	movs	r1, r4
 8000f12:	2201      	movs	r2, #1
 8000f14:	1ad3      	subs	r3, r2, r3
 8000f16:	2b1b      	cmp	r3, #27
 8000f18:	dd00      	ble.n	8000f1c <__aeabi_fmul+0x250>
 8000f1a:	e786      	b.n	8000e2a <__aeabi_fmul+0x15e>
 8000f1c:	319e      	adds	r1, #158	@ 0x9e
 8000f1e:	0032      	movs	r2, r6
 8000f20:	408e      	lsls	r6, r1
 8000f22:	40da      	lsrs	r2, r3
 8000f24:	1e73      	subs	r3, r6, #1
 8000f26:	419e      	sbcs	r6, r3
 8000f28:	4332      	orrs	r2, r6
 8000f2a:	0753      	lsls	r3, r2, #29
 8000f2c:	d004      	beq.n	8000f38 <__aeabi_fmul+0x26c>
 8000f2e:	230f      	movs	r3, #15
 8000f30:	4013      	ands	r3, r2
 8000f32:	2b04      	cmp	r3, #4
 8000f34:	d000      	beq.n	8000f38 <__aeabi_fmul+0x26c>
 8000f36:	3204      	adds	r2, #4
 8000f38:	0153      	lsls	r3, r2, #5
 8000f3a:	d510      	bpl.n	8000f5e <__aeabi_fmul+0x292>
 8000f3c:	2301      	movs	r3, #1
 8000f3e:	2200      	movs	r2, #0
 8000f40:	e792      	b.n	8000e68 <__aeabi_fmul+0x19c>
 8000f42:	003d      	movs	r5, r7
 8000f44:	4646      	mov	r6, r8
 8000f46:	4682      	mov	sl, r0
 8000f48:	e767      	b.n	8000e1a <__aeabi_fmul+0x14e>
 8000f4a:	23ff      	movs	r3, #255	@ 0xff
 8000f4c:	2200      	movs	r2, #0
 8000f4e:	e78b      	b.n	8000e68 <__aeabi_fmul+0x19c>
 8000f50:	2280      	movs	r2, #128	@ 0x80
 8000f52:	2500      	movs	r5, #0
 8000f54:	03d2      	lsls	r2, r2, #15
 8000f56:	e786      	b.n	8000e66 <__aeabi_fmul+0x19a>
 8000f58:	003d      	movs	r5, r7
 8000f5a:	431a      	orrs	r2, r3
 8000f5c:	e783      	b.n	8000e66 <__aeabi_fmul+0x19a>
 8000f5e:	0192      	lsls	r2, r2, #6
 8000f60:	2300      	movs	r3, #0
 8000f62:	0a52      	lsrs	r2, r2, #9
 8000f64:	e780      	b.n	8000e68 <__aeabi_fmul+0x19c>
 8000f66:	003d      	movs	r5, r7
 8000f68:	4646      	mov	r6, r8
 8000f6a:	e777      	b.n	8000e5c <__aeabi_fmul+0x190>
 8000f6c:	002a      	movs	r2, r5
 8000f6e:	2301      	movs	r3, #1
 8000f70:	407a      	eors	r2, r7
 8000f72:	408b      	lsls	r3, r1
 8000f74:	2003      	movs	r0, #3
 8000f76:	b2d2      	uxtb	r2, r2
 8000f78:	e6e9      	b.n	8000d4e <__aeabi_fmul+0x82>
 8000f7a:	46c0      	nop			@ (mov r8, r8)
 8000f7c:	f7ffffff 	.word	0xf7ffffff

08000f80 <__aeabi_fsub>:
 8000f80:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000f82:	4647      	mov	r7, r8
 8000f84:	46ce      	mov	lr, r9
 8000f86:	0243      	lsls	r3, r0, #9
 8000f88:	b580      	push	{r7, lr}
 8000f8a:	0a5f      	lsrs	r7, r3, #9
 8000f8c:	099b      	lsrs	r3, r3, #6
 8000f8e:	0045      	lsls	r5, r0, #1
 8000f90:	004a      	lsls	r2, r1, #1
 8000f92:	469c      	mov	ip, r3
 8000f94:	024b      	lsls	r3, r1, #9
 8000f96:	0fc4      	lsrs	r4, r0, #31
 8000f98:	0fce      	lsrs	r6, r1, #31
 8000f9a:	0e2d      	lsrs	r5, r5, #24
 8000f9c:	0a58      	lsrs	r0, r3, #9
 8000f9e:	0e12      	lsrs	r2, r2, #24
 8000fa0:	0999      	lsrs	r1, r3, #6
 8000fa2:	2aff      	cmp	r2, #255	@ 0xff
 8000fa4:	d06b      	beq.n	800107e <__aeabi_fsub+0xfe>
 8000fa6:	2301      	movs	r3, #1
 8000fa8:	405e      	eors	r6, r3
 8000faa:	1aab      	subs	r3, r5, r2
 8000fac:	42b4      	cmp	r4, r6
 8000fae:	d04b      	beq.n	8001048 <__aeabi_fsub+0xc8>
 8000fb0:	2b00      	cmp	r3, #0
 8000fb2:	dc00      	bgt.n	8000fb6 <__aeabi_fsub+0x36>
 8000fb4:	e0ff      	b.n	80011b6 <__aeabi_fsub+0x236>
 8000fb6:	2a00      	cmp	r2, #0
 8000fb8:	d100      	bne.n	8000fbc <__aeabi_fsub+0x3c>
 8000fba:	e088      	b.n	80010ce <__aeabi_fsub+0x14e>
 8000fbc:	2dff      	cmp	r5, #255	@ 0xff
 8000fbe:	d100      	bne.n	8000fc2 <__aeabi_fsub+0x42>
 8000fc0:	e0ef      	b.n	80011a2 <__aeabi_fsub+0x222>
 8000fc2:	2280      	movs	r2, #128	@ 0x80
 8000fc4:	04d2      	lsls	r2, r2, #19
 8000fc6:	4311      	orrs	r1, r2
 8000fc8:	2001      	movs	r0, #1
 8000fca:	2b1b      	cmp	r3, #27
 8000fcc:	dc08      	bgt.n	8000fe0 <__aeabi_fsub+0x60>
 8000fce:	0008      	movs	r0, r1
 8000fd0:	2220      	movs	r2, #32
 8000fd2:	40d8      	lsrs	r0, r3
 8000fd4:	1ad3      	subs	r3, r2, r3
 8000fd6:	4099      	lsls	r1, r3
 8000fd8:	000b      	movs	r3, r1
 8000fda:	1e5a      	subs	r2, r3, #1
 8000fdc:	4193      	sbcs	r3, r2
 8000fde:	4318      	orrs	r0, r3
 8000fe0:	4663      	mov	r3, ip
 8000fe2:	1a1b      	subs	r3, r3, r0
 8000fe4:	469c      	mov	ip, r3
 8000fe6:	4663      	mov	r3, ip
 8000fe8:	015b      	lsls	r3, r3, #5
 8000fea:	d400      	bmi.n	8000fee <__aeabi_fsub+0x6e>
 8000fec:	e0cd      	b.n	800118a <__aeabi_fsub+0x20a>
 8000fee:	4663      	mov	r3, ip
 8000ff0:	019f      	lsls	r7, r3, #6
 8000ff2:	09bf      	lsrs	r7, r7, #6
 8000ff4:	0038      	movs	r0, r7
 8000ff6:	f002 fb47 	bl	8003688 <__clzsi2>
 8000ffa:	003b      	movs	r3, r7
 8000ffc:	3805      	subs	r0, #5
 8000ffe:	4083      	lsls	r3, r0
 8001000:	4285      	cmp	r5, r0
 8001002:	dc00      	bgt.n	8001006 <__aeabi_fsub+0x86>
 8001004:	e0a2      	b.n	800114c <__aeabi_fsub+0x1cc>
 8001006:	4ab7      	ldr	r2, [pc, #732]	@ (80012e4 <__aeabi_fsub+0x364>)
 8001008:	1a2d      	subs	r5, r5, r0
 800100a:	401a      	ands	r2, r3
 800100c:	4694      	mov	ip, r2
 800100e:	075a      	lsls	r2, r3, #29
 8001010:	d100      	bne.n	8001014 <__aeabi_fsub+0x94>
 8001012:	e0c3      	b.n	800119c <__aeabi_fsub+0x21c>
 8001014:	220f      	movs	r2, #15
 8001016:	4013      	ands	r3, r2
 8001018:	2b04      	cmp	r3, #4
 800101a:	d100      	bne.n	800101e <__aeabi_fsub+0x9e>
 800101c:	e0be      	b.n	800119c <__aeabi_fsub+0x21c>
 800101e:	2304      	movs	r3, #4
 8001020:	4698      	mov	r8, r3
 8001022:	44c4      	add	ip, r8
 8001024:	4663      	mov	r3, ip
 8001026:	015b      	lsls	r3, r3, #5
 8001028:	d400      	bmi.n	800102c <__aeabi_fsub+0xac>
 800102a:	e0b7      	b.n	800119c <__aeabi_fsub+0x21c>
 800102c:	1c68      	adds	r0, r5, #1
 800102e:	2dfe      	cmp	r5, #254	@ 0xfe
 8001030:	d000      	beq.n	8001034 <__aeabi_fsub+0xb4>
 8001032:	e0a5      	b.n	8001180 <__aeabi_fsub+0x200>
 8001034:	20ff      	movs	r0, #255	@ 0xff
 8001036:	2200      	movs	r2, #0
 8001038:	05c0      	lsls	r0, r0, #23
 800103a:	4310      	orrs	r0, r2
 800103c:	07e4      	lsls	r4, r4, #31
 800103e:	4320      	orrs	r0, r4
 8001040:	bcc0      	pop	{r6, r7}
 8001042:	46b9      	mov	r9, r7
 8001044:	46b0      	mov	r8, r6
 8001046:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8001048:	2b00      	cmp	r3, #0
 800104a:	dc00      	bgt.n	800104e <__aeabi_fsub+0xce>
 800104c:	e1eb      	b.n	8001426 <__aeabi_fsub+0x4a6>
 800104e:	2a00      	cmp	r2, #0
 8001050:	d046      	beq.n	80010e0 <__aeabi_fsub+0x160>
 8001052:	2dff      	cmp	r5, #255	@ 0xff
 8001054:	d100      	bne.n	8001058 <__aeabi_fsub+0xd8>
 8001056:	e0a4      	b.n	80011a2 <__aeabi_fsub+0x222>
 8001058:	2280      	movs	r2, #128	@ 0x80
 800105a:	04d2      	lsls	r2, r2, #19
 800105c:	4311      	orrs	r1, r2
 800105e:	2b1b      	cmp	r3, #27
 8001060:	dc00      	bgt.n	8001064 <__aeabi_fsub+0xe4>
 8001062:	e0fb      	b.n	800125c <__aeabi_fsub+0x2dc>
 8001064:	2305      	movs	r3, #5
 8001066:	4698      	mov	r8, r3
 8001068:	002b      	movs	r3, r5
 800106a:	44c4      	add	ip, r8
 800106c:	4662      	mov	r2, ip
 800106e:	08d7      	lsrs	r7, r2, #3
 8001070:	2bff      	cmp	r3, #255	@ 0xff
 8001072:	d100      	bne.n	8001076 <__aeabi_fsub+0xf6>
 8001074:	e095      	b.n	80011a2 <__aeabi_fsub+0x222>
 8001076:	027a      	lsls	r2, r7, #9
 8001078:	0a52      	lsrs	r2, r2, #9
 800107a:	b2d8      	uxtb	r0, r3
 800107c:	e7dc      	b.n	8001038 <__aeabi_fsub+0xb8>
 800107e:	002b      	movs	r3, r5
 8001080:	3bff      	subs	r3, #255	@ 0xff
 8001082:	4699      	mov	r9, r3
 8001084:	2900      	cmp	r1, #0
 8001086:	d118      	bne.n	80010ba <__aeabi_fsub+0x13a>
 8001088:	2301      	movs	r3, #1
 800108a:	405e      	eors	r6, r3
 800108c:	42b4      	cmp	r4, r6
 800108e:	d100      	bne.n	8001092 <__aeabi_fsub+0x112>
 8001090:	e0ca      	b.n	8001228 <__aeabi_fsub+0x2a8>
 8001092:	464b      	mov	r3, r9
 8001094:	2b00      	cmp	r3, #0
 8001096:	d02d      	beq.n	80010f4 <__aeabi_fsub+0x174>
 8001098:	2d00      	cmp	r5, #0
 800109a:	d000      	beq.n	800109e <__aeabi_fsub+0x11e>
 800109c:	e13c      	b.n	8001318 <__aeabi_fsub+0x398>
 800109e:	23ff      	movs	r3, #255	@ 0xff
 80010a0:	4664      	mov	r4, ip
 80010a2:	2c00      	cmp	r4, #0
 80010a4:	d100      	bne.n	80010a8 <__aeabi_fsub+0x128>
 80010a6:	e15f      	b.n	8001368 <__aeabi_fsub+0x3e8>
 80010a8:	1e5d      	subs	r5, r3, #1
 80010aa:	2b01      	cmp	r3, #1
 80010ac:	d100      	bne.n	80010b0 <__aeabi_fsub+0x130>
 80010ae:	e174      	b.n	800139a <__aeabi_fsub+0x41a>
 80010b0:	0034      	movs	r4, r6
 80010b2:	2bff      	cmp	r3, #255	@ 0xff
 80010b4:	d074      	beq.n	80011a0 <__aeabi_fsub+0x220>
 80010b6:	002b      	movs	r3, r5
 80010b8:	e103      	b.n	80012c2 <__aeabi_fsub+0x342>
 80010ba:	42b4      	cmp	r4, r6
 80010bc:	d100      	bne.n	80010c0 <__aeabi_fsub+0x140>
 80010be:	e09c      	b.n	80011fa <__aeabi_fsub+0x27a>
 80010c0:	2b00      	cmp	r3, #0
 80010c2:	d017      	beq.n	80010f4 <__aeabi_fsub+0x174>
 80010c4:	2d00      	cmp	r5, #0
 80010c6:	d0ea      	beq.n	800109e <__aeabi_fsub+0x11e>
 80010c8:	0007      	movs	r7, r0
 80010ca:	0034      	movs	r4, r6
 80010cc:	e06c      	b.n	80011a8 <__aeabi_fsub+0x228>
 80010ce:	2900      	cmp	r1, #0
 80010d0:	d0cc      	beq.n	800106c <__aeabi_fsub+0xec>
 80010d2:	1e5a      	subs	r2, r3, #1
 80010d4:	2b01      	cmp	r3, #1
 80010d6:	d02b      	beq.n	8001130 <__aeabi_fsub+0x1b0>
 80010d8:	2bff      	cmp	r3, #255	@ 0xff
 80010da:	d062      	beq.n	80011a2 <__aeabi_fsub+0x222>
 80010dc:	0013      	movs	r3, r2
 80010de:	e773      	b.n	8000fc8 <__aeabi_fsub+0x48>
 80010e0:	2900      	cmp	r1, #0
 80010e2:	d0c3      	beq.n	800106c <__aeabi_fsub+0xec>
 80010e4:	1e5a      	subs	r2, r3, #1
 80010e6:	2b01      	cmp	r3, #1
 80010e8:	d100      	bne.n	80010ec <__aeabi_fsub+0x16c>
 80010ea:	e11e      	b.n	800132a <__aeabi_fsub+0x3aa>
 80010ec:	2bff      	cmp	r3, #255	@ 0xff
 80010ee:	d058      	beq.n	80011a2 <__aeabi_fsub+0x222>
 80010f0:	0013      	movs	r3, r2
 80010f2:	e7b4      	b.n	800105e <__aeabi_fsub+0xde>
 80010f4:	22fe      	movs	r2, #254	@ 0xfe
 80010f6:	1c6b      	adds	r3, r5, #1
 80010f8:	421a      	tst	r2, r3
 80010fa:	d10d      	bne.n	8001118 <__aeabi_fsub+0x198>
 80010fc:	2d00      	cmp	r5, #0
 80010fe:	d060      	beq.n	80011c2 <__aeabi_fsub+0x242>
 8001100:	4663      	mov	r3, ip
 8001102:	2b00      	cmp	r3, #0
 8001104:	d000      	beq.n	8001108 <__aeabi_fsub+0x188>
 8001106:	e120      	b.n	800134a <__aeabi_fsub+0x3ca>
 8001108:	2900      	cmp	r1, #0
 800110a:	d000      	beq.n	800110e <__aeabi_fsub+0x18e>
 800110c:	e128      	b.n	8001360 <__aeabi_fsub+0x3e0>
 800110e:	2280      	movs	r2, #128	@ 0x80
 8001110:	2400      	movs	r4, #0
 8001112:	20ff      	movs	r0, #255	@ 0xff
 8001114:	03d2      	lsls	r2, r2, #15
 8001116:	e78f      	b.n	8001038 <__aeabi_fsub+0xb8>
 8001118:	4663      	mov	r3, ip
 800111a:	1a5f      	subs	r7, r3, r1
 800111c:	017b      	lsls	r3, r7, #5
 800111e:	d500      	bpl.n	8001122 <__aeabi_fsub+0x1a2>
 8001120:	e0fe      	b.n	8001320 <__aeabi_fsub+0x3a0>
 8001122:	2f00      	cmp	r7, #0
 8001124:	d000      	beq.n	8001128 <__aeabi_fsub+0x1a8>
 8001126:	e765      	b.n	8000ff4 <__aeabi_fsub+0x74>
 8001128:	2400      	movs	r4, #0
 800112a:	2000      	movs	r0, #0
 800112c:	2200      	movs	r2, #0
 800112e:	e783      	b.n	8001038 <__aeabi_fsub+0xb8>
 8001130:	4663      	mov	r3, ip
 8001132:	1a59      	subs	r1, r3, r1
 8001134:	014b      	lsls	r3, r1, #5
 8001136:	d400      	bmi.n	800113a <__aeabi_fsub+0x1ba>
 8001138:	e119      	b.n	800136e <__aeabi_fsub+0x3ee>
 800113a:	018f      	lsls	r7, r1, #6
 800113c:	09bf      	lsrs	r7, r7, #6
 800113e:	0038      	movs	r0, r7
 8001140:	f002 faa2 	bl	8003688 <__clzsi2>
 8001144:	003b      	movs	r3, r7
 8001146:	3805      	subs	r0, #5
 8001148:	4083      	lsls	r3, r0
 800114a:	2501      	movs	r5, #1
 800114c:	2220      	movs	r2, #32
 800114e:	1b40      	subs	r0, r0, r5
 8001150:	3001      	adds	r0, #1
 8001152:	1a12      	subs	r2, r2, r0
 8001154:	0019      	movs	r1, r3
 8001156:	4093      	lsls	r3, r2
 8001158:	40c1      	lsrs	r1, r0
 800115a:	1e5a      	subs	r2, r3, #1
 800115c:	4193      	sbcs	r3, r2
 800115e:	4319      	orrs	r1, r3
 8001160:	468c      	mov	ip, r1
 8001162:	1e0b      	subs	r3, r1, #0
 8001164:	d0e1      	beq.n	800112a <__aeabi_fsub+0x1aa>
 8001166:	075b      	lsls	r3, r3, #29
 8001168:	d100      	bne.n	800116c <__aeabi_fsub+0x1ec>
 800116a:	e152      	b.n	8001412 <__aeabi_fsub+0x492>
 800116c:	230f      	movs	r3, #15
 800116e:	2500      	movs	r5, #0
 8001170:	400b      	ands	r3, r1
 8001172:	2b04      	cmp	r3, #4
 8001174:	d000      	beq.n	8001178 <__aeabi_fsub+0x1f8>
 8001176:	e752      	b.n	800101e <__aeabi_fsub+0x9e>
 8001178:	2001      	movs	r0, #1
 800117a:	014a      	lsls	r2, r1, #5
 800117c:	d400      	bmi.n	8001180 <__aeabi_fsub+0x200>
 800117e:	e092      	b.n	80012a6 <__aeabi_fsub+0x326>
 8001180:	b2c0      	uxtb	r0, r0
 8001182:	4663      	mov	r3, ip
 8001184:	019a      	lsls	r2, r3, #6
 8001186:	0a52      	lsrs	r2, r2, #9
 8001188:	e756      	b.n	8001038 <__aeabi_fsub+0xb8>
 800118a:	4663      	mov	r3, ip
 800118c:	075b      	lsls	r3, r3, #29
 800118e:	d005      	beq.n	800119c <__aeabi_fsub+0x21c>
 8001190:	230f      	movs	r3, #15
 8001192:	4662      	mov	r2, ip
 8001194:	4013      	ands	r3, r2
 8001196:	2b04      	cmp	r3, #4
 8001198:	d000      	beq.n	800119c <__aeabi_fsub+0x21c>
 800119a:	e740      	b.n	800101e <__aeabi_fsub+0x9e>
 800119c:	002b      	movs	r3, r5
 800119e:	e765      	b.n	800106c <__aeabi_fsub+0xec>
 80011a0:	0007      	movs	r7, r0
 80011a2:	2f00      	cmp	r7, #0
 80011a4:	d100      	bne.n	80011a8 <__aeabi_fsub+0x228>
 80011a6:	e745      	b.n	8001034 <__aeabi_fsub+0xb4>
 80011a8:	2280      	movs	r2, #128	@ 0x80
 80011aa:	03d2      	lsls	r2, r2, #15
 80011ac:	433a      	orrs	r2, r7
 80011ae:	0252      	lsls	r2, r2, #9
 80011b0:	20ff      	movs	r0, #255	@ 0xff
 80011b2:	0a52      	lsrs	r2, r2, #9
 80011b4:	e740      	b.n	8001038 <__aeabi_fsub+0xb8>
 80011b6:	2b00      	cmp	r3, #0
 80011b8:	d179      	bne.n	80012ae <__aeabi_fsub+0x32e>
 80011ba:	22fe      	movs	r2, #254	@ 0xfe
 80011bc:	1c6b      	adds	r3, r5, #1
 80011be:	421a      	tst	r2, r3
 80011c0:	d1aa      	bne.n	8001118 <__aeabi_fsub+0x198>
 80011c2:	4663      	mov	r3, ip
 80011c4:	2b00      	cmp	r3, #0
 80011c6:	d100      	bne.n	80011ca <__aeabi_fsub+0x24a>
 80011c8:	e0f5      	b.n	80013b6 <__aeabi_fsub+0x436>
 80011ca:	2900      	cmp	r1, #0
 80011cc:	d100      	bne.n	80011d0 <__aeabi_fsub+0x250>
 80011ce:	e0d1      	b.n	8001374 <__aeabi_fsub+0x3f4>
 80011d0:	1a5f      	subs	r7, r3, r1
 80011d2:	2380      	movs	r3, #128	@ 0x80
 80011d4:	04db      	lsls	r3, r3, #19
 80011d6:	421f      	tst	r7, r3
 80011d8:	d100      	bne.n	80011dc <__aeabi_fsub+0x25c>
 80011da:	e10e      	b.n	80013fa <__aeabi_fsub+0x47a>
 80011dc:	4662      	mov	r2, ip
 80011de:	2401      	movs	r4, #1
 80011e0:	1a8a      	subs	r2, r1, r2
 80011e2:	4694      	mov	ip, r2
 80011e4:	2000      	movs	r0, #0
 80011e6:	4034      	ands	r4, r6
 80011e8:	2a00      	cmp	r2, #0
 80011ea:	d100      	bne.n	80011ee <__aeabi_fsub+0x26e>
 80011ec:	e724      	b.n	8001038 <__aeabi_fsub+0xb8>
 80011ee:	2001      	movs	r0, #1
 80011f0:	421a      	tst	r2, r3
 80011f2:	d1c6      	bne.n	8001182 <__aeabi_fsub+0x202>
 80011f4:	2300      	movs	r3, #0
 80011f6:	08d7      	lsrs	r7, r2, #3
 80011f8:	e73d      	b.n	8001076 <__aeabi_fsub+0xf6>
 80011fa:	2b00      	cmp	r3, #0
 80011fc:	d017      	beq.n	800122e <__aeabi_fsub+0x2ae>
 80011fe:	2d00      	cmp	r5, #0
 8001200:	d000      	beq.n	8001204 <__aeabi_fsub+0x284>
 8001202:	e0af      	b.n	8001364 <__aeabi_fsub+0x3e4>
 8001204:	23ff      	movs	r3, #255	@ 0xff
 8001206:	4665      	mov	r5, ip
 8001208:	2d00      	cmp	r5, #0
 800120a:	d100      	bne.n	800120e <__aeabi_fsub+0x28e>
 800120c:	e0ad      	b.n	800136a <__aeabi_fsub+0x3ea>
 800120e:	1e5e      	subs	r6, r3, #1
 8001210:	2b01      	cmp	r3, #1
 8001212:	d100      	bne.n	8001216 <__aeabi_fsub+0x296>
 8001214:	e089      	b.n	800132a <__aeabi_fsub+0x3aa>
 8001216:	2bff      	cmp	r3, #255	@ 0xff
 8001218:	d0c2      	beq.n	80011a0 <__aeabi_fsub+0x220>
 800121a:	2e1b      	cmp	r6, #27
 800121c:	dc00      	bgt.n	8001220 <__aeabi_fsub+0x2a0>
 800121e:	e0ab      	b.n	8001378 <__aeabi_fsub+0x3f8>
 8001220:	1d4b      	adds	r3, r1, #5
 8001222:	469c      	mov	ip, r3
 8001224:	0013      	movs	r3, r2
 8001226:	e721      	b.n	800106c <__aeabi_fsub+0xec>
 8001228:	464b      	mov	r3, r9
 800122a:	2b00      	cmp	r3, #0
 800122c:	d170      	bne.n	8001310 <__aeabi_fsub+0x390>
 800122e:	22fe      	movs	r2, #254	@ 0xfe
 8001230:	1c6b      	adds	r3, r5, #1
 8001232:	421a      	tst	r2, r3
 8001234:	d15e      	bne.n	80012f4 <__aeabi_fsub+0x374>
 8001236:	2d00      	cmp	r5, #0
 8001238:	d000      	beq.n	800123c <__aeabi_fsub+0x2bc>
 800123a:	e0c3      	b.n	80013c4 <__aeabi_fsub+0x444>
 800123c:	4663      	mov	r3, ip
 800123e:	2b00      	cmp	r3, #0
 8001240:	d100      	bne.n	8001244 <__aeabi_fsub+0x2c4>
 8001242:	e0d0      	b.n	80013e6 <__aeabi_fsub+0x466>
 8001244:	2900      	cmp	r1, #0
 8001246:	d100      	bne.n	800124a <__aeabi_fsub+0x2ca>
 8001248:	e094      	b.n	8001374 <__aeabi_fsub+0x3f4>
 800124a:	000a      	movs	r2, r1
 800124c:	4462      	add	r2, ip
 800124e:	0153      	lsls	r3, r2, #5
 8001250:	d400      	bmi.n	8001254 <__aeabi_fsub+0x2d4>
 8001252:	e0d8      	b.n	8001406 <__aeabi_fsub+0x486>
 8001254:	0192      	lsls	r2, r2, #6
 8001256:	2001      	movs	r0, #1
 8001258:	0a52      	lsrs	r2, r2, #9
 800125a:	e6ed      	b.n	8001038 <__aeabi_fsub+0xb8>
 800125c:	0008      	movs	r0, r1
 800125e:	2220      	movs	r2, #32
 8001260:	40d8      	lsrs	r0, r3
 8001262:	1ad3      	subs	r3, r2, r3
 8001264:	4099      	lsls	r1, r3
 8001266:	000b      	movs	r3, r1
 8001268:	1e5a      	subs	r2, r3, #1
 800126a:	4193      	sbcs	r3, r2
 800126c:	4303      	orrs	r3, r0
 800126e:	449c      	add	ip, r3
 8001270:	4663      	mov	r3, ip
 8001272:	015b      	lsls	r3, r3, #5
 8001274:	d589      	bpl.n	800118a <__aeabi_fsub+0x20a>
 8001276:	3501      	adds	r5, #1
 8001278:	2dff      	cmp	r5, #255	@ 0xff
 800127a:	d100      	bne.n	800127e <__aeabi_fsub+0x2fe>
 800127c:	e6da      	b.n	8001034 <__aeabi_fsub+0xb4>
 800127e:	4662      	mov	r2, ip
 8001280:	2301      	movs	r3, #1
 8001282:	4919      	ldr	r1, [pc, #100]	@ (80012e8 <__aeabi_fsub+0x368>)
 8001284:	4013      	ands	r3, r2
 8001286:	0852      	lsrs	r2, r2, #1
 8001288:	400a      	ands	r2, r1
 800128a:	431a      	orrs	r2, r3
 800128c:	0013      	movs	r3, r2
 800128e:	4694      	mov	ip, r2
 8001290:	075b      	lsls	r3, r3, #29
 8001292:	d004      	beq.n	800129e <__aeabi_fsub+0x31e>
 8001294:	230f      	movs	r3, #15
 8001296:	4013      	ands	r3, r2
 8001298:	2b04      	cmp	r3, #4
 800129a:	d000      	beq.n	800129e <__aeabi_fsub+0x31e>
 800129c:	e6bf      	b.n	800101e <__aeabi_fsub+0x9e>
 800129e:	4663      	mov	r3, ip
 80012a0:	015b      	lsls	r3, r3, #5
 80012a2:	d500      	bpl.n	80012a6 <__aeabi_fsub+0x326>
 80012a4:	e6c2      	b.n	800102c <__aeabi_fsub+0xac>
 80012a6:	4663      	mov	r3, ip
 80012a8:	08df      	lsrs	r7, r3, #3
 80012aa:	002b      	movs	r3, r5
 80012ac:	e6e3      	b.n	8001076 <__aeabi_fsub+0xf6>
 80012ae:	1b53      	subs	r3, r2, r5
 80012b0:	2d00      	cmp	r5, #0
 80012b2:	d100      	bne.n	80012b6 <__aeabi_fsub+0x336>
 80012b4:	e6f4      	b.n	80010a0 <__aeabi_fsub+0x120>
 80012b6:	2080      	movs	r0, #128	@ 0x80
 80012b8:	4664      	mov	r4, ip
 80012ba:	04c0      	lsls	r0, r0, #19
 80012bc:	4304      	orrs	r4, r0
 80012be:	46a4      	mov	ip, r4
 80012c0:	0034      	movs	r4, r6
 80012c2:	2001      	movs	r0, #1
 80012c4:	2b1b      	cmp	r3, #27
 80012c6:	dc09      	bgt.n	80012dc <__aeabi_fsub+0x35c>
 80012c8:	2520      	movs	r5, #32
 80012ca:	4660      	mov	r0, ip
 80012cc:	40d8      	lsrs	r0, r3
 80012ce:	1aeb      	subs	r3, r5, r3
 80012d0:	4665      	mov	r5, ip
 80012d2:	409d      	lsls	r5, r3
 80012d4:	002b      	movs	r3, r5
 80012d6:	1e5d      	subs	r5, r3, #1
 80012d8:	41ab      	sbcs	r3, r5
 80012da:	4318      	orrs	r0, r3
 80012dc:	1a0b      	subs	r3, r1, r0
 80012de:	469c      	mov	ip, r3
 80012e0:	0015      	movs	r5, r2
 80012e2:	e680      	b.n	8000fe6 <__aeabi_fsub+0x66>
 80012e4:	fbffffff 	.word	0xfbffffff
 80012e8:	7dffffff 	.word	0x7dffffff
 80012ec:	22fe      	movs	r2, #254	@ 0xfe
 80012ee:	1c6b      	adds	r3, r5, #1
 80012f0:	4213      	tst	r3, r2
 80012f2:	d0a3      	beq.n	800123c <__aeabi_fsub+0x2bc>
 80012f4:	2bff      	cmp	r3, #255	@ 0xff
 80012f6:	d100      	bne.n	80012fa <__aeabi_fsub+0x37a>
 80012f8:	e69c      	b.n	8001034 <__aeabi_fsub+0xb4>
 80012fa:	4461      	add	r1, ip
 80012fc:	0849      	lsrs	r1, r1, #1
 80012fe:	074a      	lsls	r2, r1, #29
 8001300:	d049      	beq.n	8001396 <__aeabi_fsub+0x416>
 8001302:	220f      	movs	r2, #15
 8001304:	400a      	ands	r2, r1
 8001306:	2a04      	cmp	r2, #4
 8001308:	d045      	beq.n	8001396 <__aeabi_fsub+0x416>
 800130a:	1d0a      	adds	r2, r1, #4
 800130c:	4694      	mov	ip, r2
 800130e:	e6ad      	b.n	800106c <__aeabi_fsub+0xec>
 8001310:	2d00      	cmp	r5, #0
 8001312:	d100      	bne.n	8001316 <__aeabi_fsub+0x396>
 8001314:	e776      	b.n	8001204 <__aeabi_fsub+0x284>
 8001316:	e68d      	b.n	8001034 <__aeabi_fsub+0xb4>
 8001318:	0034      	movs	r4, r6
 800131a:	20ff      	movs	r0, #255	@ 0xff
 800131c:	2200      	movs	r2, #0
 800131e:	e68b      	b.n	8001038 <__aeabi_fsub+0xb8>
 8001320:	4663      	mov	r3, ip
 8001322:	2401      	movs	r4, #1
 8001324:	1acf      	subs	r7, r1, r3
 8001326:	4034      	ands	r4, r6
 8001328:	e664      	b.n	8000ff4 <__aeabi_fsub+0x74>
 800132a:	4461      	add	r1, ip
 800132c:	014b      	lsls	r3, r1, #5
 800132e:	d56d      	bpl.n	800140c <__aeabi_fsub+0x48c>
 8001330:	0848      	lsrs	r0, r1, #1
 8001332:	4944      	ldr	r1, [pc, #272]	@ (8001444 <__aeabi_fsub+0x4c4>)
 8001334:	4001      	ands	r1, r0
 8001336:	0743      	lsls	r3, r0, #29
 8001338:	d02c      	beq.n	8001394 <__aeabi_fsub+0x414>
 800133a:	230f      	movs	r3, #15
 800133c:	4003      	ands	r3, r0
 800133e:	2b04      	cmp	r3, #4
 8001340:	d028      	beq.n	8001394 <__aeabi_fsub+0x414>
 8001342:	1d0b      	adds	r3, r1, #4
 8001344:	469c      	mov	ip, r3
 8001346:	2302      	movs	r3, #2
 8001348:	e690      	b.n	800106c <__aeabi_fsub+0xec>
 800134a:	2900      	cmp	r1, #0
 800134c:	d100      	bne.n	8001350 <__aeabi_fsub+0x3d0>
 800134e:	e72b      	b.n	80011a8 <__aeabi_fsub+0x228>
 8001350:	2380      	movs	r3, #128	@ 0x80
 8001352:	03db      	lsls	r3, r3, #15
 8001354:	429f      	cmp	r7, r3
 8001356:	d200      	bcs.n	800135a <__aeabi_fsub+0x3da>
 8001358:	e726      	b.n	80011a8 <__aeabi_fsub+0x228>
 800135a:	4298      	cmp	r0, r3
 800135c:	d300      	bcc.n	8001360 <__aeabi_fsub+0x3e0>
 800135e:	e723      	b.n	80011a8 <__aeabi_fsub+0x228>
 8001360:	2401      	movs	r4, #1
 8001362:	4034      	ands	r4, r6
 8001364:	0007      	movs	r7, r0
 8001366:	e71f      	b.n	80011a8 <__aeabi_fsub+0x228>
 8001368:	0034      	movs	r4, r6
 800136a:	468c      	mov	ip, r1
 800136c:	e67e      	b.n	800106c <__aeabi_fsub+0xec>
 800136e:	2301      	movs	r3, #1
 8001370:	08cf      	lsrs	r7, r1, #3
 8001372:	e680      	b.n	8001076 <__aeabi_fsub+0xf6>
 8001374:	2300      	movs	r3, #0
 8001376:	e67e      	b.n	8001076 <__aeabi_fsub+0xf6>
 8001378:	2020      	movs	r0, #32
 800137a:	4665      	mov	r5, ip
 800137c:	1b80      	subs	r0, r0, r6
 800137e:	4085      	lsls	r5, r0
 8001380:	4663      	mov	r3, ip
 8001382:	0028      	movs	r0, r5
 8001384:	40f3      	lsrs	r3, r6
 8001386:	1e45      	subs	r5, r0, #1
 8001388:	41a8      	sbcs	r0, r5
 800138a:	4303      	orrs	r3, r0
 800138c:	469c      	mov	ip, r3
 800138e:	0015      	movs	r5, r2
 8001390:	448c      	add	ip, r1
 8001392:	e76d      	b.n	8001270 <__aeabi_fsub+0x2f0>
 8001394:	2302      	movs	r3, #2
 8001396:	08cf      	lsrs	r7, r1, #3
 8001398:	e66d      	b.n	8001076 <__aeabi_fsub+0xf6>
 800139a:	1b0f      	subs	r7, r1, r4
 800139c:	017b      	lsls	r3, r7, #5
 800139e:	d528      	bpl.n	80013f2 <__aeabi_fsub+0x472>
 80013a0:	01bf      	lsls	r7, r7, #6
 80013a2:	09bf      	lsrs	r7, r7, #6
 80013a4:	0038      	movs	r0, r7
 80013a6:	f002 f96f 	bl	8003688 <__clzsi2>
 80013aa:	003b      	movs	r3, r7
 80013ac:	3805      	subs	r0, #5
 80013ae:	4083      	lsls	r3, r0
 80013b0:	0034      	movs	r4, r6
 80013b2:	2501      	movs	r5, #1
 80013b4:	e6ca      	b.n	800114c <__aeabi_fsub+0x1cc>
 80013b6:	2900      	cmp	r1, #0
 80013b8:	d100      	bne.n	80013bc <__aeabi_fsub+0x43c>
 80013ba:	e6b5      	b.n	8001128 <__aeabi_fsub+0x1a8>
 80013bc:	2401      	movs	r4, #1
 80013be:	0007      	movs	r7, r0
 80013c0:	4034      	ands	r4, r6
 80013c2:	e658      	b.n	8001076 <__aeabi_fsub+0xf6>
 80013c4:	4663      	mov	r3, ip
 80013c6:	2b00      	cmp	r3, #0
 80013c8:	d100      	bne.n	80013cc <__aeabi_fsub+0x44c>
 80013ca:	e6e9      	b.n	80011a0 <__aeabi_fsub+0x220>
 80013cc:	2900      	cmp	r1, #0
 80013ce:	d100      	bne.n	80013d2 <__aeabi_fsub+0x452>
 80013d0:	e6ea      	b.n	80011a8 <__aeabi_fsub+0x228>
 80013d2:	2380      	movs	r3, #128	@ 0x80
 80013d4:	03db      	lsls	r3, r3, #15
 80013d6:	429f      	cmp	r7, r3
 80013d8:	d200      	bcs.n	80013dc <__aeabi_fsub+0x45c>
 80013da:	e6e5      	b.n	80011a8 <__aeabi_fsub+0x228>
 80013dc:	4298      	cmp	r0, r3
 80013de:	d300      	bcc.n	80013e2 <__aeabi_fsub+0x462>
 80013e0:	e6e2      	b.n	80011a8 <__aeabi_fsub+0x228>
 80013e2:	0007      	movs	r7, r0
 80013e4:	e6e0      	b.n	80011a8 <__aeabi_fsub+0x228>
 80013e6:	2900      	cmp	r1, #0
 80013e8:	d100      	bne.n	80013ec <__aeabi_fsub+0x46c>
 80013ea:	e69e      	b.n	800112a <__aeabi_fsub+0x1aa>
 80013ec:	2300      	movs	r3, #0
 80013ee:	08cf      	lsrs	r7, r1, #3
 80013f0:	e641      	b.n	8001076 <__aeabi_fsub+0xf6>
 80013f2:	0034      	movs	r4, r6
 80013f4:	2301      	movs	r3, #1
 80013f6:	08ff      	lsrs	r7, r7, #3
 80013f8:	e63d      	b.n	8001076 <__aeabi_fsub+0xf6>
 80013fa:	2f00      	cmp	r7, #0
 80013fc:	d100      	bne.n	8001400 <__aeabi_fsub+0x480>
 80013fe:	e693      	b.n	8001128 <__aeabi_fsub+0x1a8>
 8001400:	2300      	movs	r3, #0
 8001402:	08ff      	lsrs	r7, r7, #3
 8001404:	e637      	b.n	8001076 <__aeabi_fsub+0xf6>
 8001406:	2300      	movs	r3, #0
 8001408:	08d7      	lsrs	r7, r2, #3
 800140a:	e634      	b.n	8001076 <__aeabi_fsub+0xf6>
 800140c:	2301      	movs	r3, #1
 800140e:	08cf      	lsrs	r7, r1, #3
 8001410:	e631      	b.n	8001076 <__aeabi_fsub+0xf6>
 8001412:	2280      	movs	r2, #128	@ 0x80
 8001414:	000b      	movs	r3, r1
 8001416:	04d2      	lsls	r2, r2, #19
 8001418:	2001      	movs	r0, #1
 800141a:	4013      	ands	r3, r2
 800141c:	4211      	tst	r1, r2
 800141e:	d000      	beq.n	8001422 <__aeabi_fsub+0x4a2>
 8001420:	e6ae      	b.n	8001180 <__aeabi_fsub+0x200>
 8001422:	08cf      	lsrs	r7, r1, #3
 8001424:	e627      	b.n	8001076 <__aeabi_fsub+0xf6>
 8001426:	2b00      	cmp	r3, #0
 8001428:	d100      	bne.n	800142c <__aeabi_fsub+0x4ac>
 800142a:	e75f      	b.n	80012ec <__aeabi_fsub+0x36c>
 800142c:	1b56      	subs	r6, r2, r5
 800142e:	2d00      	cmp	r5, #0
 8001430:	d101      	bne.n	8001436 <__aeabi_fsub+0x4b6>
 8001432:	0033      	movs	r3, r6
 8001434:	e6e7      	b.n	8001206 <__aeabi_fsub+0x286>
 8001436:	2380      	movs	r3, #128	@ 0x80
 8001438:	4660      	mov	r0, ip
 800143a:	04db      	lsls	r3, r3, #19
 800143c:	4318      	orrs	r0, r3
 800143e:	4684      	mov	ip, r0
 8001440:	e6eb      	b.n	800121a <__aeabi_fsub+0x29a>
 8001442:	46c0      	nop			@ (mov r8, r8)
 8001444:	7dffffff 	.word	0x7dffffff

08001448 <__aeabi_f2iz>:
 8001448:	0241      	lsls	r1, r0, #9
 800144a:	0042      	lsls	r2, r0, #1
 800144c:	0fc3      	lsrs	r3, r0, #31
 800144e:	0a49      	lsrs	r1, r1, #9
 8001450:	2000      	movs	r0, #0
 8001452:	0e12      	lsrs	r2, r2, #24
 8001454:	2a7e      	cmp	r2, #126	@ 0x7e
 8001456:	dd03      	ble.n	8001460 <__aeabi_f2iz+0x18>
 8001458:	2a9d      	cmp	r2, #157	@ 0x9d
 800145a:	dd02      	ble.n	8001462 <__aeabi_f2iz+0x1a>
 800145c:	4a09      	ldr	r2, [pc, #36]	@ (8001484 <__aeabi_f2iz+0x3c>)
 800145e:	1898      	adds	r0, r3, r2
 8001460:	4770      	bx	lr
 8001462:	2080      	movs	r0, #128	@ 0x80
 8001464:	0400      	lsls	r0, r0, #16
 8001466:	4301      	orrs	r1, r0
 8001468:	2a95      	cmp	r2, #149	@ 0x95
 800146a:	dc07      	bgt.n	800147c <__aeabi_f2iz+0x34>
 800146c:	2096      	movs	r0, #150	@ 0x96
 800146e:	1a82      	subs	r2, r0, r2
 8001470:	40d1      	lsrs	r1, r2
 8001472:	4248      	negs	r0, r1
 8001474:	2b00      	cmp	r3, #0
 8001476:	d1f3      	bne.n	8001460 <__aeabi_f2iz+0x18>
 8001478:	0008      	movs	r0, r1
 800147a:	e7f1      	b.n	8001460 <__aeabi_f2iz+0x18>
 800147c:	3a96      	subs	r2, #150	@ 0x96
 800147e:	4091      	lsls	r1, r2
 8001480:	e7f7      	b.n	8001472 <__aeabi_f2iz+0x2a>
 8001482:	46c0      	nop			@ (mov r8, r8)
 8001484:	7fffffff 	.word	0x7fffffff

08001488 <__aeabi_i2f>:
 8001488:	b570      	push	{r4, r5, r6, lr}
 800148a:	2800      	cmp	r0, #0
 800148c:	d012      	beq.n	80014b4 <__aeabi_i2f+0x2c>
 800148e:	17c3      	asrs	r3, r0, #31
 8001490:	18c5      	adds	r5, r0, r3
 8001492:	405d      	eors	r5, r3
 8001494:	0fc4      	lsrs	r4, r0, #31
 8001496:	0028      	movs	r0, r5
 8001498:	f002 f8f6 	bl	8003688 <__clzsi2>
 800149c:	239e      	movs	r3, #158	@ 0x9e
 800149e:	1a1b      	subs	r3, r3, r0
 80014a0:	2b96      	cmp	r3, #150	@ 0x96
 80014a2:	dc0f      	bgt.n	80014c4 <__aeabi_i2f+0x3c>
 80014a4:	2808      	cmp	r0, #8
 80014a6:	d038      	beq.n	800151a <__aeabi_i2f+0x92>
 80014a8:	3808      	subs	r0, #8
 80014aa:	4085      	lsls	r5, r0
 80014ac:	026d      	lsls	r5, r5, #9
 80014ae:	0a6d      	lsrs	r5, r5, #9
 80014b0:	b2d8      	uxtb	r0, r3
 80014b2:	e002      	b.n	80014ba <__aeabi_i2f+0x32>
 80014b4:	2400      	movs	r4, #0
 80014b6:	2000      	movs	r0, #0
 80014b8:	2500      	movs	r5, #0
 80014ba:	05c0      	lsls	r0, r0, #23
 80014bc:	4328      	orrs	r0, r5
 80014be:	07e4      	lsls	r4, r4, #31
 80014c0:	4320      	orrs	r0, r4
 80014c2:	bd70      	pop	{r4, r5, r6, pc}
 80014c4:	2b99      	cmp	r3, #153	@ 0x99
 80014c6:	dc14      	bgt.n	80014f2 <__aeabi_i2f+0x6a>
 80014c8:	1f42      	subs	r2, r0, #5
 80014ca:	4095      	lsls	r5, r2
 80014cc:	002a      	movs	r2, r5
 80014ce:	4915      	ldr	r1, [pc, #84]	@ (8001524 <__aeabi_i2f+0x9c>)
 80014d0:	4011      	ands	r1, r2
 80014d2:	0755      	lsls	r5, r2, #29
 80014d4:	d01c      	beq.n	8001510 <__aeabi_i2f+0x88>
 80014d6:	250f      	movs	r5, #15
 80014d8:	402a      	ands	r2, r5
 80014da:	2a04      	cmp	r2, #4
 80014dc:	d018      	beq.n	8001510 <__aeabi_i2f+0x88>
 80014de:	3104      	adds	r1, #4
 80014e0:	08ca      	lsrs	r2, r1, #3
 80014e2:	0149      	lsls	r1, r1, #5
 80014e4:	d515      	bpl.n	8001512 <__aeabi_i2f+0x8a>
 80014e6:	239f      	movs	r3, #159	@ 0x9f
 80014e8:	0252      	lsls	r2, r2, #9
 80014ea:	1a18      	subs	r0, r3, r0
 80014ec:	0a55      	lsrs	r5, r2, #9
 80014ee:	b2c0      	uxtb	r0, r0
 80014f0:	e7e3      	b.n	80014ba <__aeabi_i2f+0x32>
 80014f2:	2205      	movs	r2, #5
 80014f4:	0029      	movs	r1, r5
 80014f6:	1a12      	subs	r2, r2, r0
 80014f8:	40d1      	lsrs	r1, r2
 80014fa:	0002      	movs	r2, r0
 80014fc:	321b      	adds	r2, #27
 80014fe:	4095      	lsls	r5, r2
 8001500:	002a      	movs	r2, r5
 8001502:	1e55      	subs	r5, r2, #1
 8001504:	41aa      	sbcs	r2, r5
 8001506:	430a      	orrs	r2, r1
 8001508:	4906      	ldr	r1, [pc, #24]	@ (8001524 <__aeabi_i2f+0x9c>)
 800150a:	4011      	ands	r1, r2
 800150c:	0755      	lsls	r5, r2, #29
 800150e:	d1e2      	bne.n	80014d6 <__aeabi_i2f+0x4e>
 8001510:	08ca      	lsrs	r2, r1, #3
 8001512:	0252      	lsls	r2, r2, #9
 8001514:	0a55      	lsrs	r5, r2, #9
 8001516:	b2d8      	uxtb	r0, r3
 8001518:	e7cf      	b.n	80014ba <__aeabi_i2f+0x32>
 800151a:	026d      	lsls	r5, r5, #9
 800151c:	0a6d      	lsrs	r5, r5, #9
 800151e:	308e      	adds	r0, #142	@ 0x8e
 8001520:	e7cb      	b.n	80014ba <__aeabi_i2f+0x32>
 8001522:	46c0      	nop			@ (mov r8, r8)
 8001524:	fbffffff 	.word	0xfbffffff

08001528 <__aeabi_ui2f>:
 8001528:	b510      	push	{r4, lr}
 800152a:	1e04      	subs	r4, r0, #0
 800152c:	d00d      	beq.n	800154a <__aeabi_ui2f+0x22>
 800152e:	f002 f8ab 	bl	8003688 <__clzsi2>
 8001532:	239e      	movs	r3, #158	@ 0x9e
 8001534:	1a1b      	subs	r3, r3, r0
 8001536:	2b96      	cmp	r3, #150	@ 0x96
 8001538:	dc0c      	bgt.n	8001554 <__aeabi_ui2f+0x2c>
 800153a:	2808      	cmp	r0, #8
 800153c:	d034      	beq.n	80015a8 <__aeabi_ui2f+0x80>
 800153e:	3808      	subs	r0, #8
 8001540:	4084      	lsls	r4, r0
 8001542:	0264      	lsls	r4, r4, #9
 8001544:	0a64      	lsrs	r4, r4, #9
 8001546:	b2d8      	uxtb	r0, r3
 8001548:	e001      	b.n	800154e <__aeabi_ui2f+0x26>
 800154a:	2000      	movs	r0, #0
 800154c:	2400      	movs	r4, #0
 800154e:	05c0      	lsls	r0, r0, #23
 8001550:	4320      	orrs	r0, r4
 8001552:	bd10      	pop	{r4, pc}
 8001554:	2b99      	cmp	r3, #153	@ 0x99
 8001556:	dc13      	bgt.n	8001580 <__aeabi_ui2f+0x58>
 8001558:	1f42      	subs	r2, r0, #5
 800155a:	4094      	lsls	r4, r2
 800155c:	4a14      	ldr	r2, [pc, #80]	@ (80015b0 <__aeabi_ui2f+0x88>)
 800155e:	4022      	ands	r2, r4
 8001560:	0761      	lsls	r1, r4, #29
 8001562:	d01c      	beq.n	800159e <__aeabi_ui2f+0x76>
 8001564:	210f      	movs	r1, #15
 8001566:	4021      	ands	r1, r4
 8001568:	2904      	cmp	r1, #4
 800156a:	d018      	beq.n	800159e <__aeabi_ui2f+0x76>
 800156c:	3204      	adds	r2, #4
 800156e:	08d4      	lsrs	r4, r2, #3
 8001570:	0152      	lsls	r2, r2, #5
 8001572:	d515      	bpl.n	80015a0 <__aeabi_ui2f+0x78>
 8001574:	239f      	movs	r3, #159	@ 0x9f
 8001576:	0264      	lsls	r4, r4, #9
 8001578:	1a18      	subs	r0, r3, r0
 800157a:	0a64      	lsrs	r4, r4, #9
 800157c:	b2c0      	uxtb	r0, r0
 800157e:	e7e6      	b.n	800154e <__aeabi_ui2f+0x26>
 8001580:	0002      	movs	r2, r0
 8001582:	0021      	movs	r1, r4
 8001584:	321b      	adds	r2, #27
 8001586:	4091      	lsls	r1, r2
 8001588:	000a      	movs	r2, r1
 800158a:	1e51      	subs	r1, r2, #1
 800158c:	418a      	sbcs	r2, r1
 800158e:	2105      	movs	r1, #5
 8001590:	1a09      	subs	r1, r1, r0
 8001592:	40cc      	lsrs	r4, r1
 8001594:	4314      	orrs	r4, r2
 8001596:	4a06      	ldr	r2, [pc, #24]	@ (80015b0 <__aeabi_ui2f+0x88>)
 8001598:	4022      	ands	r2, r4
 800159a:	0761      	lsls	r1, r4, #29
 800159c:	d1e2      	bne.n	8001564 <__aeabi_ui2f+0x3c>
 800159e:	08d4      	lsrs	r4, r2, #3
 80015a0:	0264      	lsls	r4, r4, #9
 80015a2:	0a64      	lsrs	r4, r4, #9
 80015a4:	b2d8      	uxtb	r0, r3
 80015a6:	e7d2      	b.n	800154e <__aeabi_ui2f+0x26>
 80015a8:	0264      	lsls	r4, r4, #9
 80015aa:	0a64      	lsrs	r4, r4, #9
 80015ac:	308e      	adds	r0, #142	@ 0x8e
 80015ae:	e7ce      	b.n	800154e <__aeabi_ui2f+0x26>
 80015b0:	fbffffff 	.word	0xfbffffff

080015b4 <__aeabi_dadd>:
 80015b4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80015b6:	464f      	mov	r7, r9
 80015b8:	4646      	mov	r6, r8
 80015ba:	46d6      	mov	lr, sl
 80015bc:	b5c0      	push	{r6, r7, lr}
 80015be:	b082      	sub	sp, #8
 80015c0:	9000      	str	r0, [sp, #0]
 80015c2:	9101      	str	r1, [sp, #4]
 80015c4:	030e      	lsls	r6, r1, #12
 80015c6:	004c      	lsls	r4, r1, #1
 80015c8:	0fcd      	lsrs	r5, r1, #31
 80015ca:	0a71      	lsrs	r1, r6, #9
 80015cc:	9e00      	ldr	r6, [sp, #0]
 80015ce:	005f      	lsls	r7, r3, #1
 80015d0:	0f76      	lsrs	r6, r6, #29
 80015d2:	430e      	orrs	r6, r1
 80015d4:	9900      	ldr	r1, [sp, #0]
 80015d6:	9200      	str	r2, [sp, #0]
 80015d8:	9301      	str	r3, [sp, #4]
 80015da:	00c9      	lsls	r1, r1, #3
 80015dc:	4689      	mov	r9, r1
 80015de:	0319      	lsls	r1, r3, #12
 80015e0:	0d7b      	lsrs	r3, r7, #21
 80015e2:	4698      	mov	r8, r3
 80015e4:	9b01      	ldr	r3, [sp, #4]
 80015e6:	0a49      	lsrs	r1, r1, #9
 80015e8:	0fdb      	lsrs	r3, r3, #31
 80015ea:	469c      	mov	ip, r3
 80015ec:	9b00      	ldr	r3, [sp, #0]
 80015ee:	9a00      	ldr	r2, [sp, #0]
 80015f0:	0f5b      	lsrs	r3, r3, #29
 80015f2:	430b      	orrs	r3, r1
 80015f4:	4641      	mov	r1, r8
 80015f6:	0d64      	lsrs	r4, r4, #21
 80015f8:	00d2      	lsls	r2, r2, #3
 80015fa:	1a61      	subs	r1, r4, r1
 80015fc:	4565      	cmp	r5, ip
 80015fe:	d100      	bne.n	8001602 <__aeabi_dadd+0x4e>
 8001600:	e0a6      	b.n	8001750 <__aeabi_dadd+0x19c>
 8001602:	2900      	cmp	r1, #0
 8001604:	dd72      	ble.n	80016ec <__aeabi_dadd+0x138>
 8001606:	4647      	mov	r7, r8
 8001608:	2f00      	cmp	r7, #0
 800160a:	d100      	bne.n	800160e <__aeabi_dadd+0x5a>
 800160c:	e0dd      	b.n	80017ca <__aeabi_dadd+0x216>
 800160e:	4fcc      	ldr	r7, [pc, #816]	@ (8001940 <__aeabi_dadd+0x38c>)
 8001610:	42bc      	cmp	r4, r7
 8001612:	d100      	bne.n	8001616 <__aeabi_dadd+0x62>
 8001614:	e19a      	b.n	800194c <__aeabi_dadd+0x398>
 8001616:	2701      	movs	r7, #1
 8001618:	2938      	cmp	r1, #56	@ 0x38
 800161a:	dc17      	bgt.n	800164c <__aeabi_dadd+0x98>
 800161c:	2780      	movs	r7, #128	@ 0x80
 800161e:	043f      	lsls	r7, r7, #16
 8001620:	433b      	orrs	r3, r7
 8001622:	291f      	cmp	r1, #31
 8001624:	dd00      	ble.n	8001628 <__aeabi_dadd+0x74>
 8001626:	e1dd      	b.n	80019e4 <__aeabi_dadd+0x430>
 8001628:	2720      	movs	r7, #32
 800162a:	1a78      	subs	r0, r7, r1
 800162c:	001f      	movs	r7, r3
 800162e:	4087      	lsls	r7, r0
 8001630:	46ba      	mov	sl, r7
 8001632:	0017      	movs	r7, r2
 8001634:	40cf      	lsrs	r7, r1
 8001636:	4684      	mov	ip, r0
 8001638:	0038      	movs	r0, r7
 800163a:	4657      	mov	r7, sl
 800163c:	4307      	orrs	r7, r0
 800163e:	4660      	mov	r0, ip
 8001640:	4082      	lsls	r2, r0
 8001642:	40cb      	lsrs	r3, r1
 8001644:	1e50      	subs	r0, r2, #1
 8001646:	4182      	sbcs	r2, r0
 8001648:	1af6      	subs	r6, r6, r3
 800164a:	4317      	orrs	r7, r2
 800164c:	464b      	mov	r3, r9
 800164e:	1bdf      	subs	r7, r3, r7
 8001650:	45b9      	cmp	r9, r7
 8001652:	4180      	sbcs	r0, r0
 8001654:	4240      	negs	r0, r0
 8001656:	1a36      	subs	r6, r6, r0
 8001658:	0233      	lsls	r3, r6, #8
 800165a:	d400      	bmi.n	800165e <__aeabi_dadd+0xaa>
 800165c:	e0ff      	b.n	800185e <__aeabi_dadd+0x2aa>
 800165e:	0276      	lsls	r6, r6, #9
 8001660:	0a76      	lsrs	r6, r6, #9
 8001662:	2e00      	cmp	r6, #0
 8001664:	d100      	bne.n	8001668 <__aeabi_dadd+0xb4>
 8001666:	e13c      	b.n	80018e2 <__aeabi_dadd+0x32e>
 8001668:	0030      	movs	r0, r6
 800166a:	f002 f80d 	bl	8003688 <__clzsi2>
 800166e:	0003      	movs	r3, r0
 8001670:	3b08      	subs	r3, #8
 8001672:	2120      	movs	r1, #32
 8001674:	0038      	movs	r0, r7
 8001676:	1aca      	subs	r2, r1, r3
 8001678:	40d0      	lsrs	r0, r2
 800167a:	409e      	lsls	r6, r3
 800167c:	0002      	movs	r2, r0
 800167e:	409f      	lsls	r7, r3
 8001680:	4332      	orrs	r2, r6
 8001682:	429c      	cmp	r4, r3
 8001684:	dd00      	ble.n	8001688 <__aeabi_dadd+0xd4>
 8001686:	e1a6      	b.n	80019d6 <__aeabi_dadd+0x422>
 8001688:	1b18      	subs	r0, r3, r4
 800168a:	3001      	adds	r0, #1
 800168c:	1a09      	subs	r1, r1, r0
 800168e:	003e      	movs	r6, r7
 8001690:	408f      	lsls	r7, r1
 8001692:	40c6      	lsrs	r6, r0
 8001694:	1e7b      	subs	r3, r7, #1
 8001696:	419f      	sbcs	r7, r3
 8001698:	0013      	movs	r3, r2
 800169a:	408b      	lsls	r3, r1
 800169c:	4337      	orrs	r7, r6
 800169e:	431f      	orrs	r7, r3
 80016a0:	40c2      	lsrs	r2, r0
 80016a2:	003b      	movs	r3, r7
 80016a4:	0016      	movs	r6, r2
 80016a6:	2400      	movs	r4, #0
 80016a8:	4313      	orrs	r3, r2
 80016aa:	d100      	bne.n	80016ae <__aeabi_dadd+0xfa>
 80016ac:	e1df      	b.n	8001a6e <__aeabi_dadd+0x4ba>
 80016ae:	077b      	lsls	r3, r7, #29
 80016b0:	d100      	bne.n	80016b4 <__aeabi_dadd+0x100>
 80016b2:	e332      	b.n	8001d1a <__aeabi_dadd+0x766>
 80016b4:	230f      	movs	r3, #15
 80016b6:	003a      	movs	r2, r7
 80016b8:	403b      	ands	r3, r7
 80016ba:	2b04      	cmp	r3, #4
 80016bc:	d004      	beq.n	80016c8 <__aeabi_dadd+0x114>
 80016be:	1d3a      	adds	r2, r7, #4
 80016c0:	42ba      	cmp	r2, r7
 80016c2:	41bf      	sbcs	r7, r7
 80016c4:	427f      	negs	r7, r7
 80016c6:	19f6      	adds	r6, r6, r7
 80016c8:	0233      	lsls	r3, r6, #8
 80016ca:	d400      	bmi.n	80016ce <__aeabi_dadd+0x11a>
 80016cc:	e323      	b.n	8001d16 <__aeabi_dadd+0x762>
 80016ce:	4b9c      	ldr	r3, [pc, #624]	@ (8001940 <__aeabi_dadd+0x38c>)
 80016d0:	3401      	adds	r4, #1
 80016d2:	429c      	cmp	r4, r3
 80016d4:	d100      	bne.n	80016d8 <__aeabi_dadd+0x124>
 80016d6:	e0b4      	b.n	8001842 <__aeabi_dadd+0x28e>
 80016d8:	4b9a      	ldr	r3, [pc, #616]	@ (8001944 <__aeabi_dadd+0x390>)
 80016da:	0564      	lsls	r4, r4, #21
 80016dc:	401e      	ands	r6, r3
 80016de:	0d64      	lsrs	r4, r4, #21
 80016e0:	0777      	lsls	r7, r6, #29
 80016e2:	08d2      	lsrs	r2, r2, #3
 80016e4:	0276      	lsls	r6, r6, #9
 80016e6:	4317      	orrs	r7, r2
 80016e8:	0b36      	lsrs	r6, r6, #12
 80016ea:	e0ac      	b.n	8001846 <__aeabi_dadd+0x292>
 80016ec:	2900      	cmp	r1, #0
 80016ee:	d100      	bne.n	80016f2 <__aeabi_dadd+0x13e>
 80016f0:	e07e      	b.n	80017f0 <__aeabi_dadd+0x23c>
 80016f2:	4641      	mov	r1, r8
 80016f4:	1b09      	subs	r1, r1, r4
 80016f6:	2c00      	cmp	r4, #0
 80016f8:	d000      	beq.n	80016fc <__aeabi_dadd+0x148>
 80016fa:	e160      	b.n	80019be <__aeabi_dadd+0x40a>
 80016fc:	0034      	movs	r4, r6
 80016fe:	4648      	mov	r0, r9
 8001700:	4304      	orrs	r4, r0
 8001702:	d100      	bne.n	8001706 <__aeabi_dadd+0x152>
 8001704:	e1c9      	b.n	8001a9a <__aeabi_dadd+0x4e6>
 8001706:	1e4c      	subs	r4, r1, #1
 8001708:	2901      	cmp	r1, #1
 800170a:	d100      	bne.n	800170e <__aeabi_dadd+0x15a>
 800170c:	e22e      	b.n	8001b6c <__aeabi_dadd+0x5b8>
 800170e:	4d8c      	ldr	r5, [pc, #560]	@ (8001940 <__aeabi_dadd+0x38c>)
 8001710:	42a9      	cmp	r1, r5
 8001712:	d100      	bne.n	8001716 <__aeabi_dadd+0x162>
 8001714:	e224      	b.n	8001b60 <__aeabi_dadd+0x5ac>
 8001716:	2701      	movs	r7, #1
 8001718:	2c38      	cmp	r4, #56	@ 0x38
 800171a:	dc11      	bgt.n	8001740 <__aeabi_dadd+0x18c>
 800171c:	0021      	movs	r1, r4
 800171e:	291f      	cmp	r1, #31
 8001720:	dd00      	ble.n	8001724 <__aeabi_dadd+0x170>
 8001722:	e20b      	b.n	8001b3c <__aeabi_dadd+0x588>
 8001724:	2420      	movs	r4, #32
 8001726:	0037      	movs	r7, r6
 8001728:	4648      	mov	r0, r9
 800172a:	1a64      	subs	r4, r4, r1
 800172c:	40a7      	lsls	r7, r4
 800172e:	40c8      	lsrs	r0, r1
 8001730:	4307      	orrs	r7, r0
 8001732:	4648      	mov	r0, r9
 8001734:	40a0      	lsls	r0, r4
 8001736:	40ce      	lsrs	r6, r1
 8001738:	1e44      	subs	r4, r0, #1
 800173a:	41a0      	sbcs	r0, r4
 800173c:	1b9b      	subs	r3, r3, r6
 800173e:	4307      	orrs	r7, r0
 8001740:	1bd7      	subs	r7, r2, r7
 8001742:	42ba      	cmp	r2, r7
 8001744:	4192      	sbcs	r2, r2
 8001746:	4252      	negs	r2, r2
 8001748:	4665      	mov	r5, ip
 800174a:	4644      	mov	r4, r8
 800174c:	1a9e      	subs	r6, r3, r2
 800174e:	e783      	b.n	8001658 <__aeabi_dadd+0xa4>
 8001750:	2900      	cmp	r1, #0
 8001752:	dc00      	bgt.n	8001756 <__aeabi_dadd+0x1a2>
 8001754:	e09c      	b.n	8001890 <__aeabi_dadd+0x2dc>
 8001756:	4647      	mov	r7, r8
 8001758:	2f00      	cmp	r7, #0
 800175a:	d167      	bne.n	800182c <__aeabi_dadd+0x278>
 800175c:	001f      	movs	r7, r3
 800175e:	4317      	orrs	r7, r2
 8001760:	d100      	bne.n	8001764 <__aeabi_dadd+0x1b0>
 8001762:	e0e4      	b.n	800192e <__aeabi_dadd+0x37a>
 8001764:	1e48      	subs	r0, r1, #1
 8001766:	2901      	cmp	r1, #1
 8001768:	d100      	bne.n	800176c <__aeabi_dadd+0x1b8>
 800176a:	e19b      	b.n	8001aa4 <__aeabi_dadd+0x4f0>
 800176c:	4f74      	ldr	r7, [pc, #464]	@ (8001940 <__aeabi_dadd+0x38c>)
 800176e:	42b9      	cmp	r1, r7
 8001770:	d100      	bne.n	8001774 <__aeabi_dadd+0x1c0>
 8001772:	e0eb      	b.n	800194c <__aeabi_dadd+0x398>
 8001774:	2701      	movs	r7, #1
 8001776:	0001      	movs	r1, r0
 8001778:	2838      	cmp	r0, #56	@ 0x38
 800177a:	dc11      	bgt.n	80017a0 <__aeabi_dadd+0x1ec>
 800177c:	291f      	cmp	r1, #31
 800177e:	dd00      	ble.n	8001782 <__aeabi_dadd+0x1ce>
 8001780:	e1c7      	b.n	8001b12 <__aeabi_dadd+0x55e>
 8001782:	2720      	movs	r7, #32
 8001784:	1a78      	subs	r0, r7, r1
 8001786:	001f      	movs	r7, r3
 8001788:	4684      	mov	ip, r0
 800178a:	4087      	lsls	r7, r0
 800178c:	0010      	movs	r0, r2
 800178e:	40c8      	lsrs	r0, r1
 8001790:	4307      	orrs	r7, r0
 8001792:	4660      	mov	r0, ip
 8001794:	4082      	lsls	r2, r0
 8001796:	40cb      	lsrs	r3, r1
 8001798:	1e50      	subs	r0, r2, #1
 800179a:	4182      	sbcs	r2, r0
 800179c:	18f6      	adds	r6, r6, r3
 800179e:	4317      	orrs	r7, r2
 80017a0:	444f      	add	r7, r9
 80017a2:	454f      	cmp	r7, r9
 80017a4:	4180      	sbcs	r0, r0
 80017a6:	4240      	negs	r0, r0
 80017a8:	1836      	adds	r6, r6, r0
 80017aa:	0233      	lsls	r3, r6, #8
 80017ac:	d557      	bpl.n	800185e <__aeabi_dadd+0x2aa>
 80017ae:	4b64      	ldr	r3, [pc, #400]	@ (8001940 <__aeabi_dadd+0x38c>)
 80017b0:	3401      	adds	r4, #1
 80017b2:	429c      	cmp	r4, r3
 80017b4:	d045      	beq.n	8001842 <__aeabi_dadd+0x28e>
 80017b6:	2101      	movs	r1, #1
 80017b8:	4b62      	ldr	r3, [pc, #392]	@ (8001944 <__aeabi_dadd+0x390>)
 80017ba:	087a      	lsrs	r2, r7, #1
 80017bc:	401e      	ands	r6, r3
 80017be:	4039      	ands	r1, r7
 80017c0:	430a      	orrs	r2, r1
 80017c2:	07f7      	lsls	r7, r6, #31
 80017c4:	4317      	orrs	r7, r2
 80017c6:	0876      	lsrs	r6, r6, #1
 80017c8:	e771      	b.n	80016ae <__aeabi_dadd+0xfa>
 80017ca:	001f      	movs	r7, r3
 80017cc:	4317      	orrs	r7, r2
 80017ce:	d100      	bne.n	80017d2 <__aeabi_dadd+0x21e>
 80017d0:	e0ad      	b.n	800192e <__aeabi_dadd+0x37a>
 80017d2:	1e4f      	subs	r7, r1, #1
 80017d4:	46bc      	mov	ip, r7
 80017d6:	2901      	cmp	r1, #1
 80017d8:	d100      	bne.n	80017dc <__aeabi_dadd+0x228>
 80017da:	e182      	b.n	8001ae2 <__aeabi_dadd+0x52e>
 80017dc:	4f58      	ldr	r7, [pc, #352]	@ (8001940 <__aeabi_dadd+0x38c>)
 80017de:	42b9      	cmp	r1, r7
 80017e0:	d100      	bne.n	80017e4 <__aeabi_dadd+0x230>
 80017e2:	e190      	b.n	8001b06 <__aeabi_dadd+0x552>
 80017e4:	4661      	mov	r1, ip
 80017e6:	2701      	movs	r7, #1
 80017e8:	2938      	cmp	r1, #56	@ 0x38
 80017ea:	dd00      	ble.n	80017ee <__aeabi_dadd+0x23a>
 80017ec:	e72e      	b.n	800164c <__aeabi_dadd+0x98>
 80017ee:	e718      	b.n	8001622 <__aeabi_dadd+0x6e>
 80017f0:	4f55      	ldr	r7, [pc, #340]	@ (8001948 <__aeabi_dadd+0x394>)
 80017f2:	1c61      	adds	r1, r4, #1
 80017f4:	4239      	tst	r1, r7
 80017f6:	d000      	beq.n	80017fa <__aeabi_dadd+0x246>
 80017f8:	e0d0      	b.n	800199c <__aeabi_dadd+0x3e8>
 80017fa:	0031      	movs	r1, r6
 80017fc:	4648      	mov	r0, r9
 80017fe:	001f      	movs	r7, r3
 8001800:	4301      	orrs	r1, r0
 8001802:	4317      	orrs	r7, r2
 8001804:	2c00      	cmp	r4, #0
 8001806:	d000      	beq.n	800180a <__aeabi_dadd+0x256>
 8001808:	e13d      	b.n	8001a86 <__aeabi_dadd+0x4d2>
 800180a:	2900      	cmp	r1, #0
 800180c:	d100      	bne.n	8001810 <__aeabi_dadd+0x25c>
 800180e:	e1bc      	b.n	8001b8a <__aeabi_dadd+0x5d6>
 8001810:	2f00      	cmp	r7, #0
 8001812:	d000      	beq.n	8001816 <__aeabi_dadd+0x262>
 8001814:	e1bf      	b.n	8001b96 <__aeabi_dadd+0x5e2>
 8001816:	464b      	mov	r3, r9
 8001818:	2100      	movs	r1, #0
 800181a:	08d8      	lsrs	r0, r3, #3
 800181c:	0777      	lsls	r7, r6, #29
 800181e:	4307      	orrs	r7, r0
 8001820:	08f0      	lsrs	r0, r6, #3
 8001822:	0306      	lsls	r6, r0, #12
 8001824:	054c      	lsls	r4, r1, #21
 8001826:	0b36      	lsrs	r6, r6, #12
 8001828:	0d64      	lsrs	r4, r4, #21
 800182a:	e00c      	b.n	8001846 <__aeabi_dadd+0x292>
 800182c:	4f44      	ldr	r7, [pc, #272]	@ (8001940 <__aeabi_dadd+0x38c>)
 800182e:	42bc      	cmp	r4, r7
 8001830:	d100      	bne.n	8001834 <__aeabi_dadd+0x280>
 8001832:	e08b      	b.n	800194c <__aeabi_dadd+0x398>
 8001834:	2701      	movs	r7, #1
 8001836:	2938      	cmp	r1, #56	@ 0x38
 8001838:	dcb2      	bgt.n	80017a0 <__aeabi_dadd+0x1ec>
 800183a:	2780      	movs	r7, #128	@ 0x80
 800183c:	043f      	lsls	r7, r7, #16
 800183e:	433b      	orrs	r3, r7
 8001840:	e79c      	b.n	800177c <__aeabi_dadd+0x1c8>
 8001842:	2600      	movs	r6, #0
 8001844:	2700      	movs	r7, #0
 8001846:	0524      	lsls	r4, r4, #20
 8001848:	4334      	orrs	r4, r6
 800184a:	07ed      	lsls	r5, r5, #31
 800184c:	432c      	orrs	r4, r5
 800184e:	0038      	movs	r0, r7
 8001850:	0021      	movs	r1, r4
 8001852:	b002      	add	sp, #8
 8001854:	bce0      	pop	{r5, r6, r7}
 8001856:	46ba      	mov	sl, r7
 8001858:	46b1      	mov	r9, r6
 800185a:	46a8      	mov	r8, r5
 800185c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800185e:	077b      	lsls	r3, r7, #29
 8001860:	d004      	beq.n	800186c <__aeabi_dadd+0x2b8>
 8001862:	230f      	movs	r3, #15
 8001864:	403b      	ands	r3, r7
 8001866:	2b04      	cmp	r3, #4
 8001868:	d000      	beq.n	800186c <__aeabi_dadd+0x2b8>
 800186a:	e728      	b.n	80016be <__aeabi_dadd+0x10a>
 800186c:	08f8      	lsrs	r0, r7, #3
 800186e:	4b34      	ldr	r3, [pc, #208]	@ (8001940 <__aeabi_dadd+0x38c>)
 8001870:	0777      	lsls	r7, r6, #29
 8001872:	4307      	orrs	r7, r0
 8001874:	08f0      	lsrs	r0, r6, #3
 8001876:	429c      	cmp	r4, r3
 8001878:	d000      	beq.n	800187c <__aeabi_dadd+0x2c8>
 800187a:	e24a      	b.n	8001d12 <__aeabi_dadd+0x75e>
 800187c:	003b      	movs	r3, r7
 800187e:	4303      	orrs	r3, r0
 8001880:	d059      	beq.n	8001936 <__aeabi_dadd+0x382>
 8001882:	2680      	movs	r6, #128	@ 0x80
 8001884:	0336      	lsls	r6, r6, #12
 8001886:	4306      	orrs	r6, r0
 8001888:	0336      	lsls	r6, r6, #12
 800188a:	4c2d      	ldr	r4, [pc, #180]	@ (8001940 <__aeabi_dadd+0x38c>)
 800188c:	0b36      	lsrs	r6, r6, #12
 800188e:	e7da      	b.n	8001846 <__aeabi_dadd+0x292>
 8001890:	2900      	cmp	r1, #0
 8001892:	d061      	beq.n	8001958 <__aeabi_dadd+0x3a4>
 8001894:	4641      	mov	r1, r8
 8001896:	1b09      	subs	r1, r1, r4
 8001898:	2c00      	cmp	r4, #0
 800189a:	d100      	bne.n	800189e <__aeabi_dadd+0x2ea>
 800189c:	e0b9      	b.n	8001a12 <__aeabi_dadd+0x45e>
 800189e:	4c28      	ldr	r4, [pc, #160]	@ (8001940 <__aeabi_dadd+0x38c>)
 80018a0:	45a0      	cmp	r8, r4
 80018a2:	d100      	bne.n	80018a6 <__aeabi_dadd+0x2f2>
 80018a4:	e1a5      	b.n	8001bf2 <__aeabi_dadd+0x63e>
 80018a6:	2701      	movs	r7, #1
 80018a8:	2938      	cmp	r1, #56	@ 0x38
 80018aa:	dc13      	bgt.n	80018d4 <__aeabi_dadd+0x320>
 80018ac:	2480      	movs	r4, #128	@ 0x80
 80018ae:	0424      	lsls	r4, r4, #16
 80018b0:	4326      	orrs	r6, r4
 80018b2:	291f      	cmp	r1, #31
 80018b4:	dd00      	ble.n	80018b8 <__aeabi_dadd+0x304>
 80018b6:	e1c8      	b.n	8001c4a <__aeabi_dadd+0x696>
 80018b8:	2420      	movs	r4, #32
 80018ba:	0037      	movs	r7, r6
 80018bc:	4648      	mov	r0, r9
 80018be:	1a64      	subs	r4, r4, r1
 80018c0:	40a7      	lsls	r7, r4
 80018c2:	40c8      	lsrs	r0, r1
 80018c4:	4307      	orrs	r7, r0
 80018c6:	4648      	mov	r0, r9
 80018c8:	40a0      	lsls	r0, r4
 80018ca:	40ce      	lsrs	r6, r1
 80018cc:	1e44      	subs	r4, r0, #1
 80018ce:	41a0      	sbcs	r0, r4
 80018d0:	199b      	adds	r3, r3, r6
 80018d2:	4307      	orrs	r7, r0
 80018d4:	18bf      	adds	r7, r7, r2
 80018d6:	4297      	cmp	r7, r2
 80018d8:	4192      	sbcs	r2, r2
 80018da:	4252      	negs	r2, r2
 80018dc:	4644      	mov	r4, r8
 80018de:	18d6      	adds	r6, r2, r3
 80018e0:	e763      	b.n	80017aa <__aeabi_dadd+0x1f6>
 80018e2:	0038      	movs	r0, r7
 80018e4:	f001 fed0 	bl	8003688 <__clzsi2>
 80018e8:	0003      	movs	r3, r0
 80018ea:	3318      	adds	r3, #24
 80018ec:	2b1f      	cmp	r3, #31
 80018ee:	dc00      	bgt.n	80018f2 <__aeabi_dadd+0x33e>
 80018f0:	e6bf      	b.n	8001672 <__aeabi_dadd+0xbe>
 80018f2:	003a      	movs	r2, r7
 80018f4:	3808      	subs	r0, #8
 80018f6:	4082      	lsls	r2, r0
 80018f8:	429c      	cmp	r4, r3
 80018fa:	dd00      	ble.n	80018fe <__aeabi_dadd+0x34a>
 80018fc:	e083      	b.n	8001a06 <__aeabi_dadd+0x452>
 80018fe:	1b1b      	subs	r3, r3, r4
 8001900:	1c58      	adds	r0, r3, #1
 8001902:	281f      	cmp	r0, #31
 8001904:	dc00      	bgt.n	8001908 <__aeabi_dadd+0x354>
 8001906:	e1b4      	b.n	8001c72 <__aeabi_dadd+0x6be>
 8001908:	0017      	movs	r7, r2
 800190a:	3b1f      	subs	r3, #31
 800190c:	40df      	lsrs	r7, r3
 800190e:	2820      	cmp	r0, #32
 8001910:	d005      	beq.n	800191e <__aeabi_dadd+0x36a>
 8001912:	2340      	movs	r3, #64	@ 0x40
 8001914:	1a1b      	subs	r3, r3, r0
 8001916:	409a      	lsls	r2, r3
 8001918:	1e53      	subs	r3, r2, #1
 800191a:	419a      	sbcs	r2, r3
 800191c:	4317      	orrs	r7, r2
 800191e:	2400      	movs	r4, #0
 8001920:	2f00      	cmp	r7, #0
 8001922:	d00a      	beq.n	800193a <__aeabi_dadd+0x386>
 8001924:	077b      	lsls	r3, r7, #29
 8001926:	d000      	beq.n	800192a <__aeabi_dadd+0x376>
 8001928:	e6c4      	b.n	80016b4 <__aeabi_dadd+0x100>
 800192a:	0026      	movs	r6, r4
 800192c:	e79e      	b.n	800186c <__aeabi_dadd+0x2b8>
 800192e:	464b      	mov	r3, r9
 8001930:	000c      	movs	r4, r1
 8001932:	08d8      	lsrs	r0, r3, #3
 8001934:	e79b      	b.n	800186e <__aeabi_dadd+0x2ba>
 8001936:	2700      	movs	r7, #0
 8001938:	4c01      	ldr	r4, [pc, #4]	@ (8001940 <__aeabi_dadd+0x38c>)
 800193a:	2600      	movs	r6, #0
 800193c:	e783      	b.n	8001846 <__aeabi_dadd+0x292>
 800193e:	46c0      	nop			@ (mov r8, r8)
 8001940:	000007ff 	.word	0x000007ff
 8001944:	ff7fffff 	.word	0xff7fffff
 8001948:	000007fe 	.word	0x000007fe
 800194c:	464b      	mov	r3, r9
 800194e:	0777      	lsls	r7, r6, #29
 8001950:	08d8      	lsrs	r0, r3, #3
 8001952:	4307      	orrs	r7, r0
 8001954:	08f0      	lsrs	r0, r6, #3
 8001956:	e791      	b.n	800187c <__aeabi_dadd+0x2c8>
 8001958:	4fcd      	ldr	r7, [pc, #820]	@ (8001c90 <__aeabi_dadd+0x6dc>)
 800195a:	1c61      	adds	r1, r4, #1
 800195c:	4239      	tst	r1, r7
 800195e:	d16b      	bne.n	8001a38 <__aeabi_dadd+0x484>
 8001960:	0031      	movs	r1, r6
 8001962:	4648      	mov	r0, r9
 8001964:	4301      	orrs	r1, r0
 8001966:	2c00      	cmp	r4, #0
 8001968:	d000      	beq.n	800196c <__aeabi_dadd+0x3b8>
 800196a:	e14b      	b.n	8001c04 <__aeabi_dadd+0x650>
 800196c:	001f      	movs	r7, r3
 800196e:	4317      	orrs	r7, r2
 8001970:	2900      	cmp	r1, #0
 8001972:	d100      	bne.n	8001976 <__aeabi_dadd+0x3c2>
 8001974:	e181      	b.n	8001c7a <__aeabi_dadd+0x6c6>
 8001976:	2f00      	cmp	r7, #0
 8001978:	d100      	bne.n	800197c <__aeabi_dadd+0x3c8>
 800197a:	e74c      	b.n	8001816 <__aeabi_dadd+0x262>
 800197c:	444a      	add	r2, r9
 800197e:	454a      	cmp	r2, r9
 8001980:	4180      	sbcs	r0, r0
 8001982:	18f6      	adds	r6, r6, r3
 8001984:	4240      	negs	r0, r0
 8001986:	1836      	adds	r6, r6, r0
 8001988:	0233      	lsls	r3, r6, #8
 800198a:	d500      	bpl.n	800198e <__aeabi_dadd+0x3da>
 800198c:	e1b0      	b.n	8001cf0 <__aeabi_dadd+0x73c>
 800198e:	0017      	movs	r7, r2
 8001990:	4691      	mov	r9, r2
 8001992:	4337      	orrs	r7, r6
 8001994:	d000      	beq.n	8001998 <__aeabi_dadd+0x3e4>
 8001996:	e73e      	b.n	8001816 <__aeabi_dadd+0x262>
 8001998:	2600      	movs	r6, #0
 800199a:	e754      	b.n	8001846 <__aeabi_dadd+0x292>
 800199c:	4649      	mov	r1, r9
 800199e:	1a89      	subs	r1, r1, r2
 80019a0:	4688      	mov	r8, r1
 80019a2:	45c1      	cmp	r9, r8
 80019a4:	41bf      	sbcs	r7, r7
 80019a6:	1af1      	subs	r1, r6, r3
 80019a8:	427f      	negs	r7, r7
 80019aa:	1bc9      	subs	r1, r1, r7
 80019ac:	020f      	lsls	r7, r1, #8
 80019ae:	d461      	bmi.n	8001a74 <__aeabi_dadd+0x4c0>
 80019b0:	4647      	mov	r7, r8
 80019b2:	430f      	orrs	r7, r1
 80019b4:	d100      	bne.n	80019b8 <__aeabi_dadd+0x404>
 80019b6:	e0bd      	b.n	8001b34 <__aeabi_dadd+0x580>
 80019b8:	000e      	movs	r6, r1
 80019ba:	4647      	mov	r7, r8
 80019bc:	e651      	b.n	8001662 <__aeabi_dadd+0xae>
 80019be:	4cb5      	ldr	r4, [pc, #724]	@ (8001c94 <__aeabi_dadd+0x6e0>)
 80019c0:	45a0      	cmp	r8, r4
 80019c2:	d100      	bne.n	80019c6 <__aeabi_dadd+0x412>
 80019c4:	e100      	b.n	8001bc8 <__aeabi_dadd+0x614>
 80019c6:	2701      	movs	r7, #1
 80019c8:	2938      	cmp	r1, #56	@ 0x38
 80019ca:	dd00      	ble.n	80019ce <__aeabi_dadd+0x41a>
 80019cc:	e6b8      	b.n	8001740 <__aeabi_dadd+0x18c>
 80019ce:	2480      	movs	r4, #128	@ 0x80
 80019d0:	0424      	lsls	r4, r4, #16
 80019d2:	4326      	orrs	r6, r4
 80019d4:	e6a3      	b.n	800171e <__aeabi_dadd+0x16a>
 80019d6:	4eb0      	ldr	r6, [pc, #704]	@ (8001c98 <__aeabi_dadd+0x6e4>)
 80019d8:	1ae4      	subs	r4, r4, r3
 80019da:	4016      	ands	r6, r2
 80019dc:	077b      	lsls	r3, r7, #29
 80019de:	d000      	beq.n	80019e2 <__aeabi_dadd+0x42e>
 80019e0:	e73f      	b.n	8001862 <__aeabi_dadd+0x2ae>
 80019e2:	e743      	b.n	800186c <__aeabi_dadd+0x2b8>
 80019e4:	000f      	movs	r7, r1
 80019e6:	0018      	movs	r0, r3
 80019e8:	3f20      	subs	r7, #32
 80019ea:	40f8      	lsrs	r0, r7
 80019ec:	4684      	mov	ip, r0
 80019ee:	2920      	cmp	r1, #32
 80019f0:	d003      	beq.n	80019fa <__aeabi_dadd+0x446>
 80019f2:	2740      	movs	r7, #64	@ 0x40
 80019f4:	1a79      	subs	r1, r7, r1
 80019f6:	408b      	lsls	r3, r1
 80019f8:	431a      	orrs	r2, r3
 80019fa:	1e53      	subs	r3, r2, #1
 80019fc:	419a      	sbcs	r2, r3
 80019fe:	4663      	mov	r3, ip
 8001a00:	0017      	movs	r7, r2
 8001a02:	431f      	orrs	r7, r3
 8001a04:	e622      	b.n	800164c <__aeabi_dadd+0x98>
 8001a06:	48a4      	ldr	r0, [pc, #656]	@ (8001c98 <__aeabi_dadd+0x6e4>)
 8001a08:	1ae1      	subs	r1, r4, r3
 8001a0a:	4010      	ands	r0, r2
 8001a0c:	0747      	lsls	r7, r0, #29
 8001a0e:	08c0      	lsrs	r0, r0, #3
 8001a10:	e707      	b.n	8001822 <__aeabi_dadd+0x26e>
 8001a12:	0034      	movs	r4, r6
 8001a14:	4648      	mov	r0, r9
 8001a16:	4304      	orrs	r4, r0
 8001a18:	d100      	bne.n	8001a1c <__aeabi_dadd+0x468>
 8001a1a:	e0fa      	b.n	8001c12 <__aeabi_dadd+0x65e>
 8001a1c:	1e4c      	subs	r4, r1, #1
 8001a1e:	2901      	cmp	r1, #1
 8001a20:	d100      	bne.n	8001a24 <__aeabi_dadd+0x470>
 8001a22:	e0d7      	b.n	8001bd4 <__aeabi_dadd+0x620>
 8001a24:	4f9b      	ldr	r7, [pc, #620]	@ (8001c94 <__aeabi_dadd+0x6e0>)
 8001a26:	42b9      	cmp	r1, r7
 8001a28:	d100      	bne.n	8001a2c <__aeabi_dadd+0x478>
 8001a2a:	e0e2      	b.n	8001bf2 <__aeabi_dadd+0x63e>
 8001a2c:	2701      	movs	r7, #1
 8001a2e:	2c38      	cmp	r4, #56	@ 0x38
 8001a30:	dd00      	ble.n	8001a34 <__aeabi_dadd+0x480>
 8001a32:	e74f      	b.n	80018d4 <__aeabi_dadd+0x320>
 8001a34:	0021      	movs	r1, r4
 8001a36:	e73c      	b.n	80018b2 <__aeabi_dadd+0x2fe>
 8001a38:	4c96      	ldr	r4, [pc, #600]	@ (8001c94 <__aeabi_dadd+0x6e0>)
 8001a3a:	42a1      	cmp	r1, r4
 8001a3c:	d100      	bne.n	8001a40 <__aeabi_dadd+0x48c>
 8001a3e:	e0dd      	b.n	8001bfc <__aeabi_dadd+0x648>
 8001a40:	444a      	add	r2, r9
 8001a42:	454a      	cmp	r2, r9
 8001a44:	4180      	sbcs	r0, r0
 8001a46:	18f3      	adds	r3, r6, r3
 8001a48:	4240      	negs	r0, r0
 8001a4a:	1818      	adds	r0, r3, r0
 8001a4c:	07c7      	lsls	r7, r0, #31
 8001a4e:	0852      	lsrs	r2, r2, #1
 8001a50:	4317      	orrs	r7, r2
 8001a52:	0846      	lsrs	r6, r0, #1
 8001a54:	0752      	lsls	r2, r2, #29
 8001a56:	d005      	beq.n	8001a64 <__aeabi_dadd+0x4b0>
 8001a58:	220f      	movs	r2, #15
 8001a5a:	000c      	movs	r4, r1
 8001a5c:	403a      	ands	r2, r7
 8001a5e:	2a04      	cmp	r2, #4
 8001a60:	d000      	beq.n	8001a64 <__aeabi_dadd+0x4b0>
 8001a62:	e62c      	b.n	80016be <__aeabi_dadd+0x10a>
 8001a64:	0776      	lsls	r6, r6, #29
 8001a66:	08ff      	lsrs	r7, r7, #3
 8001a68:	4337      	orrs	r7, r6
 8001a6a:	0900      	lsrs	r0, r0, #4
 8001a6c:	e6d9      	b.n	8001822 <__aeabi_dadd+0x26e>
 8001a6e:	2700      	movs	r7, #0
 8001a70:	2600      	movs	r6, #0
 8001a72:	e6e8      	b.n	8001846 <__aeabi_dadd+0x292>
 8001a74:	4649      	mov	r1, r9
 8001a76:	1a57      	subs	r7, r2, r1
 8001a78:	42ba      	cmp	r2, r7
 8001a7a:	4192      	sbcs	r2, r2
 8001a7c:	1b9e      	subs	r6, r3, r6
 8001a7e:	4252      	negs	r2, r2
 8001a80:	4665      	mov	r5, ip
 8001a82:	1ab6      	subs	r6, r6, r2
 8001a84:	e5ed      	b.n	8001662 <__aeabi_dadd+0xae>
 8001a86:	2900      	cmp	r1, #0
 8001a88:	d000      	beq.n	8001a8c <__aeabi_dadd+0x4d8>
 8001a8a:	e0c6      	b.n	8001c1a <__aeabi_dadd+0x666>
 8001a8c:	2f00      	cmp	r7, #0
 8001a8e:	d167      	bne.n	8001b60 <__aeabi_dadd+0x5ac>
 8001a90:	2680      	movs	r6, #128	@ 0x80
 8001a92:	2500      	movs	r5, #0
 8001a94:	4c7f      	ldr	r4, [pc, #508]	@ (8001c94 <__aeabi_dadd+0x6e0>)
 8001a96:	0336      	lsls	r6, r6, #12
 8001a98:	e6d5      	b.n	8001846 <__aeabi_dadd+0x292>
 8001a9a:	4665      	mov	r5, ip
 8001a9c:	000c      	movs	r4, r1
 8001a9e:	001e      	movs	r6, r3
 8001aa0:	08d0      	lsrs	r0, r2, #3
 8001aa2:	e6e4      	b.n	800186e <__aeabi_dadd+0x2ba>
 8001aa4:	444a      	add	r2, r9
 8001aa6:	454a      	cmp	r2, r9
 8001aa8:	4180      	sbcs	r0, r0
 8001aaa:	18f3      	adds	r3, r6, r3
 8001aac:	4240      	negs	r0, r0
 8001aae:	1818      	adds	r0, r3, r0
 8001ab0:	0011      	movs	r1, r2
 8001ab2:	0203      	lsls	r3, r0, #8
 8001ab4:	d400      	bmi.n	8001ab8 <__aeabi_dadd+0x504>
 8001ab6:	e096      	b.n	8001be6 <__aeabi_dadd+0x632>
 8001ab8:	4b77      	ldr	r3, [pc, #476]	@ (8001c98 <__aeabi_dadd+0x6e4>)
 8001aba:	0849      	lsrs	r1, r1, #1
 8001abc:	4018      	ands	r0, r3
 8001abe:	07c3      	lsls	r3, r0, #31
 8001ac0:	430b      	orrs	r3, r1
 8001ac2:	0844      	lsrs	r4, r0, #1
 8001ac4:	0749      	lsls	r1, r1, #29
 8001ac6:	d100      	bne.n	8001aca <__aeabi_dadd+0x516>
 8001ac8:	e129      	b.n	8001d1e <__aeabi_dadd+0x76a>
 8001aca:	220f      	movs	r2, #15
 8001acc:	401a      	ands	r2, r3
 8001ace:	2a04      	cmp	r2, #4
 8001ad0:	d100      	bne.n	8001ad4 <__aeabi_dadd+0x520>
 8001ad2:	e0ea      	b.n	8001caa <__aeabi_dadd+0x6f6>
 8001ad4:	1d1f      	adds	r7, r3, #4
 8001ad6:	429f      	cmp	r7, r3
 8001ad8:	41b6      	sbcs	r6, r6
 8001ada:	4276      	negs	r6, r6
 8001adc:	1936      	adds	r6, r6, r4
 8001ade:	2402      	movs	r4, #2
 8001ae0:	e6c4      	b.n	800186c <__aeabi_dadd+0x2b8>
 8001ae2:	4649      	mov	r1, r9
 8001ae4:	1a8f      	subs	r7, r1, r2
 8001ae6:	45b9      	cmp	r9, r7
 8001ae8:	4180      	sbcs	r0, r0
 8001aea:	1af6      	subs	r6, r6, r3
 8001aec:	4240      	negs	r0, r0
 8001aee:	1a36      	subs	r6, r6, r0
 8001af0:	0233      	lsls	r3, r6, #8
 8001af2:	d406      	bmi.n	8001b02 <__aeabi_dadd+0x54e>
 8001af4:	0773      	lsls	r3, r6, #29
 8001af6:	08ff      	lsrs	r7, r7, #3
 8001af8:	2101      	movs	r1, #1
 8001afa:	431f      	orrs	r7, r3
 8001afc:	08f0      	lsrs	r0, r6, #3
 8001afe:	e690      	b.n	8001822 <__aeabi_dadd+0x26e>
 8001b00:	4665      	mov	r5, ip
 8001b02:	2401      	movs	r4, #1
 8001b04:	e5ab      	b.n	800165e <__aeabi_dadd+0xaa>
 8001b06:	464b      	mov	r3, r9
 8001b08:	0777      	lsls	r7, r6, #29
 8001b0a:	08d8      	lsrs	r0, r3, #3
 8001b0c:	4307      	orrs	r7, r0
 8001b0e:	08f0      	lsrs	r0, r6, #3
 8001b10:	e6b4      	b.n	800187c <__aeabi_dadd+0x2c8>
 8001b12:	000f      	movs	r7, r1
 8001b14:	0018      	movs	r0, r3
 8001b16:	3f20      	subs	r7, #32
 8001b18:	40f8      	lsrs	r0, r7
 8001b1a:	4684      	mov	ip, r0
 8001b1c:	2920      	cmp	r1, #32
 8001b1e:	d003      	beq.n	8001b28 <__aeabi_dadd+0x574>
 8001b20:	2740      	movs	r7, #64	@ 0x40
 8001b22:	1a79      	subs	r1, r7, r1
 8001b24:	408b      	lsls	r3, r1
 8001b26:	431a      	orrs	r2, r3
 8001b28:	1e53      	subs	r3, r2, #1
 8001b2a:	419a      	sbcs	r2, r3
 8001b2c:	4663      	mov	r3, ip
 8001b2e:	0017      	movs	r7, r2
 8001b30:	431f      	orrs	r7, r3
 8001b32:	e635      	b.n	80017a0 <__aeabi_dadd+0x1ec>
 8001b34:	2500      	movs	r5, #0
 8001b36:	2400      	movs	r4, #0
 8001b38:	2600      	movs	r6, #0
 8001b3a:	e684      	b.n	8001846 <__aeabi_dadd+0x292>
 8001b3c:	000c      	movs	r4, r1
 8001b3e:	0035      	movs	r5, r6
 8001b40:	3c20      	subs	r4, #32
 8001b42:	40e5      	lsrs	r5, r4
 8001b44:	2920      	cmp	r1, #32
 8001b46:	d005      	beq.n	8001b54 <__aeabi_dadd+0x5a0>
 8001b48:	2440      	movs	r4, #64	@ 0x40
 8001b4a:	1a61      	subs	r1, r4, r1
 8001b4c:	408e      	lsls	r6, r1
 8001b4e:	4649      	mov	r1, r9
 8001b50:	4331      	orrs	r1, r6
 8001b52:	4689      	mov	r9, r1
 8001b54:	4648      	mov	r0, r9
 8001b56:	1e41      	subs	r1, r0, #1
 8001b58:	4188      	sbcs	r0, r1
 8001b5a:	0007      	movs	r7, r0
 8001b5c:	432f      	orrs	r7, r5
 8001b5e:	e5ef      	b.n	8001740 <__aeabi_dadd+0x18c>
 8001b60:	08d2      	lsrs	r2, r2, #3
 8001b62:	075f      	lsls	r7, r3, #29
 8001b64:	4665      	mov	r5, ip
 8001b66:	4317      	orrs	r7, r2
 8001b68:	08d8      	lsrs	r0, r3, #3
 8001b6a:	e687      	b.n	800187c <__aeabi_dadd+0x2c8>
 8001b6c:	1a17      	subs	r7, r2, r0
 8001b6e:	42ba      	cmp	r2, r7
 8001b70:	4192      	sbcs	r2, r2
 8001b72:	1b9e      	subs	r6, r3, r6
 8001b74:	4252      	negs	r2, r2
 8001b76:	1ab6      	subs	r6, r6, r2
 8001b78:	0233      	lsls	r3, r6, #8
 8001b7a:	d4c1      	bmi.n	8001b00 <__aeabi_dadd+0x54c>
 8001b7c:	0773      	lsls	r3, r6, #29
 8001b7e:	08ff      	lsrs	r7, r7, #3
 8001b80:	4665      	mov	r5, ip
 8001b82:	2101      	movs	r1, #1
 8001b84:	431f      	orrs	r7, r3
 8001b86:	08f0      	lsrs	r0, r6, #3
 8001b88:	e64b      	b.n	8001822 <__aeabi_dadd+0x26e>
 8001b8a:	2f00      	cmp	r7, #0
 8001b8c:	d07b      	beq.n	8001c86 <__aeabi_dadd+0x6d2>
 8001b8e:	4665      	mov	r5, ip
 8001b90:	001e      	movs	r6, r3
 8001b92:	4691      	mov	r9, r2
 8001b94:	e63f      	b.n	8001816 <__aeabi_dadd+0x262>
 8001b96:	1a81      	subs	r1, r0, r2
 8001b98:	4688      	mov	r8, r1
 8001b9a:	45c1      	cmp	r9, r8
 8001b9c:	41a4      	sbcs	r4, r4
 8001b9e:	1af1      	subs	r1, r6, r3
 8001ba0:	4264      	negs	r4, r4
 8001ba2:	1b09      	subs	r1, r1, r4
 8001ba4:	2480      	movs	r4, #128	@ 0x80
 8001ba6:	0424      	lsls	r4, r4, #16
 8001ba8:	4221      	tst	r1, r4
 8001baa:	d077      	beq.n	8001c9c <__aeabi_dadd+0x6e8>
 8001bac:	1a10      	subs	r0, r2, r0
 8001bae:	4282      	cmp	r2, r0
 8001bb0:	4192      	sbcs	r2, r2
 8001bb2:	0007      	movs	r7, r0
 8001bb4:	1b9e      	subs	r6, r3, r6
 8001bb6:	4252      	negs	r2, r2
 8001bb8:	1ab6      	subs	r6, r6, r2
 8001bba:	4337      	orrs	r7, r6
 8001bbc:	d000      	beq.n	8001bc0 <__aeabi_dadd+0x60c>
 8001bbe:	e0a0      	b.n	8001d02 <__aeabi_dadd+0x74e>
 8001bc0:	4665      	mov	r5, ip
 8001bc2:	2400      	movs	r4, #0
 8001bc4:	2600      	movs	r6, #0
 8001bc6:	e63e      	b.n	8001846 <__aeabi_dadd+0x292>
 8001bc8:	075f      	lsls	r7, r3, #29
 8001bca:	08d2      	lsrs	r2, r2, #3
 8001bcc:	4665      	mov	r5, ip
 8001bce:	4317      	orrs	r7, r2
 8001bd0:	08d8      	lsrs	r0, r3, #3
 8001bd2:	e653      	b.n	800187c <__aeabi_dadd+0x2c8>
 8001bd4:	1881      	adds	r1, r0, r2
 8001bd6:	4291      	cmp	r1, r2
 8001bd8:	4192      	sbcs	r2, r2
 8001bda:	18f0      	adds	r0, r6, r3
 8001bdc:	4252      	negs	r2, r2
 8001bde:	1880      	adds	r0, r0, r2
 8001be0:	0203      	lsls	r3, r0, #8
 8001be2:	d500      	bpl.n	8001be6 <__aeabi_dadd+0x632>
 8001be4:	e768      	b.n	8001ab8 <__aeabi_dadd+0x504>
 8001be6:	0747      	lsls	r7, r0, #29
 8001be8:	08c9      	lsrs	r1, r1, #3
 8001bea:	430f      	orrs	r7, r1
 8001bec:	08c0      	lsrs	r0, r0, #3
 8001bee:	2101      	movs	r1, #1
 8001bf0:	e617      	b.n	8001822 <__aeabi_dadd+0x26e>
 8001bf2:	08d2      	lsrs	r2, r2, #3
 8001bf4:	075f      	lsls	r7, r3, #29
 8001bf6:	4317      	orrs	r7, r2
 8001bf8:	08d8      	lsrs	r0, r3, #3
 8001bfa:	e63f      	b.n	800187c <__aeabi_dadd+0x2c8>
 8001bfc:	000c      	movs	r4, r1
 8001bfe:	2600      	movs	r6, #0
 8001c00:	2700      	movs	r7, #0
 8001c02:	e620      	b.n	8001846 <__aeabi_dadd+0x292>
 8001c04:	2900      	cmp	r1, #0
 8001c06:	d156      	bne.n	8001cb6 <__aeabi_dadd+0x702>
 8001c08:	075f      	lsls	r7, r3, #29
 8001c0a:	08d2      	lsrs	r2, r2, #3
 8001c0c:	4317      	orrs	r7, r2
 8001c0e:	08d8      	lsrs	r0, r3, #3
 8001c10:	e634      	b.n	800187c <__aeabi_dadd+0x2c8>
 8001c12:	000c      	movs	r4, r1
 8001c14:	001e      	movs	r6, r3
 8001c16:	08d0      	lsrs	r0, r2, #3
 8001c18:	e629      	b.n	800186e <__aeabi_dadd+0x2ba>
 8001c1a:	08c1      	lsrs	r1, r0, #3
 8001c1c:	0770      	lsls	r0, r6, #29
 8001c1e:	4301      	orrs	r1, r0
 8001c20:	08f0      	lsrs	r0, r6, #3
 8001c22:	2f00      	cmp	r7, #0
 8001c24:	d062      	beq.n	8001cec <__aeabi_dadd+0x738>
 8001c26:	2480      	movs	r4, #128	@ 0x80
 8001c28:	0324      	lsls	r4, r4, #12
 8001c2a:	4220      	tst	r0, r4
 8001c2c:	d007      	beq.n	8001c3e <__aeabi_dadd+0x68a>
 8001c2e:	08de      	lsrs	r6, r3, #3
 8001c30:	4226      	tst	r6, r4
 8001c32:	d104      	bne.n	8001c3e <__aeabi_dadd+0x68a>
 8001c34:	4665      	mov	r5, ip
 8001c36:	0030      	movs	r0, r6
 8001c38:	08d1      	lsrs	r1, r2, #3
 8001c3a:	075b      	lsls	r3, r3, #29
 8001c3c:	4319      	orrs	r1, r3
 8001c3e:	0f4f      	lsrs	r7, r1, #29
 8001c40:	00c9      	lsls	r1, r1, #3
 8001c42:	08c9      	lsrs	r1, r1, #3
 8001c44:	077f      	lsls	r7, r7, #29
 8001c46:	430f      	orrs	r7, r1
 8001c48:	e618      	b.n	800187c <__aeabi_dadd+0x2c8>
 8001c4a:	000c      	movs	r4, r1
 8001c4c:	0030      	movs	r0, r6
 8001c4e:	3c20      	subs	r4, #32
 8001c50:	40e0      	lsrs	r0, r4
 8001c52:	4684      	mov	ip, r0
 8001c54:	2920      	cmp	r1, #32
 8001c56:	d005      	beq.n	8001c64 <__aeabi_dadd+0x6b0>
 8001c58:	2440      	movs	r4, #64	@ 0x40
 8001c5a:	1a61      	subs	r1, r4, r1
 8001c5c:	408e      	lsls	r6, r1
 8001c5e:	4649      	mov	r1, r9
 8001c60:	4331      	orrs	r1, r6
 8001c62:	4689      	mov	r9, r1
 8001c64:	4648      	mov	r0, r9
 8001c66:	1e41      	subs	r1, r0, #1
 8001c68:	4188      	sbcs	r0, r1
 8001c6a:	4661      	mov	r1, ip
 8001c6c:	0007      	movs	r7, r0
 8001c6e:	430f      	orrs	r7, r1
 8001c70:	e630      	b.n	80018d4 <__aeabi_dadd+0x320>
 8001c72:	2120      	movs	r1, #32
 8001c74:	2700      	movs	r7, #0
 8001c76:	1a09      	subs	r1, r1, r0
 8001c78:	e50e      	b.n	8001698 <__aeabi_dadd+0xe4>
 8001c7a:	001e      	movs	r6, r3
 8001c7c:	2f00      	cmp	r7, #0
 8001c7e:	d000      	beq.n	8001c82 <__aeabi_dadd+0x6ce>
 8001c80:	e522      	b.n	80016c8 <__aeabi_dadd+0x114>
 8001c82:	2400      	movs	r4, #0
 8001c84:	e758      	b.n	8001b38 <__aeabi_dadd+0x584>
 8001c86:	2500      	movs	r5, #0
 8001c88:	2400      	movs	r4, #0
 8001c8a:	2600      	movs	r6, #0
 8001c8c:	e5db      	b.n	8001846 <__aeabi_dadd+0x292>
 8001c8e:	46c0      	nop			@ (mov r8, r8)
 8001c90:	000007fe 	.word	0x000007fe
 8001c94:	000007ff 	.word	0x000007ff
 8001c98:	ff7fffff 	.word	0xff7fffff
 8001c9c:	4647      	mov	r7, r8
 8001c9e:	430f      	orrs	r7, r1
 8001ca0:	d100      	bne.n	8001ca4 <__aeabi_dadd+0x6f0>
 8001ca2:	e747      	b.n	8001b34 <__aeabi_dadd+0x580>
 8001ca4:	000e      	movs	r6, r1
 8001ca6:	46c1      	mov	r9, r8
 8001ca8:	e5b5      	b.n	8001816 <__aeabi_dadd+0x262>
 8001caa:	08df      	lsrs	r7, r3, #3
 8001cac:	0764      	lsls	r4, r4, #29
 8001cae:	2102      	movs	r1, #2
 8001cb0:	4327      	orrs	r7, r4
 8001cb2:	0900      	lsrs	r0, r0, #4
 8001cb4:	e5b5      	b.n	8001822 <__aeabi_dadd+0x26e>
 8001cb6:	0019      	movs	r1, r3
 8001cb8:	08c0      	lsrs	r0, r0, #3
 8001cba:	0777      	lsls	r7, r6, #29
 8001cbc:	4307      	orrs	r7, r0
 8001cbe:	4311      	orrs	r1, r2
 8001cc0:	08f0      	lsrs	r0, r6, #3
 8001cc2:	2900      	cmp	r1, #0
 8001cc4:	d100      	bne.n	8001cc8 <__aeabi_dadd+0x714>
 8001cc6:	e5d9      	b.n	800187c <__aeabi_dadd+0x2c8>
 8001cc8:	2180      	movs	r1, #128	@ 0x80
 8001cca:	0309      	lsls	r1, r1, #12
 8001ccc:	4208      	tst	r0, r1
 8001cce:	d007      	beq.n	8001ce0 <__aeabi_dadd+0x72c>
 8001cd0:	08dc      	lsrs	r4, r3, #3
 8001cd2:	420c      	tst	r4, r1
 8001cd4:	d104      	bne.n	8001ce0 <__aeabi_dadd+0x72c>
 8001cd6:	08d2      	lsrs	r2, r2, #3
 8001cd8:	075b      	lsls	r3, r3, #29
 8001cda:	431a      	orrs	r2, r3
 8001cdc:	0017      	movs	r7, r2
 8001cde:	0020      	movs	r0, r4
 8001ce0:	0f7b      	lsrs	r3, r7, #29
 8001ce2:	00ff      	lsls	r7, r7, #3
 8001ce4:	08ff      	lsrs	r7, r7, #3
 8001ce6:	075b      	lsls	r3, r3, #29
 8001ce8:	431f      	orrs	r7, r3
 8001cea:	e5c7      	b.n	800187c <__aeabi_dadd+0x2c8>
 8001cec:	000f      	movs	r7, r1
 8001cee:	e5c5      	b.n	800187c <__aeabi_dadd+0x2c8>
 8001cf0:	4b12      	ldr	r3, [pc, #72]	@ (8001d3c <__aeabi_dadd+0x788>)
 8001cf2:	08d2      	lsrs	r2, r2, #3
 8001cf4:	4033      	ands	r3, r6
 8001cf6:	075f      	lsls	r7, r3, #29
 8001cf8:	025b      	lsls	r3, r3, #9
 8001cfa:	2401      	movs	r4, #1
 8001cfc:	4317      	orrs	r7, r2
 8001cfe:	0b1e      	lsrs	r6, r3, #12
 8001d00:	e5a1      	b.n	8001846 <__aeabi_dadd+0x292>
 8001d02:	4226      	tst	r6, r4
 8001d04:	d012      	beq.n	8001d2c <__aeabi_dadd+0x778>
 8001d06:	4b0d      	ldr	r3, [pc, #52]	@ (8001d3c <__aeabi_dadd+0x788>)
 8001d08:	4665      	mov	r5, ip
 8001d0a:	0002      	movs	r2, r0
 8001d0c:	2401      	movs	r4, #1
 8001d0e:	401e      	ands	r6, r3
 8001d10:	e4e6      	b.n	80016e0 <__aeabi_dadd+0x12c>
 8001d12:	0021      	movs	r1, r4
 8001d14:	e585      	b.n	8001822 <__aeabi_dadd+0x26e>
 8001d16:	0017      	movs	r7, r2
 8001d18:	e5a8      	b.n	800186c <__aeabi_dadd+0x2b8>
 8001d1a:	003a      	movs	r2, r7
 8001d1c:	e4d4      	b.n	80016c8 <__aeabi_dadd+0x114>
 8001d1e:	08db      	lsrs	r3, r3, #3
 8001d20:	0764      	lsls	r4, r4, #29
 8001d22:	431c      	orrs	r4, r3
 8001d24:	0027      	movs	r7, r4
 8001d26:	2102      	movs	r1, #2
 8001d28:	0900      	lsrs	r0, r0, #4
 8001d2a:	e57a      	b.n	8001822 <__aeabi_dadd+0x26e>
 8001d2c:	08c0      	lsrs	r0, r0, #3
 8001d2e:	0777      	lsls	r7, r6, #29
 8001d30:	4307      	orrs	r7, r0
 8001d32:	4665      	mov	r5, ip
 8001d34:	2100      	movs	r1, #0
 8001d36:	08f0      	lsrs	r0, r6, #3
 8001d38:	e573      	b.n	8001822 <__aeabi_dadd+0x26e>
 8001d3a:	46c0      	nop			@ (mov r8, r8)
 8001d3c:	ff7fffff 	.word	0xff7fffff

08001d40 <__aeabi_ddiv>:
 8001d40:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001d42:	46de      	mov	lr, fp
 8001d44:	4645      	mov	r5, r8
 8001d46:	4657      	mov	r7, sl
 8001d48:	464e      	mov	r6, r9
 8001d4a:	b5e0      	push	{r5, r6, r7, lr}
 8001d4c:	b087      	sub	sp, #28
 8001d4e:	9200      	str	r2, [sp, #0]
 8001d50:	9301      	str	r3, [sp, #4]
 8001d52:	030b      	lsls	r3, r1, #12
 8001d54:	0b1b      	lsrs	r3, r3, #12
 8001d56:	469b      	mov	fp, r3
 8001d58:	0fca      	lsrs	r2, r1, #31
 8001d5a:	004b      	lsls	r3, r1, #1
 8001d5c:	0004      	movs	r4, r0
 8001d5e:	4680      	mov	r8, r0
 8001d60:	0d5b      	lsrs	r3, r3, #21
 8001d62:	9202      	str	r2, [sp, #8]
 8001d64:	d100      	bne.n	8001d68 <__aeabi_ddiv+0x28>
 8001d66:	e098      	b.n	8001e9a <__aeabi_ddiv+0x15a>
 8001d68:	4a7c      	ldr	r2, [pc, #496]	@ (8001f5c <__aeabi_ddiv+0x21c>)
 8001d6a:	4293      	cmp	r3, r2
 8001d6c:	d037      	beq.n	8001dde <__aeabi_ddiv+0x9e>
 8001d6e:	4659      	mov	r1, fp
 8001d70:	0f42      	lsrs	r2, r0, #29
 8001d72:	00c9      	lsls	r1, r1, #3
 8001d74:	430a      	orrs	r2, r1
 8001d76:	2180      	movs	r1, #128	@ 0x80
 8001d78:	0409      	lsls	r1, r1, #16
 8001d7a:	4311      	orrs	r1, r2
 8001d7c:	00c2      	lsls	r2, r0, #3
 8001d7e:	4690      	mov	r8, r2
 8001d80:	4a77      	ldr	r2, [pc, #476]	@ (8001f60 <__aeabi_ddiv+0x220>)
 8001d82:	4689      	mov	r9, r1
 8001d84:	4692      	mov	sl, r2
 8001d86:	449a      	add	sl, r3
 8001d88:	2300      	movs	r3, #0
 8001d8a:	2400      	movs	r4, #0
 8001d8c:	9303      	str	r3, [sp, #12]
 8001d8e:	9e00      	ldr	r6, [sp, #0]
 8001d90:	9f01      	ldr	r7, [sp, #4]
 8001d92:	033b      	lsls	r3, r7, #12
 8001d94:	0b1b      	lsrs	r3, r3, #12
 8001d96:	469b      	mov	fp, r3
 8001d98:	007b      	lsls	r3, r7, #1
 8001d9a:	0030      	movs	r0, r6
 8001d9c:	0d5b      	lsrs	r3, r3, #21
 8001d9e:	0ffd      	lsrs	r5, r7, #31
 8001da0:	2b00      	cmp	r3, #0
 8001da2:	d059      	beq.n	8001e58 <__aeabi_ddiv+0x118>
 8001da4:	4a6d      	ldr	r2, [pc, #436]	@ (8001f5c <__aeabi_ddiv+0x21c>)
 8001da6:	4293      	cmp	r3, r2
 8001da8:	d048      	beq.n	8001e3c <__aeabi_ddiv+0xfc>
 8001daa:	4659      	mov	r1, fp
 8001dac:	0f72      	lsrs	r2, r6, #29
 8001dae:	00c9      	lsls	r1, r1, #3
 8001db0:	430a      	orrs	r2, r1
 8001db2:	2180      	movs	r1, #128	@ 0x80
 8001db4:	0409      	lsls	r1, r1, #16
 8001db6:	4311      	orrs	r1, r2
 8001db8:	468b      	mov	fp, r1
 8001dba:	4969      	ldr	r1, [pc, #420]	@ (8001f60 <__aeabi_ddiv+0x220>)
 8001dbc:	00f2      	lsls	r2, r6, #3
 8001dbe:	468c      	mov	ip, r1
 8001dc0:	4651      	mov	r1, sl
 8001dc2:	4463      	add	r3, ip
 8001dc4:	1acb      	subs	r3, r1, r3
 8001dc6:	469a      	mov	sl, r3
 8001dc8:	2100      	movs	r1, #0
 8001dca:	9e02      	ldr	r6, [sp, #8]
 8001dcc:	406e      	eors	r6, r5
 8001dce:	b2f6      	uxtb	r6, r6
 8001dd0:	2c0f      	cmp	r4, #15
 8001dd2:	d900      	bls.n	8001dd6 <__aeabi_ddiv+0x96>
 8001dd4:	e0ce      	b.n	8001f74 <__aeabi_ddiv+0x234>
 8001dd6:	4b63      	ldr	r3, [pc, #396]	@ (8001f64 <__aeabi_ddiv+0x224>)
 8001dd8:	00a4      	lsls	r4, r4, #2
 8001dda:	591b      	ldr	r3, [r3, r4]
 8001ddc:	469f      	mov	pc, r3
 8001dde:	465a      	mov	r2, fp
 8001de0:	4302      	orrs	r2, r0
 8001de2:	4691      	mov	r9, r2
 8001de4:	d000      	beq.n	8001de8 <__aeabi_ddiv+0xa8>
 8001de6:	e090      	b.n	8001f0a <__aeabi_ddiv+0x1ca>
 8001de8:	469a      	mov	sl, r3
 8001dea:	2302      	movs	r3, #2
 8001dec:	4690      	mov	r8, r2
 8001dee:	2408      	movs	r4, #8
 8001df0:	9303      	str	r3, [sp, #12]
 8001df2:	e7cc      	b.n	8001d8e <__aeabi_ddiv+0x4e>
 8001df4:	46cb      	mov	fp, r9
 8001df6:	4642      	mov	r2, r8
 8001df8:	9d02      	ldr	r5, [sp, #8]
 8001dfa:	9903      	ldr	r1, [sp, #12]
 8001dfc:	2902      	cmp	r1, #2
 8001dfe:	d100      	bne.n	8001e02 <__aeabi_ddiv+0xc2>
 8001e00:	e1de      	b.n	80021c0 <__aeabi_ddiv+0x480>
 8001e02:	2903      	cmp	r1, #3
 8001e04:	d100      	bne.n	8001e08 <__aeabi_ddiv+0xc8>
 8001e06:	e08d      	b.n	8001f24 <__aeabi_ddiv+0x1e4>
 8001e08:	2901      	cmp	r1, #1
 8001e0a:	d000      	beq.n	8001e0e <__aeabi_ddiv+0xce>
 8001e0c:	e179      	b.n	8002102 <__aeabi_ddiv+0x3c2>
 8001e0e:	002e      	movs	r6, r5
 8001e10:	2200      	movs	r2, #0
 8001e12:	2300      	movs	r3, #0
 8001e14:	2400      	movs	r4, #0
 8001e16:	4690      	mov	r8, r2
 8001e18:	051b      	lsls	r3, r3, #20
 8001e1a:	4323      	orrs	r3, r4
 8001e1c:	07f6      	lsls	r6, r6, #31
 8001e1e:	4333      	orrs	r3, r6
 8001e20:	4640      	mov	r0, r8
 8001e22:	0019      	movs	r1, r3
 8001e24:	b007      	add	sp, #28
 8001e26:	bcf0      	pop	{r4, r5, r6, r7}
 8001e28:	46bb      	mov	fp, r7
 8001e2a:	46b2      	mov	sl, r6
 8001e2c:	46a9      	mov	r9, r5
 8001e2e:	46a0      	mov	r8, r4
 8001e30:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001e32:	2200      	movs	r2, #0
 8001e34:	2400      	movs	r4, #0
 8001e36:	4690      	mov	r8, r2
 8001e38:	4b48      	ldr	r3, [pc, #288]	@ (8001f5c <__aeabi_ddiv+0x21c>)
 8001e3a:	e7ed      	b.n	8001e18 <__aeabi_ddiv+0xd8>
 8001e3c:	465a      	mov	r2, fp
 8001e3e:	9b00      	ldr	r3, [sp, #0]
 8001e40:	431a      	orrs	r2, r3
 8001e42:	4b49      	ldr	r3, [pc, #292]	@ (8001f68 <__aeabi_ddiv+0x228>)
 8001e44:	469c      	mov	ip, r3
 8001e46:	44e2      	add	sl, ip
 8001e48:	2a00      	cmp	r2, #0
 8001e4a:	d159      	bne.n	8001f00 <__aeabi_ddiv+0x1c0>
 8001e4c:	2302      	movs	r3, #2
 8001e4e:	431c      	orrs	r4, r3
 8001e50:	2300      	movs	r3, #0
 8001e52:	2102      	movs	r1, #2
 8001e54:	469b      	mov	fp, r3
 8001e56:	e7b8      	b.n	8001dca <__aeabi_ddiv+0x8a>
 8001e58:	465a      	mov	r2, fp
 8001e5a:	9b00      	ldr	r3, [sp, #0]
 8001e5c:	431a      	orrs	r2, r3
 8001e5e:	d049      	beq.n	8001ef4 <__aeabi_ddiv+0x1b4>
 8001e60:	465b      	mov	r3, fp
 8001e62:	2b00      	cmp	r3, #0
 8001e64:	d100      	bne.n	8001e68 <__aeabi_ddiv+0x128>
 8001e66:	e19c      	b.n	80021a2 <__aeabi_ddiv+0x462>
 8001e68:	4658      	mov	r0, fp
 8001e6a:	f001 fc0d 	bl	8003688 <__clzsi2>
 8001e6e:	0002      	movs	r2, r0
 8001e70:	0003      	movs	r3, r0
 8001e72:	3a0b      	subs	r2, #11
 8001e74:	271d      	movs	r7, #29
 8001e76:	9e00      	ldr	r6, [sp, #0]
 8001e78:	1aba      	subs	r2, r7, r2
 8001e7a:	0019      	movs	r1, r3
 8001e7c:	4658      	mov	r0, fp
 8001e7e:	40d6      	lsrs	r6, r2
 8001e80:	3908      	subs	r1, #8
 8001e82:	4088      	lsls	r0, r1
 8001e84:	0032      	movs	r2, r6
 8001e86:	4302      	orrs	r2, r0
 8001e88:	4693      	mov	fp, r2
 8001e8a:	9a00      	ldr	r2, [sp, #0]
 8001e8c:	408a      	lsls	r2, r1
 8001e8e:	4937      	ldr	r1, [pc, #220]	@ (8001f6c <__aeabi_ddiv+0x22c>)
 8001e90:	4453      	add	r3, sl
 8001e92:	468a      	mov	sl, r1
 8001e94:	2100      	movs	r1, #0
 8001e96:	449a      	add	sl, r3
 8001e98:	e797      	b.n	8001dca <__aeabi_ddiv+0x8a>
 8001e9a:	465b      	mov	r3, fp
 8001e9c:	4303      	orrs	r3, r0
 8001e9e:	4699      	mov	r9, r3
 8001ea0:	d021      	beq.n	8001ee6 <__aeabi_ddiv+0x1a6>
 8001ea2:	465b      	mov	r3, fp
 8001ea4:	2b00      	cmp	r3, #0
 8001ea6:	d100      	bne.n	8001eaa <__aeabi_ddiv+0x16a>
 8001ea8:	e169      	b.n	800217e <__aeabi_ddiv+0x43e>
 8001eaa:	4658      	mov	r0, fp
 8001eac:	f001 fbec 	bl	8003688 <__clzsi2>
 8001eb0:	230b      	movs	r3, #11
 8001eb2:	425b      	negs	r3, r3
 8001eb4:	469c      	mov	ip, r3
 8001eb6:	0002      	movs	r2, r0
 8001eb8:	4484      	add	ip, r0
 8001eba:	4666      	mov	r6, ip
 8001ebc:	231d      	movs	r3, #29
 8001ebe:	1b9b      	subs	r3, r3, r6
 8001ec0:	0026      	movs	r6, r4
 8001ec2:	0011      	movs	r1, r2
 8001ec4:	4658      	mov	r0, fp
 8001ec6:	40de      	lsrs	r6, r3
 8001ec8:	3908      	subs	r1, #8
 8001eca:	4088      	lsls	r0, r1
 8001ecc:	0033      	movs	r3, r6
 8001ece:	4303      	orrs	r3, r0
 8001ed0:	4699      	mov	r9, r3
 8001ed2:	0023      	movs	r3, r4
 8001ed4:	408b      	lsls	r3, r1
 8001ed6:	4698      	mov	r8, r3
 8001ed8:	4b25      	ldr	r3, [pc, #148]	@ (8001f70 <__aeabi_ddiv+0x230>)
 8001eda:	2400      	movs	r4, #0
 8001edc:	1a9b      	subs	r3, r3, r2
 8001ede:	469a      	mov	sl, r3
 8001ee0:	2300      	movs	r3, #0
 8001ee2:	9303      	str	r3, [sp, #12]
 8001ee4:	e753      	b.n	8001d8e <__aeabi_ddiv+0x4e>
 8001ee6:	2300      	movs	r3, #0
 8001ee8:	4698      	mov	r8, r3
 8001eea:	469a      	mov	sl, r3
 8001eec:	3301      	adds	r3, #1
 8001eee:	2404      	movs	r4, #4
 8001ef0:	9303      	str	r3, [sp, #12]
 8001ef2:	e74c      	b.n	8001d8e <__aeabi_ddiv+0x4e>
 8001ef4:	2301      	movs	r3, #1
 8001ef6:	431c      	orrs	r4, r3
 8001ef8:	2300      	movs	r3, #0
 8001efa:	2101      	movs	r1, #1
 8001efc:	469b      	mov	fp, r3
 8001efe:	e764      	b.n	8001dca <__aeabi_ddiv+0x8a>
 8001f00:	2303      	movs	r3, #3
 8001f02:	0032      	movs	r2, r6
 8001f04:	2103      	movs	r1, #3
 8001f06:	431c      	orrs	r4, r3
 8001f08:	e75f      	b.n	8001dca <__aeabi_ddiv+0x8a>
 8001f0a:	469a      	mov	sl, r3
 8001f0c:	2303      	movs	r3, #3
 8001f0e:	46d9      	mov	r9, fp
 8001f10:	240c      	movs	r4, #12
 8001f12:	9303      	str	r3, [sp, #12]
 8001f14:	e73b      	b.n	8001d8e <__aeabi_ddiv+0x4e>
 8001f16:	2300      	movs	r3, #0
 8001f18:	2480      	movs	r4, #128	@ 0x80
 8001f1a:	4698      	mov	r8, r3
 8001f1c:	2600      	movs	r6, #0
 8001f1e:	4b0f      	ldr	r3, [pc, #60]	@ (8001f5c <__aeabi_ddiv+0x21c>)
 8001f20:	0324      	lsls	r4, r4, #12
 8001f22:	e779      	b.n	8001e18 <__aeabi_ddiv+0xd8>
 8001f24:	2480      	movs	r4, #128	@ 0x80
 8001f26:	465b      	mov	r3, fp
 8001f28:	0324      	lsls	r4, r4, #12
 8001f2a:	431c      	orrs	r4, r3
 8001f2c:	0324      	lsls	r4, r4, #12
 8001f2e:	002e      	movs	r6, r5
 8001f30:	4690      	mov	r8, r2
 8001f32:	4b0a      	ldr	r3, [pc, #40]	@ (8001f5c <__aeabi_ddiv+0x21c>)
 8001f34:	0b24      	lsrs	r4, r4, #12
 8001f36:	e76f      	b.n	8001e18 <__aeabi_ddiv+0xd8>
 8001f38:	2480      	movs	r4, #128	@ 0x80
 8001f3a:	464b      	mov	r3, r9
 8001f3c:	0324      	lsls	r4, r4, #12
 8001f3e:	4223      	tst	r3, r4
 8001f40:	d002      	beq.n	8001f48 <__aeabi_ddiv+0x208>
 8001f42:	465b      	mov	r3, fp
 8001f44:	4223      	tst	r3, r4
 8001f46:	d0f0      	beq.n	8001f2a <__aeabi_ddiv+0x1ea>
 8001f48:	2480      	movs	r4, #128	@ 0x80
 8001f4a:	464b      	mov	r3, r9
 8001f4c:	0324      	lsls	r4, r4, #12
 8001f4e:	431c      	orrs	r4, r3
 8001f50:	0324      	lsls	r4, r4, #12
 8001f52:	9e02      	ldr	r6, [sp, #8]
 8001f54:	4b01      	ldr	r3, [pc, #4]	@ (8001f5c <__aeabi_ddiv+0x21c>)
 8001f56:	0b24      	lsrs	r4, r4, #12
 8001f58:	e75e      	b.n	8001e18 <__aeabi_ddiv+0xd8>
 8001f5a:	46c0      	nop			@ (mov r8, r8)
 8001f5c:	000007ff 	.word	0x000007ff
 8001f60:	fffffc01 	.word	0xfffffc01
 8001f64:	0800947c 	.word	0x0800947c
 8001f68:	fffff801 	.word	0xfffff801
 8001f6c:	000003f3 	.word	0x000003f3
 8001f70:	fffffc0d 	.word	0xfffffc0d
 8001f74:	45cb      	cmp	fp, r9
 8001f76:	d200      	bcs.n	8001f7a <__aeabi_ddiv+0x23a>
 8001f78:	e0f8      	b.n	800216c <__aeabi_ddiv+0x42c>
 8001f7a:	d100      	bne.n	8001f7e <__aeabi_ddiv+0x23e>
 8001f7c:	e0f3      	b.n	8002166 <__aeabi_ddiv+0x426>
 8001f7e:	2301      	movs	r3, #1
 8001f80:	425b      	negs	r3, r3
 8001f82:	469c      	mov	ip, r3
 8001f84:	4644      	mov	r4, r8
 8001f86:	4648      	mov	r0, r9
 8001f88:	2500      	movs	r5, #0
 8001f8a:	44e2      	add	sl, ip
 8001f8c:	465b      	mov	r3, fp
 8001f8e:	0e17      	lsrs	r7, r2, #24
 8001f90:	021b      	lsls	r3, r3, #8
 8001f92:	431f      	orrs	r7, r3
 8001f94:	0c19      	lsrs	r1, r3, #16
 8001f96:	043b      	lsls	r3, r7, #16
 8001f98:	0212      	lsls	r2, r2, #8
 8001f9a:	9700      	str	r7, [sp, #0]
 8001f9c:	0c1f      	lsrs	r7, r3, #16
 8001f9e:	4691      	mov	r9, r2
 8001fa0:	9102      	str	r1, [sp, #8]
 8001fa2:	9703      	str	r7, [sp, #12]
 8001fa4:	f7fe f952 	bl	800024c <__aeabi_uidivmod>
 8001fa8:	0002      	movs	r2, r0
 8001faa:	437a      	muls	r2, r7
 8001fac:	040b      	lsls	r3, r1, #16
 8001fae:	0c21      	lsrs	r1, r4, #16
 8001fb0:	4680      	mov	r8, r0
 8001fb2:	4319      	orrs	r1, r3
 8001fb4:	428a      	cmp	r2, r1
 8001fb6:	d909      	bls.n	8001fcc <__aeabi_ddiv+0x28c>
 8001fb8:	9f00      	ldr	r7, [sp, #0]
 8001fba:	2301      	movs	r3, #1
 8001fbc:	46bc      	mov	ip, r7
 8001fbe:	425b      	negs	r3, r3
 8001fc0:	4461      	add	r1, ip
 8001fc2:	469c      	mov	ip, r3
 8001fc4:	44e0      	add	r8, ip
 8001fc6:	428f      	cmp	r7, r1
 8001fc8:	d800      	bhi.n	8001fcc <__aeabi_ddiv+0x28c>
 8001fca:	e15c      	b.n	8002286 <__aeabi_ddiv+0x546>
 8001fcc:	1a88      	subs	r0, r1, r2
 8001fce:	9902      	ldr	r1, [sp, #8]
 8001fd0:	f7fe f93c 	bl	800024c <__aeabi_uidivmod>
 8001fd4:	9a03      	ldr	r2, [sp, #12]
 8001fd6:	0424      	lsls	r4, r4, #16
 8001fd8:	4342      	muls	r2, r0
 8001fda:	0409      	lsls	r1, r1, #16
 8001fdc:	0c24      	lsrs	r4, r4, #16
 8001fde:	0003      	movs	r3, r0
 8001fe0:	430c      	orrs	r4, r1
 8001fe2:	42a2      	cmp	r2, r4
 8001fe4:	d906      	bls.n	8001ff4 <__aeabi_ddiv+0x2b4>
 8001fe6:	9900      	ldr	r1, [sp, #0]
 8001fe8:	3b01      	subs	r3, #1
 8001fea:	468c      	mov	ip, r1
 8001fec:	4464      	add	r4, ip
 8001fee:	42a1      	cmp	r1, r4
 8001ff0:	d800      	bhi.n	8001ff4 <__aeabi_ddiv+0x2b4>
 8001ff2:	e142      	b.n	800227a <__aeabi_ddiv+0x53a>
 8001ff4:	1aa0      	subs	r0, r4, r2
 8001ff6:	4642      	mov	r2, r8
 8001ff8:	0412      	lsls	r2, r2, #16
 8001ffa:	431a      	orrs	r2, r3
 8001ffc:	4693      	mov	fp, r2
 8001ffe:	464b      	mov	r3, r9
 8002000:	4659      	mov	r1, fp
 8002002:	0c1b      	lsrs	r3, r3, #16
 8002004:	001f      	movs	r7, r3
 8002006:	9304      	str	r3, [sp, #16]
 8002008:	040b      	lsls	r3, r1, #16
 800200a:	4649      	mov	r1, r9
 800200c:	0409      	lsls	r1, r1, #16
 800200e:	0c09      	lsrs	r1, r1, #16
 8002010:	000c      	movs	r4, r1
 8002012:	0c1b      	lsrs	r3, r3, #16
 8002014:	435c      	muls	r4, r3
 8002016:	0c12      	lsrs	r2, r2, #16
 8002018:	437b      	muls	r3, r7
 800201a:	4688      	mov	r8, r1
 800201c:	4351      	muls	r1, r2
 800201e:	437a      	muls	r2, r7
 8002020:	0c27      	lsrs	r7, r4, #16
 8002022:	46bc      	mov	ip, r7
 8002024:	185b      	adds	r3, r3, r1
 8002026:	4463      	add	r3, ip
 8002028:	4299      	cmp	r1, r3
 800202a:	d903      	bls.n	8002034 <__aeabi_ddiv+0x2f4>
 800202c:	2180      	movs	r1, #128	@ 0x80
 800202e:	0249      	lsls	r1, r1, #9
 8002030:	468c      	mov	ip, r1
 8002032:	4462      	add	r2, ip
 8002034:	0c19      	lsrs	r1, r3, #16
 8002036:	0424      	lsls	r4, r4, #16
 8002038:	041b      	lsls	r3, r3, #16
 800203a:	0c24      	lsrs	r4, r4, #16
 800203c:	188a      	adds	r2, r1, r2
 800203e:	191c      	adds	r4, r3, r4
 8002040:	4290      	cmp	r0, r2
 8002042:	d302      	bcc.n	800204a <__aeabi_ddiv+0x30a>
 8002044:	d116      	bne.n	8002074 <__aeabi_ddiv+0x334>
 8002046:	42a5      	cmp	r5, r4
 8002048:	d214      	bcs.n	8002074 <__aeabi_ddiv+0x334>
 800204a:	465b      	mov	r3, fp
 800204c:	9f00      	ldr	r7, [sp, #0]
 800204e:	3b01      	subs	r3, #1
 8002050:	444d      	add	r5, r9
 8002052:	9305      	str	r3, [sp, #20]
 8002054:	454d      	cmp	r5, r9
 8002056:	419b      	sbcs	r3, r3
 8002058:	46bc      	mov	ip, r7
 800205a:	425b      	negs	r3, r3
 800205c:	4463      	add	r3, ip
 800205e:	18c0      	adds	r0, r0, r3
 8002060:	4287      	cmp	r7, r0
 8002062:	d300      	bcc.n	8002066 <__aeabi_ddiv+0x326>
 8002064:	e102      	b.n	800226c <__aeabi_ddiv+0x52c>
 8002066:	4282      	cmp	r2, r0
 8002068:	d900      	bls.n	800206c <__aeabi_ddiv+0x32c>
 800206a:	e129      	b.n	80022c0 <__aeabi_ddiv+0x580>
 800206c:	d100      	bne.n	8002070 <__aeabi_ddiv+0x330>
 800206e:	e124      	b.n	80022ba <__aeabi_ddiv+0x57a>
 8002070:	9b05      	ldr	r3, [sp, #20]
 8002072:	469b      	mov	fp, r3
 8002074:	1b2c      	subs	r4, r5, r4
 8002076:	42a5      	cmp	r5, r4
 8002078:	41ad      	sbcs	r5, r5
 800207a:	9b00      	ldr	r3, [sp, #0]
 800207c:	1a80      	subs	r0, r0, r2
 800207e:	426d      	negs	r5, r5
 8002080:	1b40      	subs	r0, r0, r5
 8002082:	4283      	cmp	r3, r0
 8002084:	d100      	bne.n	8002088 <__aeabi_ddiv+0x348>
 8002086:	e10f      	b.n	80022a8 <__aeabi_ddiv+0x568>
 8002088:	9902      	ldr	r1, [sp, #8]
 800208a:	f7fe f8df 	bl	800024c <__aeabi_uidivmod>
 800208e:	9a03      	ldr	r2, [sp, #12]
 8002090:	040b      	lsls	r3, r1, #16
 8002092:	4342      	muls	r2, r0
 8002094:	0c21      	lsrs	r1, r4, #16
 8002096:	0005      	movs	r5, r0
 8002098:	4319      	orrs	r1, r3
 800209a:	428a      	cmp	r2, r1
 800209c:	d900      	bls.n	80020a0 <__aeabi_ddiv+0x360>
 800209e:	e0cb      	b.n	8002238 <__aeabi_ddiv+0x4f8>
 80020a0:	1a88      	subs	r0, r1, r2
 80020a2:	9902      	ldr	r1, [sp, #8]
 80020a4:	f7fe f8d2 	bl	800024c <__aeabi_uidivmod>
 80020a8:	9a03      	ldr	r2, [sp, #12]
 80020aa:	0424      	lsls	r4, r4, #16
 80020ac:	4342      	muls	r2, r0
 80020ae:	0409      	lsls	r1, r1, #16
 80020b0:	0c24      	lsrs	r4, r4, #16
 80020b2:	0003      	movs	r3, r0
 80020b4:	430c      	orrs	r4, r1
 80020b6:	42a2      	cmp	r2, r4
 80020b8:	d900      	bls.n	80020bc <__aeabi_ddiv+0x37c>
 80020ba:	e0ca      	b.n	8002252 <__aeabi_ddiv+0x512>
 80020bc:	4641      	mov	r1, r8
 80020be:	1aa4      	subs	r4, r4, r2
 80020c0:	042a      	lsls	r2, r5, #16
 80020c2:	431a      	orrs	r2, r3
 80020c4:	9f04      	ldr	r7, [sp, #16]
 80020c6:	0413      	lsls	r3, r2, #16
 80020c8:	0c1b      	lsrs	r3, r3, #16
 80020ca:	4359      	muls	r1, r3
 80020cc:	4640      	mov	r0, r8
 80020ce:	437b      	muls	r3, r7
 80020d0:	469c      	mov	ip, r3
 80020d2:	0c15      	lsrs	r5, r2, #16
 80020d4:	4368      	muls	r0, r5
 80020d6:	0c0b      	lsrs	r3, r1, #16
 80020d8:	4484      	add	ip, r0
 80020da:	4463      	add	r3, ip
 80020dc:	437d      	muls	r5, r7
 80020de:	4298      	cmp	r0, r3
 80020e0:	d903      	bls.n	80020ea <__aeabi_ddiv+0x3aa>
 80020e2:	2080      	movs	r0, #128	@ 0x80
 80020e4:	0240      	lsls	r0, r0, #9
 80020e6:	4684      	mov	ip, r0
 80020e8:	4465      	add	r5, ip
 80020ea:	0c18      	lsrs	r0, r3, #16
 80020ec:	0409      	lsls	r1, r1, #16
 80020ee:	041b      	lsls	r3, r3, #16
 80020f0:	0c09      	lsrs	r1, r1, #16
 80020f2:	1940      	adds	r0, r0, r5
 80020f4:	185b      	adds	r3, r3, r1
 80020f6:	4284      	cmp	r4, r0
 80020f8:	d327      	bcc.n	800214a <__aeabi_ddiv+0x40a>
 80020fa:	d023      	beq.n	8002144 <__aeabi_ddiv+0x404>
 80020fc:	2301      	movs	r3, #1
 80020fe:	0035      	movs	r5, r6
 8002100:	431a      	orrs	r2, r3
 8002102:	4b94      	ldr	r3, [pc, #592]	@ (8002354 <__aeabi_ddiv+0x614>)
 8002104:	4453      	add	r3, sl
 8002106:	2b00      	cmp	r3, #0
 8002108:	dd60      	ble.n	80021cc <__aeabi_ddiv+0x48c>
 800210a:	0751      	lsls	r1, r2, #29
 800210c:	d000      	beq.n	8002110 <__aeabi_ddiv+0x3d0>
 800210e:	e086      	b.n	800221e <__aeabi_ddiv+0x4de>
 8002110:	002e      	movs	r6, r5
 8002112:	08d1      	lsrs	r1, r2, #3
 8002114:	465a      	mov	r2, fp
 8002116:	01d2      	lsls	r2, r2, #7
 8002118:	d506      	bpl.n	8002128 <__aeabi_ddiv+0x3e8>
 800211a:	465a      	mov	r2, fp
 800211c:	4b8e      	ldr	r3, [pc, #568]	@ (8002358 <__aeabi_ddiv+0x618>)
 800211e:	401a      	ands	r2, r3
 8002120:	2380      	movs	r3, #128	@ 0x80
 8002122:	4693      	mov	fp, r2
 8002124:	00db      	lsls	r3, r3, #3
 8002126:	4453      	add	r3, sl
 8002128:	4a8c      	ldr	r2, [pc, #560]	@ (800235c <__aeabi_ddiv+0x61c>)
 800212a:	4293      	cmp	r3, r2
 800212c:	dd00      	ble.n	8002130 <__aeabi_ddiv+0x3f0>
 800212e:	e680      	b.n	8001e32 <__aeabi_ddiv+0xf2>
 8002130:	465a      	mov	r2, fp
 8002132:	0752      	lsls	r2, r2, #29
 8002134:	430a      	orrs	r2, r1
 8002136:	4690      	mov	r8, r2
 8002138:	465a      	mov	r2, fp
 800213a:	055b      	lsls	r3, r3, #21
 800213c:	0254      	lsls	r4, r2, #9
 800213e:	0b24      	lsrs	r4, r4, #12
 8002140:	0d5b      	lsrs	r3, r3, #21
 8002142:	e669      	b.n	8001e18 <__aeabi_ddiv+0xd8>
 8002144:	0035      	movs	r5, r6
 8002146:	2b00      	cmp	r3, #0
 8002148:	d0db      	beq.n	8002102 <__aeabi_ddiv+0x3c2>
 800214a:	9d00      	ldr	r5, [sp, #0]
 800214c:	1e51      	subs	r1, r2, #1
 800214e:	46ac      	mov	ip, r5
 8002150:	4464      	add	r4, ip
 8002152:	42ac      	cmp	r4, r5
 8002154:	d200      	bcs.n	8002158 <__aeabi_ddiv+0x418>
 8002156:	e09e      	b.n	8002296 <__aeabi_ddiv+0x556>
 8002158:	4284      	cmp	r4, r0
 800215a:	d200      	bcs.n	800215e <__aeabi_ddiv+0x41e>
 800215c:	e0e1      	b.n	8002322 <__aeabi_ddiv+0x5e2>
 800215e:	d100      	bne.n	8002162 <__aeabi_ddiv+0x422>
 8002160:	e0ee      	b.n	8002340 <__aeabi_ddiv+0x600>
 8002162:	000a      	movs	r2, r1
 8002164:	e7ca      	b.n	80020fc <__aeabi_ddiv+0x3bc>
 8002166:	4542      	cmp	r2, r8
 8002168:	d900      	bls.n	800216c <__aeabi_ddiv+0x42c>
 800216a:	e708      	b.n	8001f7e <__aeabi_ddiv+0x23e>
 800216c:	464b      	mov	r3, r9
 800216e:	07dc      	lsls	r4, r3, #31
 8002170:	0858      	lsrs	r0, r3, #1
 8002172:	4643      	mov	r3, r8
 8002174:	085b      	lsrs	r3, r3, #1
 8002176:	431c      	orrs	r4, r3
 8002178:	4643      	mov	r3, r8
 800217a:	07dd      	lsls	r5, r3, #31
 800217c:	e706      	b.n	8001f8c <__aeabi_ddiv+0x24c>
 800217e:	f001 fa83 	bl	8003688 <__clzsi2>
 8002182:	2315      	movs	r3, #21
 8002184:	469c      	mov	ip, r3
 8002186:	4484      	add	ip, r0
 8002188:	0002      	movs	r2, r0
 800218a:	4663      	mov	r3, ip
 800218c:	3220      	adds	r2, #32
 800218e:	2b1c      	cmp	r3, #28
 8002190:	dc00      	bgt.n	8002194 <__aeabi_ddiv+0x454>
 8002192:	e692      	b.n	8001eba <__aeabi_ddiv+0x17a>
 8002194:	0023      	movs	r3, r4
 8002196:	3808      	subs	r0, #8
 8002198:	4083      	lsls	r3, r0
 800219a:	4699      	mov	r9, r3
 800219c:	2300      	movs	r3, #0
 800219e:	4698      	mov	r8, r3
 80021a0:	e69a      	b.n	8001ed8 <__aeabi_ddiv+0x198>
 80021a2:	f001 fa71 	bl	8003688 <__clzsi2>
 80021a6:	0002      	movs	r2, r0
 80021a8:	0003      	movs	r3, r0
 80021aa:	3215      	adds	r2, #21
 80021ac:	3320      	adds	r3, #32
 80021ae:	2a1c      	cmp	r2, #28
 80021b0:	dc00      	bgt.n	80021b4 <__aeabi_ddiv+0x474>
 80021b2:	e65f      	b.n	8001e74 <__aeabi_ddiv+0x134>
 80021b4:	9900      	ldr	r1, [sp, #0]
 80021b6:	3808      	subs	r0, #8
 80021b8:	4081      	lsls	r1, r0
 80021ba:	2200      	movs	r2, #0
 80021bc:	468b      	mov	fp, r1
 80021be:	e666      	b.n	8001e8e <__aeabi_ddiv+0x14e>
 80021c0:	2200      	movs	r2, #0
 80021c2:	002e      	movs	r6, r5
 80021c4:	2400      	movs	r4, #0
 80021c6:	4690      	mov	r8, r2
 80021c8:	4b65      	ldr	r3, [pc, #404]	@ (8002360 <__aeabi_ddiv+0x620>)
 80021ca:	e625      	b.n	8001e18 <__aeabi_ddiv+0xd8>
 80021cc:	002e      	movs	r6, r5
 80021ce:	2101      	movs	r1, #1
 80021d0:	1ac9      	subs	r1, r1, r3
 80021d2:	2938      	cmp	r1, #56	@ 0x38
 80021d4:	dd00      	ble.n	80021d8 <__aeabi_ddiv+0x498>
 80021d6:	e61b      	b.n	8001e10 <__aeabi_ddiv+0xd0>
 80021d8:	291f      	cmp	r1, #31
 80021da:	dc7e      	bgt.n	80022da <__aeabi_ddiv+0x59a>
 80021dc:	4861      	ldr	r0, [pc, #388]	@ (8002364 <__aeabi_ddiv+0x624>)
 80021de:	0014      	movs	r4, r2
 80021e0:	4450      	add	r0, sl
 80021e2:	465b      	mov	r3, fp
 80021e4:	4082      	lsls	r2, r0
 80021e6:	4083      	lsls	r3, r0
 80021e8:	40cc      	lsrs	r4, r1
 80021ea:	1e50      	subs	r0, r2, #1
 80021ec:	4182      	sbcs	r2, r0
 80021ee:	4323      	orrs	r3, r4
 80021f0:	431a      	orrs	r2, r3
 80021f2:	465b      	mov	r3, fp
 80021f4:	40cb      	lsrs	r3, r1
 80021f6:	0751      	lsls	r1, r2, #29
 80021f8:	d009      	beq.n	800220e <__aeabi_ddiv+0x4ce>
 80021fa:	210f      	movs	r1, #15
 80021fc:	4011      	ands	r1, r2
 80021fe:	2904      	cmp	r1, #4
 8002200:	d005      	beq.n	800220e <__aeabi_ddiv+0x4ce>
 8002202:	1d11      	adds	r1, r2, #4
 8002204:	4291      	cmp	r1, r2
 8002206:	4192      	sbcs	r2, r2
 8002208:	4252      	negs	r2, r2
 800220a:	189b      	adds	r3, r3, r2
 800220c:	000a      	movs	r2, r1
 800220e:	0219      	lsls	r1, r3, #8
 8002210:	d400      	bmi.n	8002214 <__aeabi_ddiv+0x4d4>
 8002212:	e09b      	b.n	800234c <__aeabi_ddiv+0x60c>
 8002214:	2200      	movs	r2, #0
 8002216:	2301      	movs	r3, #1
 8002218:	2400      	movs	r4, #0
 800221a:	4690      	mov	r8, r2
 800221c:	e5fc      	b.n	8001e18 <__aeabi_ddiv+0xd8>
 800221e:	210f      	movs	r1, #15
 8002220:	4011      	ands	r1, r2
 8002222:	2904      	cmp	r1, #4
 8002224:	d100      	bne.n	8002228 <__aeabi_ddiv+0x4e8>
 8002226:	e773      	b.n	8002110 <__aeabi_ddiv+0x3d0>
 8002228:	1d11      	adds	r1, r2, #4
 800222a:	4291      	cmp	r1, r2
 800222c:	4192      	sbcs	r2, r2
 800222e:	4252      	negs	r2, r2
 8002230:	002e      	movs	r6, r5
 8002232:	08c9      	lsrs	r1, r1, #3
 8002234:	4493      	add	fp, r2
 8002236:	e76d      	b.n	8002114 <__aeabi_ddiv+0x3d4>
 8002238:	9b00      	ldr	r3, [sp, #0]
 800223a:	3d01      	subs	r5, #1
 800223c:	469c      	mov	ip, r3
 800223e:	4461      	add	r1, ip
 8002240:	428b      	cmp	r3, r1
 8002242:	d900      	bls.n	8002246 <__aeabi_ddiv+0x506>
 8002244:	e72c      	b.n	80020a0 <__aeabi_ddiv+0x360>
 8002246:	428a      	cmp	r2, r1
 8002248:	d800      	bhi.n	800224c <__aeabi_ddiv+0x50c>
 800224a:	e729      	b.n	80020a0 <__aeabi_ddiv+0x360>
 800224c:	1e85      	subs	r5, r0, #2
 800224e:	4461      	add	r1, ip
 8002250:	e726      	b.n	80020a0 <__aeabi_ddiv+0x360>
 8002252:	9900      	ldr	r1, [sp, #0]
 8002254:	3b01      	subs	r3, #1
 8002256:	468c      	mov	ip, r1
 8002258:	4464      	add	r4, ip
 800225a:	42a1      	cmp	r1, r4
 800225c:	d900      	bls.n	8002260 <__aeabi_ddiv+0x520>
 800225e:	e72d      	b.n	80020bc <__aeabi_ddiv+0x37c>
 8002260:	42a2      	cmp	r2, r4
 8002262:	d800      	bhi.n	8002266 <__aeabi_ddiv+0x526>
 8002264:	e72a      	b.n	80020bc <__aeabi_ddiv+0x37c>
 8002266:	1e83      	subs	r3, r0, #2
 8002268:	4464      	add	r4, ip
 800226a:	e727      	b.n	80020bc <__aeabi_ddiv+0x37c>
 800226c:	4287      	cmp	r7, r0
 800226e:	d000      	beq.n	8002272 <__aeabi_ddiv+0x532>
 8002270:	e6fe      	b.n	8002070 <__aeabi_ddiv+0x330>
 8002272:	45a9      	cmp	r9, r5
 8002274:	d900      	bls.n	8002278 <__aeabi_ddiv+0x538>
 8002276:	e6fb      	b.n	8002070 <__aeabi_ddiv+0x330>
 8002278:	e6f5      	b.n	8002066 <__aeabi_ddiv+0x326>
 800227a:	42a2      	cmp	r2, r4
 800227c:	d800      	bhi.n	8002280 <__aeabi_ddiv+0x540>
 800227e:	e6b9      	b.n	8001ff4 <__aeabi_ddiv+0x2b4>
 8002280:	1e83      	subs	r3, r0, #2
 8002282:	4464      	add	r4, ip
 8002284:	e6b6      	b.n	8001ff4 <__aeabi_ddiv+0x2b4>
 8002286:	428a      	cmp	r2, r1
 8002288:	d800      	bhi.n	800228c <__aeabi_ddiv+0x54c>
 800228a:	e69f      	b.n	8001fcc <__aeabi_ddiv+0x28c>
 800228c:	46bc      	mov	ip, r7
 800228e:	1e83      	subs	r3, r0, #2
 8002290:	4698      	mov	r8, r3
 8002292:	4461      	add	r1, ip
 8002294:	e69a      	b.n	8001fcc <__aeabi_ddiv+0x28c>
 8002296:	000a      	movs	r2, r1
 8002298:	4284      	cmp	r4, r0
 800229a:	d000      	beq.n	800229e <__aeabi_ddiv+0x55e>
 800229c:	e72e      	b.n	80020fc <__aeabi_ddiv+0x3bc>
 800229e:	454b      	cmp	r3, r9
 80022a0:	d000      	beq.n	80022a4 <__aeabi_ddiv+0x564>
 80022a2:	e72b      	b.n	80020fc <__aeabi_ddiv+0x3bc>
 80022a4:	0035      	movs	r5, r6
 80022a6:	e72c      	b.n	8002102 <__aeabi_ddiv+0x3c2>
 80022a8:	4b2a      	ldr	r3, [pc, #168]	@ (8002354 <__aeabi_ddiv+0x614>)
 80022aa:	4a2f      	ldr	r2, [pc, #188]	@ (8002368 <__aeabi_ddiv+0x628>)
 80022ac:	4453      	add	r3, sl
 80022ae:	4592      	cmp	sl, r2
 80022b0:	db43      	blt.n	800233a <__aeabi_ddiv+0x5fa>
 80022b2:	2201      	movs	r2, #1
 80022b4:	2100      	movs	r1, #0
 80022b6:	4493      	add	fp, r2
 80022b8:	e72c      	b.n	8002114 <__aeabi_ddiv+0x3d4>
 80022ba:	42ac      	cmp	r4, r5
 80022bc:	d800      	bhi.n	80022c0 <__aeabi_ddiv+0x580>
 80022be:	e6d7      	b.n	8002070 <__aeabi_ddiv+0x330>
 80022c0:	2302      	movs	r3, #2
 80022c2:	425b      	negs	r3, r3
 80022c4:	469c      	mov	ip, r3
 80022c6:	9900      	ldr	r1, [sp, #0]
 80022c8:	444d      	add	r5, r9
 80022ca:	454d      	cmp	r5, r9
 80022cc:	419b      	sbcs	r3, r3
 80022ce:	44e3      	add	fp, ip
 80022d0:	468c      	mov	ip, r1
 80022d2:	425b      	negs	r3, r3
 80022d4:	4463      	add	r3, ip
 80022d6:	18c0      	adds	r0, r0, r3
 80022d8:	e6cc      	b.n	8002074 <__aeabi_ddiv+0x334>
 80022da:	201f      	movs	r0, #31
 80022dc:	4240      	negs	r0, r0
 80022de:	1ac3      	subs	r3, r0, r3
 80022e0:	4658      	mov	r0, fp
 80022e2:	40d8      	lsrs	r0, r3
 80022e4:	2920      	cmp	r1, #32
 80022e6:	d004      	beq.n	80022f2 <__aeabi_ddiv+0x5b2>
 80022e8:	4659      	mov	r1, fp
 80022ea:	4b20      	ldr	r3, [pc, #128]	@ (800236c <__aeabi_ddiv+0x62c>)
 80022ec:	4453      	add	r3, sl
 80022ee:	4099      	lsls	r1, r3
 80022f0:	430a      	orrs	r2, r1
 80022f2:	1e53      	subs	r3, r2, #1
 80022f4:	419a      	sbcs	r2, r3
 80022f6:	2307      	movs	r3, #7
 80022f8:	0019      	movs	r1, r3
 80022fa:	4302      	orrs	r2, r0
 80022fc:	2400      	movs	r4, #0
 80022fe:	4011      	ands	r1, r2
 8002300:	4213      	tst	r3, r2
 8002302:	d009      	beq.n	8002318 <__aeabi_ddiv+0x5d8>
 8002304:	3308      	adds	r3, #8
 8002306:	4013      	ands	r3, r2
 8002308:	2b04      	cmp	r3, #4
 800230a:	d01d      	beq.n	8002348 <__aeabi_ddiv+0x608>
 800230c:	1d13      	adds	r3, r2, #4
 800230e:	4293      	cmp	r3, r2
 8002310:	4189      	sbcs	r1, r1
 8002312:	001a      	movs	r2, r3
 8002314:	4249      	negs	r1, r1
 8002316:	0749      	lsls	r1, r1, #29
 8002318:	08d2      	lsrs	r2, r2, #3
 800231a:	430a      	orrs	r2, r1
 800231c:	4690      	mov	r8, r2
 800231e:	2300      	movs	r3, #0
 8002320:	e57a      	b.n	8001e18 <__aeabi_ddiv+0xd8>
 8002322:	4649      	mov	r1, r9
 8002324:	9f00      	ldr	r7, [sp, #0]
 8002326:	004d      	lsls	r5, r1, #1
 8002328:	454d      	cmp	r5, r9
 800232a:	4189      	sbcs	r1, r1
 800232c:	46bc      	mov	ip, r7
 800232e:	4249      	negs	r1, r1
 8002330:	4461      	add	r1, ip
 8002332:	46a9      	mov	r9, r5
 8002334:	3a02      	subs	r2, #2
 8002336:	1864      	adds	r4, r4, r1
 8002338:	e7ae      	b.n	8002298 <__aeabi_ddiv+0x558>
 800233a:	2201      	movs	r2, #1
 800233c:	4252      	negs	r2, r2
 800233e:	e746      	b.n	80021ce <__aeabi_ddiv+0x48e>
 8002340:	4599      	cmp	r9, r3
 8002342:	d3ee      	bcc.n	8002322 <__aeabi_ddiv+0x5e2>
 8002344:	000a      	movs	r2, r1
 8002346:	e7aa      	b.n	800229e <__aeabi_ddiv+0x55e>
 8002348:	2100      	movs	r1, #0
 800234a:	e7e5      	b.n	8002318 <__aeabi_ddiv+0x5d8>
 800234c:	0759      	lsls	r1, r3, #29
 800234e:	025b      	lsls	r3, r3, #9
 8002350:	0b1c      	lsrs	r4, r3, #12
 8002352:	e7e1      	b.n	8002318 <__aeabi_ddiv+0x5d8>
 8002354:	000003ff 	.word	0x000003ff
 8002358:	feffffff 	.word	0xfeffffff
 800235c:	000007fe 	.word	0x000007fe
 8002360:	000007ff 	.word	0x000007ff
 8002364:	0000041e 	.word	0x0000041e
 8002368:	fffffc02 	.word	0xfffffc02
 800236c:	0000043e 	.word	0x0000043e

08002370 <__eqdf2>:
 8002370:	b5f0      	push	{r4, r5, r6, r7, lr}
 8002372:	4657      	mov	r7, sl
 8002374:	46de      	mov	lr, fp
 8002376:	464e      	mov	r6, r9
 8002378:	4645      	mov	r5, r8
 800237a:	b5e0      	push	{r5, r6, r7, lr}
 800237c:	000d      	movs	r5, r1
 800237e:	0004      	movs	r4, r0
 8002380:	0fe8      	lsrs	r0, r5, #31
 8002382:	4683      	mov	fp, r0
 8002384:	0309      	lsls	r1, r1, #12
 8002386:	0fd8      	lsrs	r0, r3, #31
 8002388:	0b09      	lsrs	r1, r1, #12
 800238a:	4682      	mov	sl, r0
 800238c:	4819      	ldr	r0, [pc, #100]	@ (80023f4 <__eqdf2+0x84>)
 800238e:	468c      	mov	ip, r1
 8002390:	031f      	lsls	r7, r3, #12
 8002392:	0069      	lsls	r1, r5, #1
 8002394:	005e      	lsls	r6, r3, #1
 8002396:	0d49      	lsrs	r1, r1, #21
 8002398:	0b3f      	lsrs	r7, r7, #12
 800239a:	0d76      	lsrs	r6, r6, #21
 800239c:	4281      	cmp	r1, r0
 800239e:	d018      	beq.n	80023d2 <__eqdf2+0x62>
 80023a0:	4286      	cmp	r6, r0
 80023a2:	d00f      	beq.n	80023c4 <__eqdf2+0x54>
 80023a4:	2001      	movs	r0, #1
 80023a6:	42b1      	cmp	r1, r6
 80023a8:	d10d      	bne.n	80023c6 <__eqdf2+0x56>
 80023aa:	45bc      	cmp	ip, r7
 80023ac:	d10b      	bne.n	80023c6 <__eqdf2+0x56>
 80023ae:	4294      	cmp	r4, r2
 80023b0:	d109      	bne.n	80023c6 <__eqdf2+0x56>
 80023b2:	45d3      	cmp	fp, sl
 80023b4:	d01c      	beq.n	80023f0 <__eqdf2+0x80>
 80023b6:	2900      	cmp	r1, #0
 80023b8:	d105      	bne.n	80023c6 <__eqdf2+0x56>
 80023ba:	4660      	mov	r0, ip
 80023bc:	4320      	orrs	r0, r4
 80023be:	1e43      	subs	r3, r0, #1
 80023c0:	4198      	sbcs	r0, r3
 80023c2:	e000      	b.n	80023c6 <__eqdf2+0x56>
 80023c4:	2001      	movs	r0, #1
 80023c6:	bcf0      	pop	{r4, r5, r6, r7}
 80023c8:	46bb      	mov	fp, r7
 80023ca:	46b2      	mov	sl, r6
 80023cc:	46a9      	mov	r9, r5
 80023ce:	46a0      	mov	r8, r4
 80023d0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80023d2:	2001      	movs	r0, #1
 80023d4:	428e      	cmp	r6, r1
 80023d6:	d1f6      	bne.n	80023c6 <__eqdf2+0x56>
 80023d8:	4661      	mov	r1, ip
 80023da:	4339      	orrs	r1, r7
 80023dc:	000f      	movs	r7, r1
 80023de:	4317      	orrs	r7, r2
 80023e0:	4327      	orrs	r7, r4
 80023e2:	d1f0      	bne.n	80023c6 <__eqdf2+0x56>
 80023e4:	465b      	mov	r3, fp
 80023e6:	4652      	mov	r2, sl
 80023e8:	1a98      	subs	r0, r3, r2
 80023ea:	1e43      	subs	r3, r0, #1
 80023ec:	4198      	sbcs	r0, r3
 80023ee:	e7ea      	b.n	80023c6 <__eqdf2+0x56>
 80023f0:	2000      	movs	r0, #0
 80023f2:	e7e8      	b.n	80023c6 <__eqdf2+0x56>
 80023f4:	000007ff 	.word	0x000007ff

080023f8 <__gedf2>:
 80023f8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80023fa:	4657      	mov	r7, sl
 80023fc:	464e      	mov	r6, r9
 80023fe:	4645      	mov	r5, r8
 8002400:	46de      	mov	lr, fp
 8002402:	b5e0      	push	{r5, r6, r7, lr}
 8002404:	000d      	movs	r5, r1
 8002406:	030e      	lsls	r6, r1, #12
 8002408:	0049      	lsls	r1, r1, #1
 800240a:	0d49      	lsrs	r1, r1, #21
 800240c:	468a      	mov	sl, r1
 800240e:	0fdf      	lsrs	r7, r3, #31
 8002410:	0fe9      	lsrs	r1, r5, #31
 8002412:	46bc      	mov	ip, r7
 8002414:	b083      	sub	sp, #12
 8002416:	4f2f      	ldr	r7, [pc, #188]	@ (80024d4 <__gedf2+0xdc>)
 8002418:	0004      	movs	r4, r0
 800241a:	4680      	mov	r8, r0
 800241c:	9101      	str	r1, [sp, #4]
 800241e:	0058      	lsls	r0, r3, #1
 8002420:	0319      	lsls	r1, r3, #12
 8002422:	4691      	mov	r9, r2
 8002424:	0b36      	lsrs	r6, r6, #12
 8002426:	0b09      	lsrs	r1, r1, #12
 8002428:	0d40      	lsrs	r0, r0, #21
 800242a:	45ba      	cmp	sl, r7
 800242c:	d01d      	beq.n	800246a <__gedf2+0x72>
 800242e:	42b8      	cmp	r0, r7
 8002430:	d00d      	beq.n	800244e <__gedf2+0x56>
 8002432:	4657      	mov	r7, sl
 8002434:	2f00      	cmp	r7, #0
 8002436:	d12a      	bne.n	800248e <__gedf2+0x96>
 8002438:	4334      	orrs	r4, r6
 800243a:	2800      	cmp	r0, #0
 800243c:	d124      	bne.n	8002488 <__gedf2+0x90>
 800243e:	430a      	orrs	r2, r1
 8002440:	d036      	beq.n	80024b0 <__gedf2+0xb8>
 8002442:	2c00      	cmp	r4, #0
 8002444:	d141      	bne.n	80024ca <__gedf2+0xd2>
 8002446:	4663      	mov	r3, ip
 8002448:	0058      	lsls	r0, r3, #1
 800244a:	3801      	subs	r0, #1
 800244c:	e015      	b.n	800247a <__gedf2+0x82>
 800244e:	4311      	orrs	r1, r2
 8002450:	d138      	bne.n	80024c4 <__gedf2+0xcc>
 8002452:	4653      	mov	r3, sl
 8002454:	2b00      	cmp	r3, #0
 8002456:	d101      	bne.n	800245c <__gedf2+0x64>
 8002458:	4326      	orrs	r6, r4
 800245a:	d0f4      	beq.n	8002446 <__gedf2+0x4e>
 800245c:	9b01      	ldr	r3, [sp, #4]
 800245e:	4563      	cmp	r3, ip
 8002460:	d107      	bne.n	8002472 <__gedf2+0x7a>
 8002462:	9b01      	ldr	r3, [sp, #4]
 8002464:	0058      	lsls	r0, r3, #1
 8002466:	3801      	subs	r0, #1
 8002468:	e007      	b.n	800247a <__gedf2+0x82>
 800246a:	4326      	orrs	r6, r4
 800246c:	d12a      	bne.n	80024c4 <__gedf2+0xcc>
 800246e:	4550      	cmp	r0, sl
 8002470:	d021      	beq.n	80024b6 <__gedf2+0xbe>
 8002472:	2001      	movs	r0, #1
 8002474:	9b01      	ldr	r3, [sp, #4]
 8002476:	425f      	negs	r7, r3
 8002478:	4338      	orrs	r0, r7
 800247a:	b003      	add	sp, #12
 800247c:	bcf0      	pop	{r4, r5, r6, r7}
 800247e:	46bb      	mov	fp, r7
 8002480:	46b2      	mov	sl, r6
 8002482:	46a9      	mov	r9, r5
 8002484:	46a0      	mov	r8, r4
 8002486:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002488:	2c00      	cmp	r4, #0
 800248a:	d0dc      	beq.n	8002446 <__gedf2+0x4e>
 800248c:	e7e6      	b.n	800245c <__gedf2+0x64>
 800248e:	2800      	cmp	r0, #0
 8002490:	d0ef      	beq.n	8002472 <__gedf2+0x7a>
 8002492:	9b01      	ldr	r3, [sp, #4]
 8002494:	4563      	cmp	r3, ip
 8002496:	d1ec      	bne.n	8002472 <__gedf2+0x7a>
 8002498:	4582      	cmp	sl, r0
 800249a:	dcea      	bgt.n	8002472 <__gedf2+0x7a>
 800249c:	dbe1      	blt.n	8002462 <__gedf2+0x6a>
 800249e:	428e      	cmp	r6, r1
 80024a0:	d8e7      	bhi.n	8002472 <__gedf2+0x7a>
 80024a2:	d1de      	bne.n	8002462 <__gedf2+0x6a>
 80024a4:	45c8      	cmp	r8, r9
 80024a6:	d8e4      	bhi.n	8002472 <__gedf2+0x7a>
 80024a8:	2000      	movs	r0, #0
 80024aa:	45c8      	cmp	r8, r9
 80024ac:	d2e5      	bcs.n	800247a <__gedf2+0x82>
 80024ae:	e7d8      	b.n	8002462 <__gedf2+0x6a>
 80024b0:	2c00      	cmp	r4, #0
 80024b2:	d0e2      	beq.n	800247a <__gedf2+0x82>
 80024b4:	e7dd      	b.n	8002472 <__gedf2+0x7a>
 80024b6:	4311      	orrs	r1, r2
 80024b8:	d104      	bne.n	80024c4 <__gedf2+0xcc>
 80024ba:	9b01      	ldr	r3, [sp, #4]
 80024bc:	4563      	cmp	r3, ip
 80024be:	d1d8      	bne.n	8002472 <__gedf2+0x7a>
 80024c0:	2000      	movs	r0, #0
 80024c2:	e7da      	b.n	800247a <__gedf2+0x82>
 80024c4:	2002      	movs	r0, #2
 80024c6:	4240      	negs	r0, r0
 80024c8:	e7d7      	b.n	800247a <__gedf2+0x82>
 80024ca:	9b01      	ldr	r3, [sp, #4]
 80024cc:	4563      	cmp	r3, ip
 80024ce:	d0e6      	beq.n	800249e <__gedf2+0xa6>
 80024d0:	e7cf      	b.n	8002472 <__gedf2+0x7a>
 80024d2:	46c0      	nop			@ (mov r8, r8)
 80024d4:	000007ff 	.word	0x000007ff

080024d8 <__ledf2>:
 80024d8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80024da:	4657      	mov	r7, sl
 80024dc:	464e      	mov	r6, r9
 80024de:	4645      	mov	r5, r8
 80024e0:	46de      	mov	lr, fp
 80024e2:	b5e0      	push	{r5, r6, r7, lr}
 80024e4:	000d      	movs	r5, r1
 80024e6:	030e      	lsls	r6, r1, #12
 80024e8:	0049      	lsls	r1, r1, #1
 80024ea:	0d49      	lsrs	r1, r1, #21
 80024ec:	468a      	mov	sl, r1
 80024ee:	0fdf      	lsrs	r7, r3, #31
 80024f0:	0fe9      	lsrs	r1, r5, #31
 80024f2:	46bc      	mov	ip, r7
 80024f4:	b083      	sub	sp, #12
 80024f6:	4f2e      	ldr	r7, [pc, #184]	@ (80025b0 <__ledf2+0xd8>)
 80024f8:	0004      	movs	r4, r0
 80024fa:	4680      	mov	r8, r0
 80024fc:	9101      	str	r1, [sp, #4]
 80024fe:	0058      	lsls	r0, r3, #1
 8002500:	0319      	lsls	r1, r3, #12
 8002502:	4691      	mov	r9, r2
 8002504:	0b36      	lsrs	r6, r6, #12
 8002506:	0b09      	lsrs	r1, r1, #12
 8002508:	0d40      	lsrs	r0, r0, #21
 800250a:	45ba      	cmp	sl, r7
 800250c:	d01e      	beq.n	800254c <__ledf2+0x74>
 800250e:	42b8      	cmp	r0, r7
 8002510:	d00d      	beq.n	800252e <__ledf2+0x56>
 8002512:	4657      	mov	r7, sl
 8002514:	2f00      	cmp	r7, #0
 8002516:	d127      	bne.n	8002568 <__ledf2+0x90>
 8002518:	4334      	orrs	r4, r6
 800251a:	2800      	cmp	r0, #0
 800251c:	d133      	bne.n	8002586 <__ledf2+0xae>
 800251e:	430a      	orrs	r2, r1
 8002520:	d034      	beq.n	800258c <__ledf2+0xb4>
 8002522:	2c00      	cmp	r4, #0
 8002524:	d140      	bne.n	80025a8 <__ledf2+0xd0>
 8002526:	4663      	mov	r3, ip
 8002528:	0058      	lsls	r0, r3, #1
 800252a:	3801      	subs	r0, #1
 800252c:	e015      	b.n	800255a <__ledf2+0x82>
 800252e:	4311      	orrs	r1, r2
 8002530:	d112      	bne.n	8002558 <__ledf2+0x80>
 8002532:	4653      	mov	r3, sl
 8002534:	2b00      	cmp	r3, #0
 8002536:	d101      	bne.n	800253c <__ledf2+0x64>
 8002538:	4326      	orrs	r6, r4
 800253a:	d0f4      	beq.n	8002526 <__ledf2+0x4e>
 800253c:	9b01      	ldr	r3, [sp, #4]
 800253e:	4563      	cmp	r3, ip
 8002540:	d01d      	beq.n	800257e <__ledf2+0xa6>
 8002542:	2001      	movs	r0, #1
 8002544:	9b01      	ldr	r3, [sp, #4]
 8002546:	425f      	negs	r7, r3
 8002548:	4338      	orrs	r0, r7
 800254a:	e006      	b.n	800255a <__ledf2+0x82>
 800254c:	4326      	orrs	r6, r4
 800254e:	d103      	bne.n	8002558 <__ledf2+0x80>
 8002550:	4550      	cmp	r0, sl
 8002552:	d1f6      	bne.n	8002542 <__ledf2+0x6a>
 8002554:	4311      	orrs	r1, r2
 8002556:	d01c      	beq.n	8002592 <__ledf2+0xba>
 8002558:	2002      	movs	r0, #2
 800255a:	b003      	add	sp, #12
 800255c:	bcf0      	pop	{r4, r5, r6, r7}
 800255e:	46bb      	mov	fp, r7
 8002560:	46b2      	mov	sl, r6
 8002562:	46a9      	mov	r9, r5
 8002564:	46a0      	mov	r8, r4
 8002566:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002568:	2800      	cmp	r0, #0
 800256a:	d0ea      	beq.n	8002542 <__ledf2+0x6a>
 800256c:	9b01      	ldr	r3, [sp, #4]
 800256e:	4563      	cmp	r3, ip
 8002570:	d1e7      	bne.n	8002542 <__ledf2+0x6a>
 8002572:	4582      	cmp	sl, r0
 8002574:	dce5      	bgt.n	8002542 <__ledf2+0x6a>
 8002576:	db02      	blt.n	800257e <__ledf2+0xa6>
 8002578:	428e      	cmp	r6, r1
 800257a:	d8e2      	bhi.n	8002542 <__ledf2+0x6a>
 800257c:	d00e      	beq.n	800259c <__ledf2+0xc4>
 800257e:	9b01      	ldr	r3, [sp, #4]
 8002580:	0058      	lsls	r0, r3, #1
 8002582:	3801      	subs	r0, #1
 8002584:	e7e9      	b.n	800255a <__ledf2+0x82>
 8002586:	2c00      	cmp	r4, #0
 8002588:	d0cd      	beq.n	8002526 <__ledf2+0x4e>
 800258a:	e7d7      	b.n	800253c <__ledf2+0x64>
 800258c:	2c00      	cmp	r4, #0
 800258e:	d0e4      	beq.n	800255a <__ledf2+0x82>
 8002590:	e7d7      	b.n	8002542 <__ledf2+0x6a>
 8002592:	9b01      	ldr	r3, [sp, #4]
 8002594:	2000      	movs	r0, #0
 8002596:	4563      	cmp	r3, ip
 8002598:	d0df      	beq.n	800255a <__ledf2+0x82>
 800259a:	e7d2      	b.n	8002542 <__ledf2+0x6a>
 800259c:	45c8      	cmp	r8, r9
 800259e:	d8d0      	bhi.n	8002542 <__ledf2+0x6a>
 80025a0:	2000      	movs	r0, #0
 80025a2:	45c8      	cmp	r8, r9
 80025a4:	d2d9      	bcs.n	800255a <__ledf2+0x82>
 80025a6:	e7ea      	b.n	800257e <__ledf2+0xa6>
 80025a8:	9b01      	ldr	r3, [sp, #4]
 80025aa:	4563      	cmp	r3, ip
 80025ac:	d0e4      	beq.n	8002578 <__ledf2+0xa0>
 80025ae:	e7c8      	b.n	8002542 <__ledf2+0x6a>
 80025b0:	000007ff 	.word	0x000007ff

080025b4 <__aeabi_dmul>:
 80025b4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80025b6:	4657      	mov	r7, sl
 80025b8:	464e      	mov	r6, r9
 80025ba:	46de      	mov	lr, fp
 80025bc:	4645      	mov	r5, r8
 80025be:	b5e0      	push	{r5, r6, r7, lr}
 80025c0:	001f      	movs	r7, r3
 80025c2:	030b      	lsls	r3, r1, #12
 80025c4:	0b1b      	lsrs	r3, r3, #12
 80025c6:	0016      	movs	r6, r2
 80025c8:	469a      	mov	sl, r3
 80025ca:	0fca      	lsrs	r2, r1, #31
 80025cc:	004b      	lsls	r3, r1, #1
 80025ce:	0004      	movs	r4, r0
 80025d0:	4691      	mov	r9, r2
 80025d2:	b085      	sub	sp, #20
 80025d4:	0d5b      	lsrs	r3, r3, #21
 80025d6:	d100      	bne.n	80025da <__aeabi_dmul+0x26>
 80025d8:	e1cf      	b.n	800297a <__aeabi_dmul+0x3c6>
 80025da:	4acd      	ldr	r2, [pc, #820]	@ (8002910 <__aeabi_dmul+0x35c>)
 80025dc:	4293      	cmp	r3, r2
 80025de:	d055      	beq.n	800268c <__aeabi_dmul+0xd8>
 80025e0:	4651      	mov	r1, sl
 80025e2:	0f42      	lsrs	r2, r0, #29
 80025e4:	00c9      	lsls	r1, r1, #3
 80025e6:	430a      	orrs	r2, r1
 80025e8:	2180      	movs	r1, #128	@ 0x80
 80025ea:	0409      	lsls	r1, r1, #16
 80025ec:	4311      	orrs	r1, r2
 80025ee:	00c2      	lsls	r2, r0, #3
 80025f0:	4690      	mov	r8, r2
 80025f2:	4ac8      	ldr	r2, [pc, #800]	@ (8002914 <__aeabi_dmul+0x360>)
 80025f4:	468a      	mov	sl, r1
 80025f6:	4693      	mov	fp, r2
 80025f8:	449b      	add	fp, r3
 80025fa:	2300      	movs	r3, #0
 80025fc:	2500      	movs	r5, #0
 80025fe:	9302      	str	r3, [sp, #8]
 8002600:	033c      	lsls	r4, r7, #12
 8002602:	007b      	lsls	r3, r7, #1
 8002604:	0ffa      	lsrs	r2, r7, #31
 8002606:	9601      	str	r6, [sp, #4]
 8002608:	0b24      	lsrs	r4, r4, #12
 800260a:	0d5b      	lsrs	r3, r3, #21
 800260c:	9200      	str	r2, [sp, #0]
 800260e:	d100      	bne.n	8002612 <__aeabi_dmul+0x5e>
 8002610:	e188      	b.n	8002924 <__aeabi_dmul+0x370>
 8002612:	4abf      	ldr	r2, [pc, #764]	@ (8002910 <__aeabi_dmul+0x35c>)
 8002614:	4293      	cmp	r3, r2
 8002616:	d100      	bne.n	800261a <__aeabi_dmul+0x66>
 8002618:	e092      	b.n	8002740 <__aeabi_dmul+0x18c>
 800261a:	4abe      	ldr	r2, [pc, #760]	@ (8002914 <__aeabi_dmul+0x360>)
 800261c:	4694      	mov	ip, r2
 800261e:	4463      	add	r3, ip
 8002620:	449b      	add	fp, r3
 8002622:	2d0a      	cmp	r5, #10
 8002624:	dc42      	bgt.n	80026ac <__aeabi_dmul+0xf8>
 8002626:	00e4      	lsls	r4, r4, #3
 8002628:	0f73      	lsrs	r3, r6, #29
 800262a:	4323      	orrs	r3, r4
 800262c:	2480      	movs	r4, #128	@ 0x80
 800262e:	4649      	mov	r1, r9
 8002630:	0424      	lsls	r4, r4, #16
 8002632:	431c      	orrs	r4, r3
 8002634:	00f3      	lsls	r3, r6, #3
 8002636:	9301      	str	r3, [sp, #4]
 8002638:	9b00      	ldr	r3, [sp, #0]
 800263a:	2000      	movs	r0, #0
 800263c:	4059      	eors	r1, r3
 800263e:	b2cb      	uxtb	r3, r1
 8002640:	9303      	str	r3, [sp, #12]
 8002642:	2d02      	cmp	r5, #2
 8002644:	dc00      	bgt.n	8002648 <__aeabi_dmul+0x94>
 8002646:	e094      	b.n	8002772 <__aeabi_dmul+0x1be>
 8002648:	2301      	movs	r3, #1
 800264a:	40ab      	lsls	r3, r5
 800264c:	001d      	movs	r5, r3
 800264e:	23a6      	movs	r3, #166	@ 0xa6
 8002650:	002a      	movs	r2, r5
 8002652:	00db      	lsls	r3, r3, #3
 8002654:	401a      	ands	r2, r3
 8002656:	421d      	tst	r5, r3
 8002658:	d000      	beq.n	800265c <__aeabi_dmul+0xa8>
 800265a:	e229      	b.n	8002ab0 <__aeabi_dmul+0x4fc>
 800265c:	2390      	movs	r3, #144	@ 0x90
 800265e:	009b      	lsls	r3, r3, #2
 8002660:	421d      	tst	r5, r3
 8002662:	d100      	bne.n	8002666 <__aeabi_dmul+0xb2>
 8002664:	e24d      	b.n	8002b02 <__aeabi_dmul+0x54e>
 8002666:	2300      	movs	r3, #0
 8002668:	2480      	movs	r4, #128	@ 0x80
 800266a:	4699      	mov	r9, r3
 800266c:	0324      	lsls	r4, r4, #12
 800266e:	4ba8      	ldr	r3, [pc, #672]	@ (8002910 <__aeabi_dmul+0x35c>)
 8002670:	0010      	movs	r0, r2
 8002672:	464a      	mov	r2, r9
 8002674:	051b      	lsls	r3, r3, #20
 8002676:	4323      	orrs	r3, r4
 8002678:	07d2      	lsls	r2, r2, #31
 800267a:	4313      	orrs	r3, r2
 800267c:	0019      	movs	r1, r3
 800267e:	b005      	add	sp, #20
 8002680:	bcf0      	pop	{r4, r5, r6, r7}
 8002682:	46bb      	mov	fp, r7
 8002684:	46b2      	mov	sl, r6
 8002686:	46a9      	mov	r9, r5
 8002688:	46a0      	mov	r8, r4
 800268a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800268c:	4652      	mov	r2, sl
 800268e:	4302      	orrs	r2, r0
 8002690:	4690      	mov	r8, r2
 8002692:	d000      	beq.n	8002696 <__aeabi_dmul+0xe2>
 8002694:	e1ac      	b.n	80029f0 <__aeabi_dmul+0x43c>
 8002696:	469b      	mov	fp, r3
 8002698:	2302      	movs	r3, #2
 800269a:	4692      	mov	sl, r2
 800269c:	2508      	movs	r5, #8
 800269e:	9302      	str	r3, [sp, #8]
 80026a0:	e7ae      	b.n	8002600 <__aeabi_dmul+0x4c>
 80026a2:	9b00      	ldr	r3, [sp, #0]
 80026a4:	46a2      	mov	sl, r4
 80026a6:	4699      	mov	r9, r3
 80026a8:	9b01      	ldr	r3, [sp, #4]
 80026aa:	4698      	mov	r8, r3
 80026ac:	9b02      	ldr	r3, [sp, #8]
 80026ae:	2b02      	cmp	r3, #2
 80026b0:	d100      	bne.n	80026b4 <__aeabi_dmul+0x100>
 80026b2:	e1ca      	b.n	8002a4a <__aeabi_dmul+0x496>
 80026b4:	2b03      	cmp	r3, #3
 80026b6:	d100      	bne.n	80026ba <__aeabi_dmul+0x106>
 80026b8:	e192      	b.n	80029e0 <__aeabi_dmul+0x42c>
 80026ba:	2b01      	cmp	r3, #1
 80026bc:	d110      	bne.n	80026e0 <__aeabi_dmul+0x12c>
 80026be:	2300      	movs	r3, #0
 80026c0:	2400      	movs	r4, #0
 80026c2:	2200      	movs	r2, #0
 80026c4:	e7d4      	b.n	8002670 <__aeabi_dmul+0xbc>
 80026c6:	2201      	movs	r2, #1
 80026c8:	087b      	lsrs	r3, r7, #1
 80026ca:	403a      	ands	r2, r7
 80026cc:	4313      	orrs	r3, r2
 80026ce:	4652      	mov	r2, sl
 80026d0:	07d2      	lsls	r2, r2, #31
 80026d2:	4313      	orrs	r3, r2
 80026d4:	4698      	mov	r8, r3
 80026d6:	4653      	mov	r3, sl
 80026d8:	085b      	lsrs	r3, r3, #1
 80026da:	469a      	mov	sl, r3
 80026dc:	9b03      	ldr	r3, [sp, #12]
 80026de:	4699      	mov	r9, r3
 80026e0:	465b      	mov	r3, fp
 80026e2:	1c58      	adds	r0, r3, #1
 80026e4:	2380      	movs	r3, #128	@ 0x80
 80026e6:	00db      	lsls	r3, r3, #3
 80026e8:	445b      	add	r3, fp
 80026ea:	2b00      	cmp	r3, #0
 80026ec:	dc00      	bgt.n	80026f0 <__aeabi_dmul+0x13c>
 80026ee:	e1b1      	b.n	8002a54 <__aeabi_dmul+0x4a0>
 80026f0:	4642      	mov	r2, r8
 80026f2:	0752      	lsls	r2, r2, #29
 80026f4:	d00b      	beq.n	800270e <__aeabi_dmul+0x15a>
 80026f6:	220f      	movs	r2, #15
 80026f8:	4641      	mov	r1, r8
 80026fa:	400a      	ands	r2, r1
 80026fc:	2a04      	cmp	r2, #4
 80026fe:	d006      	beq.n	800270e <__aeabi_dmul+0x15a>
 8002700:	4642      	mov	r2, r8
 8002702:	1d11      	adds	r1, r2, #4
 8002704:	4541      	cmp	r1, r8
 8002706:	4192      	sbcs	r2, r2
 8002708:	4688      	mov	r8, r1
 800270a:	4252      	negs	r2, r2
 800270c:	4492      	add	sl, r2
 800270e:	4652      	mov	r2, sl
 8002710:	01d2      	lsls	r2, r2, #7
 8002712:	d506      	bpl.n	8002722 <__aeabi_dmul+0x16e>
 8002714:	4652      	mov	r2, sl
 8002716:	4b80      	ldr	r3, [pc, #512]	@ (8002918 <__aeabi_dmul+0x364>)
 8002718:	401a      	ands	r2, r3
 800271a:	2380      	movs	r3, #128	@ 0x80
 800271c:	4692      	mov	sl, r2
 800271e:	00db      	lsls	r3, r3, #3
 8002720:	18c3      	adds	r3, r0, r3
 8002722:	4a7e      	ldr	r2, [pc, #504]	@ (800291c <__aeabi_dmul+0x368>)
 8002724:	4293      	cmp	r3, r2
 8002726:	dd00      	ble.n	800272a <__aeabi_dmul+0x176>
 8002728:	e18f      	b.n	8002a4a <__aeabi_dmul+0x496>
 800272a:	4642      	mov	r2, r8
 800272c:	08d1      	lsrs	r1, r2, #3
 800272e:	4652      	mov	r2, sl
 8002730:	0752      	lsls	r2, r2, #29
 8002732:	430a      	orrs	r2, r1
 8002734:	4651      	mov	r1, sl
 8002736:	055b      	lsls	r3, r3, #21
 8002738:	024c      	lsls	r4, r1, #9
 800273a:	0b24      	lsrs	r4, r4, #12
 800273c:	0d5b      	lsrs	r3, r3, #21
 800273e:	e797      	b.n	8002670 <__aeabi_dmul+0xbc>
 8002740:	4b73      	ldr	r3, [pc, #460]	@ (8002910 <__aeabi_dmul+0x35c>)
 8002742:	4326      	orrs	r6, r4
 8002744:	469c      	mov	ip, r3
 8002746:	44e3      	add	fp, ip
 8002748:	2e00      	cmp	r6, #0
 800274a:	d100      	bne.n	800274e <__aeabi_dmul+0x19a>
 800274c:	e16f      	b.n	8002a2e <__aeabi_dmul+0x47a>
 800274e:	2303      	movs	r3, #3
 8002750:	4649      	mov	r1, r9
 8002752:	431d      	orrs	r5, r3
 8002754:	9b00      	ldr	r3, [sp, #0]
 8002756:	4059      	eors	r1, r3
 8002758:	b2cb      	uxtb	r3, r1
 800275a:	9303      	str	r3, [sp, #12]
 800275c:	2d0a      	cmp	r5, #10
 800275e:	dd00      	ble.n	8002762 <__aeabi_dmul+0x1ae>
 8002760:	e133      	b.n	80029ca <__aeabi_dmul+0x416>
 8002762:	2301      	movs	r3, #1
 8002764:	40ab      	lsls	r3, r5
 8002766:	001d      	movs	r5, r3
 8002768:	2303      	movs	r3, #3
 800276a:	9302      	str	r3, [sp, #8]
 800276c:	2288      	movs	r2, #136	@ 0x88
 800276e:	422a      	tst	r2, r5
 8002770:	d197      	bne.n	80026a2 <__aeabi_dmul+0xee>
 8002772:	4642      	mov	r2, r8
 8002774:	4643      	mov	r3, r8
 8002776:	0412      	lsls	r2, r2, #16
 8002778:	0c12      	lsrs	r2, r2, #16
 800277a:	0016      	movs	r6, r2
 800277c:	9801      	ldr	r0, [sp, #4]
 800277e:	0c1d      	lsrs	r5, r3, #16
 8002780:	0c03      	lsrs	r3, r0, #16
 8002782:	0400      	lsls	r0, r0, #16
 8002784:	0c00      	lsrs	r0, r0, #16
 8002786:	4346      	muls	r6, r0
 8002788:	46b4      	mov	ip, r6
 800278a:	001e      	movs	r6, r3
 800278c:	436e      	muls	r6, r5
 800278e:	9600      	str	r6, [sp, #0]
 8002790:	0016      	movs	r6, r2
 8002792:	0007      	movs	r7, r0
 8002794:	435e      	muls	r6, r3
 8002796:	4661      	mov	r1, ip
 8002798:	46b0      	mov	r8, r6
 800279a:	436f      	muls	r7, r5
 800279c:	0c0e      	lsrs	r6, r1, #16
 800279e:	44b8      	add	r8, r7
 80027a0:	4446      	add	r6, r8
 80027a2:	42b7      	cmp	r7, r6
 80027a4:	d905      	bls.n	80027b2 <__aeabi_dmul+0x1fe>
 80027a6:	2180      	movs	r1, #128	@ 0x80
 80027a8:	0249      	lsls	r1, r1, #9
 80027aa:	4688      	mov	r8, r1
 80027ac:	9f00      	ldr	r7, [sp, #0]
 80027ae:	4447      	add	r7, r8
 80027b0:	9700      	str	r7, [sp, #0]
 80027b2:	4661      	mov	r1, ip
 80027b4:	0409      	lsls	r1, r1, #16
 80027b6:	0c09      	lsrs	r1, r1, #16
 80027b8:	0c37      	lsrs	r7, r6, #16
 80027ba:	0436      	lsls	r6, r6, #16
 80027bc:	468c      	mov	ip, r1
 80027be:	0031      	movs	r1, r6
 80027c0:	4461      	add	r1, ip
 80027c2:	9101      	str	r1, [sp, #4]
 80027c4:	0011      	movs	r1, r2
 80027c6:	0c26      	lsrs	r6, r4, #16
 80027c8:	0424      	lsls	r4, r4, #16
 80027ca:	0c24      	lsrs	r4, r4, #16
 80027cc:	4361      	muls	r1, r4
 80027ce:	468c      	mov	ip, r1
 80027d0:	0021      	movs	r1, r4
 80027d2:	4369      	muls	r1, r5
 80027d4:	4689      	mov	r9, r1
 80027d6:	4661      	mov	r1, ip
 80027d8:	0c09      	lsrs	r1, r1, #16
 80027da:	4688      	mov	r8, r1
 80027dc:	4372      	muls	r2, r6
 80027de:	444a      	add	r2, r9
 80027e0:	4442      	add	r2, r8
 80027e2:	4375      	muls	r5, r6
 80027e4:	4591      	cmp	r9, r2
 80027e6:	d903      	bls.n	80027f0 <__aeabi_dmul+0x23c>
 80027e8:	2180      	movs	r1, #128	@ 0x80
 80027ea:	0249      	lsls	r1, r1, #9
 80027ec:	4688      	mov	r8, r1
 80027ee:	4445      	add	r5, r8
 80027f0:	0c11      	lsrs	r1, r2, #16
 80027f2:	4688      	mov	r8, r1
 80027f4:	4661      	mov	r1, ip
 80027f6:	0409      	lsls	r1, r1, #16
 80027f8:	0c09      	lsrs	r1, r1, #16
 80027fa:	468c      	mov	ip, r1
 80027fc:	0412      	lsls	r2, r2, #16
 80027fe:	4462      	add	r2, ip
 8002800:	18b9      	adds	r1, r7, r2
 8002802:	9102      	str	r1, [sp, #8]
 8002804:	4651      	mov	r1, sl
 8002806:	0c09      	lsrs	r1, r1, #16
 8002808:	468c      	mov	ip, r1
 800280a:	4651      	mov	r1, sl
 800280c:	040f      	lsls	r7, r1, #16
 800280e:	0c3f      	lsrs	r7, r7, #16
 8002810:	0039      	movs	r1, r7
 8002812:	4341      	muls	r1, r0
 8002814:	4445      	add	r5, r8
 8002816:	4688      	mov	r8, r1
 8002818:	4661      	mov	r1, ip
 800281a:	4341      	muls	r1, r0
 800281c:	468a      	mov	sl, r1
 800281e:	4641      	mov	r1, r8
 8002820:	4660      	mov	r0, ip
 8002822:	0c09      	lsrs	r1, r1, #16
 8002824:	4689      	mov	r9, r1
 8002826:	4358      	muls	r0, r3
 8002828:	437b      	muls	r3, r7
 800282a:	4453      	add	r3, sl
 800282c:	444b      	add	r3, r9
 800282e:	459a      	cmp	sl, r3
 8002830:	d903      	bls.n	800283a <__aeabi_dmul+0x286>
 8002832:	2180      	movs	r1, #128	@ 0x80
 8002834:	0249      	lsls	r1, r1, #9
 8002836:	4689      	mov	r9, r1
 8002838:	4448      	add	r0, r9
 800283a:	0c19      	lsrs	r1, r3, #16
 800283c:	4689      	mov	r9, r1
 800283e:	4641      	mov	r1, r8
 8002840:	0409      	lsls	r1, r1, #16
 8002842:	0c09      	lsrs	r1, r1, #16
 8002844:	4688      	mov	r8, r1
 8002846:	0039      	movs	r1, r7
 8002848:	4361      	muls	r1, r4
 800284a:	041b      	lsls	r3, r3, #16
 800284c:	4443      	add	r3, r8
 800284e:	4688      	mov	r8, r1
 8002850:	4661      	mov	r1, ip
 8002852:	434c      	muls	r4, r1
 8002854:	4371      	muls	r1, r6
 8002856:	468c      	mov	ip, r1
 8002858:	4641      	mov	r1, r8
 800285a:	4377      	muls	r7, r6
 800285c:	0c0e      	lsrs	r6, r1, #16
 800285e:	193f      	adds	r7, r7, r4
 8002860:	19f6      	adds	r6, r6, r7
 8002862:	4448      	add	r0, r9
 8002864:	42b4      	cmp	r4, r6
 8002866:	d903      	bls.n	8002870 <__aeabi_dmul+0x2bc>
 8002868:	2180      	movs	r1, #128	@ 0x80
 800286a:	0249      	lsls	r1, r1, #9
 800286c:	4689      	mov	r9, r1
 800286e:	44cc      	add	ip, r9
 8002870:	9902      	ldr	r1, [sp, #8]
 8002872:	9f00      	ldr	r7, [sp, #0]
 8002874:	4689      	mov	r9, r1
 8002876:	0431      	lsls	r1, r6, #16
 8002878:	444f      	add	r7, r9
 800287a:	4689      	mov	r9, r1
 800287c:	4641      	mov	r1, r8
 800287e:	4297      	cmp	r7, r2
 8002880:	4192      	sbcs	r2, r2
 8002882:	040c      	lsls	r4, r1, #16
 8002884:	0c24      	lsrs	r4, r4, #16
 8002886:	444c      	add	r4, r9
 8002888:	18ff      	adds	r7, r7, r3
 800288a:	4252      	negs	r2, r2
 800288c:	1964      	adds	r4, r4, r5
 800288e:	18a1      	adds	r1, r4, r2
 8002890:	429f      	cmp	r7, r3
 8002892:	419b      	sbcs	r3, r3
 8002894:	4688      	mov	r8, r1
 8002896:	4682      	mov	sl, r0
 8002898:	425b      	negs	r3, r3
 800289a:	4699      	mov	r9, r3
 800289c:	4590      	cmp	r8, r2
 800289e:	4192      	sbcs	r2, r2
 80028a0:	42ac      	cmp	r4, r5
 80028a2:	41a4      	sbcs	r4, r4
 80028a4:	44c2      	add	sl, r8
 80028a6:	44d1      	add	r9, sl
 80028a8:	4252      	negs	r2, r2
 80028aa:	4264      	negs	r4, r4
 80028ac:	4314      	orrs	r4, r2
 80028ae:	4599      	cmp	r9, r3
 80028b0:	419b      	sbcs	r3, r3
 80028b2:	4582      	cmp	sl, r0
 80028b4:	4192      	sbcs	r2, r2
 80028b6:	425b      	negs	r3, r3
 80028b8:	4252      	negs	r2, r2
 80028ba:	4313      	orrs	r3, r2
 80028bc:	464a      	mov	r2, r9
 80028be:	0c36      	lsrs	r6, r6, #16
 80028c0:	19a4      	adds	r4, r4, r6
 80028c2:	18e3      	adds	r3, r4, r3
 80028c4:	4463      	add	r3, ip
 80028c6:	025b      	lsls	r3, r3, #9
 80028c8:	0dd2      	lsrs	r2, r2, #23
 80028ca:	431a      	orrs	r2, r3
 80028cc:	9901      	ldr	r1, [sp, #4]
 80028ce:	4692      	mov	sl, r2
 80028d0:	027a      	lsls	r2, r7, #9
 80028d2:	430a      	orrs	r2, r1
 80028d4:	1e50      	subs	r0, r2, #1
 80028d6:	4182      	sbcs	r2, r0
 80028d8:	0dff      	lsrs	r7, r7, #23
 80028da:	4317      	orrs	r7, r2
 80028dc:	464a      	mov	r2, r9
 80028de:	0252      	lsls	r2, r2, #9
 80028e0:	4317      	orrs	r7, r2
 80028e2:	46b8      	mov	r8, r7
 80028e4:	01db      	lsls	r3, r3, #7
 80028e6:	d500      	bpl.n	80028ea <__aeabi_dmul+0x336>
 80028e8:	e6ed      	b.n	80026c6 <__aeabi_dmul+0x112>
 80028ea:	4b0d      	ldr	r3, [pc, #52]	@ (8002920 <__aeabi_dmul+0x36c>)
 80028ec:	9a03      	ldr	r2, [sp, #12]
 80028ee:	445b      	add	r3, fp
 80028f0:	4691      	mov	r9, r2
 80028f2:	2b00      	cmp	r3, #0
 80028f4:	dc00      	bgt.n	80028f8 <__aeabi_dmul+0x344>
 80028f6:	e0ac      	b.n	8002a52 <__aeabi_dmul+0x49e>
 80028f8:	003a      	movs	r2, r7
 80028fa:	0752      	lsls	r2, r2, #29
 80028fc:	d100      	bne.n	8002900 <__aeabi_dmul+0x34c>
 80028fe:	e710      	b.n	8002722 <__aeabi_dmul+0x16e>
 8002900:	220f      	movs	r2, #15
 8002902:	4658      	mov	r0, fp
 8002904:	403a      	ands	r2, r7
 8002906:	2a04      	cmp	r2, #4
 8002908:	d000      	beq.n	800290c <__aeabi_dmul+0x358>
 800290a:	e6f9      	b.n	8002700 <__aeabi_dmul+0x14c>
 800290c:	e709      	b.n	8002722 <__aeabi_dmul+0x16e>
 800290e:	46c0      	nop			@ (mov r8, r8)
 8002910:	000007ff 	.word	0x000007ff
 8002914:	fffffc01 	.word	0xfffffc01
 8002918:	feffffff 	.word	0xfeffffff
 800291c:	000007fe 	.word	0x000007fe
 8002920:	000003ff 	.word	0x000003ff
 8002924:	0022      	movs	r2, r4
 8002926:	4332      	orrs	r2, r6
 8002928:	d06f      	beq.n	8002a0a <__aeabi_dmul+0x456>
 800292a:	2c00      	cmp	r4, #0
 800292c:	d100      	bne.n	8002930 <__aeabi_dmul+0x37c>
 800292e:	e0c2      	b.n	8002ab6 <__aeabi_dmul+0x502>
 8002930:	0020      	movs	r0, r4
 8002932:	f000 fea9 	bl	8003688 <__clzsi2>
 8002936:	0002      	movs	r2, r0
 8002938:	0003      	movs	r3, r0
 800293a:	3a0b      	subs	r2, #11
 800293c:	201d      	movs	r0, #29
 800293e:	1a82      	subs	r2, r0, r2
 8002940:	0030      	movs	r0, r6
 8002942:	0019      	movs	r1, r3
 8002944:	40d0      	lsrs	r0, r2
 8002946:	3908      	subs	r1, #8
 8002948:	408c      	lsls	r4, r1
 800294a:	0002      	movs	r2, r0
 800294c:	4322      	orrs	r2, r4
 800294e:	0034      	movs	r4, r6
 8002950:	408c      	lsls	r4, r1
 8002952:	4659      	mov	r1, fp
 8002954:	1acb      	subs	r3, r1, r3
 8002956:	4986      	ldr	r1, [pc, #536]	@ (8002b70 <__aeabi_dmul+0x5bc>)
 8002958:	468b      	mov	fp, r1
 800295a:	449b      	add	fp, r3
 800295c:	2d0a      	cmp	r5, #10
 800295e:	dd00      	ble.n	8002962 <__aeabi_dmul+0x3ae>
 8002960:	e6a4      	b.n	80026ac <__aeabi_dmul+0xf8>
 8002962:	4649      	mov	r1, r9
 8002964:	9b00      	ldr	r3, [sp, #0]
 8002966:	9401      	str	r4, [sp, #4]
 8002968:	4059      	eors	r1, r3
 800296a:	b2cb      	uxtb	r3, r1
 800296c:	0014      	movs	r4, r2
 800296e:	2000      	movs	r0, #0
 8002970:	9303      	str	r3, [sp, #12]
 8002972:	2d02      	cmp	r5, #2
 8002974:	dd00      	ble.n	8002978 <__aeabi_dmul+0x3c4>
 8002976:	e667      	b.n	8002648 <__aeabi_dmul+0x94>
 8002978:	e6fb      	b.n	8002772 <__aeabi_dmul+0x1be>
 800297a:	4653      	mov	r3, sl
 800297c:	4303      	orrs	r3, r0
 800297e:	4698      	mov	r8, r3
 8002980:	d03c      	beq.n	80029fc <__aeabi_dmul+0x448>
 8002982:	4653      	mov	r3, sl
 8002984:	2b00      	cmp	r3, #0
 8002986:	d100      	bne.n	800298a <__aeabi_dmul+0x3d6>
 8002988:	e0a3      	b.n	8002ad2 <__aeabi_dmul+0x51e>
 800298a:	4650      	mov	r0, sl
 800298c:	f000 fe7c 	bl	8003688 <__clzsi2>
 8002990:	230b      	movs	r3, #11
 8002992:	425b      	negs	r3, r3
 8002994:	469c      	mov	ip, r3
 8002996:	0002      	movs	r2, r0
 8002998:	4484      	add	ip, r0
 800299a:	0011      	movs	r1, r2
 800299c:	4650      	mov	r0, sl
 800299e:	3908      	subs	r1, #8
 80029a0:	4088      	lsls	r0, r1
 80029a2:	231d      	movs	r3, #29
 80029a4:	4680      	mov	r8, r0
 80029a6:	4660      	mov	r0, ip
 80029a8:	1a1b      	subs	r3, r3, r0
 80029aa:	0020      	movs	r0, r4
 80029ac:	40d8      	lsrs	r0, r3
 80029ae:	0003      	movs	r3, r0
 80029b0:	4640      	mov	r0, r8
 80029b2:	4303      	orrs	r3, r0
 80029b4:	469a      	mov	sl, r3
 80029b6:	0023      	movs	r3, r4
 80029b8:	408b      	lsls	r3, r1
 80029ba:	4698      	mov	r8, r3
 80029bc:	4b6c      	ldr	r3, [pc, #432]	@ (8002b70 <__aeabi_dmul+0x5bc>)
 80029be:	2500      	movs	r5, #0
 80029c0:	1a9b      	subs	r3, r3, r2
 80029c2:	469b      	mov	fp, r3
 80029c4:	2300      	movs	r3, #0
 80029c6:	9302      	str	r3, [sp, #8]
 80029c8:	e61a      	b.n	8002600 <__aeabi_dmul+0x4c>
 80029ca:	2d0f      	cmp	r5, #15
 80029cc:	d000      	beq.n	80029d0 <__aeabi_dmul+0x41c>
 80029ce:	e0c9      	b.n	8002b64 <__aeabi_dmul+0x5b0>
 80029d0:	2380      	movs	r3, #128	@ 0x80
 80029d2:	4652      	mov	r2, sl
 80029d4:	031b      	lsls	r3, r3, #12
 80029d6:	421a      	tst	r2, r3
 80029d8:	d002      	beq.n	80029e0 <__aeabi_dmul+0x42c>
 80029da:	421c      	tst	r4, r3
 80029dc:	d100      	bne.n	80029e0 <__aeabi_dmul+0x42c>
 80029de:	e092      	b.n	8002b06 <__aeabi_dmul+0x552>
 80029e0:	2480      	movs	r4, #128	@ 0x80
 80029e2:	4653      	mov	r3, sl
 80029e4:	0324      	lsls	r4, r4, #12
 80029e6:	431c      	orrs	r4, r3
 80029e8:	0324      	lsls	r4, r4, #12
 80029ea:	4642      	mov	r2, r8
 80029ec:	0b24      	lsrs	r4, r4, #12
 80029ee:	e63e      	b.n	800266e <__aeabi_dmul+0xba>
 80029f0:	469b      	mov	fp, r3
 80029f2:	2303      	movs	r3, #3
 80029f4:	4680      	mov	r8, r0
 80029f6:	250c      	movs	r5, #12
 80029f8:	9302      	str	r3, [sp, #8]
 80029fa:	e601      	b.n	8002600 <__aeabi_dmul+0x4c>
 80029fc:	2300      	movs	r3, #0
 80029fe:	469a      	mov	sl, r3
 8002a00:	469b      	mov	fp, r3
 8002a02:	3301      	adds	r3, #1
 8002a04:	2504      	movs	r5, #4
 8002a06:	9302      	str	r3, [sp, #8]
 8002a08:	e5fa      	b.n	8002600 <__aeabi_dmul+0x4c>
 8002a0a:	2101      	movs	r1, #1
 8002a0c:	430d      	orrs	r5, r1
 8002a0e:	2d0a      	cmp	r5, #10
 8002a10:	dd00      	ble.n	8002a14 <__aeabi_dmul+0x460>
 8002a12:	e64b      	b.n	80026ac <__aeabi_dmul+0xf8>
 8002a14:	4649      	mov	r1, r9
 8002a16:	9800      	ldr	r0, [sp, #0]
 8002a18:	4041      	eors	r1, r0
 8002a1a:	b2c9      	uxtb	r1, r1
 8002a1c:	9103      	str	r1, [sp, #12]
 8002a1e:	2d02      	cmp	r5, #2
 8002a20:	dc00      	bgt.n	8002a24 <__aeabi_dmul+0x470>
 8002a22:	e096      	b.n	8002b52 <__aeabi_dmul+0x59e>
 8002a24:	2300      	movs	r3, #0
 8002a26:	2400      	movs	r4, #0
 8002a28:	2001      	movs	r0, #1
 8002a2a:	9301      	str	r3, [sp, #4]
 8002a2c:	e60c      	b.n	8002648 <__aeabi_dmul+0x94>
 8002a2e:	4649      	mov	r1, r9
 8002a30:	2302      	movs	r3, #2
 8002a32:	9a00      	ldr	r2, [sp, #0]
 8002a34:	432b      	orrs	r3, r5
 8002a36:	4051      	eors	r1, r2
 8002a38:	b2ca      	uxtb	r2, r1
 8002a3a:	9203      	str	r2, [sp, #12]
 8002a3c:	2b0a      	cmp	r3, #10
 8002a3e:	dd00      	ble.n	8002a42 <__aeabi_dmul+0x48e>
 8002a40:	e634      	b.n	80026ac <__aeabi_dmul+0xf8>
 8002a42:	2d00      	cmp	r5, #0
 8002a44:	d157      	bne.n	8002af6 <__aeabi_dmul+0x542>
 8002a46:	9b03      	ldr	r3, [sp, #12]
 8002a48:	4699      	mov	r9, r3
 8002a4a:	2400      	movs	r4, #0
 8002a4c:	2200      	movs	r2, #0
 8002a4e:	4b49      	ldr	r3, [pc, #292]	@ (8002b74 <__aeabi_dmul+0x5c0>)
 8002a50:	e60e      	b.n	8002670 <__aeabi_dmul+0xbc>
 8002a52:	4658      	mov	r0, fp
 8002a54:	2101      	movs	r1, #1
 8002a56:	1ac9      	subs	r1, r1, r3
 8002a58:	2938      	cmp	r1, #56	@ 0x38
 8002a5a:	dd00      	ble.n	8002a5e <__aeabi_dmul+0x4aa>
 8002a5c:	e62f      	b.n	80026be <__aeabi_dmul+0x10a>
 8002a5e:	291f      	cmp	r1, #31
 8002a60:	dd56      	ble.n	8002b10 <__aeabi_dmul+0x55c>
 8002a62:	221f      	movs	r2, #31
 8002a64:	4654      	mov	r4, sl
 8002a66:	4252      	negs	r2, r2
 8002a68:	1ad3      	subs	r3, r2, r3
 8002a6a:	40dc      	lsrs	r4, r3
 8002a6c:	2920      	cmp	r1, #32
 8002a6e:	d007      	beq.n	8002a80 <__aeabi_dmul+0x4cc>
 8002a70:	4b41      	ldr	r3, [pc, #260]	@ (8002b78 <__aeabi_dmul+0x5c4>)
 8002a72:	4642      	mov	r2, r8
 8002a74:	469c      	mov	ip, r3
 8002a76:	4653      	mov	r3, sl
 8002a78:	4460      	add	r0, ip
 8002a7a:	4083      	lsls	r3, r0
 8002a7c:	431a      	orrs	r2, r3
 8002a7e:	4690      	mov	r8, r2
 8002a80:	4642      	mov	r2, r8
 8002a82:	2107      	movs	r1, #7
 8002a84:	1e53      	subs	r3, r2, #1
 8002a86:	419a      	sbcs	r2, r3
 8002a88:	000b      	movs	r3, r1
 8002a8a:	4322      	orrs	r2, r4
 8002a8c:	4013      	ands	r3, r2
 8002a8e:	2400      	movs	r4, #0
 8002a90:	4211      	tst	r1, r2
 8002a92:	d009      	beq.n	8002aa8 <__aeabi_dmul+0x4f4>
 8002a94:	230f      	movs	r3, #15
 8002a96:	4013      	ands	r3, r2
 8002a98:	2b04      	cmp	r3, #4
 8002a9a:	d05d      	beq.n	8002b58 <__aeabi_dmul+0x5a4>
 8002a9c:	1d11      	adds	r1, r2, #4
 8002a9e:	4291      	cmp	r1, r2
 8002aa0:	419b      	sbcs	r3, r3
 8002aa2:	000a      	movs	r2, r1
 8002aa4:	425b      	negs	r3, r3
 8002aa6:	075b      	lsls	r3, r3, #29
 8002aa8:	08d2      	lsrs	r2, r2, #3
 8002aaa:	431a      	orrs	r2, r3
 8002aac:	2300      	movs	r3, #0
 8002aae:	e5df      	b.n	8002670 <__aeabi_dmul+0xbc>
 8002ab0:	9b03      	ldr	r3, [sp, #12]
 8002ab2:	4699      	mov	r9, r3
 8002ab4:	e5fa      	b.n	80026ac <__aeabi_dmul+0xf8>
 8002ab6:	9801      	ldr	r0, [sp, #4]
 8002ab8:	f000 fde6 	bl	8003688 <__clzsi2>
 8002abc:	0002      	movs	r2, r0
 8002abe:	0003      	movs	r3, r0
 8002ac0:	3215      	adds	r2, #21
 8002ac2:	3320      	adds	r3, #32
 8002ac4:	2a1c      	cmp	r2, #28
 8002ac6:	dc00      	bgt.n	8002aca <__aeabi_dmul+0x516>
 8002ac8:	e738      	b.n	800293c <__aeabi_dmul+0x388>
 8002aca:	9a01      	ldr	r2, [sp, #4]
 8002acc:	3808      	subs	r0, #8
 8002ace:	4082      	lsls	r2, r0
 8002ad0:	e73f      	b.n	8002952 <__aeabi_dmul+0x39e>
 8002ad2:	f000 fdd9 	bl	8003688 <__clzsi2>
 8002ad6:	2315      	movs	r3, #21
 8002ad8:	469c      	mov	ip, r3
 8002ada:	4484      	add	ip, r0
 8002adc:	0002      	movs	r2, r0
 8002ade:	4663      	mov	r3, ip
 8002ae0:	3220      	adds	r2, #32
 8002ae2:	2b1c      	cmp	r3, #28
 8002ae4:	dc00      	bgt.n	8002ae8 <__aeabi_dmul+0x534>
 8002ae6:	e758      	b.n	800299a <__aeabi_dmul+0x3e6>
 8002ae8:	2300      	movs	r3, #0
 8002aea:	4698      	mov	r8, r3
 8002aec:	0023      	movs	r3, r4
 8002aee:	3808      	subs	r0, #8
 8002af0:	4083      	lsls	r3, r0
 8002af2:	469a      	mov	sl, r3
 8002af4:	e762      	b.n	80029bc <__aeabi_dmul+0x408>
 8002af6:	001d      	movs	r5, r3
 8002af8:	2300      	movs	r3, #0
 8002afa:	2400      	movs	r4, #0
 8002afc:	2002      	movs	r0, #2
 8002afe:	9301      	str	r3, [sp, #4]
 8002b00:	e5a2      	b.n	8002648 <__aeabi_dmul+0x94>
 8002b02:	9002      	str	r0, [sp, #8]
 8002b04:	e632      	b.n	800276c <__aeabi_dmul+0x1b8>
 8002b06:	431c      	orrs	r4, r3
 8002b08:	9b00      	ldr	r3, [sp, #0]
 8002b0a:	9a01      	ldr	r2, [sp, #4]
 8002b0c:	4699      	mov	r9, r3
 8002b0e:	e5ae      	b.n	800266e <__aeabi_dmul+0xba>
 8002b10:	4b1a      	ldr	r3, [pc, #104]	@ (8002b7c <__aeabi_dmul+0x5c8>)
 8002b12:	4652      	mov	r2, sl
 8002b14:	18c3      	adds	r3, r0, r3
 8002b16:	4640      	mov	r0, r8
 8002b18:	409a      	lsls	r2, r3
 8002b1a:	40c8      	lsrs	r0, r1
 8002b1c:	4302      	orrs	r2, r0
 8002b1e:	4640      	mov	r0, r8
 8002b20:	4098      	lsls	r0, r3
 8002b22:	0003      	movs	r3, r0
 8002b24:	1e58      	subs	r0, r3, #1
 8002b26:	4183      	sbcs	r3, r0
 8002b28:	4654      	mov	r4, sl
 8002b2a:	431a      	orrs	r2, r3
 8002b2c:	40cc      	lsrs	r4, r1
 8002b2e:	0753      	lsls	r3, r2, #29
 8002b30:	d009      	beq.n	8002b46 <__aeabi_dmul+0x592>
 8002b32:	230f      	movs	r3, #15
 8002b34:	4013      	ands	r3, r2
 8002b36:	2b04      	cmp	r3, #4
 8002b38:	d005      	beq.n	8002b46 <__aeabi_dmul+0x592>
 8002b3a:	1d13      	adds	r3, r2, #4
 8002b3c:	4293      	cmp	r3, r2
 8002b3e:	4192      	sbcs	r2, r2
 8002b40:	4252      	negs	r2, r2
 8002b42:	18a4      	adds	r4, r4, r2
 8002b44:	001a      	movs	r2, r3
 8002b46:	0223      	lsls	r3, r4, #8
 8002b48:	d508      	bpl.n	8002b5c <__aeabi_dmul+0x5a8>
 8002b4a:	2301      	movs	r3, #1
 8002b4c:	2400      	movs	r4, #0
 8002b4e:	2200      	movs	r2, #0
 8002b50:	e58e      	b.n	8002670 <__aeabi_dmul+0xbc>
 8002b52:	4689      	mov	r9, r1
 8002b54:	2400      	movs	r4, #0
 8002b56:	e58b      	b.n	8002670 <__aeabi_dmul+0xbc>
 8002b58:	2300      	movs	r3, #0
 8002b5a:	e7a5      	b.n	8002aa8 <__aeabi_dmul+0x4f4>
 8002b5c:	0763      	lsls	r3, r4, #29
 8002b5e:	0264      	lsls	r4, r4, #9
 8002b60:	0b24      	lsrs	r4, r4, #12
 8002b62:	e7a1      	b.n	8002aa8 <__aeabi_dmul+0x4f4>
 8002b64:	9b00      	ldr	r3, [sp, #0]
 8002b66:	46a2      	mov	sl, r4
 8002b68:	4699      	mov	r9, r3
 8002b6a:	9b01      	ldr	r3, [sp, #4]
 8002b6c:	4698      	mov	r8, r3
 8002b6e:	e737      	b.n	80029e0 <__aeabi_dmul+0x42c>
 8002b70:	fffffc0d 	.word	0xfffffc0d
 8002b74:	000007ff 	.word	0x000007ff
 8002b78:	0000043e 	.word	0x0000043e
 8002b7c:	0000041e 	.word	0x0000041e

08002b80 <__aeabi_dsub>:
 8002b80:	b5f0      	push	{r4, r5, r6, r7, lr}
 8002b82:	4657      	mov	r7, sl
 8002b84:	464e      	mov	r6, r9
 8002b86:	4645      	mov	r5, r8
 8002b88:	46de      	mov	lr, fp
 8002b8a:	b5e0      	push	{r5, r6, r7, lr}
 8002b8c:	b083      	sub	sp, #12
 8002b8e:	9000      	str	r0, [sp, #0]
 8002b90:	9101      	str	r1, [sp, #4]
 8002b92:	030c      	lsls	r4, r1, #12
 8002b94:	004d      	lsls	r5, r1, #1
 8002b96:	0fce      	lsrs	r6, r1, #31
 8002b98:	0a61      	lsrs	r1, r4, #9
 8002b9a:	9c00      	ldr	r4, [sp, #0]
 8002b9c:	005f      	lsls	r7, r3, #1
 8002b9e:	0f64      	lsrs	r4, r4, #29
 8002ba0:	430c      	orrs	r4, r1
 8002ba2:	9900      	ldr	r1, [sp, #0]
 8002ba4:	9200      	str	r2, [sp, #0]
 8002ba6:	9301      	str	r3, [sp, #4]
 8002ba8:	00c8      	lsls	r0, r1, #3
 8002baa:	0319      	lsls	r1, r3, #12
 8002bac:	0d7b      	lsrs	r3, r7, #21
 8002bae:	4699      	mov	r9, r3
 8002bb0:	9b01      	ldr	r3, [sp, #4]
 8002bb2:	4fcc      	ldr	r7, [pc, #816]	@ (8002ee4 <__aeabi_dsub+0x364>)
 8002bb4:	0fdb      	lsrs	r3, r3, #31
 8002bb6:	469c      	mov	ip, r3
 8002bb8:	0a4b      	lsrs	r3, r1, #9
 8002bba:	9900      	ldr	r1, [sp, #0]
 8002bbc:	4680      	mov	r8, r0
 8002bbe:	0f49      	lsrs	r1, r1, #29
 8002bc0:	4319      	orrs	r1, r3
 8002bc2:	9b00      	ldr	r3, [sp, #0]
 8002bc4:	468b      	mov	fp, r1
 8002bc6:	00da      	lsls	r2, r3, #3
 8002bc8:	4692      	mov	sl, r2
 8002bca:	0d6d      	lsrs	r5, r5, #21
 8002bcc:	45b9      	cmp	r9, r7
 8002bce:	d100      	bne.n	8002bd2 <__aeabi_dsub+0x52>
 8002bd0:	e0bf      	b.n	8002d52 <__aeabi_dsub+0x1d2>
 8002bd2:	2301      	movs	r3, #1
 8002bd4:	4661      	mov	r1, ip
 8002bd6:	4059      	eors	r1, r3
 8002bd8:	464b      	mov	r3, r9
 8002bda:	468c      	mov	ip, r1
 8002bdc:	1aeb      	subs	r3, r5, r3
 8002bde:	428e      	cmp	r6, r1
 8002be0:	d075      	beq.n	8002cce <__aeabi_dsub+0x14e>
 8002be2:	2b00      	cmp	r3, #0
 8002be4:	dc00      	bgt.n	8002be8 <__aeabi_dsub+0x68>
 8002be6:	e2a3      	b.n	8003130 <__aeabi_dsub+0x5b0>
 8002be8:	4649      	mov	r1, r9
 8002bea:	2900      	cmp	r1, #0
 8002bec:	d100      	bne.n	8002bf0 <__aeabi_dsub+0x70>
 8002bee:	e0ce      	b.n	8002d8e <__aeabi_dsub+0x20e>
 8002bf0:	42bd      	cmp	r5, r7
 8002bf2:	d100      	bne.n	8002bf6 <__aeabi_dsub+0x76>
 8002bf4:	e200      	b.n	8002ff8 <__aeabi_dsub+0x478>
 8002bf6:	2701      	movs	r7, #1
 8002bf8:	2b38      	cmp	r3, #56	@ 0x38
 8002bfa:	dc19      	bgt.n	8002c30 <__aeabi_dsub+0xb0>
 8002bfc:	2780      	movs	r7, #128	@ 0x80
 8002bfe:	4659      	mov	r1, fp
 8002c00:	043f      	lsls	r7, r7, #16
 8002c02:	4339      	orrs	r1, r7
 8002c04:	468b      	mov	fp, r1
 8002c06:	2b1f      	cmp	r3, #31
 8002c08:	dd00      	ble.n	8002c0c <__aeabi_dsub+0x8c>
 8002c0a:	e1fa      	b.n	8003002 <__aeabi_dsub+0x482>
 8002c0c:	2720      	movs	r7, #32
 8002c0e:	1af9      	subs	r1, r7, r3
 8002c10:	468c      	mov	ip, r1
 8002c12:	4659      	mov	r1, fp
 8002c14:	4667      	mov	r7, ip
 8002c16:	40b9      	lsls	r1, r7
 8002c18:	000f      	movs	r7, r1
 8002c1a:	0011      	movs	r1, r2
 8002c1c:	40d9      	lsrs	r1, r3
 8002c1e:	430f      	orrs	r7, r1
 8002c20:	4661      	mov	r1, ip
 8002c22:	408a      	lsls	r2, r1
 8002c24:	1e51      	subs	r1, r2, #1
 8002c26:	418a      	sbcs	r2, r1
 8002c28:	4659      	mov	r1, fp
 8002c2a:	40d9      	lsrs	r1, r3
 8002c2c:	4317      	orrs	r7, r2
 8002c2e:	1a64      	subs	r4, r4, r1
 8002c30:	1bc7      	subs	r7, r0, r7
 8002c32:	42b8      	cmp	r0, r7
 8002c34:	4180      	sbcs	r0, r0
 8002c36:	4240      	negs	r0, r0
 8002c38:	1a24      	subs	r4, r4, r0
 8002c3a:	0223      	lsls	r3, r4, #8
 8002c3c:	d400      	bmi.n	8002c40 <__aeabi_dsub+0xc0>
 8002c3e:	e140      	b.n	8002ec2 <__aeabi_dsub+0x342>
 8002c40:	0264      	lsls	r4, r4, #9
 8002c42:	0a64      	lsrs	r4, r4, #9
 8002c44:	2c00      	cmp	r4, #0
 8002c46:	d100      	bne.n	8002c4a <__aeabi_dsub+0xca>
 8002c48:	e154      	b.n	8002ef4 <__aeabi_dsub+0x374>
 8002c4a:	0020      	movs	r0, r4
 8002c4c:	f000 fd1c 	bl	8003688 <__clzsi2>
 8002c50:	0003      	movs	r3, r0
 8002c52:	3b08      	subs	r3, #8
 8002c54:	2120      	movs	r1, #32
 8002c56:	0038      	movs	r0, r7
 8002c58:	1aca      	subs	r2, r1, r3
 8002c5a:	40d0      	lsrs	r0, r2
 8002c5c:	409c      	lsls	r4, r3
 8002c5e:	0002      	movs	r2, r0
 8002c60:	409f      	lsls	r7, r3
 8002c62:	4322      	orrs	r2, r4
 8002c64:	429d      	cmp	r5, r3
 8002c66:	dd00      	ble.n	8002c6a <__aeabi_dsub+0xea>
 8002c68:	e1a6      	b.n	8002fb8 <__aeabi_dsub+0x438>
 8002c6a:	1b58      	subs	r0, r3, r5
 8002c6c:	3001      	adds	r0, #1
 8002c6e:	1a09      	subs	r1, r1, r0
 8002c70:	003c      	movs	r4, r7
 8002c72:	408f      	lsls	r7, r1
 8002c74:	40c4      	lsrs	r4, r0
 8002c76:	1e7b      	subs	r3, r7, #1
 8002c78:	419f      	sbcs	r7, r3
 8002c7a:	0013      	movs	r3, r2
 8002c7c:	408b      	lsls	r3, r1
 8002c7e:	4327      	orrs	r7, r4
 8002c80:	431f      	orrs	r7, r3
 8002c82:	40c2      	lsrs	r2, r0
 8002c84:	003b      	movs	r3, r7
 8002c86:	0014      	movs	r4, r2
 8002c88:	2500      	movs	r5, #0
 8002c8a:	4313      	orrs	r3, r2
 8002c8c:	d100      	bne.n	8002c90 <__aeabi_dsub+0x110>
 8002c8e:	e1f7      	b.n	8003080 <__aeabi_dsub+0x500>
 8002c90:	077b      	lsls	r3, r7, #29
 8002c92:	d100      	bne.n	8002c96 <__aeabi_dsub+0x116>
 8002c94:	e377      	b.n	8003386 <__aeabi_dsub+0x806>
 8002c96:	230f      	movs	r3, #15
 8002c98:	0038      	movs	r0, r7
 8002c9a:	403b      	ands	r3, r7
 8002c9c:	2b04      	cmp	r3, #4
 8002c9e:	d004      	beq.n	8002caa <__aeabi_dsub+0x12a>
 8002ca0:	1d38      	adds	r0, r7, #4
 8002ca2:	42b8      	cmp	r0, r7
 8002ca4:	41bf      	sbcs	r7, r7
 8002ca6:	427f      	negs	r7, r7
 8002ca8:	19e4      	adds	r4, r4, r7
 8002caa:	0223      	lsls	r3, r4, #8
 8002cac:	d400      	bmi.n	8002cb0 <__aeabi_dsub+0x130>
 8002cae:	e368      	b.n	8003382 <__aeabi_dsub+0x802>
 8002cb0:	4b8c      	ldr	r3, [pc, #560]	@ (8002ee4 <__aeabi_dsub+0x364>)
 8002cb2:	3501      	adds	r5, #1
 8002cb4:	429d      	cmp	r5, r3
 8002cb6:	d100      	bne.n	8002cba <__aeabi_dsub+0x13a>
 8002cb8:	e0f4      	b.n	8002ea4 <__aeabi_dsub+0x324>
 8002cba:	4b8b      	ldr	r3, [pc, #556]	@ (8002ee8 <__aeabi_dsub+0x368>)
 8002cbc:	056d      	lsls	r5, r5, #21
 8002cbe:	401c      	ands	r4, r3
 8002cc0:	0d6d      	lsrs	r5, r5, #21
 8002cc2:	0767      	lsls	r7, r4, #29
 8002cc4:	08c0      	lsrs	r0, r0, #3
 8002cc6:	0264      	lsls	r4, r4, #9
 8002cc8:	4307      	orrs	r7, r0
 8002cca:	0b24      	lsrs	r4, r4, #12
 8002ccc:	e0ec      	b.n	8002ea8 <__aeabi_dsub+0x328>
 8002cce:	2b00      	cmp	r3, #0
 8002cd0:	dc00      	bgt.n	8002cd4 <__aeabi_dsub+0x154>
 8002cd2:	e329      	b.n	8003328 <__aeabi_dsub+0x7a8>
 8002cd4:	4649      	mov	r1, r9
 8002cd6:	2900      	cmp	r1, #0
 8002cd8:	d000      	beq.n	8002cdc <__aeabi_dsub+0x15c>
 8002cda:	e0d6      	b.n	8002e8a <__aeabi_dsub+0x30a>
 8002cdc:	4659      	mov	r1, fp
 8002cde:	4311      	orrs	r1, r2
 8002ce0:	d100      	bne.n	8002ce4 <__aeabi_dsub+0x164>
 8002ce2:	e12e      	b.n	8002f42 <__aeabi_dsub+0x3c2>
 8002ce4:	1e59      	subs	r1, r3, #1
 8002ce6:	2b01      	cmp	r3, #1
 8002ce8:	d100      	bne.n	8002cec <__aeabi_dsub+0x16c>
 8002cea:	e1e6      	b.n	80030ba <__aeabi_dsub+0x53a>
 8002cec:	42bb      	cmp	r3, r7
 8002cee:	d100      	bne.n	8002cf2 <__aeabi_dsub+0x172>
 8002cf0:	e182      	b.n	8002ff8 <__aeabi_dsub+0x478>
 8002cf2:	2701      	movs	r7, #1
 8002cf4:	000b      	movs	r3, r1
 8002cf6:	2938      	cmp	r1, #56	@ 0x38
 8002cf8:	dc14      	bgt.n	8002d24 <__aeabi_dsub+0x1a4>
 8002cfa:	2b1f      	cmp	r3, #31
 8002cfc:	dd00      	ble.n	8002d00 <__aeabi_dsub+0x180>
 8002cfe:	e23c      	b.n	800317a <__aeabi_dsub+0x5fa>
 8002d00:	2720      	movs	r7, #32
 8002d02:	1af9      	subs	r1, r7, r3
 8002d04:	468c      	mov	ip, r1
 8002d06:	4659      	mov	r1, fp
 8002d08:	4667      	mov	r7, ip
 8002d0a:	40b9      	lsls	r1, r7
 8002d0c:	000f      	movs	r7, r1
 8002d0e:	0011      	movs	r1, r2
 8002d10:	40d9      	lsrs	r1, r3
 8002d12:	430f      	orrs	r7, r1
 8002d14:	4661      	mov	r1, ip
 8002d16:	408a      	lsls	r2, r1
 8002d18:	1e51      	subs	r1, r2, #1
 8002d1a:	418a      	sbcs	r2, r1
 8002d1c:	4659      	mov	r1, fp
 8002d1e:	40d9      	lsrs	r1, r3
 8002d20:	4317      	orrs	r7, r2
 8002d22:	1864      	adds	r4, r4, r1
 8002d24:	183f      	adds	r7, r7, r0
 8002d26:	4287      	cmp	r7, r0
 8002d28:	4180      	sbcs	r0, r0
 8002d2a:	4240      	negs	r0, r0
 8002d2c:	1824      	adds	r4, r4, r0
 8002d2e:	0223      	lsls	r3, r4, #8
 8002d30:	d400      	bmi.n	8002d34 <__aeabi_dsub+0x1b4>
 8002d32:	e0c6      	b.n	8002ec2 <__aeabi_dsub+0x342>
 8002d34:	4b6b      	ldr	r3, [pc, #428]	@ (8002ee4 <__aeabi_dsub+0x364>)
 8002d36:	3501      	adds	r5, #1
 8002d38:	429d      	cmp	r5, r3
 8002d3a:	d100      	bne.n	8002d3e <__aeabi_dsub+0x1be>
 8002d3c:	e0b2      	b.n	8002ea4 <__aeabi_dsub+0x324>
 8002d3e:	2101      	movs	r1, #1
 8002d40:	4b69      	ldr	r3, [pc, #420]	@ (8002ee8 <__aeabi_dsub+0x368>)
 8002d42:	087a      	lsrs	r2, r7, #1
 8002d44:	401c      	ands	r4, r3
 8002d46:	4039      	ands	r1, r7
 8002d48:	430a      	orrs	r2, r1
 8002d4a:	07e7      	lsls	r7, r4, #31
 8002d4c:	4317      	orrs	r7, r2
 8002d4e:	0864      	lsrs	r4, r4, #1
 8002d50:	e79e      	b.n	8002c90 <__aeabi_dsub+0x110>
 8002d52:	4b66      	ldr	r3, [pc, #408]	@ (8002eec <__aeabi_dsub+0x36c>)
 8002d54:	4311      	orrs	r1, r2
 8002d56:	468a      	mov	sl, r1
 8002d58:	18eb      	adds	r3, r5, r3
 8002d5a:	2900      	cmp	r1, #0
 8002d5c:	d028      	beq.n	8002db0 <__aeabi_dsub+0x230>
 8002d5e:	4566      	cmp	r6, ip
 8002d60:	d02c      	beq.n	8002dbc <__aeabi_dsub+0x23c>
 8002d62:	2b00      	cmp	r3, #0
 8002d64:	d05b      	beq.n	8002e1e <__aeabi_dsub+0x29e>
 8002d66:	2d00      	cmp	r5, #0
 8002d68:	d100      	bne.n	8002d6c <__aeabi_dsub+0x1ec>
 8002d6a:	e12c      	b.n	8002fc6 <__aeabi_dsub+0x446>
 8002d6c:	465b      	mov	r3, fp
 8002d6e:	4666      	mov	r6, ip
 8002d70:	075f      	lsls	r7, r3, #29
 8002d72:	08d2      	lsrs	r2, r2, #3
 8002d74:	4317      	orrs	r7, r2
 8002d76:	08dd      	lsrs	r5, r3, #3
 8002d78:	003b      	movs	r3, r7
 8002d7a:	432b      	orrs	r3, r5
 8002d7c:	d100      	bne.n	8002d80 <__aeabi_dsub+0x200>
 8002d7e:	e0e2      	b.n	8002f46 <__aeabi_dsub+0x3c6>
 8002d80:	2480      	movs	r4, #128	@ 0x80
 8002d82:	0324      	lsls	r4, r4, #12
 8002d84:	432c      	orrs	r4, r5
 8002d86:	0324      	lsls	r4, r4, #12
 8002d88:	4d56      	ldr	r5, [pc, #344]	@ (8002ee4 <__aeabi_dsub+0x364>)
 8002d8a:	0b24      	lsrs	r4, r4, #12
 8002d8c:	e08c      	b.n	8002ea8 <__aeabi_dsub+0x328>
 8002d8e:	4659      	mov	r1, fp
 8002d90:	4311      	orrs	r1, r2
 8002d92:	d100      	bne.n	8002d96 <__aeabi_dsub+0x216>
 8002d94:	e0d5      	b.n	8002f42 <__aeabi_dsub+0x3c2>
 8002d96:	1e59      	subs	r1, r3, #1
 8002d98:	2b01      	cmp	r3, #1
 8002d9a:	d100      	bne.n	8002d9e <__aeabi_dsub+0x21e>
 8002d9c:	e1b9      	b.n	8003112 <__aeabi_dsub+0x592>
 8002d9e:	42bb      	cmp	r3, r7
 8002da0:	d100      	bne.n	8002da4 <__aeabi_dsub+0x224>
 8002da2:	e1b1      	b.n	8003108 <__aeabi_dsub+0x588>
 8002da4:	2701      	movs	r7, #1
 8002da6:	000b      	movs	r3, r1
 8002da8:	2938      	cmp	r1, #56	@ 0x38
 8002daa:	dd00      	ble.n	8002dae <__aeabi_dsub+0x22e>
 8002dac:	e740      	b.n	8002c30 <__aeabi_dsub+0xb0>
 8002dae:	e72a      	b.n	8002c06 <__aeabi_dsub+0x86>
 8002db0:	4661      	mov	r1, ip
 8002db2:	2701      	movs	r7, #1
 8002db4:	4079      	eors	r1, r7
 8002db6:	468c      	mov	ip, r1
 8002db8:	4566      	cmp	r6, ip
 8002dba:	d1d2      	bne.n	8002d62 <__aeabi_dsub+0x1e2>
 8002dbc:	2b00      	cmp	r3, #0
 8002dbe:	d100      	bne.n	8002dc2 <__aeabi_dsub+0x242>
 8002dc0:	e0c5      	b.n	8002f4e <__aeabi_dsub+0x3ce>
 8002dc2:	2d00      	cmp	r5, #0
 8002dc4:	d000      	beq.n	8002dc8 <__aeabi_dsub+0x248>
 8002dc6:	e155      	b.n	8003074 <__aeabi_dsub+0x4f4>
 8002dc8:	464b      	mov	r3, r9
 8002dca:	0025      	movs	r5, r4
 8002dcc:	4305      	orrs	r5, r0
 8002dce:	d100      	bne.n	8002dd2 <__aeabi_dsub+0x252>
 8002dd0:	e212      	b.n	80031f8 <__aeabi_dsub+0x678>
 8002dd2:	1e59      	subs	r1, r3, #1
 8002dd4:	468c      	mov	ip, r1
 8002dd6:	2b01      	cmp	r3, #1
 8002dd8:	d100      	bne.n	8002ddc <__aeabi_dsub+0x25c>
 8002dda:	e249      	b.n	8003270 <__aeabi_dsub+0x6f0>
 8002ddc:	4d41      	ldr	r5, [pc, #260]	@ (8002ee4 <__aeabi_dsub+0x364>)
 8002dde:	42ab      	cmp	r3, r5
 8002de0:	d100      	bne.n	8002de4 <__aeabi_dsub+0x264>
 8002de2:	e28f      	b.n	8003304 <__aeabi_dsub+0x784>
 8002de4:	2701      	movs	r7, #1
 8002de6:	2938      	cmp	r1, #56	@ 0x38
 8002de8:	dc11      	bgt.n	8002e0e <__aeabi_dsub+0x28e>
 8002dea:	4663      	mov	r3, ip
 8002dec:	2b1f      	cmp	r3, #31
 8002dee:	dd00      	ble.n	8002df2 <__aeabi_dsub+0x272>
 8002df0:	e25b      	b.n	80032aa <__aeabi_dsub+0x72a>
 8002df2:	4661      	mov	r1, ip
 8002df4:	2320      	movs	r3, #32
 8002df6:	0027      	movs	r7, r4
 8002df8:	1a5b      	subs	r3, r3, r1
 8002dfa:	0005      	movs	r5, r0
 8002dfc:	4098      	lsls	r0, r3
 8002dfe:	409f      	lsls	r7, r3
 8002e00:	40cd      	lsrs	r5, r1
 8002e02:	1e43      	subs	r3, r0, #1
 8002e04:	4198      	sbcs	r0, r3
 8002e06:	40cc      	lsrs	r4, r1
 8002e08:	432f      	orrs	r7, r5
 8002e0a:	4307      	orrs	r7, r0
 8002e0c:	44a3      	add	fp, r4
 8002e0e:	18bf      	adds	r7, r7, r2
 8002e10:	4297      	cmp	r7, r2
 8002e12:	4192      	sbcs	r2, r2
 8002e14:	4252      	negs	r2, r2
 8002e16:	445a      	add	r2, fp
 8002e18:	0014      	movs	r4, r2
 8002e1a:	464d      	mov	r5, r9
 8002e1c:	e787      	b.n	8002d2e <__aeabi_dsub+0x1ae>
 8002e1e:	4f34      	ldr	r7, [pc, #208]	@ (8002ef0 <__aeabi_dsub+0x370>)
 8002e20:	1c6b      	adds	r3, r5, #1
 8002e22:	423b      	tst	r3, r7
 8002e24:	d000      	beq.n	8002e28 <__aeabi_dsub+0x2a8>
 8002e26:	e0b6      	b.n	8002f96 <__aeabi_dsub+0x416>
 8002e28:	4659      	mov	r1, fp
 8002e2a:	0023      	movs	r3, r4
 8002e2c:	4311      	orrs	r1, r2
 8002e2e:	000f      	movs	r7, r1
 8002e30:	4303      	orrs	r3, r0
 8002e32:	2d00      	cmp	r5, #0
 8002e34:	d000      	beq.n	8002e38 <__aeabi_dsub+0x2b8>
 8002e36:	e126      	b.n	8003086 <__aeabi_dsub+0x506>
 8002e38:	2b00      	cmp	r3, #0
 8002e3a:	d100      	bne.n	8002e3e <__aeabi_dsub+0x2be>
 8002e3c:	e1c0      	b.n	80031c0 <__aeabi_dsub+0x640>
 8002e3e:	2900      	cmp	r1, #0
 8002e40:	d100      	bne.n	8002e44 <__aeabi_dsub+0x2c4>
 8002e42:	e0a1      	b.n	8002f88 <__aeabi_dsub+0x408>
 8002e44:	1a83      	subs	r3, r0, r2
 8002e46:	4698      	mov	r8, r3
 8002e48:	465b      	mov	r3, fp
 8002e4a:	4540      	cmp	r0, r8
 8002e4c:	41ad      	sbcs	r5, r5
 8002e4e:	1ae3      	subs	r3, r4, r3
 8002e50:	426d      	negs	r5, r5
 8002e52:	1b5b      	subs	r3, r3, r5
 8002e54:	2580      	movs	r5, #128	@ 0x80
 8002e56:	042d      	lsls	r5, r5, #16
 8002e58:	422b      	tst	r3, r5
 8002e5a:	d100      	bne.n	8002e5e <__aeabi_dsub+0x2de>
 8002e5c:	e14b      	b.n	80030f6 <__aeabi_dsub+0x576>
 8002e5e:	465b      	mov	r3, fp
 8002e60:	1a10      	subs	r0, r2, r0
 8002e62:	4282      	cmp	r2, r0
 8002e64:	4192      	sbcs	r2, r2
 8002e66:	1b1c      	subs	r4, r3, r4
 8002e68:	0007      	movs	r7, r0
 8002e6a:	2601      	movs	r6, #1
 8002e6c:	4663      	mov	r3, ip
 8002e6e:	4252      	negs	r2, r2
 8002e70:	1aa4      	subs	r4, r4, r2
 8002e72:	4327      	orrs	r7, r4
 8002e74:	401e      	ands	r6, r3
 8002e76:	2f00      	cmp	r7, #0
 8002e78:	d100      	bne.n	8002e7c <__aeabi_dsub+0x2fc>
 8002e7a:	e142      	b.n	8003102 <__aeabi_dsub+0x582>
 8002e7c:	422c      	tst	r4, r5
 8002e7e:	d100      	bne.n	8002e82 <__aeabi_dsub+0x302>
 8002e80:	e26d      	b.n	800335e <__aeabi_dsub+0x7de>
 8002e82:	4b19      	ldr	r3, [pc, #100]	@ (8002ee8 <__aeabi_dsub+0x368>)
 8002e84:	2501      	movs	r5, #1
 8002e86:	401c      	ands	r4, r3
 8002e88:	e71b      	b.n	8002cc2 <__aeabi_dsub+0x142>
 8002e8a:	42bd      	cmp	r5, r7
 8002e8c:	d100      	bne.n	8002e90 <__aeabi_dsub+0x310>
 8002e8e:	e13b      	b.n	8003108 <__aeabi_dsub+0x588>
 8002e90:	2701      	movs	r7, #1
 8002e92:	2b38      	cmp	r3, #56	@ 0x38
 8002e94:	dd00      	ble.n	8002e98 <__aeabi_dsub+0x318>
 8002e96:	e745      	b.n	8002d24 <__aeabi_dsub+0x1a4>
 8002e98:	2780      	movs	r7, #128	@ 0x80
 8002e9a:	4659      	mov	r1, fp
 8002e9c:	043f      	lsls	r7, r7, #16
 8002e9e:	4339      	orrs	r1, r7
 8002ea0:	468b      	mov	fp, r1
 8002ea2:	e72a      	b.n	8002cfa <__aeabi_dsub+0x17a>
 8002ea4:	2400      	movs	r4, #0
 8002ea6:	2700      	movs	r7, #0
 8002ea8:	052d      	lsls	r5, r5, #20
 8002eaa:	4325      	orrs	r5, r4
 8002eac:	07f6      	lsls	r6, r6, #31
 8002eae:	4335      	orrs	r5, r6
 8002eb0:	0038      	movs	r0, r7
 8002eb2:	0029      	movs	r1, r5
 8002eb4:	b003      	add	sp, #12
 8002eb6:	bcf0      	pop	{r4, r5, r6, r7}
 8002eb8:	46bb      	mov	fp, r7
 8002eba:	46b2      	mov	sl, r6
 8002ebc:	46a9      	mov	r9, r5
 8002ebe:	46a0      	mov	r8, r4
 8002ec0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002ec2:	077b      	lsls	r3, r7, #29
 8002ec4:	d004      	beq.n	8002ed0 <__aeabi_dsub+0x350>
 8002ec6:	230f      	movs	r3, #15
 8002ec8:	403b      	ands	r3, r7
 8002eca:	2b04      	cmp	r3, #4
 8002ecc:	d000      	beq.n	8002ed0 <__aeabi_dsub+0x350>
 8002ece:	e6e7      	b.n	8002ca0 <__aeabi_dsub+0x120>
 8002ed0:	002b      	movs	r3, r5
 8002ed2:	08f8      	lsrs	r0, r7, #3
 8002ed4:	4a03      	ldr	r2, [pc, #12]	@ (8002ee4 <__aeabi_dsub+0x364>)
 8002ed6:	0767      	lsls	r7, r4, #29
 8002ed8:	4307      	orrs	r7, r0
 8002eda:	08e5      	lsrs	r5, r4, #3
 8002edc:	4293      	cmp	r3, r2
 8002ede:	d100      	bne.n	8002ee2 <__aeabi_dsub+0x362>
 8002ee0:	e74a      	b.n	8002d78 <__aeabi_dsub+0x1f8>
 8002ee2:	e0a5      	b.n	8003030 <__aeabi_dsub+0x4b0>
 8002ee4:	000007ff 	.word	0x000007ff
 8002ee8:	ff7fffff 	.word	0xff7fffff
 8002eec:	fffff801 	.word	0xfffff801
 8002ef0:	000007fe 	.word	0x000007fe
 8002ef4:	0038      	movs	r0, r7
 8002ef6:	f000 fbc7 	bl	8003688 <__clzsi2>
 8002efa:	0003      	movs	r3, r0
 8002efc:	3318      	adds	r3, #24
 8002efe:	2b1f      	cmp	r3, #31
 8002f00:	dc00      	bgt.n	8002f04 <__aeabi_dsub+0x384>
 8002f02:	e6a7      	b.n	8002c54 <__aeabi_dsub+0xd4>
 8002f04:	003a      	movs	r2, r7
 8002f06:	3808      	subs	r0, #8
 8002f08:	4082      	lsls	r2, r0
 8002f0a:	429d      	cmp	r5, r3
 8002f0c:	dd00      	ble.n	8002f10 <__aeabi_dsub+0x390>
 8002f0e:	e08a      	b.n	8003026 <__aeabi_dsub+0x4a6>
 8002f10:	1b5b      	subs	r3, r3, r5
 8002f12:	1c58      	adds	r0, r3, #1
 8002f14:	281f      	cmp	r0, #31
 8002f16:	dc00      	bgt.n	8002f1a <__aeabi_dsub+0x39a>
 8002f18:	e1d8      	b.n	80032cc <__aeabi_dsub+0x74c>
 8002f1a:	0017      	movs	r7, r2
 8002f1c:	3b1f      	subs	r3, #31
 8002f1e:	40df      	lsrs	r7, r3
 8002f20:	2820      	cmp	r0, #32
 8002f22:	d005      	beq.n	8002f30 <__aeabi_dsub+0x3b0>
 8002f24:	2340      	movs	r3, #64	@ 0x40
 8002f26:	1a1b      	subs	r3, r3, r0
 8002f28:	409a      	lsls	r2, r3
 8002f2a:	1e53      	subs	r3, r2, #1
 8002f2c:	419a      	sbcs	r2, r3
 8002f2e:	4317      	orrs	r7, r2
 8002f30:	2500      	movs	r5, #0
 8002f32:	2f00      	cmp	r7, #0
 8002f34:	d100      	bne.n	8002f38 <__aeabi_dsub+0x3b8>
 8002f36:	e0e5      	b.n	8003104 <__aeabi_dsub+0x584>
 8002f38:	077b      	lsls	r3, r7, #29
 8002f3a:	d000      	beq.n	8002f3e <__aeabi_dsub+0x3be>
 8002f3c:	e6ab      	b.n	8002c96 <__aeabi_dsub+0x116>
 8002f3e:	002c      	movs	r4, r5
 8002f40:	e7c6      	b.n	8002ed0 <__aeabi_dsub+0x350>
 8002f42:	08c0      	lsrs	r0, r0, #3
 8002f44:	e7c6      	b.n	8002ed4 <__aeabi_dsub+0x354>
 8002f46:	2700      	movs	r7, #0
 8002f48:	2400      	movs	r4, #0
 8002f4a:	4dd1      	ldr	r5, [pc, #836]	@ (8003290 <__aeabi_dsub+0x710>)
 8002f4c:	e7ac      	b.n	8002ea8 <__aeabi_dsub+0x328>
 8002f4e:	4fd1      	ldr	r7, [pc, #836]	@ (8003294 <__aeabi_dsub+0x714>)
 8002f50:	1c6b      	adds	r3, r5, #1
 8002f52:	423b      	tst	r3, r7
 8002f54:	d171      	bne.n	800303a <__aeabi_dsub+0x4ba>
 8002f56:	0023      	movs	r3, r4
 8002f58:	4303      	orrs	r3, r0
 8002f5a:	2d00      	cmp	r5, #0
 8002f5c:	d000      	beq.n	8002f60 <__aeabi_dsub+0x3e0>
 8002f5e:	e14e      	b.n	80031fe <__aeabi_dsub+0x67e>
 8002f60:	4657      	mov	r7, sl
 8002f62:	2b00      	cmp	r3, #0
 8002f64:	d100      	bne.n	8002f68 <__aeabi_dsub+0x3e8>
 8002f66:	e1b5      	b.n	80032d4 <__aeabi_dsub+0x754>
 8002f68:	2f00      	cmp	r7, #0
 8002f6a:	d00d      	beq.n	8002f88 <__aeabi_dsub+0x408>
 8002f6c:	1883      	adds	r3, r0, r2
 8002f6e:	4283      	cmp	r3, r0
 8002f70:	4180      	sbcs	r0, r0
 8002f72:	445c      	add	r4, fp
 8002f74:	4240      	negs	r0, r0
 8002f76:	1824      	adds	r4, r4, r0
 8002f78:	0222      	lsls	r2, r4, #8
 8002f7a:	d500      	bpl.n	8002f7e <__aeabi_dsub+0x3fe>
 8002f7c:	e1c8      	b.n	8003310 <__aeabi_dsub+0x790>
 8002f7e:	001f      	movs	r7, r3
 8002f80:	4698      	mov	r8, r3
 8002f82:	4327      	orrs	r7, r4
 8002f84:	d100      	bne.n	8002f88 <__aeabi_dsub+0x408>
 8002f86:	e0bc      	b.n	8003102 <__aeabi_dsub+0x582>
 8002f88:	4643      	mov	r3, r8
 8002f8a:	0767      	lsls	r7, r4, #29
 8002f8c:	08db      	lsrs	r3, r3, #3
 8002f8e:	431f      	orrs	r7, r3
 8002f90:	08e5      	lsrs	r5, r4, #3
 8002f92:	2300      	movs	r3, #0
 8002f94:	e04c      	b.n	8003030 <__aeabi_dsub+0x4b0>
 8002f96:	1a83      	subs	r3, r0, r2
 8002f98:	4698      	mov	r8, r3
 8002f9a:	465b      	mov	r3, fp
 8002f9c:	4540      	cmp	r0, r8
 8002f9e:	41bf      	sbcs	r7, r7
 8002fa0:	1ae3      	subs	r3, r4, r3
 8002fa2:	427f      	negs	r7, r7
 8002fa4:	1bdb      	subs	r3, r3, r7
 8002fa6:	021f      	lsls	r7, r3, #8
 8002fa8:	d47c      	bmi.n	80030a4 <__aeabi_dsub+0x524>
 8002faa:	4647      	mov	r7, r8
 8002fac:	431f      	orrs	r7, r3
 8002fae:	d100      	bne.n	8002fb2 <__aeabi_dsub+0x432>
 8002fb0:	e0a6      	b.n	8003100 <__aeabi_dsub+0x580>
 8002fb2:	001c      	movs	r4, r3
 8002fb4:	4647      	mov	r7, r8
 8002fb6:	e645      	b.n	8002c44 <__aeabi_dsub+0xc4>
 8002fb8:	4cb7      	ldr	r4, [pc, #732]	@ (8003298 <__aeabi_dsub+0x718>)
 8002fba:	1aed      	subs	r5, r5, r3
 8002fbc:	4014      	ands	r4, r2
 8002fbe:	077b      	lsls	r3, r7, #29
 8002fc0:	d000      	beq.n	8002fc4 <__aeabi_dsub+0x444>
 8002fc2:	e780      	b.n	8002ec6 <__aeabi_dsub+0x346>
 8002fc4:	e784      	b.n	8002ed0 <__aeabi_dsub+0x350>
 8002fc6:	464b      	mov	r3, r9
 8002fc8:	0025      	movs	r5, r4
 8002fca:	4305      	orrs	r5, r0
 8002fcc:	d066      	beq.n	800309c <__aeabi_dsub+0x51c>
 8002fce:	1e5f      	subs	r7, r3, #1
 8002fd0:	2b01      	cmp	r3, #1
 8002fd2:	d100      	bne.n	8002fd6 <__aeabi_dsub+0x456>
 8002fd4:	e0fc      	b.n	80031d0 <__aeabi_dsub+0x650>
 8002fd6:	4dae      	ldr	r5, [pc, #696]	@ (8003290 <__aeabi_dsub+0x710>)
 8002fd8:	42ab      	cmp	r3, r5
 8002fda:	d100      	bne.n	8002fde <__aeabi_dsub+0x45e>
 8002fdc:	e15e      	b.n	800329c <__aeabi_dsub+0x71c>
 8002fde:	4666      	mov	r6, ip
 8002fe0:	2f38      	cmp	r7, #56	@ 0x38
 8002fe2:	dc00      	bgt.n	8002fe6 <__aeabi_dsub+0x466>
 8002fe4:	e0b4      	b.n	8003150 <__aeabi_dsub+0x5d0>
 8002fe6:	2001      	movs	r0, #1
 8002fe8:	1a17      	subs	r7, r2, r0
 8002fea:	42ba      	cmp	r2, r7
 8002fec:	4192      	sbcs	r2, r2
 8002fee:	465b      	mov	r3, fp
 8002ff0:	4252      	negs	r2, r2
 8002ff2:	464d      	mov	r5, r9
 8002ff4:	1a9c      	subs	r4, r3, r2
 8002ff6:	e620      	b.n	8002c3a <__aeabi_dsub+0xba>
 8002ff8:	0767      	lsls	r7, r4, #29
 8002ffa:	08c0      	lsrs	r0, r0, #3
 8002ffc:	4307      	orrs	r7, r0
 8002ffe:	08e5      	lsrs	r5, r4, #3
 8003000:	e6ba      	b.n	8002d78 <__aeabi_dsub+0x1f8>
 8003002:	001f      	movs	r7, r3
 8003004:	4659      	mov	r1, fp
 8003006:	3f20      	subs	r7, #32
 8003008:	40f9      	lsrs	r1, r7
 800300a:	000f      	movs	r7, r1
 800300c:	2b20      	cmp	r3, #32
 800300e:	d005      	beq.n	800301c <__aeabi_dsub+0x49c>
 8003010:	2140      	movs	r1, #64	@ 0x40
 8003012:	1acb      	subs	r3, r1, r3
 8003014:	4659      	mov	r1, fp
 8003016:	4099      	lsls	r1, r3
 8003018:	430a      	orrs	r2, r1
 800301a:	4692      	mov	sl, r2
 800301c:	4653      	mov	r3, sl
 800301e:	1e5a      	subs	r2, r3, #1
 8003020:	4193      	sbcs	r3, r2
 8003022:	431f      	orrs	r7, r3
 8003024:	e604      	b.n	8002c30 <__aeabi_dsub+0xb0>
 8003026:	1aeb      	subs	r3, r5, r3
 8003028:	4d9b      	ldr	r5, [pc, #620]	@ (8003298 <__aeabi_dsub+0x718>)
 800302a:	4015      	ands	r5, r2
 800302c:	076f      	lsls	r7, r5, #29
 800302e:	08ed      	lsrs	r5, r5, #3
 8003030:	032c      	lsls	r4, r5, #12
 8003032:	055d      	lsls	r5, r3, #21
 8003034:	0b24      	lsrs	r4, r4, #12
 8003036:	0d6d      	lsrs	r5, r5, #21
 8003038:	e736      	b.n	8002ea8 <__aeabi_dsub+0x328>
 800303a:	4d95      	ldr	r5, [pc, #596]	@ (8003290 <__aeabi_dsub+0x710>)
 800303c:	42ab      	cmp	r3, r5
 800303e:	d100      	bne.n	8003042 <__aeabi_dsub+0x4c2>
 8003040:	e0d6      	b.n	80031f0 <__aeabi_dsub+0x670>
 8003042:	1882      	adds	r2, r0, r2
 8003044:	0021      	movs	r1, r4
 8003046:	4282      	cmp	r2, r0
 8003048:	4180      	sbcs	r0, r0
 800304a:	4459      	add	r1, fp
 800304c:	4240      	negs	r0, r0
 800304e:	1808      	adds	r0, r1, r0
 8003050:	07c7      	lsls	r7, r0, #31
 8003052:	0852      	lsrs	r2, r2, #1
 8003054:	4317      	orrs	r7, r2
 8003056:	0844      	lsrs	r4, r0, #1
 8003058:	0752      	lsls	r2, r2, #29
 800305a:	d400      	bmi.n	800305e <__aeabi_dsub+0x4de>
 800305c:	e185      	b.n	800336a <__aeabi_dsub+0x7ea>
 800305e:	220f      	movs	r2, #15
 8003060:	001d      	movs	r5, r3
 8003062:	403a      	ands	r2, r7
 8003064:	2a04      	cmp	r2, #4
 8003066:	d000      	beq.n	800306a <__aeabi_dsub+0x4ea>
 8003068:	e61a      	b.n	8002ca0 <__aeabi_dsub+0x120>
 800306a:	08ff      	lsrs	r7, r7, #3
 800306c:	0764      	lsls	r4, r4, #29
 800306e:	4327      	orrs	r7, r4
 8003070:	0905      	lsrs	r5, r0, #4
 8003072:	e7dd      	b.n	8003030 <__aeabi_dsub+0x4b0>
 8003074:	465b      	mov	r3, fp
 8003076:	08d2      	lsrs	r2, r2, #3
 8003078:	075f      	lsls	r7, r3, #29
 800307a:	4317      	orrs	r7, r2
 800307c:	08dd      	lsrs	r5, r3, #3
 800307e:	e67b      	b.n	8002d78 <__aeabi_dsub+0x1f8>
 8003080:	2700      	movs	r7, #0
 8003082:	2400      	movs	r4, #0
 8003084:	e710      	b.n	8002ea8 <__aeabi_dsub+0x328>
 8003086:	2b00      	cmp	r3, #0
 8003088:	d000      	beq.n	800308c <__aeabi_dsub+0x50c>
 800308a:	e0d6      	b.n	800323a <__aeabi_dsub+0x6ba>
 800308c:	2900      	cmp	r1, #0
 800308e:	d000      	beq.n	8003092 <__aeabi_dsub+0x512>
 8003090:	e12f      	b.n	80032f2 <__aeabi_dsub+0x772>
 8003092:	2480      	movs	r4, #128	@ 0x80
 8003094:	2600      	movs	r6, #0
 8003096:	4d7e      	ldr	r5, [pc, #504]	@ (8003290 <__aeabi_dsub+0x710>)
 8003098:	0324      	lsls	r4, r4, #12
 800309a:	e705      	b.n	8002ea8 <__aeabi_dsub+0x328>
 800309c:	4666      	mov	r6, ip
 800309e:	465c      	mov	r4, fp
 80030a0:	08d0      	lsrs	r0, r2, #3
 80030a2:	e717      	b.n	8002ed4 <__aeabi_dsub+0x354>
 80030a4:	465b      	mov	r3, fp
 80030a6:	1a17      	subs	r7, r2, r0
 80030a8:	42ba      	cmp	r2, r7
 80030aa:	4192      	sbcs	r2, r2
 80030ac:	1b1c      	subs	r4, r3, r4
 80030ae:	2601      	movs	r6, #1
 80030b0:	4663      	mov	r3, ip
 80030b2:	4252      	negs	r2, r2
 80030b4:	1aa4      	subs	r4, r4, r2
 80030b6:	401e      	ands	r6, r3
 80030b8:	e5c4      	b.n	8002c44 <__aeabi_dsub+0xc4>
 80030ba:	1883      	adds	r3, r0, r2
 80030bc:	4283      	cmp	r3, r0
 80030be:	4180      	sbcs	r0, r0
 80030c0:	445c      	add	r4, fp
 80030c2:	4240      	negs	r0, r0
 80030c4:	1825      	adds	r5, r4, r0
 80030c6:	022a      	lsls	r2, r5, #8
 80030c8:	d400      	bmi.n	80030cc <__aeabi_dsub+0x54c>
 80030ca:	e0da      	b.n	8003282 <__aeabi_dsub+0x702>
 80030cc:	4a72      	ldr	r2, [pc, #456]	@ (8003298 <__aeabi_dsub+0x718>)
 80030ce:	085b      	lsrs	r3, r3, #1
 80030d0:	4015      	ands	r5, r2
 80030d2:	07ea      	lsls	r2, r5, #31
 80030d4:	431a      	orrs	r2, r3
 80030d6:	0869      	lsrs	r1, r5, #1
 80030d8:	075b      	lsls	r3, r3, #29
 80030da:	d400      	bmi.n	80030de <__aeabi_dsub+0x55e>
 80030dc:	e14a      	b.n	8003374 <__aeabi_dsub+0x7f4>
 80030de:	230f      	movs	r3, #15
 80030e0:	4013      	ands	r3, r2
 80030e2:	2b04      	cmp	r3, #4
 80030e4:	d100      	bne.n	80030e8 <__aeabi_dsub+0x568>
 80030e6:	e0fc      	b.n	80032e2 <__aeabi_dsub+0x762>
 80030e8:	1d17      	adds	r7, r2, #4
 80030ea:	4297      	cmp	r7, r2
 80030ec:	41a4      	sbcs	r4, r4
 80030ee:	4264      	negs	r4, r4
 80030f0:	2502      	movs	r5, #2
 80030f2:	1864      	adds	r4, r4, r1
 80030f4:	e6ec      	b.n	8002ed0 <__aeabi_dsub+0x350>
 80030f6:	4647      	mov	r7, r8
 80030f8:	001c      	movs	r4, r3
 80030fa:	431f      	orrs	r7, r3
 80030fc:	d000      	beq.n	8003100 <__aeabi_dsub+0x580>
 80030fe:	e743      	b.n	8002f88 <__aeabi_dsub+0x408>
 8003100:	2600      	movs	r6, #0
 8003102:	2500      	movs	r5, #0
 8003104:	2400      	movs	r4, #0
 8003106:	e6cf      	b.n	8002ea8 <__aeabi_dsub+0x328>
 8003108:	08c0      	lsrs	r0, r0, #3
 800310a:	0767      	lsls	r7, r4, #29
 800310c:	4307      	orrs	r7, r0
 800310e:	08e5      	lsrs	r5, r4, #3
 8003110:	e632      	b.n	8002d78 <__aeabi_dsub+0x1f8>
 8003112:	1a87      	subs	r7, r0, r2
 8003114:	465b      	mov	r3, fp
 8003116:	42b8      	cmp	r0, r7
 8003118:	4180      	sbcs	r0, r0
 800311a:	1ae4      	subs	r4, r4, r3
 800311c:	4240      	negs	r0, r0
 800311e:	1a24      	subs	r4, r4, r0
 8003120:	0223      	lsls	r3, r4, #8
 8003122:	d428      	bmi.n	8003176 <__aeabi_dsub+0x5f6>
 8003124:	0763      	lsls	r3, r4, #29
 8003126:	08ff      	lsrs	r7, r7, #3
 8003128:	431f      	orrs	r7, r3
 800312a:	08e5      	lsrs	r5, r4, #3
 800312c:	2301      	movs	r3, #1
 800312e:	e77f      	b.n	8003030 <__aeabi_dsub+0x4b0>
 8003130:	2b00      	cmp	r3, #0
 8003132:	d100      	bne.n	8003136 <__aeabi_dsub+0x5b6>
 8003134:	e673      	b.n	8002e1e <__aeabi_dsub+0x29e>
 8003136:	464b      	mov	r3, r9
 8003138:	1b5f      	subs	r7, r3, r5
 800313a:	003b      	movs	r3, r7
 800313c:	2d00      	cmp	r5, #0
 800313e:	d100      	bne.n	8003142 <__aeabi_dsub+0x5c2>
 8003140:	e742      	b.n	8002fc8 <__aeabi_dsub+0x448>
 8003142:	2f38      	cmp	r7, #56	@ 0x38
 8003144:	dd00      	ble.n	8003148 <__aeabi_dsub+0x5c8>
 8003146:	e0ec      	b.n	8003322 <__aeabi_dsub+0x7a2>
 8003148:	2380      	movs	r3, #128	@ 0x80
 800314a:	000e      	movs	r6, r1
 800314c:	041b      	lsls	r3, r3, #16
 800314e:	431c      	orrs	r4, r3
 8003150:	2f1f      	cmp	r7, #31
 8003152:	dc25      	bgt.n	80031a0 <__aeabi_dsub+0x620>
 8003154:	2520      	movs	r5, #32
 8003156:	0023      	movs	r3, r4
 8003158:	1bed      	subs	r5, r5, r7
 800315a:	0001      	movs	r1, r0
 800315c:	40a8      	lsls	r0, r5
 800315e:	40ab      	lsls	r3, r5
 8003160:	40f9      	lsrs	r1, r7
 8003162:	1e45      	subs	r5, r0, #1
 8003164:	41a8      	sbcs	r0, r5
 8003166:	430b      	orrs	r3, r1
 8003168:	40fc      	lsrs	r4, r7
 800316a:	4318      	orrs	r0, r3
 800316c:	465b      	mov	r3, fp
 800316e:	1b1b      	subs	r3, r3, r4
 8003170:	469b      	mov	fp, r3
 8003172:	e739      	b.n	8002fe8 <__aeabi_dsub+0x468>
 8003174:	4666      	mov	r6, ip
 8003176:	2501      	movs	r5, #1
 8003178:	e562      	b.n	8002c40 <__aeabi_dsub+0xc0>
 800317a:	001f      	movs	r7, r3
 800317c:	4659      	mov	r1, fp
 800317e:	3f20      	subs	r7, #32
 8003180:	40f9      	lsrs	r1, r7
 8003182:	468c      	mov	ip, r1
 8003184:	2b20      	cmp	r3, #32
 8003186:	d005      	beq.n	8003194 <__aeabi_dsub+0x614>
 8003188:	2740      	movs	r7, #64	@ 0x40
 800318a:	4659      	mov	r1, fp
 800318c:	1afb      	subs	r3, r7, r3
 800318e:	4099      	lsls	r1, r3
 8003190:	430a      	orrs	r2, r1
 8003192:	4692      	mov	sl, r2
 8003194:	4657      	mov	r7, sl
 8003196:	1e7b      	subs	r3, r7, #1
 8003198:	419f      	sbcs	r7, r3
 800319a:	4663      	mov	r3, ip
 800319c:	431f      	orrs	r7, r3
 800319e:	e5c1      	b.n	8002d24 <__aeabi_dsub+0x1a4>
 80031a0:	003b      	movs	r3, r7
 80031a2:	0025      	movs	r5, r4
 80031a4:	3b20      	subs	r3, #32
 80031a6:	40dd      	lsrs	r5, r3
 80031a8:	2f20      	cmp	r7, #32
 80031aa:	d004      	beq.n	80031b6 <__aeabi_dsub+0x636>
 80031ac:	2340      	movs	r3, #64	@ 0x40
 80031ae:	1bdb      	subs	r3, r3, r7
 80031b0:	409c      	lsls	r4, r3
 80031b2:	4320      	orrs	r0, r4
 80031b4:	4680      	mov	r8, r0
 80031b6:	4640      	mov	r0, r8
 80031b8:	1e43      	subs	r3, r0, #1
 80031ba:	4198      	sbcs	r0, r3
 80031bc:	4328      	orrs	r0, r5
 80031be:	e713      	b.n	8002fe8 <__aeabi_dsub+0x468>
 80031c0:	2900      	cmp	r1, #0
 80031c2:	d09d      	beq.n	8003100 <__aeabi_dsub+0x580>
 80031c4:	2601      	movs	r6, #1
 80031c6:	4663      	mov	r3, ip
 80031c8:	465c      	mov	r4, fp
 80031ca:	4690      	mov	r8, r2
 80031cc:	401e      	ands	r6, r3
 80031ce:	e6db      	b.n	8002f88 <__aeabi_dsub+0x408>
 80031d0:	1a17      	subs	r7, r2, r0
 80031d2:	465b      	mov	r3, fp
 80031d4:	42ba      	cmp	r2, r7
 80031d6:	4192      	sbcs	r2, r2
 80031d8:	1b1c      	subs	r4, r3, r4
 80031da:	4252      	negs	r2, r2
 80031dc:	1aa4      	subs	r4, r4, r2
 80031de:	0223      	lsls	r3, r4, #8
 80031e0:	d4c8      	bmi.n	8003174 <__aeabi_dsub+0x5f4>
 80031e2:	0763      	lsls	r3, r4, #29
 80031e4:	08ff      	lsrs	r7, r7, #3
 80031e6:	431f      	orrs	r7, r3
 80031e8:	4666      	mov	r6, ip
 80031ea:	2301      	movs	r3, #1
 80031ec:	08e5      	lsrs	r5, r4, #3
 80031ee:	e71f      	b.n	8003030 <__aeabi_dsub+0x4b0>
 80031f0:	001d      	movs	r5, r3
 80031f2:	2400      	movs	r4, #0
 80031f4:	2700      	movs	r7, #0
 80031f6:	e657      	b.n	8002ea8 <__aeabi_dsub+0x328>
 80031f8:	465c      	mov	r4, fp
 80031fa:	08d0      	lsrs	r0, r2, #3
 80031fc:	e66a      	b.n	8002ed4 <__aeabi_dsub+0x354>
 80031fe:	2b00      	cmp	r3, #0
 8003200:	d100      	bne.n	8003204 <__aeabi_dsub+0x684>
 8003202:	e737      	b.n	8003074 <__aeabi_dsub+0x4f4>
 8003204:	4653      	mov	r3, sl
 8003206:	08c0      	lsrs	r0, r0, #3
 8003208:	0767      	lsls	r7, r4, #29
 800320a:	4307      	orrs	r7, r0
 800320c:	08e5      	lsrs	r5, r4, #3
 800320e:	2b00      	cmp	r3, #0
 8003210:	d100      	bne.n	8003214 <__aeabi_dsub+0x694>
 8003212:	e5b1      	b.n	8002d78 <__aeabi_dsub+0x1f8>
 8003214:	2380      	movs	r3, #128	@ 0x80
 8003216:	031b      	lsls	r3, r3, #12
 8003218:	421d      	tst	r5, r3
 800321a:	d008      	beq.n	800322e <__aeabi_dsub+0x6ae>
 800321c:	4659      	mov	r1, fp
 800321e:	08c8      	lsrs	r0, r1, #3
 8003220:	4218      	tst	r0, r3
 8003222:	d104      	bne.n	800322e <__aeabi_dsub+0x6ae>
 8003224:	08d2      	lsrs	r2, r2, #3
 8003226:	0749      	lsls	r1, r1, #29
 8003228:	430a      	orrs	r2, r1
 800322a:	0017      	movs	r7, r2
 800322c:	0005      	movs	r5, r0
 800322e:	0f7b      	lsrs	r3, r7, #29
 8003230:	00ff      	lsls	r7, r7, #3
 8003232:	08ff      	lsrs	r7, r7, #3
 8003234:	075b      	lsls	r3, r3, #29
 8003236:	431f      	orrs	r7, r3
 8003238:	e59e      	b.n	8002d78 <__aeabi_dsub+0x1f8>
 800323a:	08c0      	lsrs	r0, r0, #3
 800323c:	0763      	lsls	r3, r4, #29
 800323e:	4318      	orrs	r0, r3
 8003240:	08e5      	lsrs	r5, r4, #3
 8003242:	2900      	cmp	r1, #0
 8003244:	d053      	beq.n	80032ee <__aeabi_dsub+0x76e>
 8003246:	2380      	movs	r3, #128	@ 0x80
 8003248:	031b      	lsls	r3, r3, #12
 800324a:	421d      	tst	r5, r3
 800324c:	d00a      	beq.n	8003264 <__aeabi_dsub+0x6e4>
 800324e:	4659      	mov	r1, fp
 8003250:	08cc      	lsrs	r4, r1, #3
 8003252:	421c      	tst	r4, r3
 8003254:	d106      	bne.n	8003264 <__aeabi_dsub+0x6e4>
 8003256:	2601      	movs	r6, #1
 8003258:	4663      	mov	r3, ip
 800325a:	0025      	movs	r5, r4
 800325c:	08d0      	lsrs	r0, r2, #3
 800325e:	0749      	lsls	r1, r1, #29
 8003260:	4308      	orrs	r0, r1
 8003262:	401e      	ands	r6, r3
 8003264:	0f47      	lsrs	r7, r0, #29
 8003266:	00c0      	lsls	r0, r0, #3
 8003268:	08c0      	lsrs	r0, r0, #3
 800326a:	077f      	lsls	r7, r7, #29
 800326c:	4307      	orrs	r7, r0
 800326e:	e583      	b.n	8002d78 <__aeabi_dsub+0x1f8>
 8003270:	1883      	adds	r3, r0, r2
 8003272:	4293      	cmp	r3, r2
 8003274:	4192      	sbcs	r2, r2
 8003276:	445c      	add	r4, fp
 8003278:	4252      	negs	r2, r2
 800327a:	18a5      	adds	r5, r4, r2
 800327c:	022a      	lsls	r2, r5, #8
 800327e:	d500      	bpl.n	8003282 <__aeabi_dsub+0x702>
 8003280:	e724      	b.n	80030cc <__aeabi_dsub+0x54c>
 8003282:	076f      	lsls	r7, r5, #29
 8003284:	08db      	lsrs	r3, r3, #3
 8003286:	431f      	orrs	r7, r3
 8003288:	08ed      	lsrs	r5, r5, #3
 800328a:	2301      	movs	r3, #1
 800328c:	e6d0      	b.n	8003030 <__aeabi_dsub+0x4b0>
 800328e:	46c0      	nop			@ (mov r8, r8)
 8003290:	000007ff 	.word	0x000007ff
 8003294:	000007fe 	.word	0x000007fe
 8003298:	ff7fffff 	.word	0xff7fffff
 800329c:	465b      	mov	r3, fp
 800329e:	08d2      	lsrs	r2, r2, #3
 80032a0:	075f      	lsls	r7, r3, #29
 80032a2:	4666      	mov	r6, ip
 80032a4:	4317      	orrs	r7, r2
 80032a6:	08dd      	lsrs	r5, r3, #3
 80032a8:	e566      	b.n	8002d78 <__aeabi_dsub+0x1f8>
 80032aa:	0025      	movs	r5, r4
 80032ac:	3b20      	subs	r3, #32
 80032ae:	40dd      	lsrs	r5, r3
 80032b0:	4663      	mov	r3, ip
 80032b2:	2b20      	cmp	r3, #32
 80032b4:	d005      	beq.n	80032c2 <__aeabi_dsub+0x742>
 80032b6:	2340      	movs	r3, #64	@ 0x40
 80032b8:	4661      	mov	r1, ip
 80032ba:	1a5b      	subs	r3, r3, r1
 80032bc:	409c      	lsls	r4, r3
 80032be:	4320      	orrs	r0, r4
 80032c0:	4680      	mov	r8, r0
 80032c2:	4647      	mov	r7, r8
 80032c4:	1e7b      	subs	r3, r7, #1
 80032c6:	419f      	sbcs	r7, r3
 80032c8:	432f      	orrs	r7, r5
 80032ca:	e5a0      	b.n	8002e0e <__aeabi_dsub+0x28e>
 80032cc:	2120      	movs	r1, #32
 80032ce:	2700      	movs	r7, #0
 80032d0:	1a09      	subs	r1, r1, r0
 80032d2:	e4d2      	b.n	8002c7a <__aeabi_dsub+0xfa>
 80032d4:	2f00      	cmp	r7, #0
 80032d6:	d100      	bne.n	80032da <__aeabi_dsub+0x75a>
 80032d8:	e713      	b.n	8003102 <__aeabi_dsub+0x582>
 80032da:	465c      	mov	r4, fp
 80032dc:	0017      	movs	r7, r2
 80032de:	2500      	movs	r5, #0
 80032e0:	e5f6      	b.n	8002ed0 <__aeabi_dsub+0x350>
 80032e2:	08d7      	lsrs	r7, r2, #3
 80032e4:	0749      	lsls	r1, r1, #29
 80032e6:	2302      	movs	r3, #2
 80032e8:	430f      	orrs	r7, r1
 80032ea:	092d      	lsrs	r5, r5, #4
 80032ec:	e6a0      	b.n	8003030 <__aeabi_dsub+0x4b0>
 80032ee:	0007      	movs	r7, r0
 80032f0:	e542      	b.n	8002d78 <__aeabi_dsub+0x1f8>
 80032f2:	465b      	mov	r3, fp
 80032f4:	2601      	movs	r6, #1
 80032f6:	075f      	lsls	r7, r3, #29
 80032f8:	08dd      	lsrs	r5, r3, #3
 80032fa:	4663      	mov	r3, ip
 80032fc:	08d2      	lsrs	r2, r2, #3
 80032fe:	4317      	orrs	r7, r2
 8003300:	401e      	ands	r6, r3
 8003302:	e539      	b.n	8002d78 <__aeabi_dsub+0x1f8>
 8003304:	465b      	mov	r3, fp
 8003306:	08d2      	lsrs	r2, r2, #3
 8003308:	075f      	lsls	r7, r3, #29
 800330a:	4317      	orrs	r7, r2
 800330c:	08dd      	lsrs	r5, r3, #3
 800330e:	e533      	b.n	8002d78 <__aeabi_dsub+0x1f8>
 8003310:	4a1e      	ldr	r2, [pc, #120]	@ (800338c <__aeabi_dsub+0x80c>)
 8003312:	08db      	lsrs	r3, r3, #3
 8003314:	4022      	ands	r2, r4
 8003316:	0757      	lsls	r7, r2, #29
 8003318:	0252      	lsls	r2, r2, #9
 800331a:	2501      	movs	r5, #1
 800331c:	431f      	orrs	r7, r3
 800331e:	0b14      	lsrs	r4, r2, #12
 8003320:	e5c2      	b.n	8002ea8 <__aeabi_dsub+0x328>
 8003322:	000e      	movs	r6, r1
 8003324:	2001      	movs	r0, #1
 8003326:	e65f      	b.n	8002fe8 <__aeabi_dsub+0x468>
 8003328:	2b00      	cmp	r3, #0
 800332a:	d00d      	beq.n	8003348 <__aeabi_dsub+0x7c8>
 800332c:	464b      	mov	r3, r9
 800332e:	1b5b      	subs	r3, r3, r5
 8003330:	469c      	mov	ip, r3
 8003332:	2d00      	cmp	r5, #0
 8003334:	d100      	bne.n	8003338 <__aeabi_dsub+0x7b8>
 8003336:	e548      	b.n	8002dca <__aeabi_dsub+0x24a>
 8003338:	2701      	movs	r7, #1
 800333a:	2b38      	cmp	r3, #56	@ 0x38
 800333c:	dd00      	ble.n	8003340 <__aeabi_dsub+0x7c0>
 800333e:	e566      	b.n	8002e0e <__aeabi_dsub+0x28e>
 8003340:	2380      	movs	r3, #128	@ 0x80
 8003342:	041b      	lsls	r3, r3, #16
 8003344:	431c      	orrs	r4, r3
 8003346:	e550      	b.n	8002dea <__aeabi_dsub+0x26a>
 8003348:	1c6b      	adds	r3, r5, #1
 800334a:	4d11      	ldr	r5, [pc, #68]	@ (8003390 <__aeabi_dsub+0x810>)
 800334c:	422b      	tst	r3, r5
 800334e:	d000      	beq.n	8003352 <__aeabi_dsub+0x7d2>
 8003350:	e673      	b.n	800303a <__aeabi_dsub+0x4ba>
 8003352:	4659      	mov	r1, fp
 8003354:	0023      	movs	r3, r4
 8003356:	4311      	orrs	r1, r2
 8003358:	468a      	mov	sl, r1
 800335a:	4303      	orrs	r3, r0
 800335c:	e600      	b.n	8002f60 <__aeabi_dsub+0x3e0>
 800335e:	0767      	lsls	r7, r4, #29
 8003360:	08c0      	lsrs	r0, r0, #3
 8003362:	2300      	movs	r3, #0
 8003364:	4307      	orrs	r7, r0
 8003366:	08e5      	lsrs	r5, r4, #3
 8003368:	e662      	b.n	8003030 <__aeabi_dsub+0x4b0>
 800336a:	0764      	lsls	r4, r4, #29
 800336c:	08ff      	lsrs	r7, r7, #3
 800336e:	4327      	orrs	r7, r4
 8003370:	0905      	lsrs	r5, r0, #4
 8003372:	e65d      	b.n	8003030 <__aeabi_dsub+0x4b0>
 8003374:	08d2      	lsrs	r2, r2, #3
 8003376:	0749      	lsls	r1, r1, #29
 8003378:	4311      	orrs	r1, r2
 800337a:	000f      	movs	r7, r1
 800337c:	2302      	movs	r3, #2
 800337e:	092d      	lsrs	r5, r5, #4
 8003380:	e656      	b.n	8003030 <__aeabi_dsub+0x4b0>
 8003382:	0007      	movs	r7, r0
 8003384:	e5a4      	b.n	8002ed0 <__aeabi_dsub+0x350>
 8003386:	0038      	movs	r0, r7
 8003388:	e48f      	b.n	8002caa <__aeabi_dsub+0x12a>
 800338a:	46c0      	nop			@ (mov r8, r8)
 800338c:	ff7fffff 	.word	0xff7fffff
 8003390:	000007fe 	.word	0x000007fe

08003394 <__aeabi_dcmpun>:
 8003394:	b5f0      	push	{r4, r5, r6, r7, lr}
 8003396:	46c6      	mov	lr, r8
 8003398:	031e      	lsls	r6, r3, #12
 800339a:	0b36      	lsrs	r6, r6, #12
 800339c:	46b0      	mov	r8, r6
 800339e:	4e0d      	ldr	r6, [pc, #52]	@ (80033d4 <__aeabi_dcmpun+0x40>)
 80033a0:	030c      	lsls	r4, r1, #12
 80033a2:	004d      	lsls	r5, r1, #1
 80033a4:	005f      	lsls	r7, r3, #1
 80033a6:	b500      	push	{lr}
 80033a8:	0b24      	lsrs	r4, r4, #12
 80033aa:	0d6d      	lsrs	r5, r5, #21
 80033ac:	0d7f      	lsrs	r7, r7, #21
 80033ae:	42b5      	cmp	r5, r6
 80033b0:	d00b      	beq.n	80033ca <__aeabi_dcmpun+0x36>
 80033b2:	4908      	ldr	r1, [pc, #32]	@ (80033d4 <__aeabi_dcmpun+0x40>)
 80033b4:	2000      	movs	r0, #0
 80033b6:	428f      	cmp	r7, r1
 80033b8:	d104      	bne.n	80033c4 <__aeabi_dcmpun+0x30>
 80033ba:	4646      	mov	r6, r8
 80033bc:	4316      	orrs	r6, r2
 80033be:	0030      	movs	r0, r6
 80033c0:	1e43      	subs	r3, r0, #1
 80033c2:	4198      	sbcs	r0, r3
 80033c4:	bc80      	pop	{r7}
 80033c6:	46b8      	mov	r8, r7
 80033c8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80033ca:	4304      	orrs	r4, r0
 80033cc:	2001      	movs	r0, #1
 80033ce:	2c00      	cmp	r4, #0
 80033d0:	d1f8      	bne.n	80033c4 <__aeabi_dcmpun+0x30>
 80033d2:	e7ee      	b.n	80033b2 <__aeabi_dcmpun+0x1e>
 80033d4:	000007ff 	.word	0x000007ff

080033d8 <__aeabi_d2iz>:
 80033d8:	000b      	movs	r3, r1
 80033da:	0002      	movs	r2, r0
 80033dc:	b570      	push	{r4, r5, r6, lr}
 80033de:	4d16      	ldr	r5, [pc, #88]	@ (8003438 <__aeabi_d2iz+0x60>)
 80033e0:	030c      	lsls	r4, r1, #12
 80033e2:	b082      	sub	sp, #8
 80033e4:	0049      	lsls	r1, r1, #1
 80033e6:	2000      	movs	r0, #0
 80033e8:	9200      	str	r2, [sp, #0]
 80033ea:	9301      	str	r3, [sp, #4]
 80033ec:	0b24      	lsrs	r4, r4, #12
 80033ee:	0d49      	lsrs	r1, r1, #21
 80033f0:	0fde      	lsrs	r6, r3, #31
 80033f2:	42a9      	cmp	r1, r5
 80033f4:	dd04      	ble.n	8003400 <__aeabi_d2iz+0x28>
 80033f6:	4811      	ldr	r0, [pc, #68]	@ (800343c <__aeabi_d2iz+0x64>)
 80033f8:	4281      	cmp	r1, r0
 80033fa:	dd03      	ble.n	8003404 <__aeabi_d2iz+0x2c>
 80033fc:	4b10      	ldr	r3, [pc, #64]	@ (8003440 <__aeabi_d2iz+0x68>)
 80033fe:	18f0      	adds	r0, r6, r3
 8003400:	b002      	add	sp, #8
 8003402:	bd70      	pop	{r4, r5, r6, pc}
 8003404:	2080      	movs	r0, #128	@ 0x80
 8003406:	0340      	lsls	r0, r0, #13
 8003408:	4320      	orrs	r0, r4
 800340a:	4c0e      	ldr	r4, [pc, #56]	@ (8003444 <__aeabi_d2iz+0x6c>)
 800340c:	1a64      	subs	r4, r4, r1
 800340e:	2c1f      	cmp	r4, #31
 8003410:	dd08      	ble.n	8003424 <__aeabi_d2iz+0x4c>
 8003412:	4b0d      	ldr	r3, [pc, #52]	@ (8003448 <__aeabi_d2iz+0x70>)
 8003414:	1a5b      	subs	r3, r3, r1
 8003416:	40d8      	lsrs	r0, r3
 8003418:	0003      	movs	r3, r0
 800341a:	4258      	negs	r0, r3
 800341c:	2e00      	cmp	r6, #0
 800341e:	d1ef      	bne.n	8003400 <__aeabi_d2iz+0x28>
 8003420:	0018      	movs	r0, r3
 8003422:	e7ed      	b.n	8003400 <__aeabi_d2iz+0x28>
 8003424:	4b09      	ldr	r3, [pc, #36]	@ (800344c <__aeabi_d2iz+0x74>)
 8003426:	9a00      	ldr	r2, [sp, #0]
 8003428:	469c      	mov	ip, r3
 800342a:	0003      	movs	r3, r0
 800342c:	4461      	add	r1, ip
 800342e:	408b      	lsls	r3, r1
 8003430:	40e2      	lsrs	r2, r4
 8003432:	4313      	orrs	r3, r2
 8003434:	e7f1      	b.n	800341a <__aeabi_d2iz+0x42>
 8003436:	46c0      	nop			@ (mov r8, r8)
 8003438:	000003fe 	.word	0x000003fe
 800343c:	0000041d 	.word	0x0000041d
 8003440:	7fffffff 	.word	0x7fffffff
 8003444:	00000433 	.word	0x00000433
 8003448:	00000413 	.word	0x00000413
 800344c:	fffffbed 	.word	0xfffffbed

08003450 <__aeabi_i2d>:
 8003450:	b570      	push	{r4, r5, r6, lr}
 8003452:	2800      	cmp	r0, #0
 8003454:	d016      	beq.n	8003484 <__aeabi_i2d+0x34>
 8003456:	17c3      	asrs	r3, r0, #31
 8003458:	18c5      	adds	r5, r0, r3
 800345a:	405d      	eors	r5, r3
 800345c:	0fc4      	lsrs	r4, r0, #31
 800345e:	0028      	movs	r0, r5
 8003460:	f000 f912 	bl	8003688 <__clzsi2>
 8003464:	4b10      	ldr	r3, [pc, #64]	@ (80034a8 <__aeabi_i2d+0x58>)
 8003466:	1a1b      	subs	r3, r3, r0
 8003468:	055b      	lsls	r3, r3, #21
 800346a:	0d5b      	lsrs	r3, r3, #21
 800346c:	280a      	cmp	r0, #10
 800346e:	dc14      	bgt.n	800349a <__aeabi_i2d+0x4a>
 8003470:	0002      	movs	r2, r0
 8003472:	002e      	movs	r6, r5
 8003474:	3215      	adds	r2, #21
 8003476:	4096      	lsls	r6, r2
 8003478:	220b      	movs	r2, #11
 800347a:	1a12      	subs	r2, r2, r0
 800347c:	40d5      	lsrs	r5, r2
 800347e:	032d      	lsls	r5, r5, #12
 8003480:	0b2d      	lsrs	r5, r5, #12
 8003482:	e003      	b.n	800348c <__aeabi_i2d+0x3c>
 8003484:	2400      	movs	r4, #0
 8003486:	2300      	movs	r3, #0
 8003488:	2500      	movs	r5, #0
 800348a:	2600      	movs	r6, #0
 800348c:	051b      	lsls	r3, r3, #20
 800348e:	432b      	orrs	r3, r5
 8003490:	07e4      	lsls	r4, r4, #31
 8003492:	4323      	orrs	r3, r4
 8003494:	0030      	movs	r0, r6
 8003496:	0019      	movs	r1, r3
 8003498:	bd70      	pop	{r4, r5, r6, pc}
 800349a:	380b      	subs	r0, #11
 800349c:	4085      	lsls	r5, r0
 800349e:	032d      	lsls	r5, r5, #12
 80034a0:	2600      	movs	r6, #0
 80034a2:	0b2d      	lsrs	r5, r5, #12
 80034a4:	e7f2      	b.n	800348c <__aeabi_i2d+0x3c>
 80034a6:	46c0      	nop			@ (mov r8, r8)
 80034a8:	0000041e 	.word	0x0000041e

080034ac <__aeabi_ui2d>:
 80034ac:	b510      	push	{r4, lr}
 80034ae:	1e04      	subs	r4, r0, #0
 80034b0:	d010      	beq.n	80034d4 <__aeabi_ui2d+0x28>
 80034b2:	f000 f8e9 	bl	8003688 <__clzsi2>
 80034b6:	4b0e      	ldr	r3, [pc, #56]	@ (80034f0 <__aeabi_ui2d+0x44>)
 80034b8:	1a1b      	subs	r3, r3, r0
 80034ba:	055b      	lsls	r3, r3, #21
 80034bc:	0d5b      	lsrs	r3, r3, #21
 80034be:	280a      	cmp	r0, #10
 80034c0:	dc0f      	bgt.n	80034e2 <__aeabi_ui2d+0x36>
 80034c2:	220b      	movs	r2, #11
 80034c4:	0021      	movs	r1, r4
 80034c6:	1a12      	subs	r2, r2, r0
 80034c8:	40d1      	lsrs	r1, r2
 80034ca:	3015      	adds	r0, #21
 80034cc:	030a      	lsls	r2, r1, #12
 80034ce:	4084      	lsls	r4, r0
 80034d0:	0b12      	lsrs	r2, r2, #12
 80034d2:	e001      	b.n	80034d8 <__aeabi_ui2d+0x2c>
 80034d4:	2300      	movs	r3, #0
 80034d6:	2200      	movs	r2, #0
 80034d8:	051b      	lsls	r3, r3, #20
 80034da:	4313      	orrs	r3, r2
 80034dc:	0020      	movs	r0, r4
 80034de:	0019      	movs	r1, r3
 80034e0:	bd10      	pop	{r4, pc}
 80034e2:	0022      	movs	r2, r4
 80034e4:	380b      	subs	r0, #11
 80034e6:	4082      	lsls	r2, r0
 80034e8:	0312      	lsls	r2, r2, #12
 80034ea:	2400      	movs	r4, #0
 80034ec:	0b12      	lsrs	r2, r2, #12
 80034ee:	e7f3      	b.n	80034d8 <__aeabi_ui2d+0x2c>
 80034f0:	0000041e 	.word	0x0000041e

080034f4 <__aeabi_f2d>:
 80034f4:	b570      	push	{r4, r5, r6, lr}
 80034f6:	0242      	lsls	r2, r0, #9
 80034f8:	0043      	lsls	r3, r0, #1
 80034fa:	0fc4      	lsrs	r4, r0, #31
 80034fc:	20fe      	movs	r0, #254	@ 0xfe
 80034fe:	0e1b      	lsrs	r3, r3, #24
 8003500:	1c59      	adds	r1, r3, #1
 8003502:	0a55      	lsrs	r5, r2, #9
 8003504:	4208      	tst	r0, r1
 8003506:	d00c      	beq.n	8003522 <__aeabi_f2d+0x2e>
 8003508:	21e0      	movs	r1, #224	@ 0xe0
 800350a:	0089      	lsls	r1, r1, #2
 800350c:	468c      	mov	ip, r1
 800350e:	076d      	lsls	r5, r5, #29
 8003510:	0b12      	lsrs	r2, r2, #12
 8003512:	4463      	add	r3, ip
 8003514:	051b      	lsls	r3, r3, #20
 8003516:	4313      	orrs	r3, r2
 8003518:	07e4      	lsls	r4, r4, #31
 800351a:	4323      	orrs	r3, r4
 800351c:	0028      	movs	r0, r5
 800351e:	0019      	movs	r1, r3
 8003520:	bd70      	pop	{r4, r5, r6, pc}
 8003522:	2b00      	cmp	r3, #0
 8003524:	d114      	bne.n	8003550 <__aeabi_f2d+0x5c>
 8003526:	2d00      	cmp	r5, #0
 8003528:	d01b      	beq.n	8003562 <__aeabi_f2d+0x6e>
 800352a:	0028      	movs	r0, r5
 800352c:	f000 f8ac 	bl	8003688 <__clzsi2>
 8003530:	280a      	cmp	r0, #10
 8003532:	dc1c      	bgt.n	800356e <__aeabi_f2d+0x7a>
 8003534:	230b      	movs	r3, #11
 8003536:	002a      	movs	r2, r5
 8003538:	1a1b      	subs	r3, r3, r0
 800353a:	40da      	lsrs	r2, r3
 800353c:	0003      	movs	r3, r0
 800353e:	3315      	adds	r3, #21
 8003540:	409d      	lsls	r5, r3
 8003542:	4b0e      	ldr	r3, [pc, #56]	@ (800357c <__aeabi_f2d+0x88>)
 8003544:	0312      	lsls	r2, r2, #12
 8003546:	1a1b      	subs	r3, r3, r0
 8003548:	055b      	lsls	r3, r3, #21
 800354a:	0b12      	lsrs	r2, r2, #12
 800354c:	0d5b      	lsrs	r3, r3, #21
 800354e:	e7e1      	b.n	8003514 <__aeabi_f2d+0x20>
 8003550:	2d00      	cmp	r5, #0
 8003552:	d009      	beq.n	8003568 <__aeabi_f2d+0x74>
 8003554:	0b13      	lsrs	r3, r2, #12
 8003556:	2280      	movs	r2, #128	@ 0x80
 8003558:	0312      	lsls	r2, r2, #12
 800355a:	431a      	orrs	r2, r3
 800355c:	076d      	lsls	r5, r5, #29
 800355e:	4b08      	ldr	r3, [pc, #32]	@ (8003580 <__aeabi_f2d+0x8c>)
 8003560:	e7d8      	b.n	8003514 <__aeabi_f2d+0x20>
 8003562:	2300      	movs	r3, #0
 8003564:	2200      	movs	r2, #0
 8003566:	e7d5      	b.n	8003514 <__aeabi_f2d+0x20>
 8003568:	2200      	movs	r2, #0
 800356a:	4b05      	ldr	r3, [pc, #20]	@ (8003580 <__aeabi_f2d+0x8c>)
 800356c:	e7d2      	b.n	8003514 <__aeabi_f2d+0x20>
 800356e:	0003      	movs	r3, r0
 8003570:	002a      	movs	r2, r5
 8003572:	3b0b      	subs	r3, #11
 8003574:	409a      	lsls	r2, r3
 8003576:	2500      	movs	r5, #0
 8003578:	e7e3      	b.n	8003542 <__aeabi_f2d+0x4e>
 800357a:	46c0      	nop			@ (mov r8, r8)
 800357c:	00000389 	.word	0x00000389
 8003580:	000007ff 	.word	0x000007ff

08003584 <__aeabi_d2f>:
 8003584:	b5f0      	push	{r4, r5, r6, r7, lr}
 8003586:	004b      	lsls	r3, r1, #1
 8003588:	030f      	lsls	r7, r1, #12
 800358a:	0d5b      	lsrs	r3, r3, #21
 800358c:	4c3a      	ldr	r4, [pc, #232]	@ (8003678 <__aeabi_d2f+0xf4>)
 800358e:	0f45      	lsrs	r5, r0, #29
 8003590:	b083      	sub	sp, #12
 8003592:	0a7f      	lsrs	r7, r7, #9
 8003594:	1c5e      	adds	r6, r3, #1
 8003596:	432f      	orrs	r7, r5
 8003598:	9000      	str	r0, [sp, #0]
 800359a:	9101      	str	r1, [sp, #4]
 800359c:	0fca      	lsrs	r2, r1, #31
 800359e:	00c5      	lsls	r5, r0, #3
 80035a0:	4226      	tst	r6, r4
 80035a2:	d00b      	beq.n	80035bc <__aeabi_d2f+0x38>
 80035a4:	4935      	ldr	r1, [pc, #212]	@ (800367c <__aeabi_d2f+0xf8>)
 80035a6:	185c      	adds	r4, r3, r1
 80035a8:	2cfe      	cmp	r4, #254	@ 0xfe
 80035aa:	dd13      	ble.n	80035d4 <__aeabi_d2f+0x50>
 80035ac:	20ff      	movs	r0, #255	@ 0xff
 80035ae:	2300      	movs	r3, #0
 80035b0:	05c0      	lsls	r0, r0, #23
 80035b2:	4318      	orrs	r0, r3
 80035b4:	07d2      	lsls	r2, r2, #31
 80035b6:	4310      	orrs	r0, r2
 80035b8:	b003      	add	sp, #12
 80035ba:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80035bc:	433d      	orrs	r5, r7
 80035be:	2b00      	cmp	r3, #0
 80035c0:	d101      	bne.n	80035c6 <__aeabi_d2f+0x42>
 80035c2:	2000      	movs	r0, #0
 80035c4:	e7f4      	b.n	80035b0 <__aeabi_d2f+0x2c>
 80035c6:	2d00      	cmp	r5, #0
 80035c8:	d0f0      	beq.n	80035ac <__aeabi_d2f+0x28>
 80035ca:	2380      	movs	r3, #128	@ 0x80
 80035cc:	03db      	lsls	r3, r3, #15
 80035ce:	20ff      	movs	r0, #255	@ 0xff
 80035d0:	433b      	orrs	r3, r7
 80035d2:	e7ed      	b.n	80035b0 <__aeabi_d2f+0x2c>
 80035d4:	2c00      	cmp	r4, #0
 80035d6:	dd0c      	ble.n	80035f2 <__aeabi_d2f+0x6e>
 80035d8:	9b00      	ldr	r3, [sp, #0]
 80035da:	00ff      	lsls	r7, r7, #3
 80035dc:	019b      	lsls	r3, r3, #6
 80035de:	1e58      	subs	r0, r3, #1
 80035e0:	4183      	sbcs	r3, r0
 80035e2:	0f69      	lsrs	r1, r5, #29
 80035e4:	433b      	orrs	r3, r7
 80035e6:	430b      	orrs	r3, r1
 80035e8:	0759      	lsls	r1, r3, #29
 80035ea:	d127      	bne.n	800363c <__aeabi_d2f+0xb8>
 80035ec:	08db      	lsrs	r3, r3, #3
 80035ee:	b2e0      	uxtb	r0, r4
 80035f0:	e7de      	b.n	80035b0 <__aeabi_d2f+0x2c>
 80035f2:	0021      	movs	r1, r4
 80035f4:	3117      	adds	r1, #23
 80035f6:	db31      	blt.n	800365c <__aeabi_d2f+0xd8>
 80035f8:	2180      	movs	r1, #128	@ 0x80
 80035fa:	201e      	movs	r0, #30
 80035fc:	0409      	lsls	r1, r1, #16
 80035fe:	4339      	orrs	r1, r7
 8003600:	1b00      	subs	r0, r0, r4
 8003602:	281f      	cmp	r0, #31
 8003604:	dd2d      	ble.n	8003662 <__aeabi_d2f+0xde>
 8003606:	2602      	movs	r6, #2
 8003608:	4276      	negs	r6, r6
 800360a:	1b34      	subs	r4, r6, r4
 800360c:	000e      	movs	r6, r1
 800360e:	40e6      	lsrs	r6, r4
 8003610:	0034      	movs	r4, r6
 8003612:	2820      	cmp	r0, #32
 8003614:	d004      	beq.n	8003620 <__aeabi_d2f+0x9c>
 8003616:	481a      	ldr	r0, [pc, #104]	@ (8003680 <__aeabi_d2f+0xfc>)
 8003618:	4684      	mov	ip, r0
 800361a:	4463      	add	r3, ip
 800361c:	4099      	lsls	r1, r3
 800361e:	430d      	orrs	r5, r1
 8003620:	002b      	movs	r3, r5
 8003622:	1e59      	subs	r1, r3, #1
 8003624:	418b      	sbcs	r3, r1
 8003626:	4323      	orrs	r3, r4
 8003628:	0759      	lsls	r1, r3, #29
 800362a:	d003      	beq.n	8003634 <__aeabi_d2f+0xb0>
 800362c:	210f      	movs	r1, #15
 800362e:	4019      	ands	r1, r3
 8003630:	2904      	cmp	r1, #4
 8003632:	d10b      	bne.n	800364c <__aeabi_d2f+0xc8>
 8003634:	019b      	lsls	r3, r3, #6
 8003636:	2000      	movs	r0, #0
 8003638:	0a5b      	lsrs	r3, r3, #9
 800363a:	e7b9      	b.n	80035b0 <__aeabi_d2f+0x2c>
 800363c:	210f      	movs	r1, #15
 800363e:	4019      	ands	r1, r3
 8003640:	2904      	cmp	r1, #4
 8003642:	d104      	bne.n	800364e <__aeabi_d2f+0xca>
 8003644:	019b      	lsls	r3, r3, #6
 8003646:	0a5b      	lsrs	r3, r3, #9
 8003648:	b2e0      	uxtb	r0, r4
 800364a:	e7b1      	b.n	80035b0 <__aeabi_d2f+0x2c>
 800364c:	2400      	movs	r4, #0
 800364e:	3304      	adds	r3, #4
 8003650:	0159      	lsls	r1, r3, #5
 8003652:	d5f7      	bpl.n	8003644 <__aeabi_d2f+0xc0>
 8003654:	3401      	adds	r4, #1
 8003656:	2300      	movs	r3, #0
 8003658:	b2e0      	uxtb	r0, r4
 800365a:	e7a9      	b.n	80035b0 <__aeabi_d2f+0x2c>
 800365c:	2000      	movs	r0, #0
 800365e:	2300      	movs	r3, #0
 8003660:	e7a6      	b.n	80035b0 <__aeabi_d2f+0x2c>
 8003662:	4c08      	ldr	r4, [pc, #32]	@ (8003684 <__aeabi_d2f+0x100>)
 8003664:	191c      	adds	r4, r3, r4
 8003666:	002b      	movs	r3, r5
 8003668:	40a5      	lsls	r5, r4
 800366a:	40c3      	lsrs	r3, r0
 800366c:	40a1      	lsls	r1, r4
 800366e:	1e68      	subs	r0, r5, #1
 8003670:	4185      	sbcs	r5, r0
 8003672:	4329      	orrs	r1, r5
 8003674:	430b      	orrs	r3, r1
 8003676:	e7d7      	b.n	8003628 <__aeabi_d2f+0xa4>
 8003678:	000007fe 	.word	0x000007fe
 800367c:	fffffc80 	.word	0xfffffc80
 8003680:	fffffca2 	.word	0xfffffca2
 8003684:	fffffc82 	.word	0xfffffc82

08003688 <__clzsi2>:
 8003688:	211c      	movs	r1, #28
 800368a:	2301      	movs	r3, #1
 800368c:	041b      	lsls	r3, r3, #16
 800368e:	4298      	cmp	r0, r3
 8003690:	d301      	bcc.n	8003696 <__clzsi2+0xe>
 8003692:	0c00      	lsrs	r0, r0, #16
 8003694:	3910      	subs	r1, #16
 8003696:	0a1b      	lsrs	r3, r3, #8
 8003698:	4298      	cmp	r0, r3
 800369a:	d301      	bcc.n	80036a0 <__clzsi2+0x18>
 800369c:	0a00      	lsrs	r0, r0, #8
 800369e:	3908      	subs	r1, #8
 80036a0:	091b      	lsrs	r3, r3, #4
 80036a2:	4298      	cmp	r0, r3
 80036a4:	d301      	bcc.n	80036aa <__clzsi2+0x22>
 80036a6:	0900      	lsrs	r0, r0, #4
 80036a8:	3904      	subs	r1, #4
 80036aa:	a202      	add	r2, pc, #8	@ (adr r2, 80036b4 <__clzsi2+0x2c>)
 80036ac:	5c10      	ldrb	r0, [r2, r0]
 80036ae:	1840      	adds	r0, r0, r1
 80036b0:	4770      	bx	lr
 80036b2:	46c0      	nop			@ (mov r8, r8)
 80036b4:	02020304 	.word	0x02020304
 80036b8:	01010101 	.word	0x01010101
	...

080036c4 <Max31855_Read_Temp>:

uint8_t Error=0;                                      // Thermocouple Connection acknowledge Flag
uint32_t sign=0;									  // Sign bit
uint8_t DATARX[4];                                    // Raw Data from MAX6675
// ------------------- Functions ----------------
float Max31855_Read_Temp(int sensor){
 80036c4:	b570      	push	{r4, r5, r6, lr}
 80036c6:	0005      	movs	r5, r0
 80036c8:	4c25      	ldr	r4, [pc, #148]	@ (8003760 <Max31855_Read_Temp+0x9c>)
int Temp=0;                                           // Temperature Variable
if(sensor == 1 )
 80036ca:	2801      	cmp	r0, #1
 80036cc:	d121      	bne.n	8003712 <Max31855_Read_Temp+0x4e>
{
	HAL_GPIO_WritePin(SSPORT1,SSPIN1,GPIO_PIN_RESET);// Low State for SPI Communication
 80036ce:	2090      	movs	r0, #144	@ 0x90
 80036d0:	2200      	movs	r2, #0
 80036d2:	2110      	movs	r1, #16
 80036d4:	05c0      	lsls	r0, r0, #23
 80036d6:	f001 fc0f 	bl	8004ef8 <HAL_GPIO_WritePin>
	HAL_SPI_Receive(&hspi1,DATARX,4,1000);                // DATA Transfer
 80036da:	23fa      	movs	r3, #250	@ 0xfa
 80036dc:	2204      	movs	r2, #4
 80036de:	0021      	movs	r1, r4
 80036e0:	4820      	ldr	r0, [pc, #128]	@ (8003764 <Max31855_Read_Temp+0xa0>)
 80036e2:	009b      	lsls	r3, r3, #2
 80036e4:	f002 fc26 	bl	8005f34 <HAL_SPI_Receive>
	HAL_GPIO_WritePin(SSPORT1,SSPIN1,GPIO_PIN_SET);		  // High State for SPI Communication
 80036e8:	002a      	movs	r2, r5
 80036ea:	2110      	movs	r1, #16
}
else if(sensor==2 ){
	HAL_GPIO_WritePin(SSPORT2,SSPIN2,GPIO_PIN_RESET);// Low State for SPI Communication
	HAL_SPI_Receive(&hspi1,DATARX,4,1000);                // DATA Transfer
	HAL_GPIO_WritePin(SSPORT2,SSPIN2,GPIO_PIN_SET);
 80036ec:	2090      	movs	r0, #144	@ 0x90
 80036ee:	05c0      	lsls	r0, r0, #23
 80036f0:	f001 fc02 	bl	8004ef8 <HAL_GPIO_WritePin>
}
Error=DATARX[3]&0x07;								  // Error Detection
 80036f4:	2307      	movs	r3, #7
 80036f6:	78e0      	ldrb	r0, [r4, #3]
sign=(DATARX[0]&(0x80))>>7;							  // Sign Bit calculation
 80036f8:	491b      	ldr	r1, [pc, #108]	@ (8003768 <Max31855_Read_Temp+0xa4>)
Error=DATARX[3]&0x07;								  // Error Detection
 80036fa:	4018      	ands	r0, r3
 80036fc:	4b1b      	ldr	r3, [pc, #108]	@ (800376c <Max31855_Read_Temp+0xa8>)
 80036fe:	7018      	strb	r0, [r3, #0]
sign=(DATARX[0]&(0x80))>>7;							  // Sign Bit calculation
 8003700:	7823      	ldrb	r3, [r4, #0]
 8003702:	09da      	lsrs	r2, r3, #7
 8003704:	600a      	str	r2, [r1, #0]

if(DATARX[3] & 0x07)								  // Returns Error Number
 8003706:	2800      	cmp	r0, #0
 8003708:	d017      	beq.n	800373a <Max31855_Read_Temp+0x76>
return(-1*(DATARX[3] & 0x07));
 800370a:	4240      	negs	r0, r0
 800370c:	f7fd febc 	bl	8001488 <__aeabi_i2f>
else												  // Positive Temperature
{
		Temp = (DATARX[0] << 6) | (DATARX[1] >> 2);
		return((double)Temp / 4);
}
}
 8003710:	bd70      	pop	{r4, r5, r6, pc}
else if(sensor==2 ){
 8003712:	2802      	cmp	r0, #2
 8003714:	d1ee      	bne.n	80036f4 <Max31855_Read_Temp+0x30>
	HAL_GPIO_WritePin(SSPORT2,SSPIN2,GPIO_PIN_RESET);// Low State for SPI Communication
 8003716:	2180      	movs	r1, #128	@ 0x80
 8003718:	2090      	movs	r0, #144	@ 0x90
 800371a:	2200      	movs	r2, #0
 800371c:	0209      	lsls	r1, r1, #8
 800371e:	05c0      	lsls	r0, r0, #23
 8003720:	f001 fbea 	bl	8004ef8 <HAL_GPIO_WritePin>
	HAL_SPI_Receive(&hspi1,DATARX,4,1000);                // DATA Transfer
 8003724:	23fa      	movs	r3, #250	@ 0xfa
 8003726:	2204      	movs	r2, #4
 8003728:	0021      	movs	r1, r4
 800372a:	480e      	ldr	r0, [pc, #56]	@ (8003764 <Max31855_Read_Temp+0xa0>)
 800372c:	009b      	lsls	r3, r3, #2
 800372e:	f002 fc01 	bl	8005f34 <HAL_SPI_Receive>
	HAL_GPIO_WritePin(SSPORT2,SSPIN2,GPIO_PIN_SET);
 8003732:	2180      	movs	r1, #128	@ 0x80
 8003734:	2201      	movs	r2, #1
 8003736:	0209      	lsls	r1, r1, #8
 8003738:	e7d8      	b.n	80036ec <Max31855_Read_Temp+0x28>
Temp = (DATARX[0] << 6) | (DATARX[1] >> 2);
 800373a:	7860      	ldrb	r0, [r4, #1]
 800373c:	019b      	lsls	r3, r3, #6
 800373e:	0880      	lsrs	r0, r0, #2
 8003740:	4318      	orrs	r0, r3
else if(sign==1){									  // Negative Temperature
 8003742:	2a01      	cmp	r2, #1
 8003744:	d103      	bne.n	800374e <Max31855_Read_Temp+0x8a>
Temp^=0b01111111111111;
 8003746:	43c0      	mvns	r0, r0
 8003748:	04c0      	lsls	r0, r0, #19
 800374a:	0cc0      	lsrs	r0, r0, #19
return((double)-Temp/4);
 800374c:	4240      	negs	r0, r0
		return((double)Temp / 4);
 800374e:	f7ff fe7f 	bl	8003450 <__aeabi_i2d>
 8003752:	2200      	movs	r2, #0
 8003754:	4b06      	ldr	r3, [pc, #24]	@ (8003770 <Max31855_Read_Temp+0xac>)
 8003756:	f7fe ff2d 	bl	80025b4 <__aeabi_dmul>
 800375a:	f7ff ff13 	bl	8003584 <__aeabi_d2f>
 800375e:	e7d7      	b.n	8003710 <Max31855_Read_Temp+0x4c>
 8003760:	20000214 	.word	0x20000214
 8003764:	20000380 	.word	0x20000380
 8003768:	20000218 	.word	0x20000218
 800376c:	2000021c 	.word	0x2000021c
 8003770:	3fd00000 	.word	0x3fd00000

08003774 <SystemClock_Config>:

/**
 * @brief System Clock Configuration
 * @retval None
 */
void SystemClock_Config(void){
 8003774:	b530      	push	{r4, r5, lr}
 8003776:	b091      	sub	sp, #68	@ 0x44
	RCC_OscInitTypeDef RCC_OscInitStruct = { 0 };
 8003778:	2228      	movs	r2, #40	@ 0x28
 800377a:	2100      	movs	r1, #0
 800377c:	a806      	add	r0, sp, #24
 800377e:	f003 fcd5 	bl	800712c <memset>
	RCC_ClkInitTypeDef RCC_ClkInitStruct = { 0 };
 8003782:	2210      	movs	r2, #16
 8003784:	2100      	movs	r1, #0
 8003786:	4668      	mov	r0, sp
 8003788:	f003 fcd0 	bl	800712c <memset>
	 * in the RCC_OscInitTypeDef structure.
	 */
	RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
	RCC_OscInitStruct.HSEState = RCC_HSE_ON;
	RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
	RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 800378c:	2380      	movs	r3, #128	@ 0x80
 800378e:	025b      	lsls	r3, r3, #9
 8003790:	930d      	str	r3, [sp, #52]	@ 0x34
	RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL3;
 8003792:	2380      	movs	r3, #128	@ 0x80
	RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 8003794:	2401      	movs	r4, #1
	RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8003796:	2502      	movs	r5, #2
	RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL3;
 8003798:	02db      	lsls	r3, r3, #11
	RCC_OscInitStruct.PLL.PREDIV = RCC_PREDIV_DIV1;
	if(HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK){
 800379a:	a804      	add	r0, sp, #16
	RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 800379c:	9404      	str	r4, [sp, #16]
	RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 800379e:	9405      	str	r4, [sp, #20]
	RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 80037a0:	950c      	str	r5, [sp, #48]	@ 0x30
	RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL3;
 80037a2:	930e      	str	r3, [sp, #56]	@ 0x38
	if(HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK){
 80037a4:	f001 fe6e 	bl	8005484 <HAL_RCC_OscConfig>
 80037a8:	2800      	cmp	r0, #0
 80037aa:	d001      	beq.n	80037b0 <SystemClock_Config+0x3c>
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 80037ac:	b672      	cpsid	i
 */
void Error_Handler(void){
	/* USER CODE BEGIN Error_Handler_Debug */
	/* User can add his own implementation to report the HAL error return state */
	__disable_irq();
	while(1){
 80037ae:	e7fe      	b.n	80037ae <SystemClock_Config+0x3a>
	RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_PCLK1;
 80037b0:	2307      	movs	r3, #7
	RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 80037b2:	9002      	str	r0, [sp, #8]
	RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 80037b4:	9003      	str	r0, [sp, #12]
	if(HAL_RCC_ClockConfig(&RCC_ClkInitStruct,FLASH_LATENCY_1) != HAL_OK){
 80037b6:	0021      	movs	r1, r4
 80037b8:	4668      	mov	r0, sp
	RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_PCLK1;
 80037ba:	9300      	str	r3, [sp, #0]
	RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 80037bc:	9501      	str	r5, [sp, #4]
	if(HAL_RCC_ClockConfig(&RCC_ClkInitStruct,FLASH_LATENCY_1) != HAL_OK){
 80037be:	f002 f88b 	bl	80058d8 <HAL_RCC_ClockConfig>
 80037c2:	2800      	cmp	r0, #0
 80037c4:	d001      	beq.n	80037ca <SystemClock_Config+0x56>
 80037c6:	b672      	cpsid	i
	while(1){
 80037c8:	e7fe      	b.n	80037c8 <SystemClock_Config+0x54>
}
 80037ca:	b011      	add	sp, #68	@ 0x44
 80037cc:	bd30      	pop	{r4, r5, pc}
	...

080037d0 <main>:
int main(void){
 80037d0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80037d2:	b091      	sub	sp, #68	@ 0x44
	HAL_Init();
 80037d4:	f001 f9b2 	bl	8004b3c <HAL_Init>
	SystemClock_Config();
 80037d8:	f7ff ffcc 	bl	8003774 <SystemClock_Config>
	GPIO_InitTypeDef GPIO_InitStruct = { 0 };
 80037dc:	2214      	movs	r2, #20
 80037de:	2100      	movs	r1, #0
 80037e0:	a80b      	add	r0, sp, #44	@ 0x2c
 80037e2:	f003 fca3 	bl	800712c <memset>
	__HAL_RCC_GPIOF_CLK_ENABLE();
 80037e6:	2280      	movs	r2, #128	@ 0x80
 80037e8:	4e7d      	ldr	r6, [pc, #500]	@ (80039e0 <main+0x210>)
 80037ea:	03d2      	lsls	r2, r2, #15
 80037ec:	6973      	ldr	r3, [r6, #20]
	HAL_GPIO_WritePin(GPIOA,GPIO_PIN_1 | GPIO_PIN_4 | GPIO_PIN_15,GPIO_PIN_RESET);
 80037ee:	2090      	movs	r0, #144	@ 0x90
	__HAL_RCC_GPIOF_CLK_ENABLE();
 80037f0:	4313      	orrs	r3, r2
 80037f2:	6173      	str	r3, [r6, #20]
 80037f4:	6973      	ldr	r3, [r6, #20]
	HAL_GPIO_WritePin(GPIOA,GPIO_PIN_1 | GPIO_PIN_4 | GPIO_PIN_15,GPIO_PIN_RESET);
 80037f6:	4f7b      	ldr	r7, [pc, #492]	@ (80039e4 <main+0x214>)
	__HAL_RCC_GPIOF_CLK_ENABLE();
 80037f8:	4013      	ands	r3, r2
	__HAL_RCC_GPIOA_CLK_ENABLE();
 80037fa:	2280      	movs	r2, #128	@ 0x80
	__HAL_RCC_GPIOF_CLK_ENABLE();
 80037fc:	9306      	str	r3, [sp, #24]
 80037fe:	9b06      	ldr	r3, [sp, #24]
	__HAL_RCC_GPIOA_CLK_ENABLE();
 8003800:	6973      	ldr	r3, [r6, #20]
 8003802:	0292      	lsls	r2, r2, #10
 8003804:	4313      	orrs	r3, r2
 8003806:	6173      	str	r3, [r6, #20]
 8003808:	6973      	ldr	r3, [r6, #20]
	HAL_GPIO_WritePin(GPIOA,GPIO_PIN_1 | GPIO_PIN_4 | GPIO_PIN_15,GPIO_PIN_RESET);
 800380a:	0039      	movs	r1, r7
	__HAL_RCC_GPIOA_CLK_ENABLE();
 800380c:	4013      	ands	r3, r2
	__HAL_RCC_GPIOB_CLK_ENABLE();
 800380e:	2280      	movs	r2, #128	@ 0x80
	__HAL_RCC_GPIOA_CLK_ENABLE();
 8003810:	9307      	str	r3, [sp, #28]
 8003812:	9b07      	ldr	r3, [sp, #28]
	__HAL_RCC_GPIOB_CLK_ENABLE();
 8003814:	6973      	ldr	r3, [r6, #20]
 8003816:	02d2      	lsls	r2, r2, #11
 8003818:	4313      	orrs	r3, r2
 800381a:	6173      	str	r3, [r6, #20]
 800381c:	6973      	ldr	r3, [r6, #20]
	HAL_GPIO_WritePin(GPIOA,GPIO_PIN_1 | GPIO_PIN_4 | GPIO_PIN_15,GPIO_PIN_RESET);
 800381e:	05c0      	lsls	r0, r0, #23
	__HAL_RCC_GPIOB_CLK_ENABLE();
 8003820:	4013      	ands	r3, r2
 8003822:	9308      	str	r3, [sp, #32]
	HAL_GPIO_WritePin(GPIOA,GPIO_PIN_1 | GPIO_PIN_4 | GPIO_PIN_15,GPIO_PIN_RESET);
 8003824:	2200      	movs	r2, #0
	__HAL_RCC_GPIOB_CLK_ENABLE();
 8003826:	9b08      	ldr	r3, [sp, #32]
	HAL_GPIO_WritePin(GPIOA,GPIO_PIN_1 | GPIO_PIN_4 | GPIO_PIN_15,GPIO_PIN_RESET);
 8003828:	f001 fb66 	bl	8004ef8 <HAL_GPIO_WritePin>
	GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING_FALLING;
 800382c:	23c4      	movs	r3, #196	@ 0xc4
	HAL_GPIO_Init(GPIOA,&GPIO_InitStruct);
 800382e:	2090      	movs	r0, #144	@ 0x90
	GPIO_InitStruct.Pull = GPIO_NOPULL;
 8003830:	2500      	movs	r5, #0
	GPIO_InitStruct.Pin = GPIO_PIN_0;
 8003832:	2401      	movs	r4, #1
	GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING_FALLING;
 8003834:	039b      	lsls	r3, r3, #14
	HAL_GPIO_Init(GPIOA,&GPIO_InitStruct);
 8003836:	a90b      	add	r1, sp, #44	@ 0x2c
 8003838:	05c0      	lsls	r0, r0, #23
	GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING_FALLING;
 800383a:	930c      	str	r3, [sp, #48]	@ 0x30
	GPIO_InitStruct.Pin = GPIO_PIN_0;
 800383c:	940b      	str	r4, [sp, #44]	@ 0x2c
	GPIO_InitStruct.Pull = GPIO_NOPULL;
 800383e:	950d      	str	r5, [sp, #52]	@ 0x34
	HAL_GPIO_Init(GPIOA,&GPIO_InitStruct);
 8003840:	f001 fa9c 	bl	8004d7c <HAL_GPIO_Init>
	HAL_GPIO_Init(GPIOA,&GPIO_InitStruct);
 8003844:	2090      	movs	r0, #144	@ 0x90
 8003846:	a90b      	add	r1, sp, #44	@ 0x2c
 8003848:	05c0      	lsls	r0, r0, #23
	GPIO_InitStruct.Pin = GPIO_PIN_1 | GPIO_PIN_4 | GPIO_PIN_15;
 800384a:	970b      	str	r7, [sp, #44]	@ 0x2c
	GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800384c:	940c      	str	r4, [sp, #48]	@ 0x30
	GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 800384e:	2784      	movs	r7, #132	@ 0x84
	GPIO_InitStruct.Pull = GPIO_NOPULL;
 8003850:	950d      	str	r5, [sp, #52]	@ 0x34
	GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8003852:	950e      	str	r5, [sp, #56]	@ 0x38
	HAL_GPIO_Init(GPIOA,&GPIO_InitStruct);
 8003854:	f001 fa92 	bl	8004d7c <HAL_GPIO_Init>
	HAL_GPIO_Init(GPIOA,&GPIO_InitStruct);
 8003858:	2090      	movs	r0, #144	@ 0x90
	GPIO_InitStruct.Pin = GPIO_PIN_2;
 800385a:	2304      	movs	r3, #4
	GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 800385c:	03bf      	lsls	r7, r7, #14
	HAL_GPIO_Init(GPIOA,&GPIO_InitStruct);
 800385e:	a90b      	add	r1, sp, #44	@ 0x2c
 8003860:	05c0      	lsls	r0, r0, #23
	GPIO_InitStruct.Pin = GPIO_PIN_2;
 8003862:	930b      	str	r3, [sp, #44]	@ 0x2c
	GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 8003864:	970c      	str	r7, [sp, #48]	@ 0x30
	GPIO_InitStruct.Pull = GPIO_NOPULL;
 8003866:	950d      	str	r5, [sp, #52]	@ 0x34
	HAL_GPIO_Init(GPIOA,&GPIO_InitStruct);
 8003868:	f001 fa88 	bl	8004d7c <HAL_GPIO_Init>
	GPIO_InitStruct.Pin = GPIO_PIN_8 | GPIO_PIN_9;
 800386c:	23c0      	movs	r3, #192	@ 0xc0
	HAL_GPIO_Init(GPIOB,&GPIO_InitStruct);
 800386e:	485e      	ldr	r0, [pc, #376]	@ (80039e8 <main+0x218>)
	GPIO_InitStruct.Pin = GPIO_PIN_8 | GPIO_PIN_9;
 8003870:	009b      	lsls	r3, r3, #2
	HAL_GPIO_Init(GPIOB,&GPIO_InitStruct);
 8003872:	a90b      	add	r1, sp, #44	@ 0x2c
	GPIO_InitStruct.Pin = GPIO_PIN_8 | GPIO_PIN_9;
 8003874:	930b      	str	r3, [sp, #44]	@ 0x2c
	GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 8003876:	970c      	str	r7, [sp, #48]	@ 0x30
	GPIO_InitStruct.Pull = GPIO_NOPULL;
 8003878:	950d      	str	r5, [sp, #52]	@ 0x34
	HAL_GPIO_Init(GPIOB,&GPIO_InitStruct);
 800387a:	f001 fa7f 	bl	8004d7c <HAL_GPIO_Init>
	HAL_NVIC_SetPriority(EXTI0_1_IRQn,3,0);
 800387e:	002a      	movs	r2, r5
 8003880:	2103      	movs	r1, #3
 8003882:	2005      	movs	r0, #5
 8003884:	f001 f98e 	bl	8004ba4 <HAL_NVIC_SetPriority>
	HAL_NVIC_EnableIRQ(EXTI0_1_IRQn);
 8003888:	2005      	movs	r0, #5
 800388a:	f001 f9b5 	bl	8004bf8 <HAL_NVIC_EnableIRQ>
	HAL_NVIC_SetPriority(EXTI2_3_IRQn,3,0);
 800388e:	002a      	movs	r2, r5
 8003890:	2103      	movs	r1, #3
 8003892:	2006      	movs	r0, #6
 8003894:	f001 f986 	bl	8004ba4 <HAL_NVIC_SetPriority>
	HAL_NVIC_EnableIRQ(EXTI2_3_IRQn);
 8003898:	2006      	movs	r0, #6
 800389a:	f001 f9ad 	bl	8004bf8 <HAL_NVIC_EnableIRQ>
	HAL_NVIC_SetPriority(EXTI4_15_IRQn,3,0);
 800389e:	002a      	movs	r2, r5
 80038a0:	2103      	movs	r1, #3
 80038a2:	2007      	movs	r0, #7
 80038a4:	f001 f97e 	bl	8004ba4 <HAL_NVIC_SetPriority>
	HAL_NVIC_EnableIRQ(EXTI4_15_IRQn);
 80038a8:	2007      	movs	r0, #7
 80038aa:	f001 f9a5 	bl	8004bf8 <HAL_NVIC_EnableIRQ>
	__HAL_RCC_DMA1_CLK_ENABLE();
 80038ae:	6973      	ldr	r3, [r6, #20]
	HAL_NVIC_SetPriority(DMA1_Channel4_5_IRQn,0,0);
 80038b0:	0029      	movs	r1, r5
	__HAL_RCC_DMA1_CLK_ENABLE();
 80038b2:	4323      	orrs	r3, r4
 80038b4:	6173      	str	r3, [r6, #20]
 80038b6:	6973      	ldr	r3, [r6, #20]
	HAL_NVIC_SetPriority(DMA1_Channel4_5_IRQn,0,0);
 80038b8:	002a      	movs	r2, r5
	__HAL_RCC_DMA1_CLK_ENABLE();
 80038ba:	4023      	ands	r3, r4
	HAL_NVIC_SetPriority(DMA1_Channel4_5_IRQn,0,0);
 80038bc:	200b      	movs	r0, #11
	__HAL_RCC_DMA1_CLK_ENABLE();
 80038be:	9305      	str	r3, [sp, #20]
 80038c0:	9b05      	ldr	r3, [sp, #20]
	HAL_NVIC_SetPriority(DMA1_Channel4_5_IRQn,0,0);
 80038c2:	f001 f96f 	bl	8004ba4 <HAL_NVIC_SetPriority>
	HAL_NVIC_EnableIRQ(DMA1_Channel4_5_IRQn);
 80038c6:	200b      	movs	r0, #11
 80038c8:	f001 f996 	bl	8004bf8 <HAL_NVIC_EnableIRQ>
	hi2c2.Instance = I2C2;
 80038cc:	4e47      	ldr	r6, [pc, #284]	@ (80039ec <main+0x21c>)
 80038ce:	4b48      	ldr	r3, [pc, #288]	@ (80039f0 <main+0x220>)
	if(HAL_I2C_Init(&hi2c2) != HAL_OK){
 80038d0:	0030      	movs	r0, r6
	hi2c2.Instance = I2C2;
 80038d2:	6033      	str	r3, [r6, #0]
	hi2c2.Init.Timing = 0x0090194B;
 80038d4:	4b47      	ldr	r3, [pc, #284]	@ (80039f4 <main+0x224>)
	hi2c2.Init.OwnAddress1 = 0;
 80038d6:	60b5      	str	r5, [r6, #8]
	hi2c2.Init.Timing = 0x0090194B;
 80038d8:	6073      	str	r3, [r6, #4]
	hi2c2.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 80038da:	60f4      	str	r4, [r6, #12]
	hi2c2.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 80038dc:	6135      	str	r5, [r6, #16]
	hi2c2.Init.OwnAddress2 = 0;
 80038de:	6175      	str	r5, [r6, #20]
	hi2c2.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 80038e0:	61b5      	str	r5, [r6, #24]
	hi2c2.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 80038e2:	61f5      	str	r5, [r6, #28]
	hi2c2.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 80038e4:	6235      	str	r5, [r6, #32]
	if(HAL_I2C_Init(&hi2c2) != HAL_OK){
 80038e6:	f001 fc4b 	bl	8005180 <HAL_I2C_Init>
 80038ea:	0001      	movs	r1, r0
 80038ec:	42a8      	cmp	r0, r5
 80038ee:	d001      	beq.n	80038f4 <main+0x124>
 80038f0:	b672      	cpsid	i
	while(1){
 80038f2:	e7fe      	b.n	80038f2 <main+0x122>
	if(HAL_I2CEx_ConfigAnalogFilter(&hi2c2,I2C_ANALOGFILTER_ENABLE) != HAL_OK){
 80038f4:	0030      	movs	r0, r6
 80038f6:	f001 fd7b 	bl	80053f0 <HAL_I2CEx_ConfigAnalogFilter>
 80038fa:	1e01      	subs	r1, r0, #0
 80038fc:	d001      	beq.n	8003902 <main+0x132>
 80038fe:	b672      	cpsid	i
	while(1){
 8003900:	e7fe      	b.n	8003900 <main+0x130>
	if(HAL_I2CEx_ConfigDigitalFilter(&hi2c2,0) != HAL_OK){
 8003902:	0030      	movs	r0, r6
 8003904:	f001 fd9a 	bl	800543c <HAL_I2CEx_ConfigDigitalFilter>
 8003908:	1e03      	subs	r3, r0, #0
 800390a:	d001      	beq.n	8003910 <main+0x140>
 800390c:	b672      	cpsid	i
	while(1){
 800390e:	e7fe      	b.n	800390e <main+0x13e>
	hspi1.Instance = SPI1;
 8003910:	4839      	ldr	r0, [pc, #228]	@ (80039f8 <main+0x228>)
 8003912:	4a3a      	ldr	r2, [pc, #232]	@ (80039fc <main+0x22c>)
	hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 8003914:	27e0      	movs	r7, #224	@ 0xe0
	hspi1.Instance = SPI1;
 8003916:	6002      	str	r2, [r0, #0]
	hspi1.Init.Mode = SPI_MODE_MASTER;
 8003918:	2282      	movs	r2, #130	@ 0x82
 800391a:	0052      	lsls	r2, r2, #1
 800391c:	6042      	str	r2, [r0, #4]
	hspi1.Init.Direction = SPI_DIRECTION_2LINES_RXONLY;
 800391e:	2280      	movs	r2, #128	@ 0x80
 8003920:	00d2      	lsls	r2, r2, #3
 8003922:	6082      	str	r2, [r0, #8]
	hspi1.Init.NSS = SPI_NSS_SOFT;
 8003924:	2280      	movs	r2, #128	@ 0x80
	hspi1.Init.CRCPolynomial = 7;
 8003926:	2607      	movs	r6, #7
	hspi1.Init.NSSPMode = SPI_NSS_PULSE_ENABLE;
 8003928:	2508      	movs	r5, #8
	hspi1.Init.NSS = SPI_NSS_SOFT;
 800392a:	0092      	lsls	r2, r2, #2
 800392c:	6182      	str	r2, [r0, #24]
	hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 800392e:	3ae9      	subs	r2, #233	@ 0xe9
 8003930:	3aff      	subs	r2, #255	@ 0xff
	hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 8003932:	00ff      	lsls	r7, r7, #3
	hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 8003934:	6103      	str	r3, [r0, #16]
	hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 8003936:	6143      	str	r3, [r0, #20]
	hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 8003938:	6203      	str	r3, [r0, #32]
	hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 800393a:	6243      	str	r3, [r0, #36]	@ 0x24
	hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 800393c:	6283      	str	r3, [r0, #40]	@ 0x28
	hspi1.Init.CRCLength = SPI_CRC_LENGTH_DATASIZE;
 800393e:	6303      	str	r3, [r0, #48]	@ 0x30
	hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 8003940:	60c7      	str	r7, [r0, #12]
	hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 8003942:	61c2      	str	r2, [r0, #28]
	hspi1.Init.CRCPolynomial = 7;
 8003944:	62c6      	str	r6, [r0, #44]	@ 0x2c
	hspi1.Init.NSSPMode = SPI_NSS_PULSE_ENABLE;
 8003946:	6345      	str	r5, [r0, #52]	@ 0x34
	if(HAL_SPI_Init(&hspi1) != HAL_OK){
 8003948:	f002 f972 	bl	8005c30 <HAL_SPI_Init>
 800394c:	1e03      	subs	r3, r0, #0
 800394e:	d001      	beq.n	8003954 <main+0x184>
 8003950:	b672      	cpsid	i
	while(1){
 8003952:	e7fe      	b.n	8003952 <main+0x182>
	hspi2.Instance = SPI2;
 8003954:	482a      	ldr	r0, [pc, #168]	@ (8003a00 <main+0x230>)
 8003956:	4a2b      	ldr	r2, [pc, #172]	@ (8003a04 <main+0x234>)
	hspi2.Init.CRCPolynomial = 7;
 8003958:	62c6      	str	r6, [r0, #44]	@ 0x2c
	hspi2.Instance = SPI2;
 800395a:	6002      	str	r2, [r0, #0]
	hspi2.Init.Mode = SPI_MODE_SLAVE;
 800395c:	6043      	str	r3, [r0, #4]
	hspi2.Init.Direction = SPI_DIRECTION_2LINES;
 800395e:	6083      	str	r3, [r0, #8]
	hspi2.Init.DataSize = SPI_DATASIZE_8BIT;
 8003960:	60c7      	str	r7, [r0, #12]
	hspi2.Init.CLKPolarity = SPI_POLARITY_LOW;
 8003962:	6103      	str	r3, [r0, #16]
	hspi2.Init.CLKPhase = SPI_PHASE_1EDGE;
 8003964:	6143      	str	r3, [r0, #20]
	hspi2.Init.NSS = SPI_NSS_HARD_INPUT;
 8003966:	6183      	str	r3, [r0, #24]
	hspi2.Init.FirstBit = SPI_FIRSTBIT_MSB;
 8003968:	6203      	str	r3, [r0, #32]
	hspi2.Init.TIMode = SPI_TIMODE_DISABLE;
 800396a:	6243      	str	r3, [r0, #36]	@ 0x24
	hspi2.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 800396c:	6283      	str	r3, [r0, #40]	@ 0x28
	hspi2.Init.CRCLength = SPI_CRC_LENGTH_DATASIZE;
 800396e:	6303      	str	r3, [r0, #48]	@ 0x30
	hspi2.Init.NSSPMode = SPI_NSS_PULSE_DISABLE;
 8003970:	6343      	str	r3, [r0, #52]	@ 0x34
	if(HAL_SPI_Init(&hspi2) != HAL_OK){
 8003972:	f002 f95d 	bl	8005c30 <HAL_SPI_Init>
 8003976:	1e06      	subs	r6, r0, #0
 8003978:	d001      	beq.n	800397e <main+0x1ae>
 800397a:	b672      	cpsid	i
	while(1){
 800397c:	e7fe      	b.n	800397c <main+0x1ac>
	TIM_ClockConfigTypeDef sClockSourceConfig = { 0 };
 800397e:	0001      	movs	r1, r0
 8003980:	2210      	movs	r2, #16
 8003982:	a80b      	add	r0, sp, #44	@ 0x2c
 8003984:	f003 fbd2 	bl	800712c <memset>
	TIM_MasterConfigTypeDef sMasterConfig = { 0 };
 8003988:	002a      	movs	r2, r5
 800398a:	0031      	movs	r1, r6
 800398c:	a809      	add	r0, sp, #36	@ 0x24
 800398e:	f003 fbcd 	bl	800712c <memset>
	htim1.Instance = TIM1;
 8003992:	4d1d      	ldr	r5, [pc, #116]	@ (8003a08 <main+0x238>)
 8003994:	4b1d      	ldr	r3, [pc, #116]	@ (8003a0c <main+0x23c>)
	if(HAL_TIM_Base_Init(&htim1) != HAL_OK){
 8003996:	0028      	movs	r0, r5
	htim1.Instance = TIM1;
 8003998:	602b      	str	r3, [r5, #0]
	htim1.Init.Period = 4799;
 800399a:	4b1d      	ldr	r3, [pc, #116]	@ (8003a10 <main+0x240>)
	htim1.Init.Prescaler = 0;
 800399c:	606e      	str	r6, [r5, #4]
	htim1.Init.Period = 4799;
 800399e:	60eb      	str	r3, [r5, #12]
	htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 80039a0:	2380      	movs	r3, #128	@ 0x80
	htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 80039a2:	60ae      	str	r6, [r5, #8]
	htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 80039a4:	612e      	str	r6, [r5, #16]
	htim1.Init.RepetitionCounter = 0;
 80039a6:	616e      	str	r6, [r5, #20]
	htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 80039a8:	61ab      	str	r3, [r5, #24]
	if(HAL_TIM_Base_Init(&htim1) != HAL_OK){
 80039aa:	f002 fd33 	bl	8006414 <HAL_TIM_Base_Init>
 80039ae:	2800      	cmp	r0, #0
 80039b0:	d001      	beq.n	80039b6 <main+0x1e6>
 80039b2:	b672      	cpsid	i
	while(1){
 80039b4:	e7fe      	b.n	80039b4 <main+0x1e4>
	sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 80039b6:	2380      	movs	r3, #128	@ 0x80
	if(HAL_TIM_ConfigClockSource(&htim1,&sClockSourceConfig) != HAL_OK){
 80039b8:	0028      	movs	r0, r5
	sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 80039ba:	015b      	lsls	r3, r3, #5
	if(HAL_TIM_ConfigClockSource(&htim1,&sClockSourceConfig) != HAL_OK){
 80039bc:	a90b      	add	r1, sp, #44	@ 0x2c
	sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 80039be:	930b      	str	r3, [sp, #44]	@ 0x2c
	if(HAL_TIM_ConfigClockSource(&htim1,&sClockSourceConfig) != HAL_OK){
 80039c0:	f002 fd5c 	bl	800647c <HAL_TIM_ConfigClockSource>
 80039c4:	2800      	cmp	r0, #0
 80039c6:	d001      	beq.n	80039cc <main+0x1fc>
 80039c8:	b672      	cpsid	i
	while(1){
 80039ca:	e7fe      	b.n	80039ca <main+0x1fa>
	sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 80039cc:	9009      	str	r0, [sp, #36]	@ 0x24
	sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80039ce:	900a      	str	r0, [sp, #40]	@ 0x28
	if(HAL_TIMEx_MasterConfigSynchronization(&htim1,&sMasterConfig) != HAL_OK){
 80039d0:	a909      	add	r1, sp, #36	@ 0x24
 80039d2:	0028      	movs	r0, r5
 80039d4:	f002 fde8 	bl	80065a8 <HAL_TIMEx_MasterConfigSynchronization>
 80039d8:	1e06      	subs	r6, r0, #0
 80039da:	d01b      	beq.n	8003a14 <main+0x244>
 80039dc:	b672      	cpsid	i
	while(1){
 80039de:	e7fe      	b.n	80039de <main+0x20e>
 80039e0:	40021000 	.word	0x40021000
 80039e4:	00008012 	.word	0x00008012
 80039e8:	48000400 	.word	0x48000400
 80039ec:	200003e4 	.word	0x200003e4
 80039f0:	40005800 	.word	0x40005800
 80039f4:	0090194b 	.word	0x0090194b
 80039f8:	20000380 	.word	0x20000380
 80039fc:	40013000 	.word	0x40013000
 8003a00:	2000031c 	.word	0x2000031c
 8003a04:	40003800 	.word	0x40003800
 8003a08:	20000290 	.word	0x20000290
 8003a0c:	40012c00 	.word	0x40012c00
 8003a10:	000012bf 	.word	0x000012bf
	HAL_TIM_Base_Start_IT(&htim1);
 8003a14:	0028      	movs	r0, r5
 8003a16:	f002 fbe5 	bl	80061e4 <HAL_TIM_Base_Start_IT>
	ssd1306_Init();
 8003a1a:	f000 fe71 	bl	8004700 <ssd1306_Init>
	ssd1306_SetCursor(30,20);
 8003a1e:	2114      	movs	r1, #20
 8003a20:	201e      	movs	r0, #30
 8003a22:	f000 fe21 	bl	8004668 <ssd1306_SetCursor>
	ssd1306_WriteString("LOGO",Font_16x26,White);
 8003a26:	4bd7      	ldr	r3, [pc, #860]	@ (8003d84 <main+0x5b4>)
 8003a28:	48d7      	ldr	r0, [pc, #860]	@ (8003d88 <main+0x5b8>)
 8003a2a:	cb0e      	ldmia	r3, {r1, r2, r3}
 8003a2c:	9400      	str	r4, [sp, #0]
 8003a2e:	f000 fe01 	bl	8004634 <ssd1306_WriteString>
	ssd1306_UpdateScreen();
 8003a32:	f000 fd77 	bl	8004524 <ssd1306_UpdateScreen>
	HAL_Delay(1000);
 8003a36:	20fa      	movs	r0, #250	@ 0xfa
 8003a38:	0080      	lsls	r0, r0, #2
 8003a3a:	f001 f8a1 	bl	8004b80 <HAL_Delay>
	ssd1306_Fill(Black);
 8003a3e:	0030      	movs	r0, r6
 8003a40:	f000 fd62 	bl	8004508 <ssd1306_Fill>
	ssd1306_UpdateScreen();
 8003a44:	f000 fd6e 	bl	8004524 <ssd1306_UpdateScreen>
	HAL_TIM_Base_Start_IT(&htim1);
 8003a48:	0028      	movs	r0, r5
 8003a4a:	f002 fbcb 	bl	80061e4 <HAL_TIM_Base_Start_IT>
		sens_error = 0;
 8003a4e:	2300      	movs	r3, #0
 8003a50:	4cce      	ldr	r4, [pc, #824]	@ (8003d8c <main+0x5bc>)
		real_temperature_heater = Max31855_Read_Temp(1);
 8003a52:	2001      	movs	r0, #1
		sens_error = 0;
 8003a54:	6023      	str	r3, [r4, #0]
		real_temperature_heater = Max31855_Read_Temp(1);
 8003a56:	f7ff fe35 	bl	80036c4 <Max31855_Read_Temp>
 8003a5a:	4bcd      	ldr	r3, [pc, #820]	@ (8003d90 <main+0x5c0>)
		if(Error != 0){
 8003a5c:	4dcd      	ldr	r5, [pc, #820]	@ (8003d94 <main+0x5c4>)
 8003a5e:	4ece      	ldr	r6, [pc, #824]	@ (8003d98 <main+0x5c8>)
		real_temperature_heater = Max31855_Read_Temp(1);
 8003a60:	6018      	str	r0, [r3, #0]
 8003a62:	9302      	str	r3, [sp, #8]
			sens_error_HT = Error;
 8003a64:	782b      	ldrb	r3, [r5, #0]
		real_temperature_element = Max31855_Read_Temp(2); //TODO dodac lepsza obsluge bledu
 8003a66:	2002      	movs	r0, #2
			sens_error_HT = Error;
 8003a68:	6033      	str	r3, [r6, #0]
		real_temperature_element = Max31855_Read_Temp(2); //TODO dodac lepsza obsluge bledu
 8003a6a:	f7ff fe2b 	bl	80036c4 <Max31855_Read_Temp>
 8003a6e:	4bcb      	ldr	r3, [pc, #812]	@ (8003d9c <main+0x5cc>)
 8003a70:	4acb      	ldr	r2, [pc, #812]	@ (8003da0 <main+0x5d0>)
 8003a72:	9303      	str	r3, [sp, #12]
 8003a74:	6018      	str	r0, [r3, #0]
			sens_error_IC = Error;
 8003a76:	782b      	ldrb	r3, [r5, #0]
 8003a78:	4fca      	ldr	r7, [pc, #808]	@ (8003da4 <main+0x5d4>)
 8003a7a:	6013      	str	r3, [r2, #0]
		if(sens_error_HT != 0){
 8003a7c:	6832      	ldr	r2, [r6, #0]
 8003a7e:	2a00      	cmp	r2, #0
 8003a80:	d100      	bne.n	8003a84 <main+0x2b4>
 8003a82:	e100      	b.n	8003c86 <main+0x4b6>
			sens_error = sens_error_HT;
 8003a84:	6022      	str	r2, [r4, #0]
		if(last_Error != sens_error){
 8003a86:	6825      	ldr	r5, [r4, #0]
 8003a88:	683b      	ldr	r3, [r7, #0]
 8003a8a:	42ab      	cmp	r3, r5
 8003a8c:	d035      	beq.n	8003afa <main+0x32a>
			switch(sens_error){
 8003a8e:	2d02      	cmp	r5, #2
 8003a90:	d100      	bne.n	8003a94 <main+0x2c4>
 8003a92:	e110      	b.n	8003cb6 <main+0x4e6>
 8003a94:	2d04      	cmp	r5, #4
 8003a96:	d100      	bne.n	8003a9a <main+0x2ca>
 8003a98:	e138      	b.n	8003d0c <main+0x53c>
 8003a9a:	2d01      	cmp	r5, #1
 8003a9c:	d12a      	bne.n	8003af4 <main+0x324>
					ssd1306_Fill(Black);
 8003a9e:	2000      	movs	r0, #0
 8003aa0:	f000 fd32 	bl	8004508 <ssd1306_Fill>
					ssd1306_UpdateScreen();
 8003aa4:	f000 fd3e 	bl	8004524 <ssd1306_UpdateScreen>
					ssd1306_SetCursor(20,5);
 8003aa8:	2105      	movs	r1, #5
 8003aaa:	2014      	movs	r0, #20
 8003aac:	f000 fddc 	bl	8004668 <ssd1306_SetCursor>
					ssd1306_WriteString("Error",Font_16x26,White);
 8003ab0:	4bb4      	ldr	r3, [pc, #720]	@ (8003d84 <main+0x5b4>)
 8003ab2:	48bd      	ldr	r0, [pc, #756]	@ (8003da8 <main+0x5d8>)
 8003ab4:	cb0e      	ldmia	r3, {r1, r2, r3}
 8003ab6:	9500      	str	r5, [sp, #0]
 8003ab8:	f000 fdbc 	bl	8004634 <ssd1306_WriteString>
					ssd1306_SetCursor(5,28);
 8003abc:	211c      	movs	r1, #28
 8003abe:	2005      	movs	r0, #5
 8003ac0:	f000 fdd2 	bl	8004668 <ssd1306_SetCursor>
					if(sens_error_IC != 0){
 8003ac4:	4bb6      	ldr	r3, [pc, #728]	@ (8003da0 <main+0x5d0>)
 8003ac6:	681b      	ldr	r3, [r3, #0]
 8003ac8:	2b00      	cmp	r3, #0
 8003aca:	d100      	bne.n	8003ace <main+0x2fe>
 8003acc:	e0ec      	b.n	8003ca8 <main+0x4d8>
						ssd1306_WriteString("Sensor IC",Font_11x18,White);
 8003ace:	4bb7      	ldr	r3, [pc, #732]	@ (8003dac <main+0x5dc>)
 8003ad0:	48b7      	ldr	r0, [pc, #732]	@ (8003db0 <main+0x5e0>)
						ssd1306_WriteString("Sensor HEAT",Font_11x18,White);
 8003ad2:	9500      	str	r5, [sp, #0]
 8003ad4:	cb0e      	ldmia	r3, {r1, r2, r3}
 8003ad6:	f000 fdad 	bl	8004634 <ssd1306_WriteString>
					ssd1306_SetCursor(15,48);
 8003ada:	200f      	movs	r0, #15
 8003adc:	2130      	movs	r1, #48	@ 0x30
 8003ade:	f000 fdc3 	bl	8004668 <ssd1306_SetCursor>
					ssd1306_WriteString("NOT CONNECTED",Font_7x10,White);
 8003ae2:	4bb4      	ldr	r3, [pc, #720]	@ (8003db4 <main+0x5e4>)
 8003ae4:	48b4      	ldr	r0, [pc, #720]	@ (8003db8 <main+0x5e8>)
					ssd1306_WriteString("SHORT TO VCC",Font_7x10,White);
 8003ae6:	2201      	movs	r2, #1
 8003ae8:	9200      	str	r2, [sp, #0]
 8003aea:	cb0e      	ldmia	r3, {r1, r2, r3}
 8003aec:	f000 fda2 	bl	8004634 <ssd1306_WriteString>
					ssd1306_UpdateScreen();
 8003af0:	f000 fd18 	bl	8004524 <ssd1306_UpdateScreen>
			last_Error = sens_error;
 8003af4:	4bab      	ldr	r3, [pc, #684]	@ (8003da4 <main+0x5d4>)
 8003af6:	6822      	ldr	r2, [r4, #0]
 8003af8:	601a      	str	r2, [r3, #0]
		if(sens_error == 0){ //TODO dodac wyświetlanie która termopara jest aktualnie używana
 8003afa:	6823      	ldr	r3, [r4, #0]
 8003afc:	2b00      	cmp	r3, #0
 8003afe:	d000      	beq.n	8003b02 <main+0x332>
 8003b00:	e276      	b.n	8003ff0 <main+0x820>
			if(real_temperature_element_last != real_temperature_element || real_temperature_heater_last != real_temperature_heater){ //TODO zmienic na wysylanie tylko zmienionej liczby
 8003b02:	4bae      	ldr	r3, [pc, #696]	@ (8003dbc <main+0x5ec>)
 8003b04:	9a03      	ldr	r2, [sp, #12]
 8003b06:	6818      	ldr	r0, [r3, #0]
 8003b08:	6811      	ldr	r1, [r2, #0]
 8003b0a:	f7fc fcd9 	bl	80004c0 <__aeabi_fcmpeq>
 8003b0e:	2800      	cmp	r0, #0
 8003b10:	d007      	beq.n	8003b22 <main+0x352>
 8003b12:	4bab      	ldr	r3, [pc, #684]	@ (8003dc0 <main+0x5f0>)
 8003b14:	9a02      	ldr	r2, [sp, #8]
 8003b16:	6818      	ldr	r0, [r3, #0]
 8003b18:	6811      	ldr	r1, [r2, #0]
 8003b1a:	f7fc fcd1 	bl	80004c0 <__aeabi_fcmpeq>
 8003b1e:	2800      	cmp	r0, #0
 8003b20:	d155      	bne.n	8003bce <main+0x3fe>
				ssd1306_SetCursor(5,5);
 8003b22:	2105      	movs	r1, #5
				ssd1306_WriteString("IC:",Font_7x10,White);
 8003b24:	2601      	movs	r6, #1
				ssd1306_SetCursor(5,5);
 8003b26:	0008      	movs	r0, r1
 8003b28:	f000 fd9e 	bl	8004668 <ssd1306_SetCursor>
				ssd1306_WriteString("IC:",Font_7x10,White);
 8003b2c:	4ca1      	ldr	r4, [pc, #644]	@ (8003db4 <main+0x5e4>)
 8003b2e:	48a5      	ldr	r0, [pc, #660]	@ (8003dc4 <main+0x5f4>)
 8003b30:	68a3      	ldr	r3, [r4, #8]
 8003b32:	6821      	ldr	r1, [r4, #0]
 8003b34:	6862      	ldr	r2, [r4, #4]
 8003b36:	9600      	str	r6, [sp, #0]
 8003b38:	f000 fd7c 	bl	8004634 <ssd1306_WriteString>
					temp[i] = 0;
 8003b3c:	4da2      	ldr	r5, [pc, #648]	@ (8003dc8 <main+0x5f8>)
 8003b3e:	2209      	movs	r2, #9
 8003b40:	2100      	movs	r1, #0
 8003b42:	0028      	movs	r0, r5
 8003b44:	f003 faf2 	bl	800712c <memset>
				sprintf(temp,"%.0f  ",real_temperature_element);
 8003b48:	4b94      	ldr	r3, [pc, #592]	@ (8003d9c <main+0x5cc>)
 8003b4a:	6818      	ldr	r0, [r3, #0]
 8003b4c:	9302      	str	r3, [sp, #8]
 8003b4e:	f7ff fcd1 	bl	80034f4 <__aeabi_f2d>
 8003b52:	000b      	movs	r3, r1
 8003b54:	499d      	ldr	r1, [pc, #628]	@ (8003dcc <main+0x5fc>)
 8003b56:	0002      	movs	r2, r0
 8003b58:	0028      	movs	r0, r5
 8003b5a:	9103      	str	r1, [sp, #12]
 8003b5c:	f003 fa78 	bl	8007050 <siprintf>
				ssd1306_SetCursor(27,5);
 8003b60:	2105      	movs	r1, #5
 8003b62:	201b      	movs	r0, #27
 8003b64:	f000 fd80 	bl	8004668 <ssd1306_SetCursor>
				ssd1306_WriteString(temp,Font_7x10,White);
 8003b68:	6862      	ldr	r2, [r4, #4]
 8003b6a:	68a3      	ldr	r3, [r4, #8]
 8003b6c:	6821      	ldr	r1, [r4, #0]
 8003b6e:	0028      	movs	r0, r5
 8003b70:	9600      	str	r6, [sp, #0]
 8003b72:	f000 fd5f 	bl	8004634 <ssd1306_WriteString>
				ssd1306_SetCursor(70,5);
 8003b76:	2105      	movs	r1, #5
 8003b78:	2046      	movs	r0, #70	@ 0x46
 8003b7a:	f000 fd75 	bl	8004668 <ssd1306_SetCursor>
				ssd1306_WriteString("HT:",Font_7x10,White);
 8003b7e:	68a3      	ldr	r3, [r4, #8]
 8003b80:	6821      	ldr	r1, [r4, #0]
 8003b82:	6862      	ldr	r2, [r4, #4]
 8003b84:	4892      	ldr	r0, [pc, #584]	@ (8003dd0 <main+0x600>)
 8003b86:	9600      	str	r6, [sp, #0]
 8003b88:	f000 fd54 	bl	8004634 <ssd1306_WriteString>
					temp[i] = 0;
 8003b8c:	2209      	movs	r2, #9
 8003b8e:	2100      	movs	r1, #0
 8003b90:	0028      	movs	r0, r5
 8003b92:	f003 facb 	bl	800712c <memset>
				sprintf(temp,"%.0f  ",real_temperature_heater);
 8003b96:	4f7e      	ldr	r7, [pc, #504]	@ (8003d90 <main+0x5c0>)
 8003b98:	6838      	ldr	r0, [r7, #0]
 8003b9a:	f7ff fcab 	bl	80034f4 <__aeabi_f2d>
 8003b9e:	0002      	movs	r2, r0
 8003ba0:	000b      	movs	r3, r1
 8003ba2:	0028      	movs	r0, r5
 8003ba4:	9903      	ldr	r1, [sp, #12]
 8003ba6:	f003 fa53 	bl	8007050 <siprintf>
				ssd1306_SetCursor(92,5);
 8003baa:	2105      	movs	r1, #5
 8003bac:	205c      	movs	r0, #92	@ 0x5c
 8003bae:	f000 fd5b 	bl	8004668 <ssd1306_SetCursor>
				ssd1306_WriteString(temp,Font_7x10,White);
 8003bb2:	cc0e      	ldmia	r4!, {r1, r2, r3}
 8003bb4:	0028      	movs	r0, r5
 8003bb6:	9600      	str	r6, [sp, #0]
 8003bb8:	f000 fd3c 	bl	8004634 <ssd1306_WriteString>
				ssd1306_UpdateScreen();
 8003bbc:	f000 fcb2 	bl	8004524 <ssd1306_UpdateScreen>
				real_temperature_element_last = real_temperature_element;
 8003bc0:	9a02      	ldr	r2, [sp, #8]
 8003bc2:	4b7e      	ldr	r3, [pc, #504]	@ (8003dbc <main+0x5ec>)
 8003bc4:	6812      	ldr	r2, [r2, #0]
 8003bc6:	601a      	str	r2, [r3, #0]
				real_temperature_heater_last = real_temperature_heater;
 8003bc8:	4b7d      	ldr	r3, [pc, #500]	@ (8003dc0 <main+0x5f0>)
 8003bca:	683a      	ldr	r2, [r7, #0]
 8003bcc:	601a      	str	r2, [r3, #0]
			if(set_temperature != 0 && temp_set){
 8003bce:	4c81      	ldr	r4, [pc, #516]	@ (8003dd4 <main+0x604>)
 8003bd0:	2100      	movs	r1, #0
 8003bd2:	6825      	ldr	r5, [r4, #0]
 8003bd4:	1c28      	adds	r0, r5, #0
 8003bd6:	f7fc fc73 	bl	80004c0 <__aeabi_fcmpeq>
 8003bda:	2800      	cmp	r0, #0
 8003bdc:	d000      	beq.n	8003be0 <main+0x410>
 8003bde:	e0c7      	b.n	8003d70 <main+0x5a0>
 8003be0:	4b7d      	ldr	r3, [pc, #500]	@ (8003dd8 <main+0x608>)
 8003be2:	781b      	ldrb	r3, [r3, #0]
 8003be4:	2b00      	cmp	r3, #0
 8003be6:	d100      	bne.n	8003bea <main+0x41a>
 8003be8:	e0bb      	b.n	8003d62 <main+0x592>
				if(set_temperature != set_temperature_last){
 8003bea:	4b7c      	ldr	r3, [pc, #496]	@ (8003ddc <main+0x60c>)
 8003bec:	6818      	ldr	r0, [r3, #0]
 8003bee:	f7fd fc4b 	bl	8001488 <__aeabi_i2f>
 8003bf2:	1c01      	adds	r1, r0, #0
 8003bf4:	1c28      	adds	r0, r5, #0
 8003bf6:	f7fc fc63 	bl	80004c0 <__aeabi_fcmpeq>
 8003bfa:	1e06      	subs	r6, r0, #0
 8003bfc:	d130      	bne.n	8003c60 <main+0x490>
					ssd1306_WriteString("Set:",Font_7x10,White);
 8003bfe:	2701      	movs	r7, #1
					ssd1306_FillRectangle(54,15,75,25,Black);
 8003c00:	2319      	movs	r3, #25
 8003c02:	224b      	movs	r2, #75	@ 0x4b
 8003c04:	210f      	movs	r1, #15
 8003c06:	9000      	str	r0, [sp, #0]
 8003c08:	2036      	movs	r0, #54	@ 0x36
 8003c0a:	f000 fd33 	bl	8004674 <ssd1306_FillRectangle>
					ssd1306_UpdateScreen();
 8003c0e:	f000 fc89 	bl	8004524 <ssd1306_UpdateScreen>
					ssd1306_SetCursor(5,15);
 8003c12:	210f      	movs	r1, #15
 8003c14:	2005      	movs	r0, #5
 8003c16:	f000 fd27 	bl	8004668 <ssd1306_SetCursor>
					ssd1306_WriteString("Set:",Font_7x10,White);
 8003c1a:	4d66      	ldr	r5, [pc, #408]	@ (8003db4 <main+0x5e4>)
 8003c1c:	4870      	ldr	r0, [pc, #448]	@ (8003de0 <main+0x610>)
 8003c1e:	6829      	ldr	r1, [r5, #0]
 8003c20:	686a      	ldr	r2, [r5, #4]
 8003c22:	68ab      	ldr	r3, [r5, #8]
 8003c24:	9700      	str	r7, [sp, #0]
 8003c26:	f000 fd05 	bl	8004634 <ssd1306_WriteString>
						temp[i] = 0;
 8003c2a:	4b67      	ldr	r3, [pc, #412]	@ (8003dc8 <main+0x5f8>)
 8003c2c:	2209      	movs	r2, #9
 8003c2e:	0031      	movs	r1, r6
 8003c30:	0018      	movs	r0, r3
 8003c32:	001e      	movs	r6, r3
 8003c34:	f003 fa7a 	bl	800712c <memset>
					sprintf(temp,"%.0f",set_temperature);
 8003c38:	6820      	ldr	r0, [r4, #0]
 8003c3a:	f7ff fc5b 	bl	80034f4 <__aeabi_f2d>
 8003c3e:	0002      	movs	r2, r0
 8003c40:	000b      	movs	r3, r1
 8003c42:	0030      	movs	r0, r6
 8003c44:	4967      	ldr	r1, [pc, #412]	@ (8003de4 <main+0x614>)
 8003c46:	f003 fa03 	bl	8007050 <siprintf>
					ssd1306_SetCursor(34,15);
 8003c4a:	210f      	movs	r1, #15
 8003c4c:	2022      	movs	r0, #34	@ 0x22
 8003c4e:	f000 fd0b 	bl	8004668 <ssd1306_SetCursor>
					ssd1306_WriteString(temp,Font_7x10,White);
 8003c52:	cd0e      	ldmia	r5!, {r1, r2, r3}
 8003c54:	0030      	movs	r0, r6
 8003c56:	9700      	str	r7, [sp, #0]
				ssd1306_WriteString("Heater OFF",Font_7x10,White);
 8003c58:	f000 fcec 	bl	8004634 <ssd1306_WriteString>
				ssd1306_UpdateScreen();
 8003c5c:	f000 fc62 	bl	8004524 <ssd1306_UpdateScreen>
			if(!sub_menu){
 8003c60:	4a61      	ldr	r2, [pc, #388]	@ (8003de8 <main+0x618>)
					menu++;
 8003c62:	4d62      	ldr	r5, [pc, #392]	@ (8003dec <main+0x61c>)
			if(!sub_menu){
 8003c64:	7810      	ldrb	r0, [r2, #0]
					menu++;
 8003c66:	682b      	ldr	r3, [r5, #0]
			if(!sub_menu){
 8003c68:	9202      	str	r2, [sp, #8]
 8003c6a:	2800      	cmp	r0, #0
 8003c6c:	d000      	beq.n	8003c70 <main+0x4a0>
 8003c6e:	e12c      	b.n	8003eca <main+0x6fa>
				if(turn_CW_CCW == 2){
 8003c70:	4a5f      	ldr	r2, [pc, #380]	@ (8003df0 <main+0x620>)
 8003c72:	6811      	ldr	r1, [r2, #0]
 8003c74:	2902      	cmp	r1, #2
 8003c76:	d000      	beq.n	8003c7a <main+0x4aa>
 8003c78:	e0f2      	b.n	8003e60 <main+0x690>
					menu++;
 8003c7a:	3301      	adds	r3, #1
					if(menu > 2){
 8003c7c:	2b02      	cmp	r3, #2
 8003c7e:	dd00      	ble.n	8003c82 <main+0x4b2>
 8003c80:	e0c2      	b.n	8003e08 <main+0x638>
						menu = 2;
 8003c82:	602b      	str	r3, [r5, #0]
 8003c84:	e0c1      	b.n	8003e0a <main+0x63a>
		if(sens_error == 0 && last_Error != sens_error){
 8003c86:	683a      	ldr	r2, [r7, #0]
		else if(sens_error_IC != 0){
 8003c88:	2b00      	cmp	r3, #0
 8003c8a:	d001      	beq.n	8003c90 <main+0x4c0>
			sens_error = sens_error_IC;
 8003c8c:	6023      	str	r3, [r4, #0]
 8003c8e:	e6fa      	b.n	8003a86 <main+0x2b6>
		if(sens_error == 0 && last_Error != sens_error){
 8003c90:	6820      	ldr	r0, [r4, #0]
 8003c92:	2800      	cmp	r0, #0
 8003c94:	d000      	beq.n	8003c98 <main+0x4c8>
 8003c96:	e6f6      	b.n	8003a86 <main+0x2b6>
 8003c98:	2a00      	cmp	r2, #0
 8003c9a:	d100      	bne.n	8003c9e <main+0x4ce>
 8003c9c:	e6f3      	b.n	8003a86 <main+0x2b6>
			ssd1306_Fill(Black);
 8003c9e:	f000 fc33 	bl	8004508 <ssd1306_Fill>
			ssd1306_UpdateScreen();
 8003ca2:	f000 fc3f 	bl	8004524 <ssd1306_UpdateScreen>
 8003ca6:	e6ee      	b.n	8003a86 <main+0x2b6>
					else if(sens_error_HT != 0){
 8003ca8:	6833      	ldr	r3, [r6, #0]
 8003caa:	2b00      	cmp	r3, #0
 8003cac:	d100      	bne.n	8003cb0 <main+0x4e0>
 8003cae:	e714      	b.n	8003ada <main+0x30a>
						ssd1306_WriteString("Sensor HEAT",Font_11x18,White);
 8003cb0:	4b3e      	ldr	r3, [pc, #248]	@ (8003dac <main+0x5dc>)
 8003cb2:	4850      	ldr	r0, [pc, #320]	@ (8003df4 <main+0x624>)
 8003cb4:	e70d      	b.n	8003ad2 <main+0x302>
					ssd1306_WriteString("Error",Font_16x26,White);
 8003cb6:	2501      	movs	r5, #1
					ssd1306_Fill(Black);
 8003cb8:	2000      	movs	r0, #0
 8003cba:	f000 fc25 	bl	8004508 <ssd1306_Fill>
					ssd1306_UpdateScreen();
 8003cbe:	f000 fc31 	bl	8004524 <ssd1306_UpdateScreen>
					ssd1306_SetCursor(20,5);
 8003cc2:	2105      	movs	r1, #5
 8003cc4:	2014      	movs	r0, #20
 8003cc6:	f000 fccf 	bl	8004668 <ssd1306_SetCursor>
					ssd1306_WriteString("Error",Font_16x26,White);
 8003cca:	4b2e      	ldr	r3, [pc, #184]	@ (8003d84 <main+0x5b4>)
 8003ccc:	4836      	ldr	r0, [pc, #216]	@ (8003da8 <main+0x5d8>)
 8003cce:	cb0e      	ldmia	r3, {r1, r2, r3}
 8003cd0:	9500      	str	r5, [sp, #0]
 8003cd2:	f000 fcaf 	bl	8004634 <ssd1306_WriteString>
					ssd1306_SetCursor(5,28);
 8003cd6:	211c      	movs	r1, #28
 8003cd8:	2005      	movs	r0, #5
 8003cda:	f000 fcc5 	bl	8004668 <ssd1306_SetCursor>
					if(sens_error_IC != 0){
 8003cde:	4b30      	ldr	r3, [pc, #192]	@ (8003da0 <main+0x5d0>)
 8003ce0:	681b      	ldr	r3, [r3, #0]
 8003ce2:	2b00      	cmp	r3, #0
 8003ce4:	d00c      	beq.n	8003d00 <main+0x530>
						ssd1306_WriteString("Sensor IC",Font_11x18,White);
 8003ce6:	4b31      	ldr	r3, [pc, #196]	@ (8003dac <main+0x5dc>)
 8003ce8:	4831      	ldr	r0, [pc, #196]	@ (8003db0 <main+0x5e0>)
						ssd1306_WriteString("Sensor HEAT",Font_11x18,White);
 8003cea:	9500      	str	r5, [sp, #0]
 8003cec:	cb0e      	ldmia	r3, {r1, r2, r3}
 8003cee:	f000 fca1 	bl	8004634 <ssd1306_WriteString>
					ssd1306_SetCursor(15,48);
 8003cf2:	200f      	movs	r0, #15
 8003cf4:	2130      	movs	r1, #48	@ 0x30
 8003cf6:	f000 fcb7 	bl	8004668 <ssd1306_SetCursor>
					ssd1306_WriteString("SHORT TO GND",Font_7x10,White);
 8003cfa:	4b2e      	ldr	r3, [pc, #184]	@ (8003db4 <main+0x5e4>)
 8003cfc:	483e      	ldr	r0, [pc, #248]	@ (8003df8 <main+0x628>)
 8003cfe:	e6f2      	b.n	8003ae6 <main+0x316>
					else if(sens_error_HT != 0){
 8003d00:	6833      	ldr	r3, [r6, #0]
 8003d02:	2b00      	cmp	r3, #0
 8003d04:	d0f5      	beq.n	8003cf2 <main+0x522>
						ssd1306_WriteString("Sensor HEAT",Font_11x18,White);
 8003d06:	4b29      	ldr	r3, [pc, #164]	@ (8003dac <main+0x5dc>)
 8003d08:	483a      	ldr	r0, [pc, #232]	@ (8003df4 <main+0x624>)
 8003d0a:	e7ee      	b.n	8003cea <main+0x51a>
					ssd1306_WriteString("Error",Font_16x26,White);
 8003d0c:	2501      	movs	r5, #1
					ssd1306_Fill(Black);
 8003d0e:	2000      	movs	r0, #0
 8003d10:	f000 fbfa 	bl	8004508 <ssd1306_Fill>
					ssd1306_UpdateScreen();
 8003d14:	f000 fc06 	bl	8004524 <ssd1306_UpdateScreen>
					ssd1306_SetCursor(20,5);
 8003d18:	2105      	movs	r1, #5
 8003d1a:	2014      	movs	r0, #20
 8003d1c:	f000 fca4 	bl	8004668 <ssd1306_SetCursor>
					ssd1306_WriteString("Error",Font_16x26,White);
 8003d20:	4b18      	ldr	r3, [pc, #96]	@ (8003d84 <main+0x5b4>)
 8003d22:	4821      	ldr	r0, [pc, #132]	@ (8003da8 <main+0x5d8>)
 8003d24:	cb0e      	ldmia	r3, {r1, r2, r3}
 8003d26:	9500      	str	r5, [sp, #0]
 8003d28:	f000 fc84 	bl	8004634 <ssd1306_WriteString>
					ssd1306_SetCursor(15,28);
 8003d2c:	211c      	movs	r1, #28
 8003d2e:	200f      	movs	r0, #15
 8003d30:	f000 fc9a 	bl	8004668 <ssd1306_SetCursor>
					if(sens_error_IC != 0){
 8003d34:	4b1a      	ldr	r3, [pc, #104]	@ (8003da0 <main+0x5d0>)
 8003d36:	681b      	ldr	r3, [r3, #0]
 8003d38:	2b00      	cmp	r3, #0
 8003d3a:	d00c      	beq.n	8003d56 <main+0x586>
						ssd1306_WriteString("Sensor IC",Font_11x18,White);
 8003d3c:	4b1b      	ldr	r3, [pc, #108]	@ (8003dac <main+0x5dc>)
 8003d3e:	481c      	ldr	r0, [pc, #112]	@ (8003db0 <main+0x5e0>)
						ssd1306_WriteString("Sensor HEAT",Font_11x18,White);
 8003d40:	9500      	str	r5, [sp, #0]
 8003d42:	cb0e      	ldmia	r3, {r1, r2, r3}
 8003d44:	f000 fc76 	bl	8004634 <ssd1306_WriteString>
					ssd1306_SetCursor(15,48);
 8003d48:	200f      	movs	r0, #15
 8003d4a:	2130      	movs	r1, #48	@ 0x30
 8003d4c:	f000 fc8c 	bl	8004668 <ssd1306_SetCursor>
					ssd1306_WriteString("SHORT TO VCC",Font_7x10,White);
 8003d50:	4b18      	ldr	r3, [pc, #96]	@ (8003db4 <main+0x5e4>)
 8003d52:	482a      	ldr	r0, [pc, #168]	@ (8003dfc <main+0x62c>)
 8003d54:	e6c7      	b.n	8003ae6 <main+0x316>
					else if(sens_error_HT != 0){
 8003d56:	6833      	ldr	r3, [r6, #0]
 8003d58:	2b00      	cmp	r3, #0
 8003d5a:	d0f5      	beq.n	8003d48 <main+0x578>
						ssd1306_WriteString("Sensor HEAT",Font_11x18,White);
 8003d5c:	4b13      	ldr	r3, [pc, #76]	@ (8003dac <main+0x5dc>)
 8003d5e:	4825      	ldr	r0, [pc, #148]	@ (8003df4 <main+0x624>)
 8003d60:	e7ee      	b.n	8003d40 <main+0x570>
			else if(set_temperature <= 99){
 8003d62:	4927      	ldr	r1, [pc, #156]	@ (8003e00 <main+0x630>)
 8003d64:	1c28      	adds	r0, r5, #0
 8003d66:	f7fc fbbb 	bl	80004e0 <__aeabi_fcmple>
 8003d6a:	2800      	cmp	r0, #0
 8003d6c:	d100      	bne.n	8003d70 <main+0x5a0>
 8003d6e:	e777      	b.n	8003c60 <main+0x490>
				ssd1306_SetCursor(5,15);
 8003d70:	210f      	movs	r1, #15
 8003d72:	2005      	movs	r0, #5
 8003d74:	f000 fc78 	bl	8004668 <ssd1306_SetCursor>
				ssd1306_WriteString("Heater OFF",Font_7x10,White);
 8003d78:	2201      	movs	r2, #1
 8003d7a:	4b0e      	ldr	r3, [pc, #56]	@ (8003db4 <main+0x5e4>)
 8003d7c:	9200      	str	r2, [sp, #0]
 8003d7e:	4821      	ldr	r0, [pc, #132]	@ (8003e04 <main+0x634>)
 8003d80:	cb0e      	ldmia	r3, {r1, r2, r3}
 8003d82:	e769      	b.n	8003c58 <main+0x488>
 8003d84:	080096c8 	.word	0x080096c8
 8003d88:	080094bc 	.word	0x080094bc
 8003d8c:	2000025c 	.word	0x2000025c
 8003d90:	20000288 	.word	0x20000288
 8003d94:	2000021c 	.word	0x2000021c
 8003d98:	20000264 	.word	0x20000264
 8003d9c:	20000284 	.word	0x20000284
 8003da0:	20000260 	.word	0x20000260
 8003da4:	2000028c 	.word	0x2000028c
 8003da8:	080094c1 	.word	0x080094c1
 8003dac:	080096d4 	.word	0x080096d4
 8003db0:	080094c7 	.word	0x080094c7
 8003db4:	080096e0 	.word	0x080096e0
 8003db8:	080094dd 	.word	0x080094dd
 8003dbc:	2000027c 	.word	0x2000027c
 8003dc0:	20000280 	.word	0x20000280
 8003dc4:	08009505 	.word	0x08009505
 8003dc8:	20000268 	.word	0x20000268
 8003dcc:	08009509 	.word	0x08009509
 8003dd0:	08009510 	.word	0x08009510
 8003dd4:	2000001c 	.word	0x2000001c
 8003dd8:	2000024c 	.word	0x2000024c
 8003ddc:	2000000c 	.word	0x2000000c
 8003de0:	08009514 	.word	0x08009514
 8003de4:	08009519 	.word	0x08009519
 8003de8:	20000254 	.word	0x20000254
 8003dec:	20000274 	.word	0x20000274
 8003df0:	20000258 	.word	0x20000258
 8003df4:	080094d1 	.word	0x080094d1
 8003df8:	080094eb 	.word	0x080094eb
 8003dfc:	080094f8 	.word	0x080094f8
 8003e00:	42c60000 	.word	0x42c60000
 8003e04:	0800951e 	.word	0x0800951e
						menu = 0;
 8003e08:	6028      	str	r0, [r5, #0]
				turn_CW_CCW = 0;
 8003e0a:	2600      	movs	r6, #0
				if(menu_last != menu){
 8003e0c:	4bd0      	ldr	r3, [pc, #832]	@ (8004150 <main+0x980>)
 8003e0e:	682f      	ldr	r7, [r5, #0]
 8003e10:	681b      	ldr	r3, [r3, #0]
				turn_CW_CCW = 0;
 8003e12:	6016      	str	r6, [r2, #0]
				if(menu_last != menu){
 8003e14:	42bb      	cmp	r3, r7
 8003e16:	d04e      	beq.n	8003eb6 <main+0x6e6>
					switch(menu){
 8003e18:	2f01      	cmp	r7, #1
 8003e1a:	d028      	beq.n	8003e6e <main+0x69e>
 8003e1c:	2f02      	cmp	r7, #2
 8003e1e:	d100      	bne.n	8003e22 <main+0x652>
 8003e20:	e0c5      	b.n	8003fae <main+0x7de>
 8003e22:	42b7      	cmp	r7, r6
 8003e24:	d144      	bne.n	8003eb0 <main+0x6e0>
							ssd1306_FillRectangle(5,25,128,64,Black);
 8003e26:	2340      	movs	r3, #64	@ 0x40
 8003e28:	2280      	movs	r2, #128	@ 0x80
 8003e2a:	2119      	movs	r1, #25
 8003e2c:	2005      	movs	r0, #5
 8003e2e:	9700      	str	r7, [sp, #0]
 8003e30:	f000 fc20 	bl	8004674 <ssd1306_FillRectangle>
							ssd1306_UpdateScreen();
 8003e34:	f000 fb76 	bl	8004524 <ssd1306_UpdateScreen>
							ssd1306_SetCursor(5,25);
 8003e38:	2119      	movs	r1, #25
 8003e3a:	2005      	movs	r0, #5
 8003e3c:	f000 fc14 	bl	8004668 <ssd1306_SetCursor>
							ssd1306_WriteString("Source",Font_11x18,Black);
 8003e40:	4ec4      	ldr	r6, [pc, #784]	@ (8004154 <main+0x984>)
 8003e42:	48c5      	ldr	r0, [pc, #788]	@ (8004158 <main+0x988>)
 8003e44:	6831      	ldr	r1, [r6, #0]
 8003e46:	6872      	ldr	r2, [r6, #4]
 8003e48:	68b3      	ldr	r3, [r6, #8]
 8003e4a:	9700      	str	r7, [sp, #0]
 8003e4c:	f000 fbf2 	bl	8004634 <ssd1306_WriteString>
							ssd1306_SetCursor(5,45);
 8003e50:	2005      	movs	r0, #5
 8003e52:	212d      	movs	r1, #45	@ 0x2d
 8003e54:	f000 fc08 	bl	8004668 <ssd1306_SetCursor>
							ssd1306_WriteString("Temp",Font_11x18,White);
 8003e58:	48c0      	ldr	r0, [pc, #768]	@ (800415c <main+0x98c>)
							ssd1306_WriteString("Source",Font_11x18,White);
 8003e5a:	2301      	movs	r3, #1
 8003e5c:	9300      	str	r3, [sp, #0]
 8003e5e:	e022      	b.n	8003ea6 <main+0x6d6>
				else if(turn_CW_CCW == 1){
 8003e60:	2901      	cmp	r1, #1
 8003e62:	d1d2      	bne.n	8003e0a <main+0x63a>
					if(menu < 0){
 8003e64:	3b01      	subs	r3, #1
 8003e66:	d400      	bmi.n	8003e6a <main+0x69a>
 8003e68:	e70b      	b.n	8003c82 <main+0x4b2>
						menu = 2;
 8003e6a:	2302      	movs	r3, #2
 8003e6c:	e709      	b.n	8003c82 <main+0x4b2>
							ssd1306_FillRectangle(5,25,128,64,Black);
 8003e6e:	2340      	movs	r3, #64	@ 0x40
 8003e70:	2280      	movs	r2, #128	@ 0x80
 8003e72:	2119      	movs	r1, #25
 8003e74:	2005      	movs	r0, #5
 8003e76:	9600      	str	r6, [sp, #0]
 8003e78:	f000 fbfc 	bl	8004674 <ssd1306_FillRectangle>
							ssd1306_UpdateScreen();
 8003e7c:	f000 fb52 	bl	8004524 <ssd1306_UpdateScreen>
							ssd1306_SetCursor(5,25);
 8003e80:	2119      	movs	r1, #25
 8003e82:	2005      	movs	r0, #5
 8003e84:	f000 fbf0 	bl	8004668 <ssd1306_SetCursor>
							ssd1306_WriteString("Temp",Font_11x18,Black);
 8003e88:	4bb2      	ldr	r3, [pc, #712]	@ (8004154 <main+0x984>)
 8003e8a:	9600      	str	r6, [sp, #0]
 8003e8c:	6819      	ldr	r1, [r3, #0]
 8003e8e:	685a      	ldr	r2, [r3, #4]
 8003e90:	001e      	movs	r6, r3
 8003e92:	48b2      	ldr	r0, [pc, #712]	@ (800415c <main+0x98c>)
 8003e94:	689b      	ldr	r3, [r3, #8]
 8003e96:	f000 fbcd 	bl	8004634 <ssd1306_WriteString>
							ssd1306_SetCursor(5,45);
 8003e9a:	2005      	movs	r0, #5
 8003e9c:	212d      	movs	r1, #45	@ 0x2d
 8003e9e:	f000 fbe3 	bl	8004668 <ssd1306_SetCursor>
							ssd1306_WriteString("Heater OFF",Font_11x18,White);
 8003ea2:	48af      	ldr	r0, [pc, #700]	@ (8004160 <main+0x990>)
 8003ea4:	9700      	str	r7, [sp, #0]
							ssd1306_WriteString("Source",Font_11x18,White);
 8003ea6:	ce0e      	ldmia	r6!, {r1, r2, r3}
 8003ea8:	f000 fbc4 	bl	8004634 <ssd1306_WriteString>
							ssd1306_UpdateScreen();
 8003eac:	f000 fb3a 	bl	8004524 <ssd1306_UpdateScreen>
					menu_last = menu;
 8003eb0:	4ba7      	ldr	r3, [pc, #668]	@ (8004150 <main+0x980>)
 8003eb2:	682a      	ldr	r2, [r5, #0]
 8003eb4:	601a      	str	r2, [r3, #0]
				if(button == true){
 8003eb6:	4bab      	ldr	r3, [pc, #684]	@ (8004164 <main+0x994>)
 8003eb8:	781a      	ldrb	r2, [r3, #0]
 8003eba:	2a00      	cmp	r2, #0
 8003ebc:	d100      	bne.n	8003ec0 <main+0x6f0>
 8003ebe:	e092      	b.n	8003fe6 <main+0x816>
					sub_menu = true;
 8003ec0:	2201      	movs	r2, #1
 8003ec2:	9902      	ldr	r1, [sp, #8]
 8003ec4:	700a      	strb	r2, [r1, #0]
					button = false;
 8003ec6:	2200      	movs	r2, #0
 8003ec8:	701a      	strb	r2, [r3, #0]
				if(menu != 1){
 8003eca:	682e      	ldr	r6, [r5, #0]
 8003ecc:	2e01      	cmp	r6, #1
 8003ece:	d00d      	beq.n	8003eec <main+0x71c>
					if(turn_CW_CCW == 2){
 8003ed0:	48a5      	ldr	r0, [pc, #660]	@ (8004168 <main+0x998>)
						sub_menu_pos++;
 8003ed2:	4aa6      	ldr	r2, [pc, #664]	@ (800416c <main+0x99c>)
					if(turn_CW_CCW == 2){
 8003ed4:	6801      	ldr	r1, [r0, #0]
						sub_menu_pos++;
 8003ed6:	6813      	ldr	r3, [r2, #0]
					if(turn_CW_CCW == 2){
 8003ed8:	2902      	cmp	r1, #2
 8003eda:	d000      	beq.n	8003ede <main+0x70e>
 8003edc:	e0f6      	b.n	80040cc <main+0x8fc>
						sub_menu_pos++;
 8003ede:	3301      	adds	r3, #1
						if(sub_menu_pos > 1){
 8003ee0:	2b01      	cmp	r3, #1
 8003ee2:	dd00      	ble.n	8003ee6 <main+0x716>
 8003ee4:	e0f0      	b.n	80040c8 <main+0x8f8>
							sub_menu_pos = 0;
 8003ee6:	6013      	str	r3, [r2, #0]
					turn_CW_CCW = 0;
 8003ee8:	2300      	movs	r3, #0
 8003eea:	6003      	str	r3, [r0, #0]
				if(sub_menu_pos_last != sub_menu_pos || set_temperature != set_temperature_last){
 8003eec:	4b9f      	ldr	r3, [pc, #636]	@ (800416c <main+0x99c>)
 8003eee:	681f      	ldr	r7, [r3, #0]
 8003ef0:	4b9f      	ldr	r3, [pc, #636]	@ (8004170 <main+0x9a0>)
 8003ef2:	681b      	ldr	r3, [r3, #0]
 8003ef4:	42bb      	cmp	r3, r7
 8003ef6:	d108      	bne.n	8003f0a <main+0x73a>
 8003ef8:	4b9e      	ldr	r3, [pc, #632]	@ (8004174 <main+0x9a4>)
 8003efa:	6818      	ldr	r0, [r3, #0]
 8003efc:	f7fd fac4 	bl	8001488 <__aeabi_i2f>
 8003f00:	6821      	ldr	r1, [r4, #0]
 8003f02:	f7fc fadd 	bl	80004c0 <__aeabi_fcmpeq>
 8003f06:	2800      	cmp	r0, #0
 8003f08:	d117      	bne.n	8003f3a <main+0x76a>
					switch(menu){
 8003f0a:	2500      	movs	r5, #0
 8003f0c:	2e01      	cmp	r6, #1
 8003f0e:	d100      	bne.n	8003f12 <main+0x742>
 8003f10:	e162      	b.n	80041d8 <main+0xa08>
 8003f12:	2e02      	cmp	r6, #2
 8003f14:	d100      	bne.n	8003f18 <main+0x748>
 8003f16:	e1a2      	b.n	800425e <main+0xa8e>
 8003f18:	42ae      	cmp	r6, r5
 8003f1a:	d105      	bne.n	8003f28 <main+0x758>
							switch(sub_menu_pos){
 8003f1c:	42af      	cmp	r7, r5
 8003f1e:	d100      	bne.n	8003f22 <main+0x752>
 8003f20:	e0dc      	b.n	80040dc <main+0x90c>
 8003f22:	2f01      	cmp	r7, #1
 8003f24:	d100      	bne.n	8003f28 <main+0x758>
 8003f26:	e0f7      	b.n	8004118 <main+0x948>
					sub_menu_pos_last = sub_menu_pos;
 8003f28:	4a90      	ldr	r2, [pc, #576]	@ (800416c <main+0x99c>)
 8003f2a:	4b91      	ldr	r3, [pc, #580]	@ (8004170 <main+0x9a0>)
 8003f2c:	6812      	ldr	r2, [r2, #0]
					set_temperature_last = set_temperature;
 8003f2e:	6820      	ldr	r0, [r4, #0]
					sub_menu_pos_last = sub_menu_pos;
 8003f30:	601a      	str	r2, [r3, #0]
					set_temperature_last = set_temperature;
 8003f32:	f7fd fa89 	bl	8001448 <__aeabi_f2iz>
 8003f36:	4d8f      	ldr	r5, [pc, #572]	@ (8004174 <main+0x9a4>)
 8003f38:	6028      	str	r0, [r5, #0]
				if(menu == 1){
 8003f3a:	4b8f      	ldr	r3, [pc, #572]	@ (8004178 <main+0x9a8>)
 8003f3c:	681d      	ldr	r5, [r3, #0]
 8003f3e:	2d01      	cmp	r5, #1
 8003f40:	d113      	bne.n	8003f6a <main+0x79a>
					if(turn_CW_CCW == 2){
 8003f42:	4f89      	ldr	r7, [pc, #548]	@ (8004168 <main+0x998>)
 8003f44:	683b      	ldr	r3, [r7, #0]
 8003f46:	2b02      	cmp	r3, #2
 8003f48:	d000      	beq.n	8003f4c <main+0x77c>
 8003f4a:	e1c9      	b.n	80042e0 <main+0xb10>
						set_temperature++;
 8003f4c:	21fe      	movs	r1, #254	@ 0xfe
 8003f4e:	6820      	ldr	r0, [r4, #0]
 8003f50:	0589      	lsls	r1, r1, #22
 8003f52:	f7fc fafb 	bl	800054c <__aeabi_fadd>
						if(set_temperature >= 400){
 8003f56:	4989      	ldr	r1, [pc, #548]	@ (800417c <main+0x9ac>)
						set_temperature++;
 8003f58:	1c06      	adds	r6, r0, #0
						if(set_temperature >= 400){
 8003f5a:	f7fc fad5 	bl	8000508 <__aeabi_fcmpge>
 8003f5e:	2800      	cmp	r0, #0
 8003f60:	d000      	beq.n	8003f64 <main+0x794>
 8003f62:	e1ba      	b.n	80042da <main+0xb0a>
						set_temperature--;
 8003f64:	6026      	str	r6, [r4, #0]
					turn_CW_CCW = 0;
 8003f66:	2300      	movs	r3, #0
 8003f68:	603b      	str	r3, [r7, #0]
				if(button == true){
 8003f6a:	4a7e      	ldr	r2, [pc, #504]	@ (8004164 <main+0x994>)
 8003f6c:	7813      	ldrb	r3, [r2, #0]
 8003f6e:	2b00      	cmp	r3, #0
 8003f70:	d03e      	beq.n	8003ff0 <main+0x820>
					sub_menu = false;
 8003f72:	2100      	movs	r1, #0
 8003f74:	4b82      	ldr	r3, [pc, #520]	@ (8004180 <main+0x9b0>)
 8003f76:	4e83      	ldr	r6, [pc, #524]	@ (8004184 <main+0x9b4>)
 8003f78:	7019      	strb	r1, [r3, #0]
					button = false;
 8003f7a:	7011      	strb	r1, [r2, #0]
					switch(menu){
 8003f7c:	2d01      	cmp	r5, #1
 8003f7e:	d100      	bne.n	8003f82 <main+0x7b2>
 8003f80:	e1c2      	b.n	8004308 <main+0xb38>
 8003f82:	2d02      	cmp	r5, #2
 8003f84:	d100      	bne.n	8003f88 <main+0x7b8>
 8003f86:	e1d9      	b.n	800433c <main+0xb6c>
 8003f88:	428d      	cmp	r5, r1
 8003f8a:	d108      	bne.n	8003f9e <main+0x7ce>
							switch(sub_menu_pos){
 8003f8c:	4b77      	ldr	r3, [pc, #476]	@ (800416c <main+0x99c>)
 8003f8e:	4a7e      	ldr	r2, [pc, #504]	@ (8004188 <main+0x9b8>)
 8003f90:	681b      	ldr	r3, [r3, #0]
 8003f92:	428b      	cmp	r3, r1
 8003f94:	d100      	bne.n	8003f98 <main+0x7c8>
 8003f96:	e1b4      	b.n	8004302 <main+0xb32>
 8003f98:	2b01      	cmp	r3, #1
 8003f9a:	d100      	bne.n	8003f9e <main+0x7ce>
 8003f9c:	e1b2      	b.n	8004304 <main+0xb34>
					menu_last = 100;
 8003f9e:	2364      	movs	r3, #100	@ 0x64
 8003fa0:	4a6b      	ldr	r2, [pc, #428]	@ (8004150 <main+0x980>)
 8003fa2:	6013      	str	r3, [r2, #0]
					sub_menu_pos_last = 100;
 8003fa4:	4a72      	ldr	r2, [pc, #456]	@ (8004170 <main+0x9a0>)
 8003fa6:	6013      	str	r3, [r2, #0]
					set_temperature_last = 100;
 8003fa8:	4a72      	ldr	r2, [pc, #456]	@ (8004174 <main+0x9a4>)
 8003faa:	6013      	str	r3, [r2, #0]
 8003fac:	e020      	b.n	8003ff0 <main+0x820>
							ssd1306_FillRectangle(5,25,128,64,Black);
 8003fae:	2340      	movs	r3, #64	@ 0x40
 8003fb0:	2280      	movs	r2, #128	@ 0x80
 8003fb2:	2119      	movs	r1, #25
 8003fb4:	2005      	movs	r0, #5
 8003fb6:	9600      	str	r6, [sp, #0]
 8003fb8:	f000 fb5c 	bl	8004674 <ssd1306_FillRectangle>
							ssd1306_UpdateScreen();
 8003fbc:	f000 fab2 	bl	8004524 <ssd1306_UpdateScreen>
							ssd1306_SetCursor(5,25);
 8003fc0:	2119      	movs	r1, #25
 8003fc2:	2005      	movs	r0, #5
 8003fc4:	f000 fb50 	bl	8004668 <ssd1306_SetCursor>
							ssd1306_WriteString("Heater OFF",Font_11x18,Black);
 8003fc8:	4b62      	ldr	r3, [pc, #392]	@ (8004154 <main+0x984>)
 8003fca:	9600      	str	r6, [sp, #0]
 8003fcc:	6819      	ldr	r1, [r3, #0]
 8003fce:	685a      	ldr	r2, [r3, #4]
 8003fd0:	001e      	movs	r6, r3
 8003fd2:	4863      	ldr	r0, [pc, #396]	@ (8004160 <main+0x990>)
 8003fd4:	689b      	ldr	r3, [r3, #8]
 8003fd6:	f000 fb2d 	bl	8004634 <ssd1306_WriteString>
							ssd1306_SetCursor(5,45);
 8003fda:	2005      	movs	r0, #5
 8003fdc:	212d      	movs	r1, #45	@ 0x2d
 8003fde:	f000 fb43 	bl	8004668 <ssd1306_SetCursor>
							ssd1306_WriteString("Source",Font_11x18,White);
 8003fe2:	485d      	ldr	r0, [pc, #372]	@ (8004158 <main+0x988>)
 8003fe4:	e739      	b.n	8003e5a <main+0x68a>
			if(sub_menu){
 8003fe6:	9b02      	ldr	r3, [sp, #8]
 8003fe8:	781b      	ldrb	r3, [r3, #0]
 8003fea:	2b00      	cmp	r3, #0
 8003fec:	d000      	beq.n	8003ff0 <main+0x820>
 8003fee:	e76c      	b.n	8003eca <main+0x6fa>
		if(temp_select == 1){
 8003ff0:	4b65      	ldr	r3, [pc, #404]	@ (8004188 <main+0x9b8>)
 8003ff2:	681b      	ldr	r3, [r3, #0]
 8003ff4:	2b01      	cmp	r3, #1
 8003ff6:	d000      	beq.n	8003ffa <main+0x82a>
 8003ff8:	e1ac      	b.n	8004354 <main+0xb84>
			selected_temperature = real_temperature_heater;
 8003ffa:	4b64      	ldr	r3, [pc, #400]	@ (800418c <main+0x9bc>)
 8003ffc:	4a64      	ldr	r2, [pc, #400]	@ (8004190 <main+0x9c0>)
			selected_temperature = real_temperature_element;
 8003ffe:	6812      	ldr	r2, [r2, #0]
 8004000:	601a      	str	r2, [r3, #0]
		if(temp_set){
 8004002:	4b60      	ldr	r3, [pc, #384]	@ (8004184 <main+0x9b4>)
 8004004:	781b      	ldrb	r3, [r3, #0]
 8004006:	2b00      	cmp	r3, #0
 8004008:	d100      	bne.n	800400c <main+0x83c>
 800400a:	e520      	b.n	8003a4e <main+0x27e>
			PID_error = set_temperature - selected_temperature;
 800400c:	4b61      	ldr	r3, [pc, #388]	@ (8004194 <main+0x9c4>)
 800400e:	4a5f      	ldr	r2, [pc, #380]	@ (800418c <main+0x9bc>)
 8004010:	6818      	ldr	r0, [r3, #0]
 8004012:	6811      	ldr	r1, [r2, #0]
 8004014:	f7fc ffb4 	bl	8000f80 <__aeabi_fsub>
 8004018:	4b5f      	ldr	r3, [pc, #380]	@ (8004198 <main+0x9c8>)
			if(PID_error > 30){ //integral constant will only affect errors below 30ºC
 800401a:	4960      	ldr	r1, [pc, #384]	@ (800419c <main+0x9cc>)
			PID_error = set_temperature - selected_temperature;
 800401c:	6018      	str	r0, [r3, #0]
 800401e:	1c04      	adds	r4, r0, #0
			if(PID_error > 30){ //integral constant will only affect errors below 30ºC
 8004020:	f7fc fa68 	bl	80004f4 <__aeabi_fcmpgt>
 8004024:	4d5e      	ldr	r5, [pc, #376]	@ (80041a0 <main+0x9d0>)
 8004026:	2800      	cmp	r0, #0
 8004028:	d001      	beq.n	800402e <main+0x85e>
				PID_i = 0;
 800402a:	2300      	movs	r3, #0
 800402c:	602b      	str	r3, [r5, #0]
			PID_p = kp * PID_error;                      //Calculate the P value
 800402e:	4b5d      	ldr	r3, [pc, #372]	@ (80041a4 <main+0x9d4>)
 8004030:	1c20      	adds	r0, r4, #0
 8004032:	6819      	ldr	r1, [r3, #0]
 8004034:	f7fc fe4a 	bl	8000ccc <__aeabi_fmul>
 8004038:	f7fd fa06 	bl	8001448 <__aeabi_f2iz>
 800403c:	4b5a      	ldr	r3, [pc, #360]	@ (80041a8 <main+0x9d8>)
 800403e:	9002      	str	r0, [sp, #8]
 8004040:	6018      	str	r0, [r3, #0]
			PID_i = PID_i + (ki * PID_error);            //Calculate the I value
 8004042:	4b5a      	ldr	r3, [pc, #360]	@ (80041ac <main+0x9dc>)
 8004044:	1c20      	adds	r0, r4, #0
 8004046:	6819      	ldr	r1, [r3, #0]
 8004048:	f7fc fe40 	bl	8000ccc <__aeabi_fmul>
 800404c:	6829      	ldr	r1, [r5, #0]
 800404e:	f7fc fa7d 	bl	800054c <__aeabi_fadd>
			elapsedTime = (float)(Time - timePrev) / 10000;            //s
 8004052:	4f57      	ldr	r7, [pc, #348]	@ (80041b0 <main+0x9e0>)
			PID_i = PID_i + (ki * PID_error);            //Calculate the I value
 8004054:	6028      	str	r0, [r5, #0]
 8004056:	9003      	str	r0, [sp, #12]
			elapsedTime = (float)(Time - timePrev) / 10000;            //s
 8004058:	6838      	ldr	r0, [r7, #0]
 800405a:	f7fd fa65 	bl	8001528 <__aeabi_ui2f>
 800405e:	4e55      	ldr	r6, [pc, #340]	@ (80041b4 <main+0x9e4>)
 8004060:	6831      	ldr	r1, [r6, #0]
 8004062:	f7fc ff8d 	bl	8000f80 <__aeabi_fsub>
 8004066:	4954      	ldr	r1, [pc, #336]	@ (80041b8 <main+0x9e8>)
 8004068:	f7fc fc62 	bl	8000930 <__aeabi_fdiv>
 800406c:	4b53      	ldr	r3, [pc, #332]	@ (80041bc <main+0x9ec>)
 800406e:	1c05      	adds	r5, r0, #0
 8004070:	6018      	str	r0, [r3, #0]
			timePrev = Time; // the previous time is stored before the actual time read
 8004072:	6838      	ldr	r0, [r7, #0]
 8004074:	f7fd fa58 	bl	8001528 <__aeabi_ui2f>
			if(elapsedTime > 0){
 8004078:	2100      	movs	r1, #0
			timePrev = Time; // the previous time is stored before the actual time read
 800407a:	6030      	str	r0, [r6, #0]
			if(elapsedTime > 0){
 800407c:	1c28      	adds	r0, r5, #0
 800407e:	f7fc fa39 	bl	80004f4 <__aeabi_fcmpgt>
 8004082:	4f4f      	ldr	r7, [pc, #316]	@ (80041c0 <main+0x9f0>)
 8004084:	4e4f      	ldr	r6, [pc, #316]	@ (80041c4 <main+0x9f4>)
 8004086:	2800      	cmp	r0, #0
 8004088:	d00b      	beq.n	80040a2 <main+0x8d2>
				PID_d = kd * ((PID_error - previous_error) / elapsedTime); //Calculate the D value
 800408a:	6831      	ldr	r1, [r6, #0]
 800408c:	1c20      	adds	r0, r4, #0
 800408e:	f7fc ff77 	bl	8000f80 <__aeabi_fsub>
 8004092:	1c29      	adds	r1, r5, #0
 8004094:	f7fc fc4c 	bl	8000930 <__aeabi_fdiv>
 8004098:	4b4b      	ldr	r3, [pc, #300]	@ (80041c8 <main+0x9f8>)
 800409a:	6819      	ldr	r1, [r3, #0]
 800409c:	f7fc fe16 	bl	8000ccc <__aeabi_fmul>
 80040a0:	6038      	str	r0, [r7, #0]
			PID_value = (PID_p + PID_i + PID_d);
 80040a2:	9802      	ldr	r0, [sp, #8]
 80040a4:	f7fd f9f0 	bl	8001488 <__aeabi_i2f>
 80040a8:	9903      	ldr	r1, [sp, #12]
 80040aa:	f7fc fa4f 	bl	800054c <__aeabi_fadd>
 80040ae:	6839      	ldr	r1, [r7, #0]
 80040b0:	4d46      	ldr	r5, [pc, #280]	@ (80041cc <main+0x9fc>)
 80040b2:	f7fc fa4b 	bl	800054c <__aeabi_fadd>
 80040b6:	f7fd f9c7 	bl	8001448 <__aeabi_f2iz>
			if(PID_value > 98){
 80040ba:	2862      	cmp	r0, #98	@ 0x62
 80040bc:	dc00      	bgt.n	80040c0 <main+0x8f0>
 80040be:	e14f      	b.n	8004360 <main+0xb90>
 80040c0:	2062      	movs	r0, #98	@ 0x62
			PID_value = (PID_p + PID_i + PID_d);
 80040c2:	6028      	str	r0, [r5, #0]
			previous_error = PID_error; //Remember to store the previous error.
 80040c4:	6034      	str	r4, [r6, #0]
 80040c6:	e4c2      	b.n	8003a4e <main+0x27e>
							sub_menu_pos = 0;
 80040c8:	2300      	movs	r3, #0
 80040ca:	e70c      	b.n	8003ee6 <main+0x716>
					else if(turn_CW_CCW == 1){
 80040cc:	2901      	cmp	r1, #1
 80040ce:	d000      	beq.n	80040d2 <main+0x902>
 80040d0:	e70a      	b.n	8003ee8 <main+0x718>
						if(sub_menu_pos < 0){
 80040d2:	3b01      	subs	r3, #1
 80040d4:	d400      	bmi.n	80040d8 <main+0x908>
 80040d6:	e706      	b.n	8003ee6 <main+0x716>
							sub_menu_pos = 1;
 80040d8:	6011      	str	r1, [r2, #0]
 80040da:	e705      	b.n	8003ee8 <main+0x718>
									ssd1306_FillRectangle(5,25,128,64,Black);
 80040dc:	2340      	movs	r3, #64	@ 0x40
 80040de:	2280      	movs	r2, #128	@ 0x80
 80040e0:	2119      	movs	r1, #25
 80040e2:	2005      	movs	r0, #5
 80040e4:	9700      	str	r7, [sp, #0]
 80040e6:	f000 fac5 	bl	8004674 <ssd1306_FillRectangle>
									ssd1306_UpdateScreen();
 80040ea:	f000 fa1b 	bl	8004524 <ssd1306_UpdateScreen>
									ssd1306_SetCursor(5,25);
 80040ee:	2119      	movs	r1, #25
 80040f0:	2005      	movs	r0, #5
 80040f2:	f000 fab9 	bl	8004668 <ssd1306_SetCursor>
									ssd1306_WriteString("Element",Font_11x18,Black);
 80040f6:	4d17      	ldr	r5, [pc, #92]	@ (8004154 <main+0x984>)
 80040f8:	4835      	ldr	r0, [pc, #212]	@ (80041d0 <main+0xa00>)
 80040fa:	68ab      	ldr	r3, [r5, #8]
 80040fc:	6829      	ldr	r1, [r5, #0]
 80040fe:	686a      	ldr	r2, [r5, #4]
 8004100:	9700      	str	r7, [sp, #0]
 8004102:	f000 fa97 	bl	8004634 <ssd1306_WriteString>
									ssd1306_SetCursor(5,45);
 8004106:	2005      	movs	r0, #5
 8004108:	212d      	movs	r1, #45	@ 0x2d
 800410a:	f000 faad 	bl	8004668 <ssd1306_SetCursor>
									ssd1306_WriteString("Heater",Font_11x18,White);
 800410e:	2301      	movs	r3, #1
 8004110:	4830      	ldr	r0, [pc, #192]	@ (80041d4 <main+0xa04>)
 8004112:	9300      	str	r3, [sp, #0]
									ssd1306_WriteString("Yes",Font_11x18,Black);
 8004114:	cd0e      	ldmia	r5!, {r1, r2, r3}
 8004116:	e09d      	b.n	8004254 <main+0xa84>
									ssd1306_FillRectangle(5,25,128,64,Black);
 8004118:	2340      	movs	r3, #64	@ 0x40
 800411a:	2280      	movs	r2, #128	@ 0x80
 800411c:	2119      	movs	r1, #25
 800411e:	2005      	movs	r0, #5
 8004120:	9600      	str	r6, [sp, #0]
 8004122:	f000 faa7 	bl	8004674 <ssd1306_FillRectangle>
									ssd1306_UpdateScreen();
 8004126:	f000 f9fd 	bl	8004524 <ssd1306_UpdateScreen>
									ssd1306_SetCursor(5,25);
 800412a:	2119      	movs	r1, #25
 800412c:	2005      	movs	r0, #5
 800412e:	f000 fa9b 	bl	8004668 <ssd1306_SetCursor>
									ssd1306_WriteString("Heater",Font_11x18,Black);
 8004132:	4d08      	ldr	r5, [pc, #32]	@ (8004154 <main+0x984>)
 8004134:	4827      	ldr	r0, [pc, #156]	@ (80041d4 <main+0xa04>)
 8004136:	6829      	ldr	r1, [r5, #0]
 8004138:	686a      	ldr	r2, [r5, #4]
 800413a:	68ab      	ldr	r3, [r5, #8]
 800413c:	9600      	str	r6, [sp, #0]
 800413e:	f000 fa79 	bl	8004634 <ssd1306_WriteString>
									ssd1306_SetCursor(5,45);
 8004142:	2005      	movs	r0, #5
 8004144:	212d      	movs	r1, #45	@ 0x2d
 8004146:	f000 fa8f 	bl	8004668 <ssd1306_SetCursor>
									ssd1306_WriteString("Element",Font_11x18,White);
 800414a:	4821      	ldr	r0, [pc, #132]	@ (80041d0 <main+0xa00>)
									ssd1306_WriteString("Yes",Font_11x18,Black);
 800414c:	9700      	str	r7, [sp, #0]
 800414e:	e7e1      	b.n	8004114 <main+0x944>
 8004150:	20000014 	.word	0x20000014
 8004154:	080096d4 	.word	0x080096d4
 8004158:	08009529 	.word	0x08009529
 800415c:	08009530 	.word	0x08009530
 8004160:	0800951e 	.word	0x0800951e
 8004164:	20000272 	.word	0x20000272
 8004168:	20000258 	.word	0x20000258
 800416c:	20000250 	.word	0x20000250
 8004170:	20000010 	.word	0x20000010
 8004174:	2000000c 	.word	0x2000000c
 8004178:	20000274 	.word	0x20000274
 800417c:	43c80000 	.word	0x43c80000
 8004180:	20000254 	.word	0x20000254
 8004184:	2000024c 	.word	0x2000024c
 8004188:	20000018 	.word	0x20000018
 800418c:	20000278 	.word	0x20000278
 8004190:	20000288 	.word	0x20000288
 8004194:	2000001c 	.word	0x2000001c
 8004198:	20000248 	.word	0x20000248
 800419c:	41f00000 	.word	0x41f00000
 80041a0:	20000224 	.word	0x20000224
 80041a4:	20000008 	.word	0x20000008
 80041a8:	20000228 	.word	0x20000228
 80041ac:	20000004 	.word	0x20000004
 80041b0:	20000234 	.word	0x20000234
 80041b4:	2000023c 	.word	0x2000023c
 80041b8:	461c4000 	.word	0x461c4000
 80041bc:	20000240 	.word	0x20000240
 80041c0:	20000220 	.word	0x20000220
 80041c4:	20000244 	.word	0x20000244
 80041c8:	20000000 	.word	0x20000000
 80041cc:	20000230 	.word	0x20000230
 80041d0:	08009535 	.word	0x08009535
 80041d4:	0800953d 	.word	0x0800953d
							ssd1306_FillRectangle(5,25,128,64,Black);
 80041d8:	2340      	movs	r3, #64	@ 0x40
 80041da:	2280      	movs	r2, #128	@ 0x80
 80041dc:	2119      	movs	r1, #25
 80041de:	2005      	movs	r0, #5
 80041e0:	9500      	str	r5, [sp, #0]
 80041e2:	f000 fa47 	bl	8004674 <ssd1306_FillRectangle>
							ssd1306_UpdateScreen();
 80041e6:	f000 f99d 	bl	8004524 <ssd1306_UpdateScreen>
								temp[i] = 0;
 80041ea:	4f5f      	ldr	r7, [pc, #380]	@ (8004368 <main+0xb98>)
 80041ec:	2209      	movs	r2, #9
 80041ee:	0029      	movs	r1, r5
 80041f0:	0038      	movs	r0, r7
 80041f2:	f002 ff9b 	bl	800712c <memset>
							sprintf(temp,"%.0f",set_temperature);
 80041f6:	6820      	ldr	r0, [r4, #0]
 80041f8:	f7ff f97c 	bl	80034f4 <__aeabi_f2d>
 80041fc:	0002      	movs	r2, r0
 80041fe:	000b      	movs	r3, r1
 8004200:	0038      	movs	r0, r7
 8004202:	495a      	ldr	r1, [pc, #360]	@ (800436c <main+0xb9c>)
 8004204:	f002 ff24 	bl	8007050 <siprintf>
							ssd1306_SetCursor(5,25);
 8004208:	2119      	movs	r1, #25
 800420a:	2005      	movs	r0, #5
 800420c:	f000 fa2c 	bl	8004668 <ssd1306_SetCursor>
							ssd1306_WriteString("Temp",Font_11x18,White);
 8004210:	4d57      	ldr	r5, [pc, #348]	@ (8004370 <main+0xba0>)
 8004212:	4858      	ldr	r0, [pc, #352]	@ (8004374 <main+0xba4>)
 8004214:	686a      	ldr	r2, [r5, #4]
 8004216:	68ab      	ldr	r3, [r5, #8]
 8004218:	6829      	ldr	r1, [r5, #0]
 800421a:	9600      	str	r6, [sp, #0]
 800421c:	f000 fa0a 	bl	8004634 <ssd1306_WriteString>
							ssd1306_SetCursor(5,45);
 8004220:	212d      	movs	r1, #45	@ 0x2d
 8004222:	2005      	movs	r0, #5
 8004224:	f000 fa20 	bl	8004668 <ssd1306_SetCursor>
							if(set_temperature < 100){
 8004228:	6823      	ldr	r3, [r4, #0]
 800422a:	4953      	ldr	r1, [pc, #332]	@ (8004378 <main+0xba8>)
 800422c:	1c18      	adds	r0, r3, #0
 800422e:	9302      	str	r3, [sp, #8]
 8004230:	f7fc f94c 	bl	80004cc <__aeabi_fcmplt>
 8004234:	9003      	str	r0, [sp, #12]
 8004236:	2800      	cmp	r0, #0
 8004238:	d002      	beq.n	8004240 <main+0xa70>
								ssd1306_WriteString("Off",Font_11x18,White);
 800423a:	4850      	ldr	r0, [pc, #320]	@ (800437c <main+0xbac>)
 800423c:	9600      	str	r6, [sp, #0]
 800423e:	e769      	b.n	8004114 <main+0x944>
							else if(set_temperature >= 100){
 8004240:	494d      	ldr	r1, [pc, #308]	@ (8004378 <main+0xba8>)
 8004242:	9802      	ldr	r0, [sp, #8]
 8004244:	f7fc f960 	bl	8000508 <__aeabi_fcmpge>
 8004248:	2800      	cmp	r0, #0
 800424a:	d005      	beq.n	8004258 <main+0xa88>
								ssd1306_WriteString(temp,Font_11x18,Black);
 800424c:	0038      	movs	r0, r7
 800424e:	9b03      	ldr	r3, [sp, #12]
 8004250:	9300      	str	r3, [sp, #0]
 8004252:	cd0e      	ldmia	r5!, {r1, r2, r3}
									ssd1306_WriteString("No",Font_11x18,Black);
 8004254:	f000 f9ee 	bl	8004634 <ssd1306_WriteString>
									ssd1306_UpdateScreen();
 8004258:	f000 f964 	bl	8004524 <ssd1306_UpdateScreen>
								break;
 800425c:	e664      	b.n	8003f28 <main+0x758>
							switch(sub_menu_pos){
 800425e:	2f00      	cmp	r7, #0
 8004260:	d01f      	beq.n	80042a2 <main+0xad2>
 8004262:	2f01      	cmp	r7, #1
 8004264:	d000      	beq.n	8004268 <main+0xa98>
 8004266:	e65f      	b.n	8003f28 <main+0x758>
									ssd1306_FillRectangle(5,25,128,64,Black);
 8004268:	2340      	movs	r3, #64	@ 0x40
 800426a:	2280      	movs	r2, #128	@ 0x80
 800426c:	2119      	movs	r1, #25
 800426e:	2005      	movs	r0, #5
 8004270:	9500      	str	r5, [sp, #0]
 8004272:	f000 f9ff 	bl	8004674 <ssd1306_FillRectangle>
									ssd1306_UpdateScreen();
 8004276:	f000 f955 	bl	8004524 <ssd1306_UpdateScreen>
									ssd1306_SetCursor(5,25);
 800427a:	2119      	movs	r1, #25
 800427c:	2005      	movs	r0, #5
 800427e:	f000 f9f3 	bl	8004668 <ssd1306_SetCursor>
									ssd1306_WriteString("Turn off?",Font_11x18,White);
 8004282:	4e3b      	ldr	r6, [pc, #236]	@ (8004370 <main+0xba0>)
 8004284:	483e      	ldr	r0, [pc, #248]	@ (8004380 <main+0xbb0>)
 8004286:	6831      	ldr	r1, [r6, #0]
 8004288:	6872      	ldr	r2, [r6, #4]
 800428a:	68b3      	ldr	r3, [r6, #8]
 800428c:	9700      	str	r7, [sp, #0]
 800428e:	f000 f9d1 	bl	8004634 <ssd1306_WriteString>
									ssd1306_SetCursor(5,45);
 8004292:	212d      	movs	r1, #45	@ 0x2d
 8004294:	2005      	movs	r0, #5
 8004296:	f000 f9e7 	bl	8004668 <ssd1306_SetCursor>
									ssd1306_WriteString("No",Font_11x18,Black);
 800429a:	ce0e      	ldmia	r6!, {r1, r2, r3}
 800429c:	4839      	ldr	r0, [pc, #228]	@ (8004384 <main+0xbb4>)
 800429e:	9500      	str	r5, [sp, #0]
 80042a0:	e7d8      	b.n	8004254 <main+0xa84>
									ssd1306_FillRectangle(5,25,128,64,Black);
 80042a2:	2340      	movs	r3, #64	@ 0x40
 80042a4:	2280      	movs	r2, #128	@ 0x80
 80042a6:	2119      	movs	r1, #25
 80042a8:	2005      	movs	r0, #5
 80042aa:	9700      	str	r7, [sp, #0]
 80042ac:	f000 f9e2 	bl	8004674 <ssd1306_FillRectangle>
									ssd1306_UpdateScreen();
 80042b0:	f000 f938 	bl	8004524 <ssd1306_UpdateScreen>
									ssd1306_SetCursor(5,25);
 80042b4:	2119      	movs	r1, #25
 80042b6:	2005      	movs	r0, #5
 80042b8:	f000 f9d6 	bl	8004668 <ssd1306_SetCursor>
									ssd1306_WriteString("Turn off?",Font_11x18,White);
 80042bc:	2301      	movs	r3, #1
 80042be:	4d2c      	ldr	r5, [pc, #176]	@ (8004370 <main+0xba0>)
 80042c0:	9300      	str	r3, [sp, #0]
 80042c2:	6829      	ldr	r1, [r5, #0]
 80042c4:	686a      	ldr	r2, [r5, #4]
 80042c6:	68ab      	ldr	r3, [r5, #8]
 80042c8:	482d      	ldr	r0, [pc, #180]	@ (8004380 <main+0xbb0>)
 80042ca:	f000 f9b3 	bl	8004634 <ssd1306_WriteString>
									ssd1306_SetCursor(5,45);
 80042ce:	2005      	movs	r0, #5
 80042d0:	212d      	movs	r1, #45	@ 0x2d
 80042d2:	f000 f9c9 	bl	8004668 <ssd1306_SetCursor>
									ssd1306_WriteString("Yes",Font_11x18,Black);
 80042d6:	482c      	ldr	r0, [pc, #176]	@ (8004388 <main+0xbb8>)
 80042d8:	e738      	b.n	800414c <main+0x97c>
							set_temperature = 400;
 80042da:	4b2c      	ldr	r3, [pc, #176]	@ (800438c <main+0xbbc>)
							set_temperature = 99;
 80042dc:	6023      	str	r3, [r4, #0]
 80042de:	e642      	b.n	8003f66 <main+0x796>
					else if(turn_CW_CCW == 1){
 80042e0:	2b01      	cmp	r3, #1
 80042e2:	d000      	beq.n	80042e6 <main+0xb16>
 80042e4:	e63f      	b.n	8003f66 <main+0x796>
						set_temperature--;
 80042e6:	21fe      	movs	r1, #254	@ 0xfe
 80042e8:	6820      	ldr	r0, [r4, #0]
 80042ea:	0589      	lsls	r1, r1, #22
 80042ec:	f7fc fe48 	bl	8000f80 <__aeabi_fsub>
						if(set_temperature <= 99){
 80042f0:	4927      	ldr	r1, [pc, #156]	@ (8004390 <main+0xbc0>)
						set_temperature--;
 80042f2:	1c06      	adds	r6, r0, #0
						if(set_temperature <= 99){
 80042f4:	f7fc f8f4 	bl	80004e0 <__aeabi_fcmple>
 80042f8:	2800      	cmp	r0, #0
 80042fa:	d100      	bne.n	80042fe <main+0xb2e>
 80042fc:	e632      	b.n	8003f64 <main+0x794>
							set_temperature = 99;
 80042fe:	4b24      	ldr	r3, [pc, #144]	@ (8004390 <main+0xbc0>)
 8004300:	e7ec      	b.n	80042dc <main+0xb0c>
									temp_select = 2;
 8004302:	2302      	movs	r3, #2
									temp_select = 1;
 8004304:	6013      	str	r3, [r2, #0]
								break;
 8004306:	e64a      	b.n	8003f9e <main+0x7ce>
							if(set_temperature > 0){
 8004308:	6827      	ldr	r7, [r4, #0]
 800430a:	2100      	movs	r1, #0
 800430c:	1c38      	adds	r0, r7, #0
 800430e:	f7fc f8f1 	bl	80004f4 <__aeabi_fcmpgt>
 8004312:	1e04      	subs	r4, r0, #0
 8004314:	d001      	beq.n	800431a <main+0xb4a>
								temp_set = true;
 8004316:	7035      	strb	r5, [r6, #0]
 8004318:	e641      	b.n	8003f9e <main+0x7ce>
							else if(set_temperature <= 99){
 800431a:	491d      	ldr	r1, [pc, #116]	@ (8004390 <main+0xbc0>)
 800431c:	1c38      	adds	r0, r7, #0
 800431e:	f7fc f8df 	bl	80004e0 <__aeabi_fcmple>
 8004322:	2800      	cmp	r0, #0
 8004324:	d100      	bne.n	8004328 <main+0xb58>
 8004326:	e63a      	b.n	8003f9e <main+0x7ce>
								HAL_GPIO_WritePin(GPIOA,GPIO_PIN_1,GPIO_PIN_RESET);
 8004328:	0022      	movs	r2, r4
 800432a:	2102      	movs	r1, #2
								PID_value = 0;
 800432c:	4b19      	ldr	r3, [pc, #100]	@ (8004394 <main+0xbc4>)
								temp_set = false;
 800432e:	7034      	strb	r4, [r6, #0]
								PID_value = 0;
 8004330:	601c      	str	r4, [r3, #0]
									HAL_GPIO_WritePin(GPIOA,GPIO_PIN_1,GPIO_PIN_RESET);
 8004332:	2090      	movs	r0, #144	@ 0x90
 8004334:	05c0      	lsls	r0, r0, #23
 8004336:	f000 fddf 	bl	8004ef8 <HAL_GPIO_WritePin>
								break;
 800433a:	e630      	b.n	8003f9e <main+0x7ce>
							switch(sub_menu_pos){
 800433c:	4b16      	ldr	r3, [pc, #88]	@ (8004398 <main+0xbc8>)
 800433e:	681a      	ldr	r2, [r3, #0]
 8004340:	2a00      	cmp	r2, #0
 8004342:	d000      	beq.n	8004346 <main+0xb76>
 8004344:	e62b      	b.n	8003f9e <main+0x7ce>
									set_temperature = 99;
 8004346:	4b12      	ldr	r3, [pc, #72]	@ (8004390 <main+0xbc0>)
									HAL_GPIO_WritePin(GPIOA,GPIO_PIN_1,GPIO_PIN_RESET);
 8004348:	0029      	movs	r1, r5
									set_temperature = 99;
 800434a:	6023      	str	r3, [r4, #0]
									PID_value = 0;
 800434c:	4b11      	ldr	r3, [pc, #68]	@ (8004394 <main+0xbc4>)
									temp_set = false;
 800434e:	7032      	strb	r2, [r6, #0]
									PID_value = 0;
 8004350:	601a      	str	r2, [r3, #0]
									HAL_GPIO_WritePin(GPIOA,GPIO_PIN_1,GPIO_PIN_RESET);
 8004352:	e7ee      	b.n	8004332 <main+0xb62>
		else if(temp_select == 2){
 8004354:	2b02      	cmp	r3, #2
 8004356:	d000      	beq.n	800435a <main+0xb8a>
 8004358:	e653      	b.n	8004002 <main+0x832>
			selected_temperature = real_temperature_element;
 800435a:	4b10      	ldr	r3, [pc, #64]	@ (800439c <main+0xbcc>)
 800435c:	4a10      	ldr	r2, [pc, #64]	@ (80043a0 <main+0xbd0>)
 800435e:	e64e      	b.n	8003ffe <main+0x82e>
			PID_value = (PID_p + PID_i + PID_d);
 8004360:	43c3      	mvns	r3, r0
 8004362:	17db      	asrs	r3, r3, #31
 8004364:	4018      	ands	r0, r3
 8004366:	e6ac      	b.n	80040c2 <main+0x8f2>
 8004368:	20000268 	.word	0x20000268
 800436c:	08009519 	.word	0x08009519
 8004370:	080096d4 	.word	0x080096d4
 8004374:	08009530 	.word	0x08009530
 8004378:	42c80000 	.word	0x42c80000
 800437c:	08009544 	.word	0x08009544
 8004380:	08009548 	.word	0x08009548
 8004384:	08009556 	.word	0x08009556
 8004388:	08009552 	.word	0x08009552
 800438c:	43c80000 	.word	0x43c80000
 8004390:	42c60000 	.word	0x42c60000
 8004394:	20000230 	.word	0x20000230
 8004398:	20000250 	.word	0x20000250
 800439c:	20000278 	.word	0x20000278
 80043a0:	20000284 	.word	0x20000284

080043a4 <HAL_GPIO_EXTI_Callback>:
void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin){
 80043a4:	b510      	push	{r4, lr}
	if(GPIO_Pin == GPIO_PIN_0){
 80043a6:	2801      	cmp	r0, #1
 80043a8:	d10c      	bne.n	80043c4 <HAL_GPIO_EXTI_Callback+0x20>
		if(temp_set){
 80043aa:	4b18      	ldr	r3, [pc, #96]	@ (800440c <HAL_GPIO_EXTI_Callback+0x68>)
 80043ac:	781b      	ldrb	r3, [r3, #0]
 80043ae:	2b00      	cmp	r3, #0
 80043b0:	d007      	beq.n	80043c2 <HAL_GPIO_EXTI_Callback+0x1e>
			set = 1;
 80043b2:	4b17      	ldr	r3, [pc, #92]	@ (8004410 <HAL_GPIO_EXTI_Callback+0x6c>)
			time_stamp = Time;
 80043b4:	4c17      	ldr	r4, [pc, #92]	@ (8004414 <HAL_GPIO_EXTI_Callback+0x70>)
			set = 1;
 80043b6:	7018      	strb	r0, [r3, #0]
			time_stamp = Time;
 80043b8:	4b17      	ldr	r3, [pc, #92]	@ (8004418 <HAL_GPIO_EXTI_Callback+0x74>)
 80043ba:	6818      	ldr	r0, [r3, #0]
 80043bc:	f7fd f8b4 	bl	8001528 <__aeabi_ui2f>
 80043c0:	6020      	str	r0, [r4, #0]
}
 80043c2:	bd10      	pop	{r4, pc}
	else if(GPIO_Pin == GPIO_PIN_2){
 80043c4:	2804      	cmp	r0, #4
 80043c6:	d106      	bne.n	80043d6 <HAL_GPIO_EXTI_Callback+0x32>
		button = true;
 80043c8:	2201      	movs	r2, #1
 80043ca:	4b14      	ldr	r3, [pc, #80]	@ (800441c <HAL_GPIO_EXTI_Callback+0x78>)
		HAL_Delay(10);
 80043cc:	3006      	adds	r0, #6
		button = true;
 80043ce:	701a      	strb	r2, [r3, #0]
		HAL_Delay(10);
 80043d0:	f000 fbd6 	bl	8004b80 <HAL_Delay>
 80043d4:	e7f5      	b.n	80043c2 <HAL_GPIO_EXTI_Callback+0x1e>
	else if(GPIO_Pin == GPIO_PIN_8){
 80043d6:	2180      	movs	r1, #128	@ 0x80
 80043d8:	0049      	lsls	r1, r1, #1
 80043da:	4288      	cmp	r0, r1
 80043dc:	d109      	bne.n	80043f2 <HAL_GPIO_EXTI_Callback+0x4e>
		if(HAL_GPIO_ReadPin(GPIOB,GPIO_PIN_9)){
 80043de:	4810      	ldr	r0, [pc, #64]	@ (8004420 <HAL_GPIO_EXTI_Callback+0x7c>)
 80043e0:	1849      	adds	r1, r1, r1
 80043e2:	f000 fd83 	bl	8004eec <HAL_GPIO_ReadPin>
 80043e6:	2800      	cmp	r0, #0
 80043e8:	d0eb      	beq.n	80043c2 <HAL_GPIO_EXTI_Callback+0x1e>
			turn_CW_CCW = 1;
 80043ea:	2201      	movs	r2, #1
 80043ec:	4b0d      	ldr	r3, [pc, #52]	@ (8004424 <HAL_GPIO_EXTI_Callback+0x80>)
			turn_CW_CCW = 2;
 80043ee:	601a      	str	r2, [r3, #0]
}
 80043f0:	e7e7      	b.n	80043c2 <HAL_GPIO_EXTI_Callback+0x1e>
	else if(GPIO_Pin == GPIO_PIN_9){
 80043f2:	2380      	movs	r3, #128	@ 0x80
 80043f4:	009b      	lsls	r3, r3, #2
 80043f6:	4298      	cmp	r0, r3
 80043f8:	d1e3      	bne.n	80043c2 <HAL_GPIO_EXTI_Callback+0x1e>
		if(HAL_GPIO_ReadPin(GPIOB,GPIO_PIN_8)){
 80043fa:	4809      	ldr	r0, [pc, #36]	@ (8004420 <HAL_GPIO_EXTI_Callback+0x7c>)
 80043fc:	f000 fd76 	bl	8004eec <HAL_GPIO_ReadPin>
 8004400:	2800      	cmp	r0, #0
 8004402:	d0de      	beq.n	80043c2 <HAL_GPIO_EXTI_Callback+0x1e>
			turn_CW_CCW = 2;
 8004404:	2202      	movs	r2, #2
 8004406:	4b07      	ldr	r3, [pc, #28]	@ (8004424 <HAL_GPIO_EXTI_Callback+0x80>)
 8004408:	e7f1      	b.n	80043ee <HAL_GPIO_EXTI_Callback+0x4a>
 800440a:	46c0      	nop			@ (mov r8, r8)
 800440c:	2000024c 	.word	0x2000024c
 8004410:	2000022c 	.word	0x2000022c
 8004414:	20000238 	.word	0x20000238
 8004418:	20000234 	.word	0x20000234
 800441c:	20000272 	.word	0x20000272
 8004420:	48000400 	.word	0x48000400
 8004424:	20000258 	.word	0x20000258

08004428 <HAL_TIM_PeriodElapsedCallback>:
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim){
 8004428:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	Time++;
 800442a:	4c1e      	ldr	r4, [pc, #120]	@ (80044a4 <HAL_TIM_PeriodElapsedCallback+0x7c>)
	if(set == 1){
 800442c:	4d1e      	ldr	r5, [pc, #120]	@ (80044a8 <HAL_TIM_PeriodElapsedCallback+0x80>)
	Time++;
 800442e:	6823      	ldr	r3, [r4, #0]
 8004430:	3301      	adds	r3, #1
 8004432:	6023      	str	r3, [r4, #0]
	if(set == 1){
 8004434:	782b      	ldrb	r3, [r5, #0]
 8004436:	b2df      	uxtb	r7, r3
 8004438:	2b01      	cmp	r3, #1
 800443a:	d11b      	bne.n	8004474 <HAL_TIM_PeriodElapsedCallback+0x4c>
		if((uint32_t)(Time - time_stamp) >= (maximum_firing_delay - PID_value)){
 800443c:	6820      	ldr	r0, [r4, #0]
 800443e:	f7fd f873 	bl	8001528 <__aeabi_ui2f>
 8004442:	4e1a      	ldr	r6, [pc, #104]	@ (80044ac <HAL_TIM_PeriodElapsedCallback+0x84>)
 8004444:	6831      	ldr	r1, [r6, #0]
 8004446:	f7fc fd9b 	bl	8000f80 <__aeabi_fsub>
 800444a:	f7fc f867 	bl	800051c <__aeabi_f2uiz>
 800444e:	4b18      	ldr	r3, [pc, #96]	@ (80044b0 <HAL_TIM_PeriodElapsedCallback+0x88>)
 8004450:	4a18      	ldr	r2, [pc, #96]	@ (80044b4 <HAL_TIM_PeriodElapsedCallback+0x8c>)
 8004452:	681b      	ldr	r3, [r3, #0]
 8004454:	6812      	ldr	r2, [r2, #0]
 8004456:	1a9b      	subs	r3, r3, r2
 8004458:	4298      	cmp	r0, r3
 800445a:	d30b      	bcc.n	8004474 <HAL_TIM_PeriodElapsedCallback+0x4c>
			HAL_GPIO_WritePin(GPIOA,GPIO_PIN_1,GPIO_PIN_SET);
 800445c:	2090      	movs	r0, #144	@ 0x90
 800445e:	003a      	movs	r2, r7
 8004460:	2102      	movs	r1, #2
 8004462:	05c0      	lsls	r0, r0, #23
 8004464:	f000 fd48 	bl	8004ef8 <HAL_GPIO_WritePin>
			time_stamp = Time;
 8004468:	6820      	ldr	r0, [r4, #0]
 800446a:	f7fd f85d 	bl	8001528 <__aeabi_ui2f>
			set = 2;
 800446e:	2302      	movs	r3, #2
			time_stamp = Time;
 8004470:	6030      	str	r0, [r6, #0]
			set = 2;
 8004472:	702b      	strb	r3, [r5, #0]
	if(set == 2){
 8004474:	782b      	ldrb	r3, [r5, #0]
 8004476:	b2de      	uxtb	r6, r3
 8004478:	2b02      	cmp	r3, #2
 800447a:	d112      	bne.n	80044a2 <HAL_TIM_PeriodElapsedCallback+0x7a>
		if((uint32_t)(Time - time_stamp) >= 1){
 800447c:	6820      	ldr	r0, [r4, #0]
 800447e:	f7fd f853 	bl	8001528 <__aeabi_ui2f>
 8004482:	4b0a      	ldr	r3, [pc, #40]	@ (80044ac <HAL_TIM_PeriodElapsedCallback+0x84>)
 8004484:	6819      	ldr	r1, [r3, #0]
 8004486:	f7fc fd7b 	bl	8000f80 <__aeabi_fsub>
 800448a:	f7fc f847 	bl	800051c <__aeabi_f2uiz>
 800448e:	2800      	cmp	r0, #0
 8004490:	d007      	beq.n	80044a2 <HAL_TIM_PeriodElapsedCallback+0x7a>
			HAL_GPIO_WritePin(GPIOA,GPIO_PIN_1,GPIO_PIN_RESET);
 8004492:	2090      	movs	r0, #144	@ 0x90
 8004494:	2200      	movs	r2, #0
 8004496:	0031      	movs	r1, r6
 8004498:	05c0      	lsls	r0, r0, #23
 800449a:	f000 fd2d 	bl	8004ef8 <HAL_GPIO_WritePin>
			set = 0;
 800449e:	2300      	movs	r3, #0
 80044a0:	702b      	strb	r3, [r5, #0]
}
 80044a2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80044a4:	20000234 	.word	0x20000234
 80044a8:	2000022c 	.word	0x2000022c
 80044ac:	20000238 	.word	0x20000238
 80044b0:	20000020 	.word	0x20000020
 80044b4:	20000230 	.word	0x20000230

080044b8 <Error_Handler>:
 80044b8:	b672      	cpsid	i
	while(1){
 80044ba:	e7fe      	b.n	80044ba <Error_Handler+0x2>

080044bc <ssd1306_WriteCommand>:
void ssd1306_Reset(void){
	/* for I2C - do nothing */
}

// Send a byte to the command register
void ssd1306_WriteCommand(uint8_t byte){
 80044bc:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 80044be:	2217      	movs	r2, #23
	HAL_I2C_Mem_Write(&SSD1306_I2C_PORT,SSD1306_I2C_ADDR,0x00,1,&byte,1,HAL_MAX_DELAY);
 80044c0:	2301      	movs	r3, #1
void ssd1306_WriteCommand(uint8_t byte){
 80044c2:	446a      	add	r2, sp
	HAL_I2C_Mem_Write(&SSD1306_I2C_PORT,SSD1306_I2C_ADDR,0x00,1,&byte,1,HAL_MAX_DELAY);
 80044c4:	425b      	negs	r3, r3
void ssd1306_WriteCommand(uint8_t byte){
 80044c6:	7010      	strb	r0, [r2, #0]
	HAL_I2C_Mem_Write(&SSD1306_I2C_PORT,SSD1306_I2C_ADDR,0x00,1,&byte,1,HAL_MAX_DELAY);
 80044c8:	9302      	str	r3, [sp, #8]
 80044ca:	3302      	adds	r3, #2
 80044cc:	9200      	str	r2, [sp, #0]
 80044ce:	2178      	movs	r1, #120	@ 0x78
 80044d0:	2200      	movs	r2, #0
 80044d2:	9301      	str	r3, [sp, #4]
 80044d4:	4802      	ldr	r0, [pc, #8]	@ (80044e0 <ssd1306_WriteCommand+0x24>)
 80044d6:	f000 feb1 	bl	800523c <HAL_I2C_Mem_Write>
}
 80044da:	b007      	add	sp, #28
 80044dc:	bd00      	pop	{pc}
 80044de:	46c0      	nop			@ (mov r8, r8)
 80044e0:	200003e4 	.word	0x200003e4

080044e4 <ssd1306_WriteData>:

// Send data
void ssd1306_WriteData(uint8_t *buffer,size_t buff_size){
 80044e4:	b51f      	push	{r0, r1, r2, r3, r4, lr}
	HAL_I2C_Mem_Write(&SSD1306_I2C_PORT,SSD1306_I2C_ADDR,0x40,1,buffer,buff_size,HAL_MAX_DELAY);
 80044e6:	2301      	movs	r3, #1
 80044e8:	4c06      	ldr	r4, [pc, #24]	@ (8004504 <ssd1306_WriteData+0x20>)
 80044ea:	425b      	negs	r3, r3
 80044ec:	b289      	uxth	r1, r1
 80044ee:	9302      	str	r3, [sp, #8]
 80044f0:	9101      	str	r1, [sp, #4]
 80044f2:	9000      	str	r0, [sp, #0]
 80044f4:	2240      	movs	r2, #64	@ 0x40
 80044f6:	2178      	movs	r1, #120	@ 0x78
 80044f8:	0020      	movs	r0, r4
 80044fa:	3302      	adds	r3, #2
 80044fc:	f000 fe9e 	bl	800523c <HAL_I2C_Mem_Write>
}
 8004500:	bd1f      	pop	{r0, r1, r2, r3, r4, pc}
 8004502:	46c0      	nop			@ (mov r8, r8)
 8004504:	200003e4 	.word	0x200003e4

08004508 <ssd1306_Fill>:
	SSD1306.Initialized = 1;
}

/* Fill the whole screen with the given color */
void ssd1306_Fill(SSD1306_COLOR color){
	memset(SSD1306_Buffer,(color == Black) ? 0x00:0xFF,sizeof(SSD1306_Buffer));
 8004508:	1e43      	subs	r3, r0, #1
 800450a:	4198      	sbcs	r0, r3
 800450c:	2280      	movs	r2, #128	@ 0x80
void ssd1306_Fill(SSD1306_COLOR color){
 800450e:	b510      	push	{r4, lr}
	memset(SSD1306_Buffer,(color == Black) ? 0x00:0xFF,sizeof(SSD1306_Buffer));
 8004510:	4241      	negs	r1, r0
 8004512:	b2c9      	uxtb	r1, r1
 8004514:	4802      	ldr	r0, [pc, #8]	@ (8004520 <ssd1306_Fill+0x18>)
 8004516:	00d2      	lsls	r2, r2, #3
 8004518:	f002 fe08 	bl	800712c <memset>
}
 800451c:	bd10      	pop	{r4, pc}
 800451e:	46c0      	nop			@ (mov r8, r8)
 8004520:	2000043e 	.word	0x2000043e

08004524 <ssd1306_UpdateScreen>:

/* Write the screenbuffer with changed to the screen */
void ssd1306_UpdateScreen(void){
 8004524:	b570      	push	{r4, r5, r6, lr}
 8004526:	24b0      	movs	r4, #176	@ 0xb0
 8004528:	4d09      	ldr	r5, [pc, #36]	@ (8004550 <ssd1306_UpdateScreen+0x2c>)
	//
	//  * 32px   ==  4 pages
	//  * 64px   ==  8 pages
	//  * 128px  ==  16 pages
	for(uint8_t i = 0; i < SSD1306_HEIGHT / 8; i++){
		ssd1306_WriteCommand(0xB0 + i); // Set the current RAM page address.
 800452a:	0020      	movs	r0, r4
 800452c:	f7ff ffc6 	bl	80044bc <ssd1306_WriteCommand>
		ssd1306_WriteCommand(0x00 + SSD1306_X_OFFSET_LOWER);
 8004530:	2000      	movs	r0, #0
 8004532:	f7ff ffc3 	bl	80044bc <ssd1306_WriteCommand>
	for(uint8_t i = 0; i < SSD1306_HEIGHT / 8; i++){
 8004536:	3401      	adds	r4, #1
		ssd1306_WriteCommand(0x10 + SSD1306_X_OFFSET_UPPER);
 8004538:	2010      	movs	r0, #16
 800453a:	f7ff ffbf 	bl	80044bc <ssd1306_WriteCommand>
	for(uint8_t i = 0; i < SSD1306_HEIGHT / 8; i++){
 800453e:	b2e4      	uxtb	r4, r4
		ssd1306_WriteData(&SSD1306_Buffer[SSD1306_WIDTH * i],SSD1306_WIDTH);
 8004540:	0028      	movs	r0, r5
 8004542:	2180      	movs	r1, #128	@ 0x80
 8004544:	f7ff ffce 	bl	80044e4 <ssd1306_WriteData>
	for(uint8_t i = 0; i < SSD1306_HEIGHT / 8; i++){
 8004548:	3580      	adds	r5, #128	@ 0x80
 800454a:	2cb8      	cmp	r4, #184	@ 0xb8
 800454c:	d1ed      	bne.n	800452a <ssd1306_UpdateScreen+0x6>
	}
}
 800454e:	bd70      	pop	{r4, r5, r6, pc}
 8004550:	2000043e 	.word	0x2000043e

08004554 <ssd1306_DrawPixel>:
 * X => X Coordinate
 * Y => Y Coordinate
 * color => Pixel color
 */
void ssd1306_DrawPixel(uint8_t x,uint8_t y,SSD1306_COLOR color){
	if(x >= SSD1306_WIDTH || y >= SSD1306_HEIGHT){
 8004554:	b243      	sxtb	r3, r0
void ssd1306_DrawPixel(uint8_t x,uint8_t y,SSD1306_COLOR color){
 8004556:	b530      	push	{r4, r5, lr}
	if(x >= SSD1306_WIDTH || y >= SSD1306_HEIGHT){
 8004558:	2b00      	cmp	r3, #0
 800455a:	db0e      	blt.n	800457a <ssd1306_DrawPixel+0x26>
 800455c:	293f      	cmp	r1, #63	@ 0x3f
 800455e:	d80c      	bhi.n	800457a <ssd1306_DrawPixel+0x26>
		return;
	}

	// Draw in the right color
	if(color == White){
		SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] |= 1 << (y % 8);
 8004560:	2407      	movs	r4, #7
 8004562:	08cb      	lsrs	r3, r1, #3
 8004564:	01db      	lsls	r3, r3, #7
 8004566:	4d06      	ldr	r5, [pc, #24]	@ (8004580 <ssd1306_DrawPixel+0x2c>)
 8004568:	4021      	ands	r1, r4
 800456a:	1818      	adds	r0, r3, r0
 800456c:	3c06      	subs	r4, #6
 800456e:	408c      	lsls	r4, r1
 8004570:	5c2b      	ldrb	r3, [r5, r0]
	if(color == White){
 8004572:	2a01      	cmp	r2, #1
 8004574:	d102      	bne.n	800457c <ssd1306_DrawPixel+0x28>
		SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] |= 1 << (y % 8);
 8004576:	4323      	orrs	r3, r4
	}
	else{
		SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] &= ~(1 << (y % 8));
 8004578:	542b      	strb	r3, [r5, r0]
	}
}
 800457a:	bd30      	pop	{r4, r5, pc}
		SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] &= ~(1 << (y % 8));
 800457c:	43a3      	bics	r3, r4
 800457e:	e7fb      	b.n	8004578 <ssd1306_DrawPixel+0x24>
 8004580:	2000043e 	.word	0x2000043e

08004584 <ssd1306_WriteChar>:
 * Draw 1 char to the screen buffer
 * ch       => char om weg te schrijven
 * Font     => Font waarmee we gaan schrijven
 * color    => Black or White
 */
char ssd1306_WriteChar(char ch,SSD1306_Font_t Font,SSD1306_COLOR color){
 8004584:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004586:	0004      	movs	r4, r0
 8004588:	b08b      	sub	sp, #44	@ 0x2c
 800458a:	9208      	str	r2, [sp, #32]
	uint32_t i, b, j;

	// Check if character is valid
	if(ch < 32 || ch > 126)
 800458c:	0022      	movs	r2, r4
char ssd1306_WriteChar(char ch,SSD1306_Font_t Font,SSD1306_COLOR color){
 800458e:	9309      	str	r3, [sp, #36]	@ 0x24
 8004590:	ab10      	add	r3, sp, #64	@ 0x40
 8004592:	781b      	ldrb	r3, [r3, #0]
	if(ch < 32 || ch > 126)
 8004594:	3a20      	subs	r2, #32
char ssd1306_WriteChar(char ch,SSD1306_Font_t Font,SSD1306_COLOR color){
 8004596:	9305      	str	r3, [sp, #20]
	if(ch < 32 || ch > 126)
 8004598:	b2d3      	uxtb	r3, r2
char ssd1306_WriteChar(char ch,SSD1306_Font_t Font,SSD1306_COLOR color){
 800459a:	a807      	add	r0, sp, #28
 800459c:	9107      	str	r1, [sp, #28]
	if(ch < 32 || ch > 126)
 800459e:	2b5e      	cmp	r3, #94	@ 0x5e
 80045a0:	d844      	bhi.n	800462c <ssd1306_WriteChar+0xa8>
 80045a2:	6883      	ldr	r3, [r0, #8]
		return 0;

	// Char width is not equal to font width for proportional font
	const uint8_t char_width = Font.char_width ? Font.char_width[ch - 32]:Font.width;
 80045a4:	2b00      	cmp	r3, #0
 80045a6:	d01d      	beq.n	80045e4 <ssd1306_WriteChar+0x60>
 80045a8:	191b      	adds	r3, r3, r4
 80045aa:	3b20      	subs	r3, #32
 80045ac:	781d      	ldrb	r5, [r3, #0]
	// Check remaining space on current line
	if(SSD1306_WIDTH < (SSD1306.CurrentX + char_width) ||
 80045ae:	4b20      	ldr	r3, [pc, #128]	@ (8004630 <ssd1306_WriteChar+0xac>)
 80045b0:	8819      	ldrh	r1, [r3, #0]
 80045b2:	9101      	str	r1, [sp, #4]
 80045b4:	1949      	adds	r1, r1, r5
 80045b6:	2980      	cmp	r1, #128	@ 0x80
 80045b8:	dc38      	bgt.n	800462c <ssd1306_WriteChar+0xa8>
 80045ba:	7841      	ldrb	r1, [r0, #1]
 80045bc:	9103      	str	r1, [sp, #12]
	SSD1306_HEIGHT < (SSD1306.CurrentY + Font.height)){
 80045be:	885b      	ldrh	r3, [r3, #2]
 80045c0:	9304      	str	r3, [sp, #16]
 80045c2:	185b      	adds	r3, r3, r1
	if(SSD1306_WIDTH < (SSD1306.CurrentX + char_width) ||
 80045c4:	2b40      	cmp	r3, #64	@ 0x40
 80045c6:	dc31      	bgt.n	800462c <ssd1306_WriteChar+0xa8>
		// Not enough space on current line
		return 0;
	}

	// Use the font to write
	for(i = 0; i < Font.height; i++){
 80045c8:	2700      	movs	r7, #0
 80045ca:	434a      	muls	r2, r1
 80045cc:	0053      	lsls	r3, r2, #1
 80045ce:	9302      	str	r3, [sp, #8]
 80045d0:	9b03      	ldr	r3, [sp, #12]
 80045d2:	42bb      	cmp	r3, r7
 80045d4:	d808      	bhi.n	80045e8 <ssd1306_WriteChar+0x64>
			}
		}
	}

	// The current space is now taken
	SSD1306.CurrentX += char_width;
 80045d6:	9a01      	ldr	r2, [sp, #4]
 80045d8:	4b15      	ldr	r3, [pc, #84]	@ (8004630 <ssd1306_WriteChar+0xac>)
 80045da:	18ad      	adds	r5, r5, r2
 80045dc:	801d      	strh	r5, [r3, #0]

	// Return written char for validation
	return ch;
}
 80045de:	0020      	movs	r0, r4
 80045e0:	b00b      	add	sp, #44	@ 0x2c
 80045e2:	bdf0      	pop	{r4, r5, r6, r7, pc}
	const uint8_t char_width = Font.char_width ? Font.char_width[ch - 32]:Font.width;
 80045e4:	7805      	ldrb	r5, [r0, #0]
 80045e6:	e7e2      	b.n	80045ae <ssd1306_WriteChar+0x2a>
		for(j = 0; j < char_width; j++){
 80045e8:	2600      	movs	r6, #0
		b = Font.data[(ch - 32) * Font.height + i];
 80045ea:	9b08      	ldr	r3, [sp, #32]
 80045ec:	9a02      	ldr	r2, [sp, #8]
 80045ee:	5a9b      	ldrh	r3, [r3, r2]
 80045f0:	9306      	str	r3, [sp, #24]
		for(j = 0; j < char_width; j++){
 80045f2:	42b5      	cmp	r5, r6
 80045f4:	d804      	bhi.n	8004600 <ssd1306_WriteChar+0x7c>
	for(i = 0; i < Font.height; i++){
 80045f6:	9b02      	ldr	r3, [sp, #8]
 80045f8:	3701      	adds	r7, #1
 80045fa:	3302      	adds	r3, #2
 80045fc:	9302      	str	r3, [sp, #8]
 80045fe:	e7e7      	b.n	80045d0 <ssd1306_WriteChar+0x4c>
				ssd1306_DrawPixel(SSD1306.CurrentX + j,(SSD1306.CurrentY + i),(SSD1306_COLOR)color);
 8004600:	9b01      	ldr	r3, [sp, #4]
			if((b << j) & 0x8000){
 8004602:	2280      	movs	r2, #128	@ 0x80
				ssd1306_DrawPixel(SSD1306.CurrentX + j,(SSD1306.CurrentY + i),(SSD1306_COLOR)color);
 8004604:	18f0      	adds	r0, r6, r3
 8004606:	9b04      	ldr	r3, [sp, #16]
			if((b << j) & 0x8000){
 8004608:	0212      	lsls	r2, r2, #8
				ssd1306_DrawPixel(SSD1306.CurrentX + j,(SSD1306.CurrentY + i),(SSD1306_COLOR)color);
 800460a:	18f9      	adds	r1, r7, r3
			if((b << j) & 0x8000){
 800460c:	9b06      	ldr	r3, [sp, #24]
				ssd1306_DrawPixel(SSD1306.CurrentX + j,(SSD1306.CurrentY + i),(SSD1306_COLOR)color);
 800460e:	b2c0      	uxtb	r0, r0
			if((b << j) & 0x8000){
 8004610:	40b3      	lsls	r3, r6
				ssd1306_DrawPixel(SSD1306.CurrentX + j,(SSD1306.CurrentY + i),(SSD1306_COLOR)color);
 8004612:	b2c9      	uxtb	r1, r1
			if((b << j) & 0x8000){
 8004614:	4213      	tst	r3, r2
 8004616:	d004      	beq.n	8004622 <ssd1306_WriteChar+0x9e>
				ssd1306_DrawPixel(SSD1306.CurrentX + j,(SSD1306.CurrentY + i),(SSD1306_COLOR)color);
 8004618:	9a05      	ldr	r2, [sp, #20]
				ssd1306_DrawPixel(SSD1306.CurrentX + j,(SSD1306.CurrentY + i),(SSD1306_COLOR)!color);
 800461a:	f7ff ff9b 	bl	8004554 <ssd1306_DrawPixel>
		for(j = 0; j < char_width; j++){
 800461e:	3601      	adds	r6, #1
 8004620:	e7e7      	b.n	80045f2 <ssd1306_WriteChar+0x6e>
				ssd1306_DrawPixel(SSD1306.CurrentX + j,(SSD1306.CurrentY + i),(SSD1306_COLOR)!color);
 8004622:	9b05      	ldr	r3, [sp, #20]
 8004624:	425a      	negs	r2, r3
 8004626:	415a      	adcs	r2, r3
 8004628:	b2d2      	uxtb	r2, r2
 800462a:	e7f6      	b.n	800461a <ssd1306_WriteChar+0x96>
		return 0;
 800462c:	2400      	movs	r4, #0
 800462e:	e7d6      	b.n	80045de <ssd1306_WriteChar+0x5a>
 8004630:	20000438 	.word	0x20000438

08004634 <ssd1306_WriteString>:

/* Write full string to screenbuffer */
char ssd1306_WriteString(char *str,SSD1306_Font_t Font,SSD1306_COLOR color){
 8004634:	b530      	push	{r4, r5, lr}
 8004636:	0004      	movs	r4, r0
 8004638:	b087      	sub	sp, #28
 800463a:	9305      	str	r3, [sp, #20]
 800463c:	ab0a      	add	r3, sp, #40	@ 0x28
 800463e:	781d      	ldrb	r5, [r3, #0]
 8004640:	9103      	str	r1, [sp, #12]
 8004642:	9204      	str	r2, [sp, #16]
	while(*str){
 8004644:	7820      	ldrb	r0, [r4, #0]
 8004646:	2800      	cmp	r0, #0
 8004648:	d101      	bne.n	800464e <ssd1306_WriteString+0x1a>
		str++;
	}

	// Everything ok
	return *str;
}
 800464a:	b007      	add	sp, #28
 800464c:	bd30      	pop	{r4, r5, pc}
		if(ssd1306_WriteChar(*str,Font,color) != *str){
 800464e:	9b05      	ldr	r3, [sp, #20]
 8004650:	9903      	ldr	r1, [sp, #12]
 8004652:	9a04      	ldr	r2, [sp, #16]
 8004654:	9500      	str	r5, [sp, #0]
 8004656:	f7ff ff95 	bl	8004584 <ssd1306_WriteChar>
 800465a:	0003      	movs	r3, r0
 800465c:	7820      	ldrb	r0, [r4, #0]
 800465e:	4283      	cmp	r3, r0
 8004660:	d1f3      	bne.n	800464a <ssd1306_WriteString+0x16>
		str++;
 8004662:	3401      	adds	r4, #1
 8004664:	e7ee      	b.n	8004644 <ssd1306_WriteString+0x10>
	...

08004668 <ssd1306_SetCursor>:

/* Position the cursor */
void ssd1306_SetCursor(uint8_t x,uint8_t y){
	SSD1306.CurrentX = x;
 8004668:	4b01      	ldr	r3, [pc, #4]	@ (8004670 <ssd1306_SetCursor+0x8>)
 800466a:	8018      	strh	r0, [r3, #0]
	SSD1306.CurrentY = y;
 800466c:	8059      	strh	r1, [r3, #2]
}
 800466e:	4770      	bx	lr
 8004670:	20000438 	.word	0x20000438

08004674 <ssd1306_FillRectangle>:

	return;
}

/* Draw a filled rectangle */
void ssd1306_FillRectangle(uint8_t x1,uint8_t y1,uint8_t x2,uint8_t y2,SSD1306_COLOR color){
 8004674:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8004676:	ac08      	add	r4, sp, #32
 8004678:	7824      	ldrb	r4, [r4, #0]
 800467a:	9401      	str	r4, [sp, #4]
	uint8_t x_start = ((x1 <= x2) ? x1:x2);
 800467c:	1c04      	adds	r4, r0, #0
 800467e:	4290      	cmp	r0, r2
 8004680:	d900      	bls.n	8004684 <ssd1306_FillRectangle+0x10>
 8004682:	1c14      	adds	r4, r2, #0
 8004684:	b2e4      	uxtb	r4, r4
 8004686:	9400      	str	r4, [sp, #0]
	uint8_t x_end = ((x1 <= x2) ? x2:x1);
 8004688:	1c06      	adds	r6, r0, #0
 800468a:	4290      	cmp	r0, r2
 800468c:	d200      	bcs.n	8004690 <ssd1306_FillRectangle+0x1c>
 800468e:	1c16      	adds	r6, r2, #0
 8004690:	b2f6      	uxtb	r6, r6
	uint8_t y_start = ((y1 <= y2) ? y1:y2);
 8004692:	1c0c      	adds	r4, r1, #0
 8004694:	4299      	cmp	r1, r3
 8004696:	d900      	bls.n	800469a <ssd1306_FillRectangle+0x26>
 8004698:	1c1c      	adds	r4, r3, #0
 800469a:	b2e4      	uxtb	r4, r4
	uint8_t y_end = ((y1 <= y2) ? y2:y1);
 800469c:	1c0f      	adds	r7, r1, #0
 800469e:	4299      	cmp	r1, r3
 80046a0:	d200      	bcs.n	80046a4 <ssd1306_FillRectangle+0x30>
 80046a2:	1c1f      	adds	r7, r3, #0
 80046a4:	b2ff      	uxtb	r7, r7

	for(uint8_t y = y_start; (y <= y_end) && (y < SSD1306_HEIGHT); y++){
 80046a6:	42bc      	cmp	r4, r7
 80046a8:	d801      	bhi.n	80046ae <ssd1306_FillRectangle+0x3a>
 80046aa:	2c3f      	cmp	r4, #63	@ 0x3f
 80046ac:	d900      	bls.n	80046b0 <ssd1306_FillRectangle+0x3c>
		for(uint8_t x = x_start; (x <= x_end) && (x < SSD1306_WIDTH); x++){
			ssd1306_DrawPixel(x,y,color);
		}
	}
	return;
}
 80046ae:	bdf7      	pop	{r0, r1, r2, r4, r5, r6, r7, pc}
		for(uint8_t x = x_start; (x <= x_end) && (x < SSD1306_WIDTH); x++){
 80046b0:	9d00      	ldr	r5, [sp, #0]
 80046b2:	e009      	b.n	80046c8 <ssd1306_FillRectangle+0x54>
 80046b4:	b26b      	sxtb	r3, r5
 80046b6:	2b00      	cmp	r3, #0
 80046b8:	db08      	blt.n	80046cc <ssd1306_FillRectangle+0x58>
			ssd1306_DrawPixel(x,y,color);
 80046ba:	0028      	movs	r0, r5
 80046bc:	0021      	movs	r1, r4
 80046be:	9a01      	ldr	r2, [sp, #4]
 80046c0:	f7ff ff48 	bl	8004554 <ssd1306_DrawPixel>
		for(uint8_t x = x_start; (x <= x_end) && (x < SSD1306_WIDTH); x++){
 80046c4:	3501      	adds	r5, #1
 80046c6:	b2ed      	uxtb	r5, r5
 80046c8:	42b5      	cmp	r5, r6
 80046ca:	d9f3      	bls.n	80046b4 <ssd1306_FillRectangle+0x40>
	for(uint8_t y = y_start; (y <= y_end) && (y < SSD1306_HEIGHT); y++){
 80046cc:	3401      	adds	r4, #1
 80046ce:	b2e4      	uxtb	r4, r4
 80046d0:	e7e9      	b.n	80046a6 <ssd1306_FillRectangle+0x32>

080046d2 <ssd1306_SetContrast>:
		}
	}
	return;
}

void ssd1306_SetContrast(const uint8_t value){
 80046d2:	b510      	push	{r4, lr}
 80046d4:	0004      	movs	r4, r0
	const uint8_t kSetContrastControlRegister = 0x81;
	ssd1306_WriteCommand(kSetContrastControlRegister);
 80046d6:	2081      	movs	r0, #129	@ 0x81
 80046d8:	f7ff fef0 	bl	80044bc <ssd1306_WriteCommand>
	ssd1306_WriteCommand(value);
 80046dc:	0020      	movs	r0, r4
 80046de:	f7ff feed 	bl	80044bc <ssd1306_WriteCommand>
}
 80046e2:	bd10      	pop	{r4, pc}

080046e4 <ssd1306_SetDisplayOn>:

void ssd1306_SetDisplayOn(const uint8_t on){
 80046e4:	0003      	movs	r3, r0
 80046e6:	b510      	push	{r4, lr}
	if(on){
		value = 0xAF;   // Display on
		SSD1306.DisplayOn = 1;
	}
	else{
		value = 0xAE;   // Display off
 80046e8:	20ae      	movs	r0, #174	@ 0xae
	if(on){
 80046ea:	2b00      	cmp	r3, #0
 80046ec:	d001      	beq.n	80046f2 <ssd1306_SetDisplayOn+0xe>
		SSD1306.DisplayOn = 1;
 80046ee:	2301      	movs	r3, #1
		value = 0xAF;   // Display on
 80046f0:	18c0      	adds	r0, r0, r3
 80046f2:	4a02      	ldr	r2, [pc, #8]	@ (80046fc <ssd1306_SetDisplayOn+0x18>)
		SSD1306.DisplayOn = 0;
	}
	ssd1306_WriteCommand(value);
}
 80046f4:	7153      	strb	r3, [r2, #5]
	ssd1306_WriteCommand(value);
 80046f6:	f7ff fee1 	bl	80044bc <ssd1306_WriteCommand>
}
 80046fa:	bd10      	pop	{r4, pc}
 80046fc:	20000438 	.word	0x20000438

08004700 <ssd1306_Init>:
void ssd1306_Init(void){
 8004700:	b510      	push	{r4, lr}
	HAL_Delay(100);
 8004702:	2064      	movs	r0, #100	@ 0x64
 8004704:	f000 fa3c 	bl	8004b80 <HAL_Delay>
	ssd1306_SetDisplayOn(0); //display off
 8004708:	2000      	movs	r0, #0
 800470a:	f7ff ffeb 	bl	80046e4 <ssd1306_SetDisplayOn>
	ssd1306_WriteCommand(0x20); //Set Memory Addressing Mode
 800470e:	2020      	movs	r0, #32
 8004710:	f7ff fed4 	bl	80044bc <ssd1306_WriteCommand>
	ssd1306_WriteCommand(0x00); // 00b,Horizontal Addressing Mode; 01b,Vertical Addressing Mode;
 8004714:	2000      	movs	r0, #0
 8004716:	f7ff fed1 	bl	80044bc <ssd1306_WriteCommand>
	ssd1306_WriteCommand(0xB0); //Set Page Start Address for Page Addressing Mode,0-7
 800471a:	20b0      	movs	r0, #176	@ 0xb0
 800471c:	f7ff fece 	bl	80044bc <ssd1306_WriteCommand>
	ssd1306_WriteCommand(0xC8); //Set COM Output Scan Direction
 8004720:	20c8      	movs	r0, #200	@ 0xc8
 8004722:	f7ff fecb 	bl	80044bc <ssd1306_WriteCommand>
	ssd1306_WriteCommand(0x00); //---set low column address
 8004726:	2000      	movs	r0, #0
 8004728:	f7ff fec8 	bl	80044bc <ssd1306_WriteCommand>
	ssd1306_WriteCommand(0x10); //---set high column address
 800472c:	2010      	movs	r0, #16
 800472e:	f7ff fec5 	bl	80044bc <ssd1306_WriteCommand>
	ssd1306_WriteCommand(0x40); //--set start line address - CHECK
 8004732:	2040      	movs	r0, #64	@ 0x40
 8004734:	f7ff fec2 	bl	80044bc <ssd1306_WriteCommand>
	ssd1306_SetContrast(0xFF);
 8004738:	20ff      	movs	r0, #255	@ 0xff
 800473a:	f7ff ffca 	bl	80046d2 <ssd1306_SetContrast>
	ssd1306_WriteCommand(0xA1); //--set segment re-map 0 to 127 - CHECK
 800473e:	20a1      	movs	r0, #161	@ 0xa1
 8004740:	f7ff febc 	bl	80044bc <ssd1306_WriteCommand>
	ssd1306_WriteCommand(0xA6); //--set normal color
 8004744:	20a6      	movs	r0, #166	@ 0xa6
 8004746:	f7ff feb9 	bl	80044bc <ssd1306_WriteCommand>
	ssd1306_WriteCommand(0xA8); //--set multiplex ratio(1 to 64) - CHECK
 800474a:	20a8      	movs	r0, #168	@ 0xa8
 800474c:	f7ff feb6 	bl	80044bc <ssd1306_WriteCommand>
	ssd1306_WriteCommand(0x3F); //
 8004750:	203f      	movs	r0, #63	@ 0x3f
 8004752:	f7ff feb3 	bl	80044bc <ssd1306_WriteCommand>
	ssd1306_WriteCommand(0xA4); //0xa4,Output follows RAM content;0xa5,Output ignores RAM content
 8004756:	20a4      	movs	r0, #164	@ 0xa4
 8004758:	f7ff feb0 	bl	80044bc <ssd1306_WriteCommand>
	ssd1306_WriteCommand(0xD3); //-set display offset - CHECK
 800475c:	20d3      	movs	r0, #211	@ 0xd3
 800475e:	f7ff fead 	bl	80044bc <ssd1306_WriteCommand>
	ssd1306_WriteCommand(0x00); //-not offset
 8004762:	2000      	movs	r0, #0
 8004764:	f7ff feaa 	bl	80044bc <ssd1306_WriteCommand>
	ssd1306_WriteCommand(0xD5); //--set display clock divide ratio/oscillator frequency
 8004768:	20d5      	movs	r0, #213	@ 0xd5
 800476a:	f7ff fea7 	bl	80044bc <ssd1306_WriteCommand>
	ssd1306_WriteCommand(0xF0); //--set divide ratio
 800476e:	20f0      	movs	r0, #240	@ 0xf0
 8004770:	f7ff fea4 	bl	80044bc <ssd1306_WriteCommand>
	ssd1306_WriteCommand(0xD9); //--set pre-charge period
 8004774:	20d9      	movs	r0, #217	@ 0xd9
 8004776:	f7ff fea1 	bl	80044bc <ssd1306_WriteCommand>
	ssd1306_WriteCommand(0x22); //
 800477a:	2022      	movs	r0, #34	@ 0x22
 800477c:	f7ff fe9e 	bl	80044bc <ssd1306_WriteCommand>
	ssd1306_WriteCommand(0xDA); //--set com pins hardware configuration - CHECK
 8004780:	20da      	movs	r0, #218	@ 0xda
 8004782:	f7ff fe9b 	bl	80044bc <ssd1306_WriteCommand>
	ssd1306_WriteCommand(0x12);
 8004786:	2012      	movs	r0, #18
 8004788:	f7ff fe98 	bl	80044bc <ssd1306_WriteCommand>
	ssd1306_WriteCommand(0xDB); //--set vcomh
 800478c:	20db      	movs	r0, #219	@ 0xdb
 800478e:	f7ff fe95 	bl	80044bc <ssd1306_WriteCommand>
	ssd1306_WriteCommand(0x20); //0x20,0.77xVcc
 8004792:	2020      	movs	r0, #32
 8004794:	f7ff fe92 	bl	80044bc <ssd1306_WriteCommand>
	ssd1306_WriteCommand(0x8D); //--set DC-DC enable
 8004798:	208d      	movs	r0, #141	@ 0x8d
 800479a:	f7ff fe8f 	bl	80044bc <ssd1306_WriteCommand>
	ssd1306_WriteCommand(0x14); //
 800479e:	2014      	movs	r0, #20
 80047a0:	f7ff fe8c 	bl	80044bc <ssd1306_WriteCommand>
	ssd1306_SetDisplayOn(1); //--turn on SSD1306 panel
 80047a4:	2001      	movs	r0, #1
 80047a6:	f7ff ff9d 	bl	80046e4 <ssd1306_SetDisplayOn>
	ssd1306_Fill(Black);
 80047aa:	2000      	movs	r0, #0
 80047ac:	f7ff feac 	bl	8004508 <ssd1306_Fill>
	ssd1306_UpdateScreen();
 80047b0:	f7ff feb8 	bl	8004524 <ssd1306_UpdateScreen>
	SSD1306.CurrentX = 0;
 80047b4:	2200      	movs	r2, #0
 80047b6:	4b03      	ldr	r3, [pc, #12]	@ (80047c4 <ssd1306_Init+0xc4>)
 80047b8:	801a      	strh	r2, [r3, #0]
	SSD1306.CurrentY = 0;
 80047ba:	805a      	strh	r2, [r3, #2]
	SSD1306.Initialized = 1;
 80047bc:	3201      	adds	r2, #1
 80047be:	711a      	strb	r2, [r3, #4]
}
 80047c0:	bd10      	pop	{r4, pc}
 80047c2:	46c0      	nop			@ (mov r8, r8)
 80047c4:	20000438 	.word	0x20000438

080047c8 <HAL_MspInit>:

  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 80047c8:	2101      	movs	r1, #1
 80047ca:	4b0a      	ldr	r3, [pc, #40]	@ (80047f4 <HAL_MspInit+0x2c>)
{
 80047cc:	b082      	sub	sp, #8
  __HAL_RCC_SYSCFG_CLK_ENABLE();
 80047ce:	699a      	ldr	r2, [r3, #24]
 80047d0:	430a      	orrs	r2, r1
 80047d2:	619a      	str	r2, [r3, #24]
 80047d4:	699a      	ldr	r2, [r3, #24]
 80047d6:	400a      	ands	r2, r1
  __HAL_RCC_PWR_CLK_ENABLE();
 80047d8:	2180      	movs	r1, #128	@ 0x80
  __HAL_RCC_SYSCFG_CLK_ENABLE();
 80047da:	9200      	str	r2, [sp, #0]
 80047dc:	9a00      	ldr	r2, [sp, #0]
  __HAL_RCC_PWR_CLK_ENABLE();
 80047de:	69da      	ldr	r2, [r3, #28]
 80047e0:	0549      	lsls	r1, r1, #21
 80047e2:	430a      	orrs	r2, r1
 80047e4:	61da      	str	r2, [r3, #28]
 80047e6:	69db      	ldr	r3, [r3, #28]
 80047e8:	400b      	ands	r3, r1
 80047ea:	9301      	str	r3, [sp, #4]
 80047ec:	9b01      	ldr	r3, [sp, #4]
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 80047ee:	b002      	add	sp, #8
 80047f0:	4770      	bx	lr
 80047f2:	46c0      	nop			@ (mov r8, r8)
 80047f4:	40021000 	.word	0x40021000

080047f8 <HAL_I2C_MspInit>:
  * This function configures the hardware resources used in this example
  * @param hi2c: I2C handle pointer
  * @retval None
  */
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 80047f8:	b510      	push	{r4, lr}
 80047fa:	0004      	movs	r4, r0
 80047fc:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80047fe:	2214      	movs	r2, #20
 8004800:	2100      	movs	r1, #0
 8004802:	a803      	add	r0, sp, #12
 8004804:	f002 fc92 	bl	800712c <memset>
  if(hi2c->Instance==I2C2)
 8004808:	4b12      	ldr	r3, [pc, #72]	@ (8004854 <HAL_I2C_MspInit+0x5c>)
 800480a:	6822      	ldr	r2, [r4, #0]
 800480c:	429a      	cmp	r2, r3
 800480e:	d11f      	bne.n	8004850 <HAL_I2C_MspInit+0x58>
  {
    /* USER CODE BEGIN I2C2_MspInit 0 */

    /* USER CODE END I2C2_MspInit 0 */

    __HAL_RCC_GPIOB_CLK_ENABLE();
 8004810:	2280      	movs	r2, #128	@ 0x80
 8004812:	4c11      	ldr	r4, [pc, #68]	@ (8004858 <HAL_I2C_MspInit+0x60>)
 8004814:	02d2      	lsls	r2, r2, #11
 8004816:	6963      	ldr	r3, [r4, #20]
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF1_I2C2;
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8004818:	4810      	ldr	r0, [pc, #64]	@ (800485c <HAL_I2C_MspInit+0x64>)
    __HAL_RCC_GPIOB_CLK_ENABLE();
 800481a:	4313      	orrs	r3, r2
 800481c:	6163      	str	r3, [r4, #20]
 800481e:	6963      	ldr	r3, [r4, #20]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8004820:	a903      	add	r1, sp, #12
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8004822:	4013      	ands	r3, r2
 8004824:	9301      	str	r3, [sp, #4]
 8004826:	9b01      	ldr	r3, [sp, #4]
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11;
 8004828:	23c0      	movs	r3, #192	@ 0xc0
 800482a:	011b      	lsls	r3, r3, #4
 800482c:	9303      	str	r3, [sp, #12]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 800482e:	2312      	movs	r3, #18
 8004830:	9304      	str	r3, [sp, #16]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8004832:	3b0f      	subs	r3, #15
 8004834:	9306      	str	r3, [sp, #24]
    GPIO_InitStruct.Alternate = GPIO_AF1_I2C2;
 8004836:	3b02      	subs	r3, #2
 8004838:	9307      	str	r3, [sp, #28]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800483a:	f000 fa9f 	bl	8004d7c <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_I2C2_CLK_ENABLE();
 800483e:	2280      	movs	r2, #128	@ 0x80
 8004840:	69e3      	ldr	r3, [r4, #28]
 8004842:	03d2      	lsls	r2, r2, #15
 8004844:	4313      	orrs	r3, r2
 8004846:	61e3      	str	r3, [r4, #28]
 8004848:	69e3      	ldr	r3, [r4, #28]
 800484a:	4013      	ands	r3, r2
 800484c:	9302      	str	r3, [sp, #8]
 800484e:	9b02      	ldr	r3, [sp, #8]

    /* USER CODE END I2C2_MspInit 1 */

  }

}
 8004850:	b008      	add	sp, #32
 8004852:	bd10      	pop	{r4, pc}
 8004854:	40005800 	.word	0x40005800
 8004858:	40021000 	.word	0x40021000
 800485c:	48000400 	.word	0x48000400

08004860 <HAL_SPI_MspInit>:
  * This function configures the hardware resources used in this example
  * @param hspi: SPI handle pointer
  * @retval None
  */
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 8004860:	b530      	push	{r4, r5, lr}
 8004862:	0005      	movs	r5, r0
 8004864:	b08b      	sub	sp, #44	@ 0x2c
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8004866:	2214      	movs	r2, #20
 8004868:	2100      	movs	r1, #0
 800486a:	a805      	add	r0, sp, #20
 800486c:	f002 fc5e 	bl	800712c <memset>
  if(hspi->Instance==SPI1)
 8004870:	682b      	ldr	r3, [r5, #0]
 8004872:	4a31      	ldr	r2, [pc, #196]	@ (8004938 <HAL_SPI_MspInit+0xd8>)
 8004874:	4293      	cmp	r3, r2
 8004876:	d11f      	bne.n	80048b8 <HAL_SPI_MspInit+0x58>
  {
    /* USER CODE BEGIN SPI1_MspInit 0 */

    /* USER CODE END SPI1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_SPI1_CLK_ENABLE();
 8004878:	2180      	movs	r1, #128	@ 0x80
 800487a:	4b30      	ldr	r3, [pc, #192]	@ (800493c <HAL_SPI_MspInit+0xdc>)
 800487c:	0149      	lsls	r1, r1, #5
 800487e:	699a      	ldr	r2, [r3, #24]
    GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF0_SPI1;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8004880:	2090      	movs	r0, #144	@ 0x90
    __HAL_RCC_SPI1_CLK_ENABLE();
 8004882:	430a      	orrs	r2, r1
 8004884:	619a      	str	r2, [r3, #24]
 8004886:	699a      	ldr	r2, [r3, #24]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8004888:	05c0      	lsls	r0, r0, #23
    __HAL_RCC_SPI1_CLK_ENABLE();
 800488a:	400a      	ands	r2, r1
    __HAL_RCC_GPIOA_CLK_ENABLE();
 800488c:	2180      	movs	r1, #128	@ 0x80
    __HAL_RCC_SPI1_CLK_ENABLE();
 800488e:	9201      	str	r2, [sp, #4]
 8004890:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8004892:	695a      	ldr	r2, [r3, #20]
 8004894:	0289      	lsls	r1, r1, #10
 8004896:	430a      	orrs	r2, r1
 8004898:	615a      	str	r2, [r3, #20]
 800489a:	695b      	ldr	r3, [r3, #20]
 800489c:	400b      	ands	r3, r1
 800489e:	9302      	str	r3, [sp, #8]
 80048a0:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
 80048a2:	2360      	movs	r3, #96	@ 0x60
 80048a4:	9305      	str	r3, [sp, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80048a6:	3b5e      	subs	r3, #94	@ 0x5e
 80048a8:	9306      	str	r3, [sp, #24]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80048aa:	a905      	add	r1, sp, #20
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80048ac:	3301      	adds	r3, #1
 80048ae:	9308      	str	r3, [sp, #32]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80048b0:	f000 fa64 	bl	8004d7c <HAL_GPIO_Init>
    /* USER CODE BEGIN SPI2_MspInit 1 */

    /* USER CODE END SPI2_MspInit 1 */
  }

}
 80048b4:	b00b      	add	sp, #44	@ 0x2c
 80048b6:	bd30      	pop	{r4, r5, pc}
  else if(hspi->Instance==SPI2)
 80048b8:	4a21      	ldr	r2, [pc, #132]	@ (8004940 <HAL_SPI_MspInit+0xe0>)
 80048ba:	4293      	cmp	r3, r2
 80048bc:	d1fa      	bne.n	80048b4 <HAL_SPI_MspInit+0x54>
    __HAL_RCC_SPI2_CLK_ENABLE();
 80048be:	2180      	movs	r1, #128	@ 0x80
 80048c0:	4b1e      	ldr	r3, [pc, #120]	@ (800493c <HAL_SPI_MspInit+0xdc>)
 80048c2:	01c9      	lsls	r1, r1, #7
 80048c4:	69da      	ldr	r2, [r3, #28]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80048c6:	481f      	ldr	r0, [pc, #124]	@ (8004944 <HAL_SPI_MspInit+0xe4>)
    __HAL_RCC_SPI2_CLK_ENABLE();
 80048c8:	430a      	orrs	r2, r1
 80048ca:	61da      	str	r2, [r3, #28]
 80048cc:	69da      	ldr	r2, [r3, #28]
 80048ce:	400a      	ands	r2, r1
    __HAL_RCC_GPIOB_CLK_ENABLE();
 80048d0:	2180      	movs	r1, #128	@ 0x80
    __HAL_RCC_SPI2_CLK_ENABLE();
 80048d2:	9203      	str	r2, [sp, #12]
 80048d4:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 80048d6:	695a      	ldr	r2, [r3, #20]
 80048d8:	02c9      	lsls	r1, r1, #11
 80048da:	430a      	orrs	r2, r1
 80048dc:	615a      	str	r2, [r3, #20]
 80048de:	695b      	ldr	r3, [r3, #20]
 80048e0:	400b      	ands	r3, r1
 80048e2:	9304      	str	r3, [sp, #16]
 80048e4:	9b04      	ldr	r3, [sp, #16]
    GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13|GPIO_PIN_14|GPIO_PIN_15;
 80048e6:	23f0      	movs	r3, #240	@ 0xf0
 80048e8:	021b      	lsls	r3, r3, #8
 80048ea:	9305      	str	r3, [sp, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80048ec:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80048ee:	a905      	add	r1, sp, #20
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80048f0:	9306      	str	r3, [sp, #24]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80048f2:	3301      	adds	r3, #1
 80048f4:	9308      	str	r3, [sp, #32]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80048f6:	f000 fa41 	bl	8004d7c <HAL_GPIO_Init>
    hdma_spi2_tx.Instance = DMA1_Channel5;
 80048fa:	4c13      	ldr	r4, [pc, #76]	@ (8004948 <HAL_SPI_MspInit+0xe8>)
 80048fc:	4b13      	ldr	r3, [pc, #76]	@ (800494c <HAL_SPI_MspInit+0xec>)
    hdma_spi2_tx.Init.MemInc = DMA_MINC_ENABLE;
 80048fe:	2280      	movs	r2, #128	@ 0x80
    hdma_spi2_tx.Instance = DMA1_Channel5;
 8004900:	6023      	str	r3, [r4, #0]
    hdma_spi2_tx.Init.Direction = DMA_MEMORY_TO_PERIPH;
 8004902:	2310      	movs	r3, #16
 8004904:	6063      	str	r3, [r4, #4]
    hdma_spi2_tx.Init.PeriphInc = DMA_PINC_DISABLE;
 8004906:	2300      	movs	r3, #0
    if (HAL_DMA_Init(&hdma_spi2_tx) != HAL_OK)
 8004908:	0020      	movs	r0, r4
    hdma_spi2_tx.Init.PeriphInc = DMA_PINC_DISABLE;
 800490a:	60a3      	str	r3, [r4, #8]
    hdma_spi2_tx.Init.MemInc = DMA_MINC_ENABLE;
 800490c:	60e2      	str	r2, [r4, #12]
    hdma_spi2_tx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 800490e:	6123      	str	r3, [r4, #16]
    hdma_spi2_tx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 8004910:	6163      	str	r3, [r4, #20]
    hdma_spi2_tx.Init.Mode = DMA_NORMAL;
 8004912:	61a3      	str	r3, [r4, #24]
    hdma_spi2_tx.Init.Priority = DMA_PRIORITY_LOW;
 8004914:	61e3      	str	r3, [r4, #28]
    if (HAL_DMA_Init(&hdma_spi2_tx) != HAL_OK)
 8004916:	f000 f995 	bl	8004c44 <HAL_DMA_Init>
 800491a:	2800      	cmp	r0, #0
 800491c:	d001      	beq.n	8004922 <HAL_SPI_MspInit+0xc2>
      Error_Handler();
 800491e:	f7ff fdcb 	bl	80044b8 <Error_Handler>
    HAL_NVIC_SetPriority(SPI2_IRQn, 0, 0);
 8004922:	2200      	movs	r2, #0
 8004924:	201a      	movs	r0, #26
 8004926:	0011      	movs	r1, r2
    __HAL_LINKDMA(hspi,hdmatx,hdma_spi2_tx);
 8004928:	656c      	str	r4, [r5, #84]	@ 0x54
 800492a:	6265      	str	r5, [r4, #36]	@ 0x24
    HAL_NVIC_SetPriority(SPI2_IRQn, 0, 0);
 800492c:	f000 f93a 	bl	8004ba4 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(SPI2_IRQn);
 8004930:	201a      	movs	r0, #26
 8004932:	f000 f961 	bl	8004bf8 <HAL_NVIC_EnableIRQ>
}
 8004936:	e7bd      	b.n	80048b4 <HAL_SPI_MspInit+0x54>
 8004938:	40013000 	.word	0x40013000
 800493c:	40021000 	.word	0x40021000
 8004940:	40003800 	.word	0x40003800
 8004944:	48000400 	.word	0x48000400
 8004948:	200002d8 	.word	0x200002d8
 800494c:	40020058 	.word	0x40020058

08004950 <HAL_TIM_Base_MspInit>:
  * This function configures the hardware resources used in this example
  * @param htim_base: TIM_Base handle pointer
  * @retval None
  */
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
 8004950:	b507      	push	{r0, r1, r2, lr}
  if(htim_base->Instance==TIM1)
 8004952:	4b0b      	ldr	r3, [pc, #44]	@ (8004980 <HAL_TIM_Base_MspInit+0x30>)
 8004954:	6802      	ldr	r2, [r0, #0]
 8004956:	429a      	cmp	r2, r3
 8004958:	d111      	bne.n	800497e <HAL_TIM_Base_MspInit+0x2e>
  {
    /* USER CODE BEGIN TIM1_MspInit 0 */

    /* USER CODE END TIM1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM1_CLK_ENABLE();
 800495a:	2180      	movs	r1, #128	@ 0x80
 800495c:	4b09      	ldr	r3, [pc, #36]	@ (8004984 <HAL_TIM_Base_MspInit+0x34>)
 800495e:	0109      	lsls	r1, r1, #4
 8004960:	699a      	ldr	r2, [r3, #24]
    /* TIM1 interrupt Init */
    HAL_NVIC_SetPriority(TIM1_BRK_UP_TRG_COM_IRQn, 2, 0);
 8004962:	200d      	movs	r0, #13
    __HAL_RCC_TIM1_CLK_ENABLE();
 8004964:	430a      	orrs	r2, r1
 8004966:	619a      	str	r2, [r3, #24]
 8004968:	699b      	ldr	r3, [r3, #24]
    HAL_NVIC_SetPriority(TIM1_BRK_UP_TRG_COM_IRQn, 2, 0);
 800496a:	2200      	movs	r2, #0
    __HAL_RCC_TIM1_CLK_ENABLE();
 800496c:	400b      	ands	r3, r1
 800496e:	9301      	str	r3, [sp, #4]
    HAL_NVIC_SetPriority(TIM1_BRK_UP_TRG_COM_IRQn, 2, 0);
 8004970:	2102      	movs	r1, #2
    __HAL_RCC_TIM1_CLK_ENABLE();
 8004972:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(TIM1_BRK_UP_TRG_COM_IRQn, 2, 0);
 8004974:	f000 f916 	bl	8004ba4 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM1_BRK_UP_TRG_COM_IRQn);
 8004978:	200d      	movs	r0, #13
 800497a:	f000 f93d 	bl	8004bf8 <HAL_NVIC_EnableIRQ>

    /* USER CODE END TIM1_MspInit 1 */

  }

}
 800497e:	bd07      	pop	{r0, r1, r2, pc}
 8004980:	40012c00 	.word	0x40012c00
 8004984:	40021000 	.word	0x40021000

08004988 <NMI_Handler>:
{
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
   while (1)
 8004988:	e7fe      	b.n	8004988 <NMI_Handler>

0800498a <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 800498a:	e7fe      	b.n	800498a <HardFault_Handler>

0800498c <SVC_Handler>:

  /* USER CODE END SVC_IRQn 0 */
  /* USER CODE BEGIN SVC_IRQn 1 */

  /* USER CODE END SVC_IRQn 1 */
}
 800498c:	4770      	bx	lr

0800498e <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
 800498e:	4770      	bx	lr

08004990 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8004990:	b510      	push	{r4, lr}
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8004992:	f000 f8e3 	bl	8004b5c <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 8004996:	bd10      	pop	{r4, pc}

08004998 <EXTI0_1_IRQHandler>:

/**
  * @brief This function handles EXTI line 0 and 1 interrupts.
  */
void EXTI0_1_IRQHandler(void)
{
 8004998:	b510      	push	{r4, lr}
  /* USER CODE BEGIN EXTI0_1_IRQn 0 */

  /* USER CODE END EXTI0_1_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_0);
 800499a:	2001      	movs	r0, #1
 800499c:	f000 fab2 	bl	8004f04 <HAL_GPIO_EXTI_IRQHandler>
  /* USER CODE BEGIN EXTI0_1_IRQn 1 */

  /* USER CODE END EXTI0_1_IRQn 1 */
}
 80049a0:	bd10      	pop	{r4, pc}

080049a2 <EXTI2_3_IRQHandler>:

/**
  * @brief This function handles EXTI line 2 and 3 interrupts.
  */
void EXTI2_3_IRQHandler(void)
{
 80049a2:	b510      	push	{r4, lr}
  /* USER CODE BEGIN EXTI2_3_IRQn 0 */

  /* USER CODE END EXTI2_3_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_2);
 80049a4:	2004      	movs	r0, #4
 80049a6:	f000 faad 	bl	8004f04 <HAL_GPIO_EXTI_IRQHandler>
  /* USER CODE BEGIN EXTI2_3_IRQn 1 */

  /* USER CODE END EXTI2_3_IRQn 1 */
}
 80049aa:	bd10      	pop	{r4, pc}

080049ac <EXTI4_15_IRQHandler>:
void EXTI4_15_IRQHandler(void)
{
  /* USER CODE BEGIN EXTI4_15_IRQn 0 */

  /* USER CODE END EXTI4_15_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_8);
 80049ac:	2080      	movs	r0, #128	@ 0x80
{
 80049ae:	b510      	push	{r4, lr}
  HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_8);
 80049b0:	0040      	lsls	r0, r0, #1
 80049b2:	f000 faa7 	bl	8004f04 <HAL_GPIO_EXTI_IRQHandler>
  HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_9);
 80049b6:	2080      	movs	r0, #128	@ 0x80
 80049b8:	0080      	lsls	r0, r0, #2
 80049ba:	f000 faa3 	bl	8004f04 <HAL_GPIO_EXTI_IRQHandler>
  /* USER CODE BEGIN EXTI4_15_IRQn 1 */

  /* USER CODE END EXTI4_15_IRQn 1 */
}
 80049be:	bd10      	pop	{r4, pc}

080049c0 <DMA1_Channel4_5_IRQHandler>:

/**
  * @brief This function handles DMA1 channel 4 and 5 interrupts.
  */
void DMA1_Channel4_5_IRQHandler(void)
{
 80049c0:	b510      	push	{r4, lr}
  /* USER CODE BEGIN DMA1_Channel4_5_IRQn 0 */

  /* USER CODE END DMA1_Channel4_5_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_spi2_tx);
 80049c2:	4802      	ldr	r0, [pc, #8]	@ (80049cc <DMA1_Channel4_5_IRQHandler+0xc>)
 80049c4:	f000 f991 	bl	8004cea <HAL_DMA_IRQHandler>
  /* USER CODE BEGIN DMA1_Channel4_5_IRQn 1 */

  /* USER CODE END DMA1_Channel4_5_IRQn 1 */
}
 80049c8:	bd10      	pop	{r4, pc}
 80049ca:	46c0      	nop			@ (mov r8, r8)
 80049cc:	200002d8 	.word	0x200002d8

080049d0 <TIM1_BRK_UP_TRG_COM_IRQHandler>:

/**
  * @brief This function handles TIM1 break, update, trigger and commutation interrupts.
  */
void TIM1_BRK_UP_TRG_COM_IRQHandler(void)
{
 80049d0:	b510      	push	{r4, lr}
  /* USER CODE BEGIN TIM1_BRK_UP_TRG_COM_IRQn 0 */

  /* USER CODE END TIM1_BRK_UP_TRG_COM_IRQn 0 */
  HAL_TIM_IRQHandler(&htim1);
 80049d2:	4802      	ldr	r0, [pc, #8]	@ (80049dc <TIM1_BRK_UP_TRG_COM_IRQHandler+0xc>)
 80049d4:	f001 fc36 	bl	8006244 <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM1_BRK_UP_TRG_COM_IRQn 1 */

  /* USER CODE END TIM1_BRK_UP_TRG_COM_IRQn 1 */
}
 80049d8:	bd10      	pop	{r4, pc}
 80049da:	46c0      	nop			@ (mov r8, r8)
 80049dc:	20000290 	.word	0x20000290

080049e0 <SPI2_IRQHandler>:

/**
  * @brief This function handles SPI2 global interrupt.
  */
void SPI2_IRQHandler(void)
{
 80049e0:	b510      	push	{r4, lr}
  /* USER CODE BEGIN SPI2_IRQn 0 */

  /* USER CODE END SPI2_IRQn 0 */
  HAL_SPI_IRQHandler(&hspi2);
 80049e2:	4802      	ldr	r0, [pc, #8]	@ (80049ec <SPI2_IRQHandler+0xc>)
 80049e4:	f001 fb68 	bl	80060b8 <HAL_SPI_IRQHandler>
  /* USER CODE BEGIN SPI2_IRQn 1 */

  /* USER CODE END SPI2_IRQn 1 */
}
 80049e8:	bd10      	pop	{r4, pc}
 80049ea:	46c0      	nop			@ (mov r8, r8)
 80049ec:	2000031c 	.word	0x2000031c

080049f0 <_getpid>:
}

int _getpid(void)
{
  return 1;
}
 80049f0:	2001      	movs	r0, #1
 80049f2:	4770      	bx	lr

080049f4 <_kill>:

int _kill(int pid, int sig)
{
 80049f4:	b510      	push	{r4, lr}
  (void)pid;
  (void)sig;
  errno = EINVAL;
 80049f6:	f002 fbf3 	bl	80071e0 <__errno>
 80049fa:	2316      	movs	r3, #22
 80049fc:	6003      	str	r3, [r0, #0]
  return -1;
 80049fe:	2001      	movs	r0, #1
}
 8004a00:	4240      	negs	r0, r0
 8004a02:	bd10      	pop	{r4, pc}

08004a04 <_exit>:

void _exit (int status)
{
 8004a04:	b510      	push	{r4, lr}
  errno = EINVAL;
 8004a06:	f002 fbeb 	bl	80071e0 <__errno>
 8004a0a:	2316      	movs	r3, #22
 8004a0c:	6003      	str	r3, [r0, #0]
  _kill(status, -1);
  while (1) {}    /* Make sure we hang here */
 8004a0e:	e7fe      	b.n	8004a0e <_exit+0xa>

08004a10 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8004a10:	b570      	push	{r4, r5, r6, lr}
 8004a12:	000e      	movs	r6, r1
 8004a14:	0014      	movs	r4, r2
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8004a16:	2500      	movs	r5, #0
 8004a18:	42a5      	cmp	r5, r4
 8004a1a:	db01      	blt.n	8004a20 <_read+0x10>
  {
    *ptr++ = __io_getchar();
  }

  return len;
}
 8004a1c:	0020      	movs	r0, r4
 8004a1e:	bd70      	pop	{r4, r5, r6, pc}
    *ptr++ = __io_getchar();
 8004a20:	e000      	b.n	8004a24 <_read+0x14>
 8004a22:	bf00      	nop
 8004a24:	5570      	strb	r0, [r6, r5]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8004a26:	3501      	adds	r5, #1
 8004a28:	e7f6      	b.n	8004a18 <_read+0x8>

08004a2a <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8004a2a:	b570      	push	{r4, r5, r6, lr}
 8004a2c:	000e      	movs	r6, r1
 8004a2e:	0014      	movs	r4, r2
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8004a30:	2500      	movs	r5, #0
 8004a32:	42a5      	cmp	r5, r4
 8004a34:	db01      	blt.n	8004a3a <_write+0x10>
  {
    __io_putchar(*ptr++);
  }
  return len;
}
 8004a36:	0020      	movs	r0, r4
 8004a38:	bd70      	pop	{r4, r5, r6, pc}
    __io_putchar(*ptr++);
 8004a3a:	5d70      	ldrb	r0, [r6, r5]
 8004a3c:	e000      	b.n	8004a40 <_write+0x16>
 8004a3e:	bf00      	nop
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8004a40:	3501      	adds	r5, #1
 8004a42:	e7f6      	b.n	8004a32 <_write+0x8>

08004a44 <_close>:

int _close(int file)
{
  (void)file;
  return -1;
 8004a44:	2001      	movs	r0, #1
}
 8004a46:	4240      	negs	r0, r0
 8004a48:	4770      	bx	lr

08004a4a <_fstat>:


int _fstat(int file, struct stat *st)
{
  (void)file;
  st->st_mode = S_IFCHR;
 8004a4a:	2380      	movs	r3, #128	@ 0x80
 8004a4c:	019b      	lsls	r3, r3, #6
  return 0;
}
 8004a4e:	2000      	movs	r0, #0
  st->st_mode = S_IFCHR;
 8004a50:	604b      	str	r3, [r1, #4]
}
 8004a52:	4770      	bx	lr

08004a54 <_isatty>:

int _isatty(int file)
{
  (void)file;
  return 1;
}
 8004a54:	2001      	movs	r0, #1
 8004a56:	4770      	bx	lr

08004a58 <_lseek>:
{
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
}
 8004a58:	2000      	movs	r0, #0
 8004a5a:	4770      	bx	lr

08004a5c <_sbrk>:
void *_sbrk(ptrdiff_t incr)
{
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8004a5c:	490b      	ldr	r1, [pc, #44]	@ (8004a8c <_sbrk+0x30>)
 8004a5e:	4a0c      	ldr	r2, [pc, #48]	@ (8004a90 <_sbrk+0x34>)
{
 8004a60:	0003      	movs	r3, r0
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8004a62:	1a52      	subs	r2, r2, r1
  const uint8_t *max_heap = (uint8_t *)stack_limit;
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8004a64:	490b      	ldr	r1, [pc, #44]	@ (8004a94 <_sbrk+0x38>)
{
 8004a66:	b510      	push	{r4, lr}
  if (NULL == __sbrk_heap_end)
 8004a68:	6808      	ldr	r0, [r1, #0]
 8004a6a:	2800      	cmp	r0, #0
 8004a6c:	d101      	bne.n	8004a72 <_sbrk+0x16>
  {
    __sbrk_heap_end = &_end;
 8004a6e:	480a      	ldr	r0, [pc, #40]	@ (8004a98 <_sbrk+0x3c>)
 8004a70:	6008      	str	r0, [r1, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8004a72:	6808      	ldr	r0, [r1, #0]
 8004a74:	18c3      	adds	r3, r0, r3
 8004a76:	4293      	cmp	r3, r2
 8004a78:	d906      	bls.n	8004a88 <_sbrk+0x2c>
  {
    errno = ENOMEM;
 8004a7a:	f002 fbb1 	bl	80071e0 <__errno>
 8004a7e:	230c      	movs	r3, #12
 8004a80:	6003      	str	r3, [r0, #0]
    return (void *)-1;
 8004a82:	2001      	movs	r0, #1
 8004a84:	4240      	negs	r0, r0

  prev_heap_end = __sbrk_heap_end;
  __sbrk_heap_end += incr;

  return (void *)prev_heap_end;
}
 8004a86:	bd10      	pop	{r4, pc}
  __sbrk_heap_end += incr;
 8004a88:	600b      	str	r3, [r1, #0]
  return (void *)prev_heap_end;
 8004a8a:	e7fc      	b.n	8004a86 <_sbrk+0x2a>
 8004a8c:	00000400 	.word	0x00000400
 8004a90:	20002000 	.word	0x20002000
 8004a94:	20000840 	.word	0x20000840
 8004a98:	20000998 	.word	0x20000998

08004a9c <SystemInit>:
                         before branch to main program. This call is made inside
                         the "startup_stm32f0xx.s" file.
                         User can setups the default system clock (System clock source, PLL Multiplier
                         and Divider factors, AHB/APBx prescalers and Flash settings).
   */
}
 8004a9c:	4770      	bx	lr
	...

08004aa0 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8004aa0:	480d      	ldr	r0, [pc, #52]	@ (8004ad8 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8004aa2:	4685      	mov	sp, r0

/* Call the clock system initialization function.*/
  bl  SystemInit
 8004aa4:	f7ff fffa 	bl	8004a9c <SystemInit>

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8004aa8:	480c      	ldr	r0, [pc, #48]	@ (8004adc <LoopForever+0x6>)
  ldr r1, =_edata
 8004aaa:	490d      	ldr	r1, [pc, #52]	@ (8004ae0 <LoopForever+0xa>)
  ldr r2, =_sidata
 8004aac:	4a0d      	ldr	r2, [pc, #52]	@ (8004ae4 <LoopForever+0xe>)
  movs r3, #0
 8004aae:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8004ab0:	e002      	b.n	8004ab8 <LoopCopyDataInit>

08004ab2 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8004ab2:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8004ab4:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8004ab6:	3304      	adds	r3, #4

08004ab8 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8004ab8:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8004aba:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8004abc:	d3f9      	bcc.n	8004ab2 <CopyDataInit>
  
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8004abe:	4a0a      	ldr	r2, [pc, #40]	@ (8004ae8 <LoopForever+0x12>)
  ldr r4, =_ebss
 8004ac0:	4c0a      	ldr	r4, [pc, #40]	@ (8004aec <LoopForever+0x16>)
  movs r3, #0
 8004ac2:	2300      	movs	r3, #0
  b LoopFillZerobss
 8004ac4:	e001      	b.n	8004aca <LoopFillZerobss>

08004ac6 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8004ac6:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8004ac8:	3204      	adds	r2, #4

08004aca <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8004aca:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8004acc:	d3fb      	bcc.n	8004ac6 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8004ace:	f002 fb8d 	bl	80071ec <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8004ad2:	f7fe fe7d 	bl	80037d0 <main>

08004ad6 <LoopForever>:

LoopForever:
    b LoopForever
 8004ad6:	e7fe      	b.n	8004ad6 <LoopForever>
  ldr   r0, =_estack
 8004ad8:	20002000 	.word	0x20002000
  ldr r0, =_sdata
 8004adc:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8004ae0:	200001f8 	.word	0x200001f8
  ldr r2, =_sidata
 8004ae4:	0800c13c 	.word	0x0800c13c
  ldr r2, =_sbss
 8004ae8:	200001f8 	.word	0x200001f8
  ldr r4, =_ebss
 8004aec:	20000994 	.word	0x20000994

08004af0 <ADC1_IRQHandler>:
 * @retval : None
*/
    .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8004af0:	e7fe      	b.n	8004af0 <ADC1_IRQHandler>
	...

08004af4 <HAL_InitTick>:
  *       implementation  in user file.
  * @param TickPriority Tick interrupt priority.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8004af4:	b570      	push	{r4, r5, r6, lr}
 8004af6:	0005      	movs	r5, r0
  /*Configure the SysTick to have interrupt in 1ms time basis*/
  if (HAL_SYSTICK_Config(SystemCoreClock / (1000U / uwTickFreq)) > 0U)
 8004af8:	20fa      	movs	r0, #250	@ 0xfa
 8004afa:	4b0d      	ldr	r3, [pc, #52]	@ (8004b30 <HAL_InitTick+0x3c>)
 8004afc:	0080      	lsls	r0, r0, #2
 8004afe:	7819      	ldrb	r1, [r3, #0]
 8004b00:	f7fb fb1e 	bl	8000140 <__udivsi3>
 8004b04:	4c0b      	ldr	r4, [pc, #44]	@ (8004b34 <HAL_InitTick+0x40>)
 8004b06:	0001      	movs	r1, r0
 8004b08:	6820      	ldr	r0, [r4, #0]
 8004b0a:	f7fb fb19 	bl	8000140 <__udivsi3>
 8004b0e:	f000 f87f 	bl	8004c10 <HAL_SYSTICK_Config>
 8004b12:	0004      	movs	r4, r0
  {
    return HAL_ERROR;
 8004b14:	2001      	movs	r0, #1
  if (HAL_SYSTICK_Config(SystemCoreClock / (1000U / uwTickFreq)) > 0U)
 8004b16:	2c00      	cmp	r4, #0
 8004b18:	d109      	bne.n	8004b2e <HAL_InitTick+0x3a>
  }

  /* Configure the SysTick IRQ priority */
  if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 8004b1a:	2d03      	cmp	r5, #3
 8004b1c:	d807      	bhi.n	8004b2e <HAL_InitTick+0x3a>
  {
    HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
 8004b1e:	3802      	subs	r0, #2
 8004b20:	0022      	movs	r2, r4
 8004b22:	0029      	movs	r1, r5
 8004b24:	f000 f83e 	bl	8004ba4 <HAL_NVIC_SetPriority>
    uwTickPrio = TickPriority;
 8004b28:	0020      	movs	r0, r4
 8004b2a:	4b03      	ldr	r3, [pc, #12]	@ (8004b38 <HAL_InitTick+0x44>)
 8004b2c:	601d      	str	r5, [r3, #0]
    return HAL_ERROR;
  }

   /* Return function status */
  return HAL_OK;
}
 8004b2e:	bd70      	pop	{r4, r5, r6, pc}
 8004b30:	20000028 	.word	0x20000028
 8004b34:	20000024 	.word	0x20000024
 8004b38:	2000002c 	.word	0x2000002c

08004b3c <HAL_Init>:
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8004b3c:	2310      	movs	r3, #16
 8004b3e:	4a06      	ldr	r2, [pc, #24]	@ (8004b58 <HAL_Init+0x1c>)
{
 8004b40:	b510      	push	{r4, lr}
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8004b42:	6811      	ldr	r1, [r2, #0]
  HAL_InitTick(TICK_INT_PRIORITY);
 8004b44:	2001      	movs	r0, #1
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8004b46:	430b      	orrs	r3, r1
 8004b48:	6013      	str	r3, [r2, #0]
  HAL_InitTick(TICK_INT_PRIORITY);
 8004b4a:	f7ff ffd3 	bl	8004af4 <HAL_InitTick>
  HAL_MspInit();
 8004b4e:	f7ff fe3b 	bl	80047c8 <HAL_MspInit>
}
 8004b52:	2000      	movs	r0, #0
 8004b54:	bd10      	pop	{r4, pc}
 8004b56:	46c0      	nop			@ (mov r8, r8)
 8004b58:	40022000 	.word	0x40022000

08004b5c <HAL_IncTick>:
  *       implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += uwTickFreq;
 8004b5c:	4a03      	ldr	r2, [pc, #12]	@ (8004b6c <HAL_IncTick+0x10>)
 8004b5e:	4b04      	ldr	r3, [pc, #16]	@ (8004b70 <HAL_IncTick+0x14>)
 8004b60:	6811      	ldr	r1, [r2, #0]
 8004b62:	781b      	ldrb	r3, [r3, #0]
 8004b64:	185b      	adds	r3, r3, r1
 8004b66:	6013      	str	r3, [r2, #0]
}
 8004b68:	4770      	bx	lr
 8004b6a:	46c0      	nop			@ (mov r8, r8)
 8004b6c:	20000844 	.word	0x20000844
 8004b70:	20000028 	.word	0x20000028

08004b74 <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 8004b74:	4b01      	ldr	r3, [pc, #4]	@ (8004b7c <HAL_GetTick+0x8>)
 8004b76:	6818      	ldr	r0, [r3, #0]
}
 8004b78:	4770      	bx	lr
 8004b7a:	46c0      	nop			@ (mov r8, r8)
 8004b7c:	20000844 	.word	0x20000844

08004b80 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 8004b80:	b570      	push	{r4, r5, r6, lr}
 8004b82:	0004      	movs	r4, r0
  uint32_t tickstart = HAL_GetTick();
 8004b84:	f7ff fff6 	bl	8004b74 <HAL_GetTick>
 8004b88:	0005      	movs	r5, r0
  uint32_t wait = Delay;
  
  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 8004b8a:	1c63      	adds	r3, r4, #1
 8004b8c:	d002      	beq.n	8004b94 <HAL_Delay+0x14>
  {
    wait += (uint32_t)(uwTickFreq);
 8004b8e:	4b04      	ldr	r3, [pc, #16]	@ (8004ba0 <HAL_Delay+0x20>)
 8004b90:	781b      	ldrb	r3, [r3, #0]
 8004b92:	18e4      	adds	r4, r4, r3
  }
  
  while((HAL_GetTick() - tickstart) < wait)
 8004b94:	f7ff ffee 	bl	8004b74 <HAL_GetTick>
 8004b98:	1b40      	subs	r0, r0, r5
 8004b9a:	42a0      	cmp	r0, r4
 8004b9c:	d3fa      	bcc.n	8004b94 <HAL_Delay+0x14>
  {
  }
}
 8004b9e:	bd70      	pop	{r4, r5, r6, pc}
 8004ba0:	20000028 	.word	0x20000028

08004ba4 <HAL_NVIC_SetPriority>:
  *         with stm32f0xx devices, this parameter is a dummy value and it is ignored, because 
  *         no subpriority supported in Cortex M0 based products.   
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{
 8004ba4:	b510      	push	{r4, lr}
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8004ba6:	24ff      	movs	r4, #255	@ 0xff
 8004ba8:	2203      	movs	r2, #3
 8004baa:	000b      	movs	r3, r1
 8004bac:	0021      	movs	r1, r4
 8004bae:	4002      	ands	r2, r0
 8004bb0:	00d2      	lsls	r2, r2, #3
 8004bb2:	4091      	lsls	r1, r2
       (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 8004bb4:	019b      	lsls	r3, r3, #6
 8004bb6:	4023      	ands	r3, r4
    NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8004bb8:	43c9      	mvns	r1, r1
       (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 8004bba:	4093      	lsls	r3, r2
  if ((int32_t)(IRQn) >= 0)
 8004bbc:	2800      	cmp	r0, #0
 8004bbe:	db0a      	blt.n	8004bd6 <HAL_NVIC_SetPriority+0x32>
    NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8004bc0:	24c0      	movs	r4, #192	@ 0xc0
 8004bc2:	4a0b      	ldr	r2, [pc, #44]	@ (8004bf0 <HAL_NVIC_SetPriority+0x4c>)
 8004bc4:	0880      	lsrs	r0, r0, #2
 8004bc6:	0080      	lsls	r0, r0, #2
 8004bc8:	1880      	adds	r0, r0, r2
 8004bca:	00a4      	lsls	r4, r4, #2
 8004bcc:	5902      	ldr	r2, [r0, r4]
 8004bce:	400a      	ands	r2, r1
 8004bd0:	4313      	orrs	r3, r2
 8004bd2:	5103      	str	r3, [r0, r4]
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  NVIC_SetPriority(IRQn,PreemptPriority);

  /* Prevent unused argument(s) compilation warning */
  UNUSED(SubPriority);
}
 8004bd4:	bd10      	pop	{r4, pc}
  }
  else
  {
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8004bd6:	220f      	movs	r2, #15
 8004bd8:	4010      	ands	r0, r2
 8004bda:	3808      	subs	r0, #8
 8004bdc:	4a05      	ldr	r2, [pc, #20]	@ (8004bf4 <HAL_NVIC_SetPriority+0x50>)
 8004bde:	0880      	lsrs	r0, r0, #2
 8004be0:	0080      	lsls	r0, r0, #2
 8004be2:	1880      	adds	r0, r0, r2
 8004be4:	69c2      	ldr	r2, [r0, #28]
 8004be6:	4011      	ands	r1, r2
 8004be8:	4319      	orrs	r1, r3
 8004bea:	61c1      	str	r1, [r0, #28]
 8004bec:	e7f2      	b.n	8004bd4 <HAL_NVIC_SetPriority+0x30>
 8004bee:	46c0      	nop			@ (mov r8, r8)
 8004bf0:	e000e100 	.word	0xe000e100
 8004bf4:	e000ed00 	.word	0xe000ed00

08004bf8 <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 8004bf8:	2800      	cmp	r0, #0
 8004bfa:	db05      	blt.n	8004c08 <HAL_NVIC_EnableIRQ+0x10>
    NVIC->ISER[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8004bfc:	231f      	movs	r3, #31
 8004bfe:	4018      	ands	r0, r3
 8004c00:	3b1e      	subs	r3, #30
 8004c02:	4083      	lsls	r3, r0
 8004c04:	4a01      	ldr	r2, [pc, #4]	@ (8004c0c <HAL_NVIC_EnableIRQ+0x14>)
 8004c06:	6013      	str	r3, [r2, #0]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 8004c08:	4770      	bx	lr
 8004c0a:	46c0      	nop			@ (mov r8, r8)
 8004c0c:	e000e100 	.word	0xe000e100

08004c10 <HAL_SYSTICK_Config>:
           function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
           must contain a vendor-specific implementation of this function.
 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 8004c10:	2280      	movs	r2, #128	@ 0x80
 8004c12:	1e43      	subs	r3, r0, #1
 8004c14:	0452      	lsls	r2, r2, #17
  {
    return (1UL);                                                   /* Reload value impossible */
 8004c16:	2001      	movs	r0, #1
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 8004c18:	4293      	cmp	r3, r2
 8004c1a:	d20d      	bcs.n	8004c38 <HAL_SYSTICK_Config+0x28>
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8004c1c:	21c0      	movs	r1, #192	@ 0xc0
  }

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 8004c1e:	4a07      	ldr	r2, [pc, #28]	@ (8004c3c <HAL_SYSTICK_Config+0x2c>)
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8004c20:	4807      	ldr	r0, [pc, #28]	@ (8004c40 <HAL_SYSTICK_Config+0x30>)
  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 8004c22:	6053      	str	r3, [r2, #4]
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8004c24:	6a03      	ldr	r3, [r0, #32]
 8004c26:	0609      	lsls	r1, r1, #24
 8004c28:	021b      	lsls	r3, r3, #8
 8004c2a:	0a1b      	lsrs	r3, r3, #8
 8004c2c:	430b      	orrs	r3, r1
 8004c2e:	6203      	str	r3, [r0, #32]
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 8004c30:	2000      	movs	r0, #0
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 8004c32:	2307      	movs	r3, #7
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 8004c34:	6090      	str	r0, [r2, #8]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 8004c36:	6013      	str	r3, [r2, #0]
  *                  - 1  Function failed.
  */
uint32_t HAL_SYSTICK_Config(uint32_t TicksNumb)
{
   return SysTick_Config(TicksNumb);
}
 8004c38:	4770      	bx	lr
 8004c3a:	46c0      	nop			@ (mov r8, r8)
 8004c3c:	e000e010 	.word	0xe000e010
 8004c40:	e000ed00 	.word	0xe000ed00

08004c44 <HAL_DMA_Init>:
  * @param  hdma Pointer to a DMA_HandleTypeDef structure that contains
  *               the configuration information for the specified DMA Channel.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Init(DMA_HandleTypeDef *hdma)
{
 8004c44:	b570      	push	{r4, r5, r6, lr}
 8004c46:	0004      	movs	r4, r0
  uint32_t tmp = 0U;

  /* Check the DMA handle allocation */
  if (NULL == hdma)
  {
    return HAL_ERROR;
 8004c48:	2001      	movs	r0, #1
  if (NULL == hdma)
 8004c4a:	2c00      	cmp	r4, #0
 8004c4c:	d024      	beq.n	8004c98 <HAL_DMA_Init+0x54>
  assert_param(IS_DMA_MEMORY_DATA_SIZE(hdma->Init.MemDataAlignment));
  assert_param(IS_DMA_MODE(hdma->Init.Mode));
  assert_param(IS_DMA_PRIORITY(hdma->Init.Priority));

  /* Change DMA peripheral state */
  hdma->State = HAL_DMA_STATE_BUSY;
 8004c4e:	2302      	movs	r3, #2
 8004c50:	1ca5      	adds	r5, r4, #2
 8004c52:	77eb      	strb	r3, [r5, #31]

  /* Get the CR register value */
  tmp = hdma->Instance->CCR;
 8004c54:	6820      	ldr	r0, [r4, #0]

  /* Clear PL, MSIZE, PSIZE, MINC, PINC, CIRC, DIR bits */
  tmp &= ((uint32_t)~(DMA_CCR_PL    | DMA_CCR_MSIZE  | DMA_CCR_PSIZE  | \
 8004c56:	4b11      	ldr	r3, [pc, #68]	@ (8004c9c <HAL_DMA_Init+0x58>)
  tmp = hdma->Instance->CCR;
 8004c58:	6802      	ldr	r2, [r0, #0]
                      DMA_CCR_MINC  | DMA_CCR_PINC   | DMA_CCR_CIRC   | \
                      DMA_CCR_DIR));

  /* Prepare the DMA Channel configuration */
  tmp |=  hdma->Init.Direction        |
 8004c5a:	68a1      	ldr	r1, [r4, #8]
  tmp &= ((uint32_t)~(DMA_CCR_PL    | DMA_CCR_MSIZE  | DMA_CCR_PSIZE  | \
 8004c5c:	401a      	ands	r2, r3
  tmp |=  hdma->Init.Direction        |
 8004c5e:	6863      	ldr	r3, [r4, #4]
 8004c60:	430b      	orrs	r3, r1
          hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 8004c62:	68e1      	ldr	r1, [r4, #12]
 8004c64:	430b      	orrs	r3, r1
 8004c66:	6921      	ldr	r1, [r4, #16]
 8004c68:	430b      	orrs	r3, r1
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 8004c6a:	6961      	ldr	r1, [r4, #20]
 8004c6c:	430b      	orrs	r3, r1
 8004c6e:	69a1      	ldr	r1, [r4, #24]
 8004c70:	430b      	orrs	r3, r1
          hdma->Init.Mode                | hdma->Init.Priority;
 8004c72:	69e1      	ldr	r1, [r4, #28]
 8004c74:	430b      	orrs	r3, r1
  tmp |=  hdma->Init.Direction        |
 8004c76:	4313      	orrs	r3, r2

  /* Write to DMA Channel CR register */
  hdma->Instance->CCR = tmp;
 8004c78:	6003      	str	r3, [r0, #0]
    hdma->DmaBaseAddress = DMA2;
  }
#else
  /* calculation of the channel index */
  /* DMA1 */
  hdma->ChannelIndex = (((uint32_t)hdma->Instance - (uint32_t)DMA1_Channel1) / ((uint32_t)DMA1_Channel2 - (uint32_t)DMA1_Channel1)) << 2U;
 8004c7a:	4b09      	ldr	r3, [pc, #36]	@ (8004ca0 <HAL_DMA_Init+0x5c>)
 8004c7c:	2114      	movs	r1, #20
 8004c7e:	18c0      	adds	r0, r0, r3
 8004c80:	f7fb fa5e 	bl	8000140 <__udivsi3>
  hdma->DmaBaseAddress = DMA1;
 8004c84:	4b07      	ldr	r3, [pc, #28]	@ (8004ca4 <HAL_DMA_Init+0x60>)
  hdma->ChannelIndex = (((uint32_t)hdma->Instance - (uint32_t)DMA1_Channel1) / ((uint32_t)DMA1_Channel2 - (uint32_t)DMA1_Channel1)) << 2U;
 8004c86:	0080      	lsls	r0, r0, #2
 8004c88:	6420      	str	r0, [r4, #64]	@ 0x40
  hdma->DmaBaseAddress = DMA1;
 8004c8a:	63e3      	str	r3, [r4, #60]	@ 0x3c
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 8004c8c:	2000      	movs	r0, #0
  hdma->State = HAL_DMA_STATE_READY;
 8004c8e:	2301      	movs	r3, #1
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 8004c90:	63a0      	str	r0, [r4, #56]	@ 0x38
  hdma->Lock = HAL_UNLOCKED;
 8004c92:	18e4      	adds	r4, r4, r3
  hdma->State = HAL_DMA_STATE_READY;
 8004c94:	77eb      	strb	r3, [r5, #31]
  hdma->Lock = HAL_UNLOCKED;
 8004c96:	77e0      	strb	r0, [r4, #31]
}
 8004c98:	bd70      	pop	{r4, r5, r6, pc}
 8004c9a:	46c0      	nop			@ (mov r8, r8)
 8004c9c:	ffffc00f 	.word	0xffffc00f
 8004ca0:	bffdfff8 	.word	0xbffdfff8
 8004ca4:	40020000 	.word	0x40020000

08004ca8 <HAL_DMA_Abort_IT>:
{
 8004ca8:	b570      	push	{r4, r5, r6, lr}
  if (HAL_DMA_STATE_BUSY != hdma->State)
 8004caa:	1c84      	adds	r4, r0, #2
 8004cac:	7fe3      	ldrb	r3, [r4, #31]
 8004cae:	2b02      	cmp	r3, #2
 8004cb0:	d003      	beq.n	8004cba <HAL_DMA_Abort_IT+0x12>
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 8004cb2:	2304      	movs	r3, #4
 8004cb4:	6383      	str	r3, [r0, #56]	@ 0x38
    status = HAL_ERROR;
 8004cb6:	2001      	movs	r0, #1
}
 8004cb8:	bd70      	pop	{r4, r5, r6, pc}
    hdma->Instance->CCR &= ~(DMA_IT_TC | DMA_IT_HT | DMA_IT_TE);
 8004cba:	210e      	movs	r1, #14
 8004cbc:	6803      	ldr	r3, [r0, #0]
 8004cbe:	681a      	ldr	r2, [r3, #0]
 8004cc0:	438a      	bics	r2, r1
 8004cc2:	601a      	str	r2, [r3, #0]
    hdma->Instance->CCR &= ~DMA_CCR_EN;
 8004cc4:	2201      	movs	r2, #1
    hdma->DmaBaseAddress->IFCR = DMA_FLAG_GL1 << hdma->ChannelIndex;
 8004cc6:	0015      	movs	r5, r2
    hdma->Instance->CCR &= ~DMA_CCR_EN;
 8004cc8:	6819      	ldr	r1, [r3, #0]
 8004cca:	4391      	bics	r1, r2
 8004ccc:	6019      	str	r1, [r3, #0]
    hdma->DmaBaseAddress->IFCR = DMA_FLAG_GL1 << hdma->ChannelIndex;
 8004cce:	6c01      	ldr	r1, [r0, #64]	@ 0x40
 8004cd0:	6bc3      	ldr	r3, [r0, #60]	@ 0x3c
 8004cd2:	408d      	lsls	r5, r1
 8004cd4:	605d      	str	r5, [r3, #4]
    hdma->State = HAL_DMA_STATE_READY;
 8004cd6:	77e2      	strb	r2, [r4, #31]
    __HAL_UNLOCK(hdma);
 8004cd8:	1883      	adds	r3, r0, r2
 8004cda:	2200      	movs	r2, #0
 8004cdc:	77da      	strb	r2, [r3, #31]
    if (hdma->XferAbortCallback != NULL)
 8004cde:	6b43      	ldr	r3, [r0, #52]	@ 0x34
 8004ce0:	4293      	cmp	r3, r2
 8004ce2:	d000      	beq.n	8004ce6 <HAL_DMA_Abort_IT+0x3e>
      hdma->XferAbortCallback(hdma);
 8004ce4:	4798      	blx	r3
  HAL_StatusTypeDef status = HAL_OK;
 8004ce6:	2000      	movs	r0, #0
 8004ce8:	e7e6      	b.n	8004cb8 <HAL_DMA_Abort_IT+0x10>

08004cea <HAL_DMA_IRQHandler>:
{
 8004cea:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  if ((RESET != (flag_it & (DMA_FLAG_HT1 << hdma->ChannelIndex))) && (RESET != (source_it & DMA_IT_HT)))
 8004cec:	2704      	movs	r7, #4
 8004cee:	003e      	movs	r6, r7
 8004cf0:	6c01      	ldr	r1, [r0, #64]	@ 0x40
  uint32_t flag_it = hdma->DmaBaseAddress->ISR;
 8004cf2:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
  if ((RESET != (flag_it & (DMA_FLAG_HT1 << hdma->ChannelIndex))) && (RESET != (source_it & DMA_IT_HT)))
 8004cf4:	408e      	lsls	r6, r1
  uint32_t flag_it = hdma->DmaBaseAddress->ISR;
 8004cf6:	6815      	ldr	r5, [r2, #0]
  uint32_t source_it = hdma->Instance->CCR;
 8004cf8:	6803      	ldr	r3, [r0, #0]
 8004cfa:	681c      	ldr	r4, [r3, #0]
  if ((RESET != (flag_it & (DMA_FLAG_HT1 << hdma->ChannelIndex))) && (RESET != (source_it & DMA_IT_HT)))
 8004cfc:	4235      	tst	r5, r6
 8004cfe:	d00d      	beq.n	8004d1c <HAL_DMA_IRQHandler+0x32>
 8004d00:	423c      	tst	r4, r7
 8004d02:	d00b      	beq.n	8004d1c <HAL_DMA_IRQHandler+0x32>
    if ((hdma->Instance->CCR & DMA_CCR_CIRC) == 0U)
 8004d04:	6819      	ldr	r1, [r3, #0]
 8004d06:	0689      	lsls	r1, r1, #26
 8004d08:	d402      	bmi.n	8004d10 <HAL_DMA_IRQHandler+0x26>
      hdma->Instance->CCR &= ~DMA_IT_HT;
 8004d0a:	6819      	ldr	r1, [r3, #0]
 8004d0c:	43b9      	bics	r1, r7
 8004d0e:	6019      	str	r1, [r3, #0]
    if (hdma->XferHalfCpltCallback != NULL)
 8004d10:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
    hdma->DmaBaseAddress->IFCR = DMA_FLAG_HT1 << hdma->ChannelIndex;
 8004d12:	6056      	str	r6, [r2, #4]
    if (hdma->XferHalfCpltCallback != NULL)
 8004d14:	2b00      	cmp	r3, #0
 8004d16:	d019      	beq.n	8004d4c <HAL_DMA_IRQHandler+0x62>
      hdma->XferErrorCallback(hdma);
 8004d18:	4798      	blx	r3
}
 8004d1a:	e017      	b.n	8004d4c <HAL_DMA_IRQHandler+0x62>
  else if ((RESET != (flag_it & (DMA_FLAG_TC1 << hdma->ChannelIndex))) && (RESET != (source_it & DMA_IT_TC)))
 8004d1c:	2702      	movs	r7, #2
 8004d1e:	003e      	movs	r6, r7
 8004d20:	408e      	lsls	r6, r1
 8004d22:	4235      	tst	r5, r6
 8004d24:	d013      	beq.n	8004d4e <HAL_DMA_IRQHandler+0x64>
 8004d26:	423c      	tst	r4, r7
 8004d28:	d011      	beq.n	8004d4e <HAL_DMA_IRQHandler+0x64>
    if ((hdma->Instance->CCR & DMA_CCR_CIRC) == 0U)
 8004d2a:	6819      	ldr	r1, [r3, #0]
 8004d2c:	0689      	lsls	r1, r1, #26
 8004d2e:	d406      	bmi.n	8004d3e <HAL_DMA_IRQHandler+0x54>
      hdma->Instance->CCR &= ~(DMA_IT_TC | DMA_IT_TE);
 8004d30:	240a      	movs	r4, #10
 8004d32:	6819      	ldr	r1, [r3, #0]
 8004d34:	43a1      	bics	r1, r4
 8004d36:	6019      	str	r1, [r3, #0]
      hdma->State = HAL_DMA_STATE_READY;
 8004d38:	2101      	movs	r1, #1
 8004d3a:	19c3      	adds	r3, r0, r7
 8004d3c:	77d9      	strb	r1, [r3, #31]
    hdma->DmaBaseAddress->IFCR = DMA_FLAG_TC1 << hdma->ChannelIndex;
 8004d3e:	6056      	str	r6, [r2, #4]
    __HAL_UNLOCK(hdma);
 8004d40:	2200      	movs	r2, #0
 8004d42:	1c43      	adds	r3, r0, #1
 8004d44:	77da      	strb	r2, [r3, #31]
    if (hdma->XferCpltCallback != NULL)
 8004d46:	6a83      	ldr	r3, [r0, #40]	@ 0x28
    if (hdma->XferErrorCallback != NULL)
 8004d48:	4293      	cmp	r3, r2
 8004d4a:	d1e5      	bne.n	8004d18 <HAL_DMA_IRQHandler+0x2e>
}
 8004d4c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  else if ((RESET != (flag_it & (DMA_FLAG_TE1 << hdma->ChannelIndex))) && (RESET != (source_it & DMA_IT_TE)))
 8004d4e:	2608      	movs	r6, #8
 8004d50:	0037      	movs	r7, r6
 8004d52:	408f      	lsls	r7, r1
 8004d54:	423d      	tst	r5, r7
 8004d56:	d0f9      	beq.n	8004d4c <HAL_DMA_IRQHandler+0x62>
 8004d58:	4234      	tst	r4, r6
 8004d5a:	d0f7      	beq.n	8004d4c <HAL_DMA_IRQHandler+0x62>
    hdma->Instance->CCR &= ~(DMA_IT_TC | DMA_IT_HT | DMA_IT_TE);
 8004d5c:	250e      	movs	r5, #14
 8004d5e:	681c      	ldr	r4, [r3, #0]
 8004d60:	43ac      	bics	r4, r5
 8004d62:	601c      	str	r4, [r3, #0]
    hdma->DmaBaseAddress->IFCR = DMA_FLAG_GL1 << hdma->ChannelIndex;
 8004d64:	2301      	movs	r3, #1
 8004d66:	001c      	movs	r4, r3
 8004d68:	408c      	lsls	r4, r1
 8004d6a:	6054      	str	r4, [r2, #4]
    hdma->State = HAL_DMA_STATE_READY;
 8004d6c:	1c82      	adds	r2, r0, #2
    hdma->ErrorCode = HAL_DMA_ERROR_TE;
 8004d6e:	6383      	str	r3, [r0, #56]	@ 0x38
    hdma->State = HAL_DMA_STATE_READY;
 8004d70:	77d3      	strb	r3, [r2, #31]
    __HAL_UNLOCK(hdma);
 8004d72:	2200      	movs	r2, #0
 8004d74:	18c3      	adds	r3, r0, r3
 8004d76:	77da      	strb	r2, [r3, #31]
    if (hdma->XferErrorCallback != NULL)
 8004d78:	6b03      	ldr	r3, [r0, #48]	@ 0x30
 8004d7a:	e7e5      	b.n	8004d48 <HAL_DMA_IRQHandler+0x5e>

08004d7c <HAL_GPIO_Init>:
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
  uint32_t position = 0x00u;
 8004d7c:	2300      	movs	r3, #0
{
 8004d7e:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004d80:	b087      	sub	sp, #28
  assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
  assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));

  /* Configure the port pins */
  while (((GPIO_Init->Pin) >> position) != 0x00u)
 8004d82:	680a      	ldr	r2, [r1, #0]
 8004d84:	0014      	movs	r4, r2
 8004d86:	40dc      	lsrs	r4, r3
 8004d88:	d101      	bne.n	8004d8e <HAL_GPIO_Init+0x12>
      }
    }

    position++;
  } 
}
 8004d8a:	b007      	add	sp, #28
 8004d8c:	bdf0      	pop	{r4, r5, r6, r7, pc}
    iocurrent = (GPIO_Init->Pin) & (1uL << position);
 8004d8e:	2501      	movs	r5, #1
 8004d90:	0014      	movs	r4, r2
 8004d92:	409d      	lsls	r5, r3
 8004d94:	402c      	ands	r4, r5
 8004d96:	9400      	str	r4, [sp, #0]
    if (iocurrent != 0x00u)
 8004d98:	422a      	tst	r2, r5
 8004d9a:	d100      	bne.n	8004d9e <HAL_GPIO_Init+0x22>
 8004d9c:	e098      	b.n	8004ed0 <HAL_GPIO_Init+0x154>
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) ||
 8004d9e:	684a      	ldr	r2, [r1, #4]
 8004da0:	005f      	lsls	r7, r3, #1
 8004da2:	4694      	mov	ip, r2
 8004da4:	2203      	movs	r2, #3
 8004da6:	4664      	mov	r4, ip
 8004da8:	4022      	ands	r2, r4
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2u));
 8004daa:	2403      	movs	r4, #3
 8004dac:	40bc      	lsls	r4, r7
 8004dae:	43e4      	mvns	r4, r4
 8004db0:	9401      	str	r4, [sp, #4]
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) ||
 8004db2:	1e54      	subs	r4, r2, #1
 8004db4:	2c01      	cmp	r4, #1
 8004db6:	d82e      	bhi.n	8004e16 <HAL_GPIO_Init+0x9a>
        temp = GPIOx->OSPEEDR;
 8004db8:	6886      	ldr	r6, [r0, #8]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2u));
 8004dba:	9c01      	ldr	r4, [sp, #4]
 8004dbc:	4026      	ands	r6, r4
        temp |= (GPIO_Init->Speed << (position * 2u));
 8004dbe:	68cc      	ldr	r4, [r1, #12]
 8004dc0:	40bc      	lsls	r4, r7
 8004dc2:	4334      	orrs	r4, r6
        GPIOx->OSPEEDR = temp;
 8004dc4:	6084      	str	r4, [r0, #8]
        temp = GPIOx->OTYPER;
 8004dc6:	6844      	ldr	r4, [r0, #4]
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 8004dc8:	2601      	movs	r6, #1
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 8004dca:	43ac      	bics	r4, r5
 8004dcc:	0025      	movs	r5, r4
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 8004dce:	4664      	mov	r4, ip
 8004dd0:	0924      	lsrs	r4, r4, #4
 8004dd2:	4034      	ands	r4, r6
 8004dd4:	409c      	lsls	r4, r3
 8004dd6:	432c      	orrs	r4, r5
        GPIOx->OTYPER = temp;
 8004dd8:	6044      	str	r4, [r0, #4]
        temp = GPIOx->PUPDR;
 8004dda:	68c5      	ldr	r5, [r0, #12]
        temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2u));
 8004ddc:	9c01      	ldr	r4, [sp, #4]
 8004dde:	4025      	ands	r5, r4
        temp |= ((GPIO_Init->Pull) << (position * 2u));
 8004de0:	688c      	ldr	r4, [r1, #8]
 8004de2:	40bc      	lsls	r4, r7
 8004de4:	432c      	orrs	r4, r5
        GPIOx->PUPDR = temp;
 8004de6:	60c4      	str	r4, [r0, #12]
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 8004de8:	2a02      	cmp	r2, #2
 8004dea:	d116      	bne.n	8004e1a <HAL_GPIO_Init+0x9e>
        temp &= ~(0xFu << ((position & 0x07u) * 4u));
 8004dec:	2507      	movs	r5, #7
 8004dee:	260f      	movs	r6, #15
 8004df0:	401d      	ands	r5, r3
 8004df2:	00ad      	lsls	r5, r5, #2
 8004df4:	40ae      	lsls	r6, r5
        temp = GPIOx->AFR[position >> 3u];
 8004df6:	08dc      	lsrs	r4, r3, #3
 8004df8:	00a4      	lsls	r4, r4, #2
 8004dfa:	1904      	adds	r4, r0, r4
 8004dfc:	9402      	str	r4, [sp, #8]
 8004dfe:	6a24      	ldr	r4, [r4, #32]
        temp &= ~(0xFu << ((position & 0x07u) * 4u));
 8004e00:	9603      	str	r6, [sp, #12]
 8004e02:	0026      	movs	r6, r4
 8004e04:	9c03      	ldr	r4, [sp, #12]
 8004e06:	43a6      	bics	r6, r4
 8004e08:	0034      	movs	r4, r6
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07u) * 4u));
 8004e0a:	690e      	ldr	r6, [r1, #16]
 8004e0c:	40ae      	lsls	r6, r5
 8004e0e:	4326      	orrs	r6, r4
        GPIOx->AFR[position >> 3u] = temp;
 8004e10:	9c02      	ldr	r4, [sp, #8]
 8004e12:	6226      	str	r6, [r4, #32]
 8004e14:	e001      	b.n	8004e1a <HAL_GPIO_Init+0x9e>
      if((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 8004e16:	2a03      	cmp	r2, #3
 8004e18:	d1df      	bne.n	8004dda <HAL_GPIO_Init+0x5e>
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2u));
 8004e1a:	40ba      	lsls	r2, r7
      temp = GPIOx->MODER;
 8004e1c:	6804      	ldr	r4, [r0, #0]
      temp &= ~(GPIO_MODER_MODER0 << (position * 2u));
 8004e1e:	9d01      	ldr	r5, [sp, #4]
 8004e20:	4025      	ands	r5, r4
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2u));
 8004e22:	432a      	orrs	r2, r5
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00u)
 8004e24:	24c0      	movs	r4, #192	@ 0xc0
      GPIOx->MODER = temp;
 8004e26:	6002      	str	r2, [r0, #0]
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00u)
 8004e28:	4662      	mov	r2, ip
 8004e2a:	02a4      	lsls	r4, r4, #10
 8004e2c:	4222      	tst	r2, r4
 8004e2e:	d04f      	beq.n	8004ed0 <HAL_GPIO_Init+0x154>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8004e30:	2501      	movs	r5, #1
 8004e32:	4a28      	ldr	r2, [pc, #160]	@ (8004ed4 <HAL_GPIO_Init+0x158>)
        temp |= (GPIO_GET_INDEX(GPIOx) << (4u * (position & 0x03u)));
 8004e34:	2790      	movs	r7, #144	@ 0x90
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8004e36:	6994      	ldr	r4, [r2, #24]
        temp |= (GPIO_GET_INDEX(GPIOx) << (4u * (position & 0x03u)));
 8004e38:	05ff      	lsls	r7, r7, #23
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8004e3a:	432c      	orrs	r4, r5
 8004e3c:	6194      	str	r4, [r2, #24]
 8004e3e:	6992      	ldr	r2, [r2, #24]
        temp = SYSCFG->EXTICR[position >> 2u];
 8004e40:	089c      	lsrs	r4, r3, #2
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8004e42:	402a      	ands	r2, r5
 8004e44:	9205      	str	r2, [sp, #20]
 8004e46:	9a05      	ldr	r2, [sp, #20]
        temp = SYSCFG->EXTICR[position >> 2u];
 8004e48:	4a23      	ldr	r2, [pc, #140]	@ (8004ed8 <HAL_GPIO_Init+0x15c>)
 8004e4a:	00a4      	lsls	r4, r4, #2
 8004e4c:	18a4      	adds	r4, r4, r2
        temp &= ~(0x0FuL << (4u * (position & 0x03u)));
 8004e4e:	220f      	movs	r2, #15
 8004e50:	3502      	adds	r5, #2
 8004e52:	401d      	ands	r5, r3
 8004e54:	00ad      	lsls	r5, r5, #2
 8004e56:	40aa      	lsls	r2, r5
        temp = SYSCFG->EXTICR[position >> 2u];
 8004e58:	68a6      	ldr	r6, [r4, #8]
        temp &= ~(0x0FuL << (4u * (position & 0x03u)));
 8004e5a:	4396      	bics	r6, r2
        temp |= (GPIO_GET_INDEX(GPIOx) << (4u * (position & 0x03u)));
 8004e5c:	2200      	movs	r2, #0
 8004e5e:	42b8      	cmp	r0, r7
 8004e60:	d00c      	beq.n	8004e7c <HAL_GPIO_Init+0x100>
 8004e62:	4f1e      	ldr	r7, [pc, #120]	@ (8004edc <HAL_GPIO_Init+0x160>)
 8004e64:	3201      	adds	r2, #1
 8004e66:	42b8      	cmp	r0, r7
 8004e68:	d008      	beq.n	8004e7c <HAL_GPIO_Init+0x100>
 8004e6a:	4f1d      	ldr	r7, [pc, #116]	@ (8004ee0 <HAL_GPIO_Init+0x164>)
 8004e6c:	3201      	adds	r2, #1
 8004e6e:	42b8      	cmp	r0, r7
 8004e70:	d004      	beq.n	8004e7c <HAL_GPIO_Init+0x100>
 8004e72:	4f1c      	ldr	r7, [pc, #112]	@ (8004ee4 <HAL_GPIO_Init+0x168>)
 8004e74:	3203      	adds	r2, #3
 8004e76:	42b8      	cmp	r0, r7
 8004e78:	d100      	bne.n	8004e7c <HAL_GPIO_Init+0x100>
 8004e7a:	3a02      	subs	r2, #2
 8004e7c:	40aa      	lsls	r2, r5
        if((GPIO_Init->Mode & TRIGGER_RISING) != 0x00u)
 8004e7e:	4667      	mov	r7, ip
        temp |= (GPIO_GET_INDEX(GPIOx) << (4u * (position & 0x03u)));
 8004e80:	4332      	orrs	r2, r6
        SYSCFG->EXTICR[position >> 2u] = temp;
 8004e82:	60a2      	str	r2, [r4, #8]
        temp = EXTI->RTSR;
 8004e84:	4a18      	ldr	r2, [pc, #96]	@ (8004ee8 <HAL_GPIO_Init+0x16c>)
        temp &= ~(iocurrent);
 8004e86:	9c00      	ldr	r4, [sp, #0]
        temp = EXTI->RTSR;
 8004e88:	6896      	ldr	r6, [r2, #8]
          temp |= iocurrent;
 8004e8a:	9d00      	ldr	r5, [sp, #0]
        temp &= ~(iocurrent);
 8004e8c:	43e4      	mvns	r4, r4
          temp |= iocurrent;
 8004e8e:	4335      	orrs	r5, r6
        if((GPIO_Init->Mode & TRIGGER_RISING) != 0x00u)
 8004e90:	02ff      	lsls	r7, r7, #11
 8004e92:	d401      	bmi.n	8004e98 <HAL_GPIO_Init+0x11c>
        temp &= ~(iocurrent);
 8004e94:	0035      	movs	r5, r6
 8004e96:	4025      	ands	r5, r4
        if((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00u)
 8004e98:	4667      	mov	r7, ip
        EXTI->RTSR = temp;
 8004e9a:	6095      	str	r5, [r2, #8]
        temp = EXTI->FTSR;
 8004e9c:	68d6      	ldr	r6, [r2, #12]
          temp |= iocurrent;
 8004e9e:	9d00      	ldr	r5, [sp, #0]
 8004ea0:	4335      	orrs	r5, r6
        if((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00u)
 8004ea2:	02bf      	lsls	r7, r7, #10
 8004ea4:	d401      	bmi.n	8004eaa <HAL_GPIO_Init+0x12e>
        temp &= ~(iocurrent);
 8004ea6:	0035      	movs	r5, r6
 8004ea8:	4025      	ands	r5, r4
        if((GPIO_Init->Mode & EXTI_EVT) != 0x00u)
 8004eaa:	4667      	mov	r7, ip
        EXTI->FTSR = temp;
 8004eac:	60d5      	str	r5, [r2, #12]
        temp = EXTI->EMR;
 8004eae:	6856      	ldr	r6, [r2, #4]
          temp |= iocurrent;
 8004eb0:	9d00      	ldr	r5, [sp, #0]
 8004eb2:	4335      	orrs	r5, r6
        if((GPIO_Init->Mode & EXTI_EVT) != 0x00u)
 8004eb4:	03bf      	lsls	r7, r7, #14
 8004eb6:	d401      	bmi.n	8004ebc <HAL_GPIO_Init+0x140>
        temp &= ~(iocurrent);
 8004eb8:	0035      	movs	r5, r6
 8004eba:	4025      	ands	r5, r4
        if((GPIO_Init->Mode & EXTI_IT) != 0x00u)
 8004ebc:	4667      	mov	r7, ip
        EXTI->EMR = temp;
 8004ebe:	6055      	str	r5, [r2, #4]
        temp = EXTI->IMR;
 8004ec0:	6815      	ldr	r5, [r2, #0]
          temp |= iocurrent;
 8004ec2:	9e00      	ldr	r6, [sp, #0]
 8004ec4:	432e      	orrs	r6, r5
        if((GPIO_Init->Mode & EXTI_IT) != 0x00u)
 8004ec6:	03ff      	lsls	r7, r7, #15
 8004ec8:	d401      	bmi.n	8004ece <HAL_GPIO_Init+0x152>
        temp &= ~(iocurrent);
 8004eca:	4025      	ands	r5, r4
 8004ecc:	002e      	movs	r6, r5
        EXTI->IMR = temp;
 8004ece:	6016      	str	r6, [r2, #0]
    position++;
 8004ed0:	3301      	adds	r3, #1
 8004ed2:	e756      	b.n	8004d82 <HAL_GPIO_Init+0x6>
 8004ed4:	40021000 	.word	0x40021000
 8004ed8:	40010000 	.word	0x40010000
 8004edc:	48000400 	.word	0x48000400
 8004ee0:	48000800 	.word	0x48000800
 8004ee4:	48000c00 	.word	0x48000c00
 8004ee8:	40010400 	.word	0x40010400

08004eec <HAL_GPIO_ReadPin>:
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if ((GPIOx->IDR & GPIO_Pin) != (uint32_t)GPIO_PIN_RESET)
 8004eec:	6900      	ldr	r0, [r0, #16]
 8004eee:	4008      	ands	r0, r1
 8004ef0:	1e43      	subs	r3, r0, #1
 8004ef2:	4198      	sbcs	r0, r3
  }
  else
  {
    bitstatus = GPIO_PIN_RESET;
  }
  return bitstatus;
 8004ef4:	b2c0      	uxtb	r0, r0
  }
 8004ef6:	4770      	bx	lr

08004ef8 <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if (PinState != GPIO_PIN_RESET)
 8004ef8:	2a00      	cmp	r2, #0
 8004efa:	d001      	beq.n	8004f00 <HAL_GPIO_WritePin+0x8>
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin;
 8004efc:	6181      	str	r1, [r0, #24]
  }
  else
  {
    GPIOx->BRR = (uint32_t)GPIO_Pin;
  }
}
 8004efe:	4770      	bx	lr
    GPIOx->BRR = (uint32_t)GPIO_Pin;
 8004f00:	6281      	str	r1, [r0, #40]	@ 0x28
}
 8004f02:	e7fc      	b.n	8004efe <HAL_GPIO_WritePin+0x6>

08004f04 <HAL_GPIO_EXTI_IRQHandler>:
  * @retval None
  */
void HAL_GPIO_EXTI_IRQHandler(uint16_t GPIO_Pin)
{
  /* EXTI line interrupt detected */
  if(__HAL_GPIO_EXTI_GET_IT(GPIO_Pin) != 0x00u)
 8004f04:	4b04      	ldr	r3, [pc, #16]	@ (8004f18 <HAL_GPIO_EXTI_IRQHandler+0x14>)
{
 8004f06:	b510      	push	{r4, lr}
  if(__HAL_GPIO_EXTI_GET_IT(GPIO_Pin) != 0x00u)
 8004f08:	695a      	ldr	r2, [r3, #20]
 8004f0a:	4210      	tst	r0, r2
 8004f0c:	d002      	beq.n	8004f14 <HAL_GPIO_EXTI_IRQHandler+0x10>
  { 
    __HAL_GPIO_EXTI_CLEAR_IT(GPIO_Pin);
 8004f0e:	6158      	str	r0, [r3, #20]
    HAL_GPIO_EXTI_Callback(GPIO_Pin);
 8004f10:	f7ff fa48 	bl	80043a4 <HAL_GPIO_EXTI_Callback>
  }
}
 8004f14:	bd10      	pop	{r4, pc}
 8004f16:	46c0      	nop			@ (mov r8, r8)
 8004f18:	40010400 	.word	0x40010400

08004f1c <I2C_Flush_TXDR>:
  */
static void I2C_Flush_TXDR(I2C_HandleTypeDef *hi2c)
{
  /* If a pending TXIS flag is set */
  /* Write a dummy data in TXDR to clear it */
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) != RESET)
 8004f1c:	6803      	ldr	r3, [r0, #0]
 8004f1e:	699a      	ldr	r2, [r3, #24]
 8004f20:	0792      	lsls	r2, r2, #30
 8004f22:	d501      	bpl.n	8004f28 <I2C_Flush_TXDR+0xc>
  {
    hi2c->Instance->TXDR = 0x00U;
 8004f24:	2200      	movs	r2, #0
 8004f26:	629a      	str	r2, [r3, #40]	@ 0x28
  }

  /* Flush TX register if not empty */
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8004f28:	2201      	movs	r2, #1
 8004f2a:	6999      	ldr	r1, [r3, #24]
 8004f2c:	4211      	tst	r1, r2
 8004f2e:	d102      	bne.n	8004f36 <I2C_Flush_TXDR+0x1a>
  {
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_TXE);
 8004f30:	6999      	ldr	r1, [r3, #24]
 8004f32:	430a      	orrs	r2, r1
 8004f34:	619a      	str	r2, [r3, #24]
  }
}
 8004f36:	4770      	bx	lr

08004f38 <I2C_TransferConfig>:
  *     @arg @ref I2C_GENERATE_START_WRITE Generate Restart for write request.
  * @retval None
  */
static void I2C_TransferConfig(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t Size, uint32_t Mode,
                               uint32_t Request)
{
 8004f38:	b530      	push	{r4, r5, lr}
 8004f3a:	9c03      	ldr	r4, [sp, #12]
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
                             (uint32_t)Mode | (uint32_t)Request) & (~0x80000000U));

  /* update CR2 register */
  MODIFY_REG(hi2c->Instance->CR2, \
 8004f3c:	6800      	ldr	r0, [r0, #0]
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
 8004f3e:	4323      	orrs	r3, r4
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
 8004f40:	0412      	lsls	r2, r2, #16
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
 8004f42:	0589      	lsls	r1, r1, #22
 8004f44:	431a      	orrs	r2, r3
 8004f46:	0d89      	lsrs	r1, r1, #22
  MODIFY_REG(hi2c->Instance->CR2, \
 8004f48:	4b05      	ldr	r3, [pc, #20]	@ (8004f60 <I2C_TransferConfig+0x28>)
 8004f4a:	6845      	ldr	r5, [r0, #4]
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
 8004f4c:	430a      	orrs	r2, r1
  MODIFY_REG(hi2c->Instance->CR2, \
 8004f4e:	0d64      	lsrs	r4, r4, #21
 8004f50:	4323      	orrs	r3, r4
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
 8004f52:	0052      	lsls	r2, r2, #1
  MODIFY_REG(hi2c->Instance->CR2, \
 8004f54:	439d      	bics	r5, r3
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
 8004f56:	0852      	lsrs	r2, r2, #1
  MODIFY_REG(hi2c->Instance->CR2, \
 8004f58:	432a      	orrs	r2, r5
 8004f5a:	6042      	str	r2, [r0, #4]
             ((I2C_CR2_SADD | I2C_CR2_NBYTES | I2C_CR2_RELOAD | I2C_CR2_AUTOEND | \
               (I2C_CR2_RD_WRN & (uint32_t)(Request >> (31U - I2C_CR2_RD_WRN_Pos))) | \
               I2C_CR2_START | I2C_CR2_STOP)), tmp);
}
 8004f5c:	bd30      	pop	{r4, r5, pc}
 8004f5e:	46c0      	nop			@ (mov r8, r8)
 8004f60:	03ff63ff 	.word	0x03ff63ff

08004f64 <I2C_IsErrorOccurred>:
{
 8004f64:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8004f66:	0015      	movs	r5, r2
  uint32_t itflag   = hi2c->Instance->ISR;
 8004f68:	6802      	ldr	r2, [r0, #0]
{
 8004f6a:	000e      	movs	r6, r1
  uint32_t itflag   = hi2c->Instance->ISR;
 8004f6c:	6991      	ldr	r1, [r2, #24]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_AF))
 8004f6e:	2310      	movs	r3, #16
 8004f70:	000f      	movs	r7, r1
{
 8004f72:	0004      	movs	r4, r0
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_AF))
 8004f74:	401f      	ands	r7, r3
  HAL_StatusTypeDef status = HAL_OK;
 8004f76:	2000      	movs	r0, #0
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_AF))
 8004f78:	4219      	tst	r1, r3
 8004f7a:	d00d      	beq.n	8004f98 <I2C_IsErrorOccurred+0x34>
  HAL_StatusTypeDef status = HAL_OK;
 8004f7c:	0007      	movs	r7, r0
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8004f7e:	61d3      	str	r3, [r2, #28]
  uint32_t error_code = 0;
 8004f80:	9001      	str	r0, [sp, #4]
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
 8004f82:	6823      	ldr	r3, [r4, #0]
 8004f84:	2120      	movs	r1, #32
 8004f86:	699a      	ldr	r2, [r3, #24]
 8004f88:	420a      	tst	r2, r1
 8004f8a:	d15f      	bne.n	800504c <I2C_IsErrorOccurred+0xe8>
 8004f8c:	2f00      	cmp	r7, #0
 8004f8e:	d031      	beq.n	8004ff4 <I2C_IsErrorOccurred+0x90>
    error_code |= HAL_I2C_ERROR_AF;
 8004f90:	2704      	movs	r7, #4
    status = HAL_ERROR;
 8004f92:	2001      	movs	r0, #1
    error_code |= HAL_I2C_ERROR_AF;
 8004f94:	9b01      	ldr	r3, [sp, #4]
 8004f96:	431f      	orrs	r7, r3
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_BERR))
 8004f98:	2280      	movs	r2, #128	@ 0x80
  itflag = hi2c->Instance->ISR;
 8004f9a:	6825      	ldr	r5, [r4, #0]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_BERR))
 8004f9c:	0052      	lsls	r2, r2, #1
  itflag = hi2c->Instance->ISR;
 8004f9e:	69ab      	ldr	r3, [r5, #24]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_BERR))
 8004fa0:	4213      	tst	r3, r2
 8004fa2:	d002      	beq.n	8004faa <I2C_IsErrorOccurred+0x46>
    error_code |= HAL_I2C_ERROR_BERR;
 8004fa4:	2001      	movs	r0, #1
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
 8004fa6:	61ea      	str	r2, [r5, #28]
    error_code |= HAL_I2C_ERROR_BERR;
 8004fa8:	4307      	orrs	r7, r0
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
 8004faa:	2280      	movs	r2, #128	@ 0x80
 8004fac:	00d2      	lsls	r2, r2, #3
 8004fae:	4213      	tst	r3, r2
 8004fb0:	d003      	beq.n	8004fba <I2C_IsErrorOccurred+0x56>
    error_code |= HAL_I2C_ERROR_OVR;
 8004fb2:	2108      	movs	r1, #8
    status = HAL_ERROR;
 8004fb4:	2001      	movs	r0, #1
    error_code |= HAL_I2C_ERROR_OVR;
 8004fb6:	430f      	orrs	r7, r1
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
 8004fb8:	61ea      	str	r2, [r5, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
 8004fba:	2280      	movs	r2, #128	@ 0x80
 8004fbc:	0092      	lsls	r2, r2, #2
 8004fbe:	4213      	tst	r3, r2
 8004fc0:	d049      	beq.n	8005056 <I2C_IsErrorOccurred+0xf2>
    error_code |= HAL_I2C_ERROR_ARLO;
 8004fc2:	2302      	movs	r3, #2
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
 8004fc4:	61ea      	str	r2, [r5, #28]
    error_code |= HAL_I2C_ERROR_ARLO;
 8004fc6:	431f      	orrs	r7, r3
    I2C_Flush_TXDR(hi2c);
 8004fc8:	0020      	movs	r0, r4
 8004fca:	f7ff ffa7 	bl	8004f1c <I2C_Flush_TXDR>
    I2C_RESET_CR2(hi2c);
 8004fce:	686b      	ldr	r3, [r5, #4]
 8004fd0:	4a22      	ldr	r2, [pc, #136]	@ (800505c <I2C_IsErrorOccurred+0xf8>)
    __HAL_UNLOCK(hi2c);
 8004fd2:	2001      	movs	r0, #1
    I2C_RESET_CR2(hi2c);
 8004fd4:	4013      	ands	r3, r2
 8004fd6:	606b      	str	r3, [r5, #4]
    hi2c->ErrorCode |= error_code;
 8004fd8:	6c63      	ldr	r3, [r4, #68]	@ 0x44
    hi2c->State = HAL_I2C_STATE_READY;
 8004fda:	2220      	movs	r2, #32
    hi2c->ErrorCode |= error_code;
 8004fdc:	433b      	orrs	r3, r7
 8004fde:	6463      	str	r3, [r4, #68]	@ 0x44
    hi2c->State = HAL_I2C_STATE_READY;
 8004fe0:	0023      	movs	r3, r4
 8004fe2:	3341      	adds	r3, #65	@ 0x41
 8004fe4:	701a      	strb	r2, [r3, #0]
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8004fe6:	0022      	movs	r2, r4
 8004fe8:	2300      	movs	r3, #0
 8004fea:	3242      	adds	r2, #66	@ 0x42
    __HAL_UNLOCK(hi2c);
 8004fec:	3440      	adds	r4, #64	@ 0x40
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8004fee:	7013      	strb	r3, [r2, #0]
    __HAL_UNLOCK(hi2c);
 8004ff0:	7023      	strb	r3, [r4, #0]
 8004ff2:	e032      	b.n	800505a <I2C_IsErrorOccurred+0xf6>
      if (Timeout != HAL_MAX_DELAY)
 8004ff4:	1c72      	adds	r2, r6, #1
 8004ff6:	d0c5      	beq.n	8004f84 <I2C_IsErrorOccurred+0x20>
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
 8004ff8:	f7ff fdbc 	bl	8004b74 <HAL_GetTick>
 8004ffc:	1b40      	subs	r0, r0, r5
 8004ffe:	42b0      	cmp	r0, r6
 8005000:	d801      	bhi.n	8005006 <I2C_IsErrorOccurred+0xa2>
 8005002:	2e00      	cmp	r6, #0
 8005004:	d1bd      	bne.n	8004f82 <I2C_IsErrorOccurred+0x1e>
          tmp2 = hi2c->Mode;
 8005006:	0022      	movs	r2, r4
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
 8005008:	6823      	ldr	r3, [r4, #0]
          tmp2 = hi2c->Mode;
 800500a:	3242      	adds	r2, #66	@ 0x42
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
 800500c:	6858      	ldr	r0, [r3, #4]
          tmp2 = hi2c->Mode;
 800500e:	7811      	ldrb	r1, [r2, #0]
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
 8005010:	699a      	ldr	r2, [r3, #24]
          tmp2 = hi2c->Mode;
 8005012:	b2c9      	uxtb	r1, r1
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
 8005014:	0412      	lsls	r2, r2, #16
 8005016:	d50b      	bpl.n	8005030 <I2C_IsErrorOccurred+0xcc>
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
 8005018:	2280      	movs	r2, #128	@ 0x80
 800501a:	01d2      	lsls	r2, r2, #7
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
 800501c:	4210      	tst	r0, r2
 800501e:	d107      	bne.n	8005030 <I2C_IsErrorOccurred+0xcc>
              (tmp1 != I2C_CR2_STOP) && \
 8005020:	2920      	cmp	r1, #32
 8005022:	d005      	beq.n	8005030 <I2C_IsErrorOccurred+0xcc>
            hi2c->Instance->CR2 |= I2C_CR2_STOP;
 8005024:	6859      	ldr	r1, [r3, #4]
 8005026:	430a      	orrs	r2, r1
 8005028:	605a      	str	r2, [r3, #4]
            tickstart = HAL_GetTick();
 800502a:	f7ff fda3 	bl	8004b74 <HAL_GetTick>
 800502e:	0005      	movs	r5, r0
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
 8005030:	2220      	movs	r2, #32
 8005032:	6823      	ldr	r3, [r4, #0]
 8005034:	699b      	ldr	r3, [r3, #24]
 8005036:	4213      	tst	r3, r2
 8005038:	d1a3      	bne.n	8004f82 <I2C_IsErrorOccurred+0x1e>
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
 800503a:	f7ff fd9b 	bl	8004b74 <HAL_GetTick>
 800503e:	1b40      	subs	r0, r0, r5
 8005040:	2819      	cmp	r0, #25
 8005042:	d9f5      	bls.n	8005030 <I2C_IsErrorOccurred+0xcc>
              error_code |= HAL_I2C_ERROR_TIMEOUT;
 8005044:	2320      	movs	r3, #32
              status = HAL_ERROR;
 8005046:	2701      	movs	r7, #1
              error_code |= HAL_I2C_ERROR_TIMEOUT;
 8005048:	9301      	str	r3, [sp, #4]
 800504a:	e79a      	b.n	8004f82 <I2C_IsErrorOccurred+0x1e>
    if (status == HAL_OK)
 800504c:	2f00      	cmp	r7, #0
 800504e:	d19f      	bne.n	8004f90 <I2C_IsErrorOccurred+0x2c>
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8005050:	2220      	movs	r2, #32
 8005052:	61da      	str	r2, [r3, #28]
 8005054:	e79c      	b.n	8004f90 <I2C_IsErrorOccurred+0x2c>
  if (status != HAL_OK)
 8005056:	2800      	cmp	r0, #0
 8005058:	d1b6      	bne.n	8004fc8 <I2C_IsErrorOccurred+0x64>
}
 800505a:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 800505c:	fe00e800 	.word	0xfe00e800

08005060 <I2C_WaitOnTXISFlagUntilTimeout>:
{
 8005060:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8005062:	0004      	movs	r4, r0
 8005064:	000d      	movs	r5, r1
 8005066:	0016      	movs	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET)
 8005068:	2702      	movs	r7, #2
 800506a:	6823      	ldr	r3, [r4, #0]
 800506c:	699b      	ldr	r3, [r3, #24]
 800506e:	423b      	tst	r3, r7
 8005070:	d001      	beq.n	8005076 <I2C_WaitOnTXISFlagUntilTimeout+0x16>
  return HAL_OK;
 8005072:	2000      	movs	r0, #0
 8005074:	e021      	b.n	80050ba <I2C_WaitOnTXISFlagUntilTimeout+0x5a>
    if (I2C_IsErrorOccurred(hi2c, Timeout, Tickstart) != HAL_OK)
 8005076:	0032      	movs	r2, r6
 8005078:	0029      	movs	r1, r5
 800507a:	0020      	movs	r0, r4
 800507c:	f7ff ff72 	bl	8004f64 <I2C_IsErrorOccurred>
 8005080:	2800      	cmp	r0, #0
 8005082:	d119      	bne.n	80050b8 <I2C_WaitOnTXISFlagUntilTimeout+0x58>
    if (Timeout != HAL_MAX_DELAY)
 8005084:	1c6b      	adds	r3, r5, #1
 8005086:	d0f0      	beq.n	800506a <I2C_WaitOnTXISFlagUntilTimeout+0xa>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8005088:	f7ff fd74 	bl	8004b74 <HAL_GetTick>
 800508c:	1b80      	subs	r0, r0, r6
 800508e:	42a8      	cmp	r0, r5
 8005090:	d801      	bhi.n	8005096 <I2C_WaitOnTXISFlagUntilTimeout+0x36>
 8005092:	2d00      	cmp	r5, #0
 8005094:	d1e9      	bne.n	800506a <I2C_WaitOnTXISFlagUntilTimeout+0xa>
        if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET))
 8005096:	6823      	ldr	r3, [r4, #0]
 8005098:	6999      	ldr	r1, [r3, #24]
 800509a:	2302      	movs	r3, #2
 800509c:	000a      	movs	r2, r1
 800509e:	401a      	ands	r2, r3
 80050a0:	4219      	tst	r1, r3
 80050a2:	d1e2      	bne.n	800506a <I2C_WaitOnTXISFlagUntilTimeout+0xa>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 80050a4:	2120      	movs	r1, #32
 80050a6:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 80050a8:	430b      	orrs	r3, r1
 80050aa:	6463      	str	r3, [r4, #68]	@ 0x44
          hi2c->State = HAL_I2C_STATE_READY;
 80050ac:	0023      	movs	r3, r4
          __HAL_UNLOCK(hi2c);
 80050ae:	3440      	adds	r4, #64	@ 0x40
          hi2c->State = HAL_I2C_STATE_READY;
 80050b0:	3341      	adds	r3, #65	@ 0x41
 80050b2:	7019      	strb	r1, [r3, #0]
          hi2c->Mode = HAL_I2C_MODE_NONE;
 80050b4:	705a      	strb	r2, [r3, #1]
          __HAL_UNLOCK(hi2c);
 80050b6:	7022      	strb	r2, [r4, #0]
      return HAL_ERROR;
 80050b8:	2001      	movs	r0, #1
}
 80050ba:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

080050bc <I2C_WaitOnFlagUntilTimeout>:
{
 80050bc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80050be:	0004      	movs	r4, r0
 80050c0:	000d      	movs	r5, r1
 80050c2:	0017      	movs	r7, r2
 80050c4:	001e      	movs	r6, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 80050c6:	6823      	ldr	r3, [r4, #0]
 80050c8:	699b      	ldr	r3, [r3, #24]
 80050ca:	402b      	ands	r3, r5
 80050cc:	1b5b      	subs	r3, r3, r5
 80050ce:	425a      	negs	r2, r3
 80050d0:	4153      	adcs	r3, r2
 80050d2:	42bb      	cmp	r3, r7
 80050d4:	d001      	beq.n	80050da <I2C_WaitOnFlagUntilTimeout+0x1e>
  return HAL_OK;
 80050d6:	2000      	movs	r0, #0
 80050d8:	e026      	b.n	8005128 <I2C_WaitOnFlagUntilTimeout+0x6c>
    if (I2C_IsErrorOccurred(hi2c, Timeout, Tickstart) != HAL_OK)
 80050da:	0031      	movs	r1, r6
 80050dc:	0020      	movs	r0, r4
 80050de:	9a06      	ldr	r2, [sp, #24]
 80050e0:	f7ff ff40 	bl	8004f64 <I2C_IsErrorOccurred>
 80050e4:	2800      	cmp	r0, #0
 80050e6:	d11e      	bne.n	8005126 <I2C_WaitOnFlagUntilTimeout+0x6a>
    if (Timeout != HAL_MAX_DELAY)
 80050e8:	1c73      	adds	r3, r6, #1
 80050ea:	d0ec      	beq.n	80050c6 <I2C_WaitOnFlagUntilTimeout+0xa>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80050ec:	f7ff fd42 	bl	8004b74 <HAL_GetTick>
 80050f0:	9b06      	ldr	r3, [sp, #24]
 80050f2:	1ac0      	subs	r0, r0, r3
 80050f4:	42b0      	cmp	r0, r6
 80050f6:	d801      	bhi.n	80050fc <I2C_WaitOnFlagUntilTimeout+0x40>
 80050f8:	2e00      	cmp	r6, #0
 80050fa:	d1e4      	bne.n	80050c6 <I2C_WaitOnFlagUntilTimeout+0xa>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
 80050fc:	6823      	ldr	r3, [r4, #0]
 80050fe:	699b      	ldr	r3, [r3, #24]
 8005100:	402b      	ands	r3, r5
 8005102:	1b5b      	subs	r3, r3, r5
 8005104:	425a      	negs	r2, r3
 8005106:	4153      	adcs	r3, r2
 8005108:	42bb      	cmp	r3, r7
 800510a:	d1dc      	bne.n	80050c6 <I2C_WaitOnFlagUntilTimeout+0xa>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 800510c:	2220      	movs	r2, #32
 800510e:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 8005110:	4313      	orrs	r3, r2
 8005112:	6463      	str	r3, [r4, #68]	@ 0x44
          hi2c->State = HAL_I2C_STATE_READY;
 8005114:	0023      	movs	r3, r4
 8005116:	3341      	adds	r3, #65	@ 0x41
 8005118:	701a      	strb	r2, [r3, #0]
          hi2c->Mode = HAL_I2C_MODE_NONE;
 800511a:	0022      	movs	r2, r4
 800511c:	2300      	movs	r3, #0
 800511e:	3242      	adds	r2, #66	@ 0x42
          __HAL_UNLOCK(hi2c);
 8005120:	3440      	adds	r4, #64	@ 0x40
          hi2c->Mode = HAL_I2C_MODE_NONE;
 8005122:	7013      	strb	r3, [r2, #0]
          __HAL_UNLOCK(hi2c);
 8005124:	7023      	strb	r3, [r4, #0]
      return HAL_ERROR;
 8005126:	2001      	movs	r0, #1
}
 8005128:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800512a <I2C_WaitOnSTOPFlagUntilTimeout>:
{
 800512a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800512c:	0004      	movs	r4, r0
 800512e:	000e      	movs	r6, r1
 8005130:	0017      	movs	r7, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
 8005132:	2520      	movs	r5, #32
 8005134:	6823      	ldr	r3, [r4, #0]
 8005136:	699b      	ldr	r3, [r3, #24]
 8005138:	422b      	tst	r3, r5
 800513a:	d001      	beq.n	8005140 <I2C_WaitOnSTOPFlagUntilTimeout+0x16>
  return HAL_OK;
 800513c:	2000      	movs	r0, #0
 800513e:	e01d      	b.n	800517c <I2C_WaitOnSTOPFlagUntilTimeout+0x52>
    if (I2C_IsErrorOccurred(hi2c, Timeout, Tickstart) != HAL_OK)
 8005140:	003a      	movs	r2, r7
 8005142:	0031      	movs	r1, r6
 8005144:	0020      	movs	r0, r4
 8005146:	f7ff ff0d 	bl	8004f64 <I2C_IsErrorOccurred>
 800514a:	2800      	cmp	r0, #0
 800514c:	d115      	bne.n	800517a <I2C_WaitOnSTOPFlagUntilTimeout+0x50>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800514e:	f7ff fd11 	bl	8004b74 <HAL_GetTick>
 8005152:	1bc0      	subs	r0, r0, r7
 8005154:	42b0      	cmp	r0, r6
 8005156:	d801      	bhi.n	800515c <I2C_WaitOnSTOPFlagUntilTimeout+0x32>
 8005158:	2e00      	cmp	r6, #0
 800515a:	d1eb      	bne.n	8005134 <I2C_WaitOnSTOPFlagUntilTimeout+0xa>
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET))
 800515c:	6823      	ldr	r3, [r4, #0]
 800515e:	699b      	ldr	r3, [r3, #24]
 8005160:	001a      	movs	r2, r3
 8005162:	402a      	ands	r2, r5
 8005164:	422b      	tst	r3, r5
 8005166:	d1e5      	bne.n	8005134 <I2C_WaitOnSTOPFlagUntilTimeout+0xa>
        hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 8005168:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 800516a:	432b      	orrs	r3, r5
 800516c:	6463      	str	r3, [r4, #68]	@ 0x44
        hi2c->State = HAL_I2C_STATE_READY;
 800516e:	0023      	movs	r3, r4
        __HAL_UNLOCK(hi2c);
 8005170:	3440      	adds	r4, #64	@ 0x40
        hi2c->State = HAL_I2C_STATE_READY;
 8005172:	3341      	adds	r3, #65	@ 0x41
 8005174:	701d      	strb	r5, [r3, #0]
        hi2c->Mode = HAL_I2C_MODE_NONE;
 8005176:	705a      	strb	r2, [r3, #1]
        __HAL_UNLOCK(hi2c);
 8005178:	7022      	strb	r2, [r4, #0]
      return HAL_ERROR;
 800517a:	2001      	movs	r0, #1
}
 800517c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08005180 <HAL_I2C_Init>:
{
 8005180:	b570      	push	{r4, r5, r6, lr}
 8005182:	0004      	movs	r4, r0
    return HAL_ERROR;
 8005184:	2001      	movs	r0, #1
  if (hi2c == NULL)
 8005186:	2c00      	cmp	r4, #0
 8005188:	d04e      	beq.n	8005228 <HAL_I2C_Init+0xa8>
  if (hi2c->State == HAL_I2C_STATE_RESET)
 800518a:	0025      	movs	r5, r4
 800518c:	3541      	adds	r5, #65	@ 0x41
 800518e:	782b      	ldrb	r3, [r5, #0]
 8005190:	b2da      	uxtb	r2, r3
 8005192:	2b00      	cmp	r3, #0
 8005194:	d105      	bne.n	80051a2 <HAL_I2C_Init+0x22>
    hi2c->Lock = HAL_UNLOCKED;
 8005196:	0023      	movs	r3, r4
 8005198:	3340      	adds	r3, #64	@ 0x40
    HAL_I2C_MspInit(hi2c);
 800519a:	0020      	movs	r0, r4
    hi2c->Lock = HAL_UNLOCKED;
 800519c:	701a      	strb	r2, [r3, #0]
    HAL_I2C_MspInit(hi2c);
 800519e:	f7ff fb2b 	bl	80047f8 <HAL_I2C_MspInit>
  hi2c->State = HAL_I2C_STATE_BUSY;
 80051a2:	2324      	movs	r3, #36	@ 0x24
  __HAL_I2C_DISABLE(hi2c);
 80051a4:	2101      	movs	r1, #1
  hi2c->State = HAL_I2C_STATE_BUSY;
 80051a6:	702b      	strb	r3, [r5, #0]
  __HAL_I2C_DISABLE(hi2c);
 80051a8:	6823      	ldr	r3, [r4, #0]
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
 80051aa:	68e0      	ldr	r0, [r4, #12]
  __HAL_I2C_DISABLE(hi2c);
 80051ac:	681a      	ldr	r2, [r3, #0]
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | hi2c->Init.OwnAddress1);
 80051ae:	68a6      	ldr	r6, [r4, #8]
  __HAL_I2C_DISABLE(hi2c);
 80051b0:	438a      	bics	r2, r1
 80051b2:	601a      	str	r2, [r3, #0]
  hi2c->Instance->TIMINGR = hi2c->Init.Timing & TIMING_CLEAR_MASK;
 80051b4:	491d      	ldr	r1, [pc, #116]	@ (800522c <HAL_I2C_Init+0xac>)
 80051b6:	6862      	ldr	r2, [r4, #4]
 80051b8:	400a      	ands	r2, r1
 80051ba:	611a      	str	r2, [r3, #16]
  hi2c->Instance->OAR1 &= ~I2C_OAR1_OA1EN;
 80051bc:	689a      	ldr	r2, [r3, #8]
 80051be:	491c      	ldr	r1, [pc, #112]	@ (8005230 <HAL_I2C_Init+0xb0>)
 80051c0:	400a      	ands	r2, r1
 80051c2:	609a      	str	r2, [r3, #8]
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
 80051c4:	2801      	cmp	r0, #1
 80051c6:	d107      	bne.n	80051d8 <HAL_I2C_Init+0x58>
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | hi2c->Init.OwnAddress1);
 80051c8:	2280      	movs	r2, #128	@ 0x80
 80051ca:	0212      	lsls	r2, r2, #8
 80051cc:	4332      	orrs	r2, r6
 80051ce:	609a      	str	r2, [r3, #8]
    CLEAR_BIT(hi2c->Instance->CR2, I2C_CR2_ADD10);
 80051d0:	685a      	ldr	r2, [r3, #4]
 80051d2:	4818      	ldr	r0, [pc, #96]	@ (8005234 <HAL_I2C_Init+0xb4>)
 80051d4:	4002      	ands	r2, r0
 80051d6:	e009      	b.n	80051ec <HAL_I2C_Init+0x6c>
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | I2C_OAR1_OA1MODE | hi2c->Init.OwnAddress1);
 80051d8:	2284      	movs	r2, #132	@ 0x84
 80051da:	0212      	lsls	r2, r2, #8
 80051dc:	4332      	orrs	r2, r6
 80051de:	609a      	str	r2, [r3, #8]
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
 80051e0:	2802      	cmp	r0, #2
 80051e2:	d1f5      	bne.n	80051d0 <HAL_I2C_Init+0x50>
    SET_BIT(hi2c->Instance->CR2, I2C_CR2_ADD10);
 80051e4:	2280      	movs	r2, #128	@ 0x80
 80051e6:	6858      	ldr	r0, [r3, #4]
 80051e8:	0112      	lsls	r2, r2, #4
 80051ea:	4302      	orrs	r2, r0
    CLEAR_BIT(hi2c->Instance->CR2, I2C_CR2_ADD10);
 80051ec:	605a      	str	r2, [r3, #4]
  hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
 80051ee:	6858      	ldr	r0, [r3, #4]
 80051f0:	4a11      	ldr	r2, [pc, #68]	@ (8005238 <HAL_I2C_Init+0xb8>)
 80051f2:	4302      	orrs	r2, r0
 80051f4:	605a      	str	r2, [r3, #4]
  hi2c->Instance->OAR2 &= ~I2C_DUALADDRESS_ENABLE;
 80051f6:	68da      	ldr	r2, [r3, #12]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 80051f8:	2000      	movs	r0, #0
  hi2c->Instance->OAR2 &= ~I2C_DUALADDRESS_ENABLE;
 80051fa:	400a      	ands	r2, r1
 80051fc:	60da      	str	r2, [r3, #12]
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | \
 80051fe:	6961      	ldr	r1, [r4, #20]
 8005200:	6922      	ldr	r2, [r4, #16]
 8005202:	430a      	orrs	r2, r1
                          (hi2c->Init.OwnAddress2Masks << 8));
 8005204:	69a1      	ldr	r1, [r4, #24]
 8005206:	0209      	lsls	r1, r1, #8
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | \
 8005208:	430a      	orrs	r2, r1
 800520a:	60da      	str	r2, [r3, #12]
  hi2c->Instance->CR1 = (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode);
 800520c:	6a21      	ldr	r1, [r4, #32]
 800520e:	69e2      	ldr	r2, [r4, #28]
 8005210:	430a      	orrs	r2, r1
 8005212:	601a      	str	r2, [r3, #0]
  __HAL_I2C_ENABLE(hi2c);
 8005214:	2201      	movs	r2, #1
 8005216:	6819      	ldr	r1, [r3, #0]
 8005218:	430a      	orrs	r2, r1
 800521a:	601a      	str	r2, [r3, #0]
  hi2c->State = HAL_I2C_STATE_READY;
 800521c:	2320      	movs	r3, #32
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800521e:	6460      	str	r0, [r4, #68]	@ 0x44
  hi2c->State = HAL_I2C_STATE_READY;
 8005220:	702b      	strb	r3, [r5, #0]
  hi2c->PreviousState = I2C_STATE_NONE;
 8005222:	6320      	str	r0, [r4, #48]	@ 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 8005224:	3442      	adds	r4, #66	@ 0x42
 8005226:	7020      	strb	r0, [r4, #0]
}
 8005228:	bd70      	pop	{r4, r5, r6, pc}
 800522a:	46c0      	nop			@ (mov r8, r8)
 800522c:	f0ffffff 	.word	0xf0ffffff
 8005230:	ffff7fff 	.word	0xffff7fff
 8005234:	fffff7ff 	.word	0xfffff7ff
 8005238:	02008000 	.word	0x02008000

0800523c <HAL_I2C_Mem_Write>:
{
 800523c:	b5f0      	push	{r4, r5, r6, r7, lr}
  if (hi2c->State == HAL_I2C_STATE_READY)
 800523e:	0007      	movs	r7, r0
{
 8005240:	b087      	sub	sp, #28
 8005242:	9303      	str	r3, [sp, #12]
 8005244:	ab0c      	add	r3, sp, #48	@ 0x30
 8005246:	9202      	str	r2, [sp, #8]
 8005248:	cb04      	ldmia	r3!, {r2}
  if (hi2c->State == HAL_I2C_STATE_READY)
 800524a:	3741      	adds	r7, #65	@ 0x41
{
 800524c:	881b      	ldrh	r3, [r3, #0]
 800524e:	9204      	str	r2, [sp, #16]
 8005250:	9305      	str	r3, [sp, #20]
  if (hi2c->State == HAL_I2C_STATE_READY)
 8005252:	783b      	ldrb	r3, [r7, #0]
{
 8005254:	0004      	movs	r4, r0
 8005256:	000e      	movs	r6, r1
    __HAL_LOCK(hi2c);
 8005258:	2002      	movs	r0, #2
  if (hi2c->State == HAL_I2C_STATE_READY)
 800525a:	2b20      	cmp	r3, #32
 800525c:	d108      	bne.n	8005270 <HAL_I2C_Mem_Write+0x34>
    if ((pData == NULL) || (Size == 0U))
 800525e:	2a00      	cmp	r2, #0
 8005260:	d002      	beq.n	8005268 <HAL_I2C_Mem_Write+0x2c>
 8005262:	9b05      	ldr	r3, [sp, #20]
 8005264:	2b00      	cmp	r3, #0
 8005266:	d105      	bne.n	8005274 <HAL_I2C_Mem_Write+0x38>
      hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
 8005268:	2380      	movs	r3, #128	@ 0x80
 800526a:	009b      	lsls	r3, r3, #2
 800526c:	6463      	str	r3, [r4, #68]	@ 0x44
      return  HAL_ERROR;
 800526e:	2001      	movs	r0, #1
}
 8005270:	b007      	add	sp, #28
 8005272:	bdf0      	pop	{r4, r5, r6, r7, pc}
    __HAL_LOCK(hi2c);
 8005274:	0023      	movs	r3, r4
 8005276:	3340      	adds	r3, #64	@ 0x40
 8005278:	781a      	ldrb	r2, [r3, #0]
 800527a:	2002      	movs	r0, #2
 800527c:	2a01      	cmp	r2, #1
 800527e:	d0f7      	beq.n	8005270 <HAL_I2C_Mem_Write+0x34>
 8005280:	2201      	movs	r2, #1
 8005282:	701a      	strb	r2, [r3, #0]
    tickstart = HAL_GetTick();
 8005284:	f7ff fc76 	bl	8004b74 <HAL_GetTick>
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK)
 8005288:	2180      	movs	r1, #128	@ 0x80
    tickstart = HAL_GetTick();
 800528a:	0005      	movs	r5, r0
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK)
 800528c:	9000      	str	r0, [sp, #0]
 800528e:	2319      	movs	r3, #25
 8005290:	2201      	movs	r2, #1
 8005292:	0020      	movs	r0, r4
 8005294:	0209      	lsls	r1, r1, #8
 8005296:	f7ff ff11 	bl	80050bc <I2C_WaitOnFlagUntilTimeout>
 800529a:	2800      	cmp	r0, #0
 800529c:	d1e7      	bne.n	800526e <HAL_I2C_Mem_Write+0x32>
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 800529e:	2321      	movs	r3, #33	@ 0x21
 80052a0:	703b      	strb	r3, [r7, #0]
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 80052a2:	0027      	movs	r7, r4
 80052a4:	331f      	adds	r3, #31
 80052a6:	3742      	adds	r7, #66	@ 0x42
 80052a8:	703b      	strb	r3, [r7, #0]
    hi2c->pBuffPtr  = pData;
 80052aa:	9b04      	ldr	r3, [sp, #16]
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 80052ac:	6460      	str	r0, [r4, #68]	@ 0x44
    hi2c->pBuffPtr  = pData;
 80052ae:	6263      	str	r3, [r4, #36]	@ 0x24
    hi2c->XferCount = Size;
 80052b0:	9b05      	ldr	r3, [sp, #20]
    hi2c->XferISR   = NULL;
 80052b2:	6360      	str	r0, [r4, #52]	@ 0x34
    hi2c->XferCount = Size;
 80052b4:	8563      	strh	r3, [r4, #42]	@ 0x2a
  I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_RELOAD_MODE, I2C_GENERATE_START_WRITE);
 80052b6:	466b      	mov	r3, sp
 80052b8:	7b1a      	ldrb	r2, [r3, #12]
 80052ba:	4b4b      	ldr	r3, [pc, #300]	@ (80053e8 <HAL_I2C_Mem_Write+0x1ac>)
 80052bc:	0031      	movs	r1, r6
 80052be:	9300      	str	r3, [sp, #0]
 80052c0:	2380      	movs	r3, #128	@ 0x80
 80052c2:	0020      	movs	r0, r4
 80052c4:	045b      	lsls	r3, r3, #17
 80052c6:	f7ff fe37 	bl	8004f38 <I2C_TransferConfig>
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80052ca:	002a      	movs	r2, r5
 80052cc:	0020      	movs	r0, r4
 80052ce:	990e      	ldr	r1, [sp, #56]	@ 0x38
 80052d0:	f7ff fec6 	bl	8005060 <I2C_WaitOnTXISFlagUntilTimeout>
 80052d4:	2800      	cmp	r0, #0
 80052d6:	d129      	bne.n	800532c <HAL_I2C_Mem_Write+0xf0>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 80052d8:	9a03      	ldr	r2, [sp, #12]
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 80052da:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 80052dc:	2a01      	cmp	r2, #1
 80052de:	d116      	bne.n	800530e <HAL_I2C_Mem_Write+0xd2>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 80052e0:	466a      	mov	r2, sp
 80052e2:	7a12      	ldrb	r2, [r2, #8]
 80052e4:	629a      	str	r2, [r3, #40]	@ 0x28
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, Tickstart) != HAL_OK)
 80052e6:	2200      	movs	r2, #0
 80052e8:	2180      	movs	r1, #128	@ 0x80
 80052ea:	0020      	movs	r0, r4
 80052ec:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80052ee:	9500      	str	r5, [sp, #0]
 80052f0:	f7ff fee4 	bl	80050bc <I2C_WaitOnFlagUntilTimeout>
 80052f4:	2800      	cmp	r0, #0
 80052f6:	d119      	bne.n	800532c <HAL_I2C_Mem_Write+0xf0>
    if (hi2c->XferCount > MAX_NBYTE_SIZE)
 80052f8:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 80052fa:	2bff      	cmp	r3, #255	@ 0xff
 80052fc:	d81a      	bhi.n	8005334 <HAL_I2C_Mem_Write+0xf8>
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTSTOP);
 80052fe:	2380      	movs	r3, #128	@ 0x80
      hi2c->XferSize = hi2c->XferCount;
 8005300:	8d62      	ldrh	r2, [r4, #42]	@ 0x2a
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTSTOP);
 8005302:	049b      	lsls	r3, r3, #18
      hi2c->XferSize = hi2c->XferCount;
 8005304:	b292      	uxth	r2, r2
 8005306:	8522      	strh	r2, [r4, #40]	@ 0x28
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTSTOP);
 8005308:	b2d2      	uxtb	r2, r2
 800530a:	9000      	str	r0, [sp, #0]
 800530c:	e017      	b.n	800533e <HAL_I2C_Mem_Write+0x102>
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
 800530e:	9a02      	ldr	r2, [sp, #8]
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8005310:	0020      	movs	r0, r4
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
 8005312:	0a12      	lsrs	r2, r2, #8
 8005314:	629a      	str	r2, [r3, #40]	@ 0x28
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8005316:	990e      	ldr	r1, [sp, #56]	@ 0x38
 8005318:	002a      	movs	r2, r5
 800531a:	f7ff fea1 	bl	8005060 <I2C_WaitOnTXISFlagUntilTimeout>
 800531e:	2800      	cmp	r0, #0
 8005320:	d104      	bne.n	800532c <HAL_I2C_Mem_Write+0xf0>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 8005322:	466b      	mov	r3, sp
 8005324:	6822      	ldr	r2, [r4, #0]
 8005326:	7a1b      	ldrb	r3, [r3, #8]
 8005328:	6293      	str	r3, [r2, #40]	@ 0x28
 800532a:	e7dc      	b.n	80052e6 <HAL_I2C_Mem_Write+0xaa>
      __HAL_UNLOCK(hi2c);
 800532c:	2300      	movs	r3, #0
 800532e:	3440      	adds	r4, #64	@ 0x40
 8005330:	7023      	strb	r3, [r4, #0]
      return HAL_ERROR;
 8005332:	e79c      	b.n	800526e <HAL_I2C_Mem_Write+0x32>
      hi2c->XferSize = MAX_NBYTE_SIZE;
 8005334:	22ff      	movs	r2, #255	@ 0xff
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_STARTSTOP);
 8005336:	2380      	movs	r3, #128	@ 0x80
      hi2c->XferSize = MAX_NBYTE_SIZE;
 8005338:	8522      	strh	r2, [r4, #40]	@ 0x28
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_STARTSTOP);
 800533a:	045b      	lsls	r3, r3, #17
 800533c:	9000      	str	r0, [sp, #0]
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTSTOP);
 800533e:	0031      	movs	r1, r6
 8005340:	0020      	movs	r0, r4
 8005342:	f7ff fdf9 	bl	8004f38 <I2C_TransferConfig>
      if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8005346:	002a      	movs	r2, r5
 8005348:	0020      	movs	r0, r4
 800534a:	990e      	ldr	r1, [sp, #56]	@ 0x38
 800534c:	f7ff fe88 	bl	8005060 <I2C_WaitOnTXISFlagUntilTimeout>
 8005350:	2800      	cmp	r0, #0
 8005352:	d000      	beq.n	8005356 <HAL_I2C_Mem_Write+0x11a>
 8005354:	e78b      	b.n	800526e <HAL_I2C_Mem_Write+0x32>
      hi2c->Instance->TXDR = *hi2c->pBuffPtr;
 8005356:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8005358:	6822      	ldr	r2, [r4, #0]
 800535a:	7819      	ldrb	r1, [r3, #0]
      hi2c->pBuffPtr++;
 800535c:	3301      	adds	r3, #1
      hi2c->Instance->TXDR = *hi2c->pBuffPtr;
 800535e:	6291      	str	r1, [r2, #40]	@ 0x28
      hi2c->pBuffPtr++;
 8005360:	6263      	str	r3, [r4, #36]	@ 0x24
      hi2c->XferCount--;
 8005362:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
      hi2c->XferSize--;
 8005364:	8d22      	ldrh	r2, [r4, #40]	@ 0x28
      hi2c->XferCount--;
 8005366:	3b01      	subs	r3, #1
 8005368:	b29b      	uxth	r3, r3
 800536a:	8563      	strh	r3, [r4, #42]	@ 0x2a
      hi2c->XferSize--;
 800536c:	3a01      	subs	r2, #1
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
 800536e:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
      hi2c->XferSize--;
 8005370:	b292      	uxth	r2, r2
 8005372:	8522      	strh	r2, [r4, #40]	@ 0x28
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
 8005374:	2b00      	cmp	r3, #0
 8005376:	d016      	beq.n	80053a6 <HAL_I2C_Mem_Write+0x16a>
 8005378:	2a00      	cmp	r2, #0
 800537a:	d114      	bne.n	80053a6 <HAL_I2C_Mem_Write+0x16a>
        if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
 800537c:	2180      	movs	r1, #128	@ 0x80
 800537e:	0020      	movs	r0, r4
 8005380:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8005382:	9500      	str	r5, [sp, #0]
 8005384:	f7ff fe9a 	bl	80050bc <I2C_WaitOnFlagUntilTimeout>
 8005388:	2800      	cmp	r0, #0
 800538a:	d000      	beq.n	800538e <HAL_I2C_Mem_Write+0x152>
 800538c:	e76f      	b.n	800526e <HAL_I2C_Mem_Write+0x32>
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
 800538e:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8005390:	2bff      	cmp	r3, #255	@ 0xff
 8005392:	d921      	bls.n	80053d8 <HAL_I2C_Mem_Write+0x19c>
          hi2c->XferSize = MAX_NBYTE_SIZE;
 8005394:	22ff      	movs	r2, #255	@ 0xff
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE,
 8005396:	2380      	movs	r3, #128	@ 0x80
          hi2c->XferSize = MAX_NBYTE_SIZE;
 8005398:	8522      	strh	r2, [r4, #40]	@ 0x28
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE,
 800539a:	045b      	lsls	r3, r3, #17
 800539c:	9000      	str	r0, [sp, #0]
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 800539e:	0031      	movs	r1, r6
 80053a0:	0020      	movs	r0, r4
 80053a2:	f7ff fdc9 	bl	8004f38 <I2C_TransferConfig>
    } while (hi2c->XferCount > 0U);
 80053a6:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 80053a8:	2b00      	cmp	r3, #0
 80053aa:	d1cc      	bne.n	8005346 <HAL_I2C_Mem_Write+0x10a>
    if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 80053ac:	002a      	movs	r2, r5
 80053ae:	0020      	movs	r0, r4
 80053b0:	990e      	ldr	r1, [sp, #56]	@ 0x38
 80053b2:	f7ff feba 	bl	800512a <I2C_WaitOnSTOPFlagUntilTimeout>
 80053b6:	2800      	cmp	r0, #0
 80053b8:	d000      	beq.n	80053bc <HAL_I2C_Mem_Write+0x180>
 80053ba:	e758      	b.n	800526e <HAL_I2C_Mem_Write+0x32>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 80053bc:	2120      	movs	r1, #32
 80053be:	6823      	ldr	r3, [r4, #0]
    I2C_RESET_CR2(hi2c);
 80053c0:	4d0a      	ldr	r5, [pc, #40]	@ (80053ec <HAL_I2C_Mem_Write+0x1b0>)
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 80053c2:	61d9      	str	r1, [r3, #28]
    I2C_RESET_CR2(hi2c);
 80053c4:	685a      	ldr	r2, [r3, #4]
 80053c6:	402a      	ands	r2, r5
 80053c8:	605a      	str	r2, [r3, #4]
    hi2c->State = HAL_I2C_STATE_READY;
 80053ca:	0023      	movs	r3, r4
    __HAL_UNLOCK(hi2c);
 80053cc:	3440      	adds	r4, #64	@ 0x40
    hi2c->State = HAL_I2C_STATE_READY;
 80053ce:	3341      	adds	r3, #65	@ 0x41
 80053d0:	7019      	strb	r1, [r3, #0]
    hi2c->Mode  = HAL_I2C_MODE_NONE;
 80053d2:	7038      	strb	r0, [r7, #0]
    __HAL_UNLOCK(hi2c);
 80053d4:	7020      	strb	r0, [r4, #0]
    return HAL_OK;
 80053d6:	e74b      	b.n	8005270 <HAL_I2C_Mem_Write+0x34>
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 80053d8:	2380      	movs	r3, #128	@ 0x80
          hi2c->XferSize = hi2c->XferCount;
 80053da:	8d62      	ldrh	r2, [r4, #42]	@ 0x2a
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 80053dc:	049b      	lsls	r3, r3, #18
          hi2c->XferSize = hi2c->XferCount;
 80053de:	b292      	uxth	r2, r2
 80053e0:	8522      	strh	r2, [r4, #40]	@ 0x28
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 80053e2:	b2d2      	uxtb	r2, r2
 80053e4:	9000      	str	r0, [sp, #0]
 80053e6:	e7da      	b.n	800539e <HAL_I2C_Mem_Write+0x162>
 80053e8:	80002000 	.word	0x80002000
 80053ec:	fe00e800 	.word	0xfe00e800

080053f0 <HAL_I2CEx_ConfigAnalogFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  AnalogFilter New state of the Analog filter.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigAnalogFilter(I2C_HandleTypeDef *hi2c, uint32_t AnalogFilter)
{
 80053f0:	b5f0      	push	{r4, r5, r6, r7, lr}
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 80053f2:	0004      	movs	r4, r0
 80053f4:	3441      	adds	r4, #65	@ 0x41
 80053f6:	7822      	ldrb	r2, [r4, #0]
{
 80053f8:	0003      	movs	r3, r0
 80053fa:	000f      	movs	r7, r1
  {
    /* Process Locked */
    __HAL_LOCK(hi2c);
 80053fc:	2002      	movs	r0, #2
  if (hi2c->State == HAL_I2C_STATE_READY)
 80053fe:	b2d6      	uxtb	r6, r2
 8005400:	2a20      	cmp	r2, #32
 8005402:	d118      	bne.n	8005436 <HAL_I2CEx_ConfigAnalogFilter+0x46>
    __HAL_LOCK(hi2c);
 8005404:	001d      	movs	r5, r3
 8005406:	3540      	adds	r5, #64	@ 0x40
 8005408:	782a      	ldrb	r2, [r5, #0]
 800540a:	2a01      	cmp	r2, #1
 800540c:	d013      	beq.n	8005436 <HAL_I2CEx_ConfigAnalogFilter+0x46>

    hi2c->State = HAL_I2C_STATE_BUSY;
 800540e:	2224      	movs	r2, #36	@ 0x24
 8005410:	7022      	strb	r2, [r4, #0]

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 8005412:	681b      	ldr	r3, [r3, #0]
 8005414:	3a23      	subs	r2, #35	@ 0x23
 8005416:	6819      	ldr	r1, [r3, #0]

    /* Reset I2Cx ANOFF bit */
    hi2c->Instance->CR1 &= ~(I2C_CR1_ANFOFF);
 8005418:	4807      	ldr	r0, [pc, #28]	@ (8005438 <HAL_I2CEx_ConfigAnalogFilter+0x48>)
    __HAL_I2C_DISABLE(hi2c);
 800541a:	4391      	bics	r1, r2
 800541c:	6019      	str	r1, [r3, #0]
    hi2c->Instance->CR1 &= ~(I2C_CR1_ANFOFF);
 800541e:	6819      	ldr	r1, [r3, #0]
 8005420:	4001      	ands	r1, r0
    __HAL_I2C_ENABLE(hi2c);

    hi2c->State = HAL_I2C_STATE_READY;

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 8005422:	2000      	movs	r0, #0
    hi2c->Instance->CR1 &= ~(I2C_CR1_ANFOFF);
 8005424:	6019      	str	r1, [r3, #0]
    hi2c->Instance->CR1 |= AnalogFilter;
 8005426:	6819      	ldr	r1, [r3, #0]
 8005428:	4339      	orrs	r1, r7
 800542a:	6019      	str	r1, [r3, #0]
    __HAL_I2C_ENABLE(hi2c);
 800542c:	6819      	ldr	r1, [r3, #0]
 800542e:	430a      	orrs	r2, r1
 8005430:	601a      	str	r2, [r3, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 8005432:	7026      	strb	r6, [r4, #0]
    __HAL_UNLOCK(hi2c);
 8005434:	7028      	strb	r0, [r5, #0]
  }
  else
  {
    return HAL_BUSY;
  }
}
 8005436:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8005438:	ffffefff 	.word	0xffffefff

0800543c <HAL_I2CEx_ConfigDigitalFilter>:

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 800543c:	0002      	movs	r2, r0
{
 800543e:	b5f0      	push	{r4, r5, r6, r7, lr}
  if (hi2c->State == HAL_I2C_STATE_READY)
 8005440:	3241      	adds	r2, #65	@ 0x41
 8005442:	7814      	ldrb	r4, [r2, #0]
{
 8005444:	0003      	movs	r3, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 8005446:	b2e5      	uxtb	r5, r4
  {
    /* Process Locked */
    __HAL_LOCK(hi2c);
 8005448:	2002      	movs	r0, #2
  if (hi2c->State == HAL_I2C_STATE_READY)
 800544a:	2c20      	cmp	r4, #32
 800544c:	d117      	bne.n	800547e <HAL_I2CEx_ConfigDigitalFilter+0x42>
    __HAL_LOCK(hi2c);
 800544e:	001c      	movs	r4, r3
 8005450:	3440      	adds	r4, #64	@ 0x40
 8005452:	7826      	ldrb	r6, [r4, #0]
 8005454:	2e01      	cmp	r6, #1
 8005456:	d012      	beq.n	800547e <HAL_I2CEx_ConfigDigitalFilter+0x42>

    hi2c->State = HAL_I2C_STATE_BUSY;
 8005458:	3022      	adds	r0, #34	@ 0x22
 800545a:	7010      	strb	r0, [r2, #0]

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 800545c:	681b      	ldr	r3, [r3, #0]
 800545e:	3823      	subs	r0, #35	@ 0x23
 8005460:	681e      	ldr	r6, [r3, #0]

    /* Get the old register value */
    tmpreg = hi2c->Instance->CR1;

    /* Reset I2Cx DNF bits [11:8] */
    tmpreg &= ~(I2C_CR1_DNF);
 8005462:	4f07      	ldr	r7, [pc, #28]	@ (8005480 <HAL_I2CEx_ConfigDigitalFilter+0x44>)
    __HAL_I2C_DISABLE(hi2c);
 8005464:	4386      	bics	r6, r0
 8005466:	601e      	str	r6, [r3, #0]
    tmpreg = hi2c->Instance->CR1;
 8005468:	681e      	ldr	r6, [r3, #0]

    /* Set I2Cx DNF coefficient */
    tmpreg |= DigitalFilter << 8U;
 800546a:	0209      	lsls	r1, r1, #8
    tmpreg &= ~(I2C_CR1_DNF);
 800546c:	403e      	ands	r6, r7
    tmpreg |= DigitalFilter << 8U;
 800546e:	4331      	orrs	r1, r6

    /* Store the new register value */
    hi2c->Instance->CR1 = tmpreg;
 8005470:	6019      	str	r1, [r3, #0]

    __HAL_I2C_ENABLE(hi2c);
 8005472:	6819      	ldr	r1, [r3, #0]
 8005474:	4308      	orrs	r0, r1
 8005476:	6018      	str	r0, [r3, #0]

    hi2c->State = HAL_I2C_STATE_READY;

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 8005478:	2000      	movs	r0, #0
    hi2c->State = HAL_I2C_STATE_READY;
 800547a:	7015      	strb	r5, [r2, #0]
    __HAL_UNLOCK(hi2c);
 800547c:	7020      	strb	r0, [r4, #0]
  }
  else
  {
    return HAL_BUSY;
  }
}
 800547e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8005480:	fffff0ff 	.word	0xfffff0ff

08005484 <HAL_RCC_OscConfig>:
  *         supported by this macro. User should request a transition to HSE Off
  *         first and then HSE On or HSE Bypass.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 8005484:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005486:	0004      	movs	r4, r0
 8005488:	b085      	sub	sp, #20
  uint32_t tickstart;
  uint32_t pll_config;
  uint32_t pll_config2;

  /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 800548a:	2800      	cmp	r0, #0
 800548c:	d045      	beq.n	800551a <HAL_RCC_OscConfig+0x96>

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));

  /*------------------------------- HSE Configuration ------------------------*/ 
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 800548e:	6803      	ldr	r3, [r0, #0]
 8005490:	07db      	lsls	r3, r3, #31
 8005492:	d42f      	bmi.n	80054f4 <HAL_RCC_OscConfig+0x70>
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/ 
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 8005494:	6823      	ldr	r3, [r4, #0]
 8005496:	079b      	lsls	r3, r3, #30
 8005498:	d500      	bpl.n	800549c <HAL_RCC_OscConfig+0x18>
 800549a:	e081      	b.n	80055a0 <HAL_RCC_OscConfig+0x11c>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/ 
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 800549c:	6823      	ldr	r3, [r4, #0]
 800549e:	071b      	lsls	r3, r3, #28
 80054a0:	d500      	bpl.n	80054a4 <HAL_RCC_OscConfig+0x20>
 80054a2:	e0bc      	b.n	800561e <HAL_RCC_OscConfig+0x19a>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/ 
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 80054a4:	6823      	ldr	r3, [r4, #0]
 80054a6:	075b      	lsls	r3, r3, #29
 80054a8:	d500      	bpl.n	80054ac <HAL_RCC_OscConfig+0x28>
 80054aa:	e0df      	b.n	800566c <HAL_RCC_OscConfig+0x1e8>
      __HAL_RCC_PWR_CLK_DISABLE();
    }
  }

  /*----------------------------- HSI14 Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI14) == RCC_OSCILLATORTYPE_HSI14)
 80054ac:	6823      	ldr	r3, [r4, #0]
 80054ae:	06db      	lsls	r3, r3, #27
 80054b0:	d51a      	bpl.n	80054e8 <HAL_RCC_OscConfig+0x64>
    /* Check the parameters */
    assert_param(IS_RCC_HSI14(RCC_OscInitStruct->HSI14State));
    assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSI14CalibrationValue));

    /* Check the HSI14 State */
    if(RCC_OscInitStruct->HSI14State == RCC_HSI14_ON)
 80054b2:	6962      	ldr	r2, [r4, #20]
 80054b4:	2304      	movs	r3, #4
 80054b6:	4db4      	ldr	r5, [pc, #720]	@ (8005788 <HAL_RCC_OscConfig+0x304>)
 80054b8:	2a01      	cmp	r2, #1
 80054ba:	d000      	beq.n	80054be <HAL_RCC_OscConfig+0x3a>
 80054bc:	e148      	b.n	8005750 <HAL_RCC_OscConfig+0x2cc>
    {
      /* Disable ADC control of the Internal High Speed oscillator HSI14 */
      __HAL_RCC_HSI14ADC_DISABLE();
 80054be:	6b69      	ldr	r1, [r5, #52]	@ 0x34

      /* Get Start Tick */
      tickstart = HAL_GetTick();
      
      /* Wait till HSI is ready */  
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI14RDY) == RESET)
 80054c0:	2702      	movs	r7, #2
      __HAL_RCC_HSI14ADC_DISABLE();
 80054c2:	430b      	orrs	r3, r1
 80054c4:	636b      	str	r3, [r5, #52]	@ 0x34
      __HAL_RCC_HSI14_ENABLE();
 80054c6:	6b6b      	ldr	r3, [r5, #52]	@ 0x34
 80054c8:	431a      	orrs	r2, r3
 80054ca:	636a      	str	r2, [r5, #52]	@ 0x34
      tickstart = HAL_GetTick();
 80054cc:	f7ff fb52 	bl	8004b74 <HAL_GetTick>
 80054d0:	0006      	movs	r6, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI14RDY) == RESET)
 80054d2:	6b6b      	ldr	r3, [r5, #52]	@ 0x34
 80054d4:	423b      	tst	r3, r7
 80054d6:	d100      	bne.n	80054da <HAL_RCC_OscConfig+0x56>
 80054d8:	e133      	b.n	8005742 <HAL_RCC_OscConfig+0x2be>
    {
      /* Enable ADC control of the Internal High Speed oscillator HSI14 */
      __HAL_RCC_HSI14ADC_ENABLE();

      /* Adjusts the Internal High Speed oscillator 14Mhz (HSI14) calibration value. */
      __HAL_RCC_HSI14_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSI14CalibrationValue);
 80054da:	21f8      	movs	r1, #248	@ 0xf8
 80054dc:	6b6a      	ldr	r2, [r5, #52]	@ 0x34
 80054de:	69a3      	ldr	r3, [r4, #24]
 80054e0:	438a      	bics	r2, r1
 80054e2:	00db      	lsls	r3, r3, #3
 80054e4:	4313      	orrs	r3, r2
 80054e6:	636b      	str	r3, [r5, #52]	@ 0x34
#endif /* RCC_HSI48_SUPPORT */
       
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 80054e8:	6a23      	ldr	r3, [r4, #32]
 80054ea:	2b00      	cmp	r3, #0
 80054ec:	d000      	beq.n	80054f0 <HAL_RCC_OscConfig+0x6c>
 80054ee:	e157      	b.n	80057a0 <HAL_RCC_OscConfig+0x31c>
        }
      }
    }
  }

  return HAL_OK;
 80054f0:	2000      	movs	r0, #0
 80054f2:	e02a      	b.n	800554a <HAL_RCC_OscConfig+0xc6>
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSE) 
 80054f4:	220c      	movs	r2, #12
 80054f6:	4da4      	ldr	r5, [pc, #656]	@ (8005788 <HAL_RCC_OscConfig+0x304>)
 80054f8:	686b      	ldr	r3, [r5, #4]
 80054fa:	4013      	ands	r3, r2
 80054fc:	2b04      	cmp	r3, #4
 80054fe:	d006      	beq.n	800550e <HAL_RCC_OscConfig+0x8a>
       || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_HSE)))
 8005500:	686b      	ldr	r3, [r5, #4]
 8005502:	4013      	ands	r3, r2
 8005504:	2b08      	cmp	r3, #8
 8005506:	d10a      	bne.n	800551e <HAL_RCC_OscConfig+0x9a>
 8005508:	686b      	ldr	r3, [r5, #4]
 800550a:	03db      	lsls	r3, r3, #15
 800550c:	d507      	bpl.n	800551e <HAL_RCC_OscConfig+0x9a>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 800550e:	682b      	ldr	r3, [r5, #0]
 8005510:	039b      	lsls	r3, r3, #14
 8005512:	d5bf      	bpl.n	8005494 <HAL_RCC_OscConfig+0x10>
 8005514:	6863      	ldr	r3, [r4, #4]
 8005516:	2b00      	cmp	r3, #0
 8005518:	d1bc      	bne.n	8005494 <HAL_RCC_OscConfig+0x10>
    return HAL_ERROR;
 800551a:	2001      	movs	r0, #1
 800551c:	e015      	b.n	800554a <HAL_RCC_OscConfig+0xc6>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800551e:	6863      	ldr	r3, [r4, #4]
 8005520:	2b01      	cmp	r3, #1
 8005522:	d114      	bne.n	800554e <HAL_RCC_OscConfig+0xca>
 8005524:	2380      	movs	r3, #128	@ 0x80
 8005526:	682a      	ldr	r2, [r5, #0]
 8005528:	025b      	lsls	r3, r3, #9
 800552a:	4313      	orrs	r3, r2
 800552c:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 800552e:	f7ff fb21 	bl	8004b74 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8005532:	2780      	movs	r7, #128	@ 0x80
        tickstart = HAL_GetTick();
 8005534:	0006      	movs	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8005536:	02bf      	lsls	r7, r7, #10
 8005538:	682b      	ldr	r3, [r5, #0]
 800553a:	423b      	tst	r3, r7
 800553c:	d1aa      	bne.n	8005494 <HAL_RCC_OscConfig+0x10>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 800553e:	f7ff fb19 	bl	8004b74 <HAL_GetTick>
 8005542:	1b80      	subs	r0, r0, r6
 8005544:	2864      	cmp	r0, #100	@ 0x64
 8005546:	d9f7      	bls.n	8005538 <HAL_RCC_OscConfig+0xb4>
            return HAL_TIMEOUT;
 8005548:	2003      	movs	r0, #3
}
 800554a:	b005      	add	sp, #20
 800554c:	bdf0      	pop	{r4, r5, r6, r7, pc}
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800554e:	2b00      	cmp	r3, #0
 8005550:	d116      	bne.n	8005580 <HAL_RCC_OscConfig+0xfc>
 8005552:	682b      	ldr	r3, [r5, #0]
 8005554:	4a8d      	ldr	r2, [pc, #564]	@ (800578c <HAL_RCC_OscConfig+0x308>)
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 8005556:	2780      	movs	r7, #128	@ 0x80
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8005558:	4013      	ands	r3, r2
 800555a:	602b      	str	r3, [r5, #0]
 800555c:	682b      	ldr	r3, [r5, #0]
 800555e:	4a8c      	ldr	r2, [pc, #560]	@ (8005790 <HAL_RCC_OscConfig+0x30c>)
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 8005560:	02bf      	lsls	r7, r7, #10
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8005562:	4013      	ands	r3, r2
 8005564:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 8005566:	f7ff fb05 	bl	8004b74 <HAL_GetTick>
 800556a:	0006      	movs	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 800556c:	682b      	ldr	r3, [r5, #0]
 800556e:	423b      	tst	r3, r7
 8005570:	d100      	bne.n	8005574 <HAL_RCC_OscConfig+0xf0>
 8005572:	e78f      	b.n	8005494 <HAL_RCC_OscConfig+0x10>
           if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 8005574:	f7ff fafe 	bl	8004b74 <HAL_GetTick>
 8005578:	1b80      	subs	r0, r0, r6
 800557a:	2864      	cmp	r0, #100	@ 0x64
 800557c:	d9f6      	bls.n	800556c <HAL_RCC_OscConfig+0xe8>
 800557e:	e7e3      	b.n	8005548 <HAL_RCC_OscConfig+0xc4>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8005580:	2b05      	cmp	r3, #5
 8005582:	d105      	bne.n	8005590 <HAL_RCC_OscConfig+0x10c>
 8005584:	2380      	movs	r3, #128	@ 0x80
 8005586:	682a      	ldr	r2, [r5, #0]
 8005588:	02db      	lsls	r3, r3, #11
 800558a:	4313      	orrs	r3, r2
 800558c:	602b      	str	r3, [r5, #0]
 800558e:	e7c9      	b.n	8005524 <HAL_RCC_OscConfig+0xa0>
 8005590:	682b      	ldr	r3, [r5, #0]
 8005592:	4a7e      	ldr	r2, [pc, #504]	@ (800578c <HAL_RCC_OscConfig+0x308>)
 8005594:	4013      	ands	r3, r2
 8005596:	602b      	str	r3, [r5, #0]
 8005598:	682b      	ldr	r3, [r5, #0]
 800559a:	4a7d      	ldr	r2, [pc, #500]	@ (8005790 <HAL_RCC_OscConfig+0x30c>)
 800559c:	4013      	ands	r3, r2
 800559e:	e7c5      	b.n	800552c <HAL_RCC_OscConfig+0xa8>
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSI) 
 80055a0:	220c      	movs	r2, #12
 80055a2:	4d79      	ldr	r5, [pc, #484]	@ (8005788 <HAL_RCC_OscConfig+0x304>)
 80055a4:	686b      	ldr	r3, [r5, #4]
 80055a6:	4213      	tst	r3, r2
 80055a8:	d006      	beq.n	80055b8 <HAL_RCC_OscConfig+0x134>
       || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_HSI)))
 80055aa:	686b      	ldr	r3, [r5, #4]
 80055ac:	4013      	ands	r3, r2
 80055ae:	2b08      	cmp	r3, #8
 80055b0:	d110      	bne.n	80055d4 <HAL_RCC_OscConfig+0x150>
 80055b2:	686b      	ldr	r3, [r5, #4]
 80055b4:	03db      	lsls	r3, r3, #15
 80055b6:	d40d      	bmi.n	80055d4 <HAL_RCC_OscConfig+0x150>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 80055b8:	682b      	ldr	r3, [r5, #0]
 80055ba:	079b      	lsls	r3, r3, #30
 80055bc:	d502      	bpl.n	80055c4 <HAL_RCC_OscConfig+0x140>
 80055be:	68e3      	ldr	r3, [r4, #12]
 80055c0:	2b01      	cmp	r3, #1
 80055c2:	d1aa      	bne.n	800551a <HAL_RCC_OscConfig+0x96>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 80055c4:	21f8      	movs	r1, #248	@ 0xf8
 80055c6:	682a      	ldr	r2, [r5, #0]
 80055c8:	6923      	ldr	r3, [r4, #16]
 80055ca:	438a      	bics	r2, r1
 80055cc:	00db      	lsls	r3, r3, #3
 80055ce:	4313      	orrs	r3, r2
 80055d0:	602b      	str	r3, [r5, #0]
 80055d2:	e763      	b.n	800549c <HAL_RCC_OscConfig+0x18>
      if(RCC_OscInitStruct->HSIState != RCC_HSI_OFF)
 80055d4:	68e2      	ldr	r2, [r4, #12]
 80055d6:	2301      	movs	r3, #1
 80055d8:	2a00      	cmp	r2, #0
 80055da:	d00f      	beq.n	80055fc <HAL_RCC_OscConfig+0x178>
        __HAL_RCC_HSI_ENABLE();
 80055dc:	682a      	ldr	r2, [r5, #0]
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 80055de:	2702      	movs	r7, #2
        __HAL_RCC_HSI_ENABLE();
 80055e0:	4313      	orrs	r3, r2
 80055e2:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 80055e4:	f7ff fac6 	bl	8004b74 <HAL_GetTick>
 80055e8:	0006      	movs	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 80055ea:	682b      	ldr	r3, [r5, #0]
 80055ec:	423b      	tst	r3, r7
 80055ee:	d1e9      	bne.n	80055c4 <HAL_RCC_OscConfig+0x140>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 80055f0:	f7ff fac0 	bl	8004b74 <HAL_GetTick>
 80055f4:	1b80      	subs	r0, r0, r6
 80055f6:	2802      	cmp	r0, #2
 80055f8:	d9f7      	bls.n	80055ea <HAL_RCC_OscConfig+0x166>
 80055fa:	e7a5      	b.n	8005548 <HAL_RCC_OscConfig+0xc4>
        __HAL_RCC_HSI_DISABLE();
 80055fc:	682a      	ldr	r2, [r5, #0]
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 80055fe:	2702      	movs	r7, #2
        __HAL_RCC_HSI_DISABLE();
 8005600:	439a      	bics	r2, r3
 8005602:	602a      	str	r2, [r5, #0]
        tickstart = HAL_GetTick();
 8005604:	f7ff fab6 	bl	8004b74 <HAL_GetTick>
 8005608:	0006      	movs	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800560a:	682b      	ldr	r3, [r5, #0]
 800560c:	423b      	tst	r3, r7
 800560e:	d100      	bne.n	8005612 <HAL_RCC_OscConfig+0x18e>
 8005610:	e744      	b.n	800549c <HAL_RCC_OscConfig+0x18>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8005612:	f7ff faaf 	bl	8004b74 <HAL_GetTick>
 8005616:	1b80      	subs	r0, r0, r6
 8005618:	2802      	cmp	r0, #2
 800561a:	d9f6      	bls.n	800560a <HAL_RCC_OscConfig+0x186>
 800561c:	e794      	b.n	8005548 <HAL_RCC_OscConfig+0xc4>
    if(RCC_OscInitStruct->LSIState != RCC_LSI_OFF)
 800561e:	69e2      	ldr	r2, [r4, #28]
 8005620:	2301      	movs	r3, #1
 8005622:	4d59      	ldr	r5, [pc, #356]	@ (8005788 <HAL_RCC_OscConfig+0x304>)
 8005624:	2a00      	cmp	r2, #0
 8005626:	d010      	beq.n	800564a <HAL_RCC_OscConfig+0x1c6>
      __HAL_RCC_LSI_ENABLE();
 8005628:	6a6a      	ldr	r2, [r5, #36]	@ 0x24
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800562a:	2702      	movs	r7, #2
      __HAL_RCC_LSI_ENABLE();
 800562c:	4313      	orrs	r3, r2
 800562e:	626b      	str	r3, [r5, #36]	@ 0x24
      tickstart = HAL_GetTick();
 8005630:	f7ff faa0 	bl	8004b74 <HAL_GetTick>
 8005634:	0006      	movs	r6, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8005636:	6a6b      	ldr	r3, [r5, #36]	@ 0x24
 8005638:	423b      	tst	r3, r7
 800563a:	d000      	beq.n	800563e <HAL_RCC_OscConfig+0x1ba>
 800563c:	e732      	b.n	80054a4 <HAL_RCC_OscConfig+0x20>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 800563e:	f7ff fa99 	bl	8004b74 <HAL_GetTick>
 8005642:	1b80      	subs	r0, r0, r6
 8005644:	2802      	cmp	r0, #2
 8005646:	d9f6      	bls.n	8005636 <HAL_RCC_OscConfig+0x1b2>
 8005648:	e77e      	b.n	8005548 <HAL_RCC_OscConfig+0xc4>
      __HAL_RCC_LSI_DISABLE();
 800564a:	6a6a      	ldr	r2, [r5, #36]	@ 0x24
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800564c:	2702      	movs	r7, #2
      __HAL_RCC_LSI_DISABLE();
 800564e:	439a      	bics	r2, r3
 8005650:	626a      	str	r2, [r5, #36]	@ 0x24
      tickstart = HAL_GetTick();
 8005652:	f7ff fa8f 	bl	8004b74 <HAL_GetTick>
 8005656:	0006      	movs	r6, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8005658:	6a6b      	ldr	r3, [r5, #36]	@ 0x24
 800565a:	423b      	tst	r3, r7
 800565c:	d100      	bne.n	8005660 <HAL_RCC_OscConfig+0x1dc>
 800565e:	e721      	b.n	80054a4 <HAL_RCC_OscConfig+0x20>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 8005660:	f7ff fa88 	bl	8004b74 <HAL_GetTick>
 8005664:	1b80      	subs	r0, r0, r6
 8005666:	2802      	cmp	r0, #2
 8005668:	d9f6      	bls.n	8005658 <HAL_RCC_OscConfig+0x1d4>
 800566a:	e76d      	b.n	8005548 <HAL_RCC_OscConfig+0xc4>
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 800566c:	2280      	movs	r2, #128	@ 0x80
    FlagStatus       pwrclkchanged = RESET;
 800566e:	2100      	movs	r1, #0
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 8005670:	4d45      	ldr	r5, [pc, #276]	@ (8005788 <HAL_RCC_OscConfig+0x304>)
 8005672:	0552      	lsls	r2, r2, #21
 8005674:	69eb      	ldr	r3, [r5, #28]
    FlagStatus       pwrclkchanged = RESET;
 8005676:	9100      	str	r1, [sp, #0]
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 8005678:	4213      	tst	r3, r2
 800567a:	d108      	bne.n	800568e <HAL_RCC_OscConfig+0x20a>
      __HAL_RCC_PWR_CLK_ENABLE();
 800567c:	69eb      	ldr	r3, [r5, #28]
 800567e:	4313      	orrs	r3, r2
 8005680:	61eb      	str	r3, [r5, #28]
 8005682:	69eb      	ldr	r3, [r5, #28]
 8005684:	4013      	ands	r3, r2
 8005686:	9303      	str	r3, [sp, #12]
 8005688:	9b03      	ldr	r3, [sp, #12]
      pwrclkchanged = SET;
 800568a:	2301      	movs	r3, #1
 800568c:	9300      	str	r3, [sp, #0]
    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800568e:	2780      	movs	r7, #128	@ 0x80
 8005690:	4e40      	ldr	r6, [pc, #256]	@ (8005794 <HAL_RCC_OscConfig+0x310>)
 8005692:	007f      	lsls	r7, r7, #1
 8005694:	6833      	ldr	r3, [r6, #0]
 8005696:	423b      	tst	r3, r7
 8005698:	d015      	beq.n	80056c6 <HAL_RCC_OscConfig+0x242>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800569a:	68a3      	ldr	r3, [r4, #8]
 800569c:	2b01      	cmp	r3, #1
 800569e:	d122      	bne.n	80056e6 <HAL_RCC_OscConfig+0x262>
 80056a0:	6a2a      	ldr	r2, [r5, #32]
 80056a2:	4313      	orrs	r3, r2
 80056a4:	622b      	str	r3, [r5, #32]
      tickstart = HAL_GetTick();
 80056a6:	f7ff fa65 	bl	8004b74 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 80056aa:	2702      	movs	r7, #2
      tickstart = HAL_GetTick();
 80056ac:	0006      	movs	r6, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 80056ae:	6a2b      	ldr	r3, [r5, #32]
 80056b0:	423b      	tst	r3, r7
 80056b2:	d03f      	beq.n	8005734 <HAL_RCC_OscConfig+0x2b0>
    if(pwrclkchanged == SET)
 80056b4:	9b00      	ldr	r3, [sp, #0]
 80056b6:	2b01      	cmp	r3, #1
 80056b8:	d000      	beq.n	80056bc <HAL_RCC_OscConfig+0x238>
 80056ba:	e6f7      	b.n	80054ac <HAL_RCC_OscConfig+0x28>
      __HAL_RCC_PWR_CLK_DISABLE();
 80056bc:	69eb      	ldr	r3, [r5, #28]
 80056be:	4a36      	ldr	r2, [pc, #216]	@ (8005798 <HAL_RCC_OscConfig+0x314>)
 80056c0:	4013      	ands	r3, r2
 80056c2:	61eb      	str	r3, [r5, #28]
 80056c4:	e6f2      	b.n	80054ac <HAL_RCC_OscConfig+0x28>
      SET_BIT(PWR->CR, PWR_CR_DBP);
 80056c6:	6833      	ldr	r3, [r6, #0]
 80056c8:	433b      	orrs	r3, r7
 80056ca:	6033      	str	r3, [r6, #0]
      tickstart = HAL_GetTick();
 80056cc:	f7ff fa52 	bl	8004b74 <HAL_GetTick>
 80056d0:	9001      	str	r0, [sp, #4]
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 80056d2:	6833      	ldr	r3, [r6, #0]
 80056d4:	423b      	tst	r3, r7
 80056d6:	d1e0      	bne.n	800569a <HAL_RCC_OscConfig+0x216>
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 80056d8:	f7ff fa4c 	bl	8004b74 <HAL_GetTick>
 80056dc:	9b01      	ldr	r3, [sp, #4]
 80056de:	1ac0      	subs	r0, r0, r3
 80056e0:	2864      	cmp	r0, #100	@ 0x64
 80056e2:	d9f6      	bls.n	80056d2 <HAL_RCC_OscConfig+0x24e>
 80056e4:	e730      	b.n	8005548 <HAL_RCC_OscConfig+0xc4>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 80056e6:	2201      	movs	r2, #1
 80056e8:	2b00      	cmp	r3, #0
 80056ea:	d114      	bne.n	8005716 <HAL_RCC_OscConfig+0x292>
 80056ec:	6a2b      	ldr	r3, [r5, #32]
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 80056ee:	2702      	movs	r7, #2
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 80056f0:	4393      	bics	r3, r2
 80056f2:	622b      	str	r3, [r5, #32]
 80056f4:	6a2b      	ldr	r3, [r5, #32]
 80056f6:	3203      	adds	r2, #3
 80056f8:	4393      	bics	r3, r2
 80056fa:	622b      	str	r3, [r5, #32]
      tickstart = HAL_GetTick();
 80056fc:	f7ff fa3a 	bl	8004b74 <HAL_GetTick>
 8005700:	0006      	movs	r6, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8005702:	6a2b      	ldr	r3, [r5, #32]
 8005704:	423b      	tst	r3, r7
 8005706:	d0d5      	beq.n	80056b4 <HAL_RCC_OscConfig+0x230>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8005708:	f7ff fa34 	bl	8004b74 <HAL_GetTick>
 800570c:	4b23      	ldr	r3, [pc, #140]	@ (800579c <HAL_RCC_OscConfig+0x318>)
 800570e:	1b80      	subs	r0, r0, r6
 8005710:	4298      	cmp	r0, r3
 8005712:	d9f6      	bls.n	8005702 <HAL_RCC_OscConfig+0x27e>
 8005714:	e718      	b.n	8005548 <HAL_RCC_OscConfig+0xc4>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8005716:	2b05      	cmp	r3, #5
 8005718:	d105      	bne.n	8005726 <HAL_RCC_OscConfig+0x2a2>
 800571a:	6a29      	ldr	r1, [r5, #32]
 800571c:	3b01      	subs	r3, #1
 800571e:	430b      	orrs	r3, r1
 8005720:	622b      	str	r3, [r5, #32]
 8005722:	6a2b      	ldr	r3, [r5, #32]
 8005724:	e7bd      	b.n	80056a2 <HAL_RCC_OscConfig+0x21e>
 8005726:	6a2b      	ldr	r3, [r5, #32]
 8005728:	4393      	bics	r3, r2
 800572a:	2204      	movs	r2, #4
 800572c:	622b      	str	r3, [r5, #32]
 800572e:	6a2b      	ldr	r3, [r5, #32]
 8005730:	4393      	bics	r3, r2
 8005732:	e7b7      	b.n	80056a4 <HAL_RCC_OscConfig+0x220>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8005734:	f7ff fa1e 	bl	8004b74 <HAL_GetTick>
 8005738:	4b18      	ldr	r3, [pc, #96]	@ (800579c <HAL_RCC_OscConfig+0x318>)
 800573a:	1b80      	subs	r0, r0, r6
 800573c:	4298      	cmp	r0, r3
 800573e:	d9b6      	bls.n	80056ae <HAL_RCC_OscConfig+0x22a>
 8005740:	e702      	b.n	8005548 <HAL_RCC_OscConfig+0xc4>
        if((HAL_GetTick() - tickstart) > HSI14_TIMEOUT_VALUE)
 8005742:	f7ff fa17 	bl	8004b74 <HAL_GetTick>
 8005746:	1b80      	subs	r0, r0, r6
 8005748:	2802      	cmp	r0, #2
 800574a:	d800      	bhi.n	800574e <HAL_RCC_OscConfig+0x2ca>
 800574c:	e6c1      	b.n	80054d2 <HAL_RCC_OscConfig+0x4e>
 800574e:	e6fb      	b.n	8005548 <HAL_RCC_OscConfig+0xc4>
    else if(RCC_OscInitStruct->HSI14State == RCC_HSI14_ADC_CONTROL)
 8005750:	3205      	adds	r2, #5
 8005752:	d103      	bne.n	800575c <HAL_RCC_OscConfig+0x2d8>
      __HAL_RCC_HSI14ADC_ENABLE();
 8005754:	6b6a      	ldr	r2, [r5, #52]	@ 0x34
 8005756:	439a      	bics	r2, r3
 8005758:	636a      	str	r2, [r5, #52]	@ 0x34
 800575a:	e6be      	b.n	80054da <HAL_RCC_OscConfig+0x56>
      __HAL_RCC_HSI14ADC_DISABLE();
 800575c:	6b6a      	ldr	r2, [r5, #52]	@ 0x34
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI14RDY) != RESET)
 800575e:	2702      	movs	r7, #2
      __HAL_RCC_HSI14ADC_DISABLE();
 8005760:	4313      	orrs	r3, r2
      __HAL_RCC_HSI14_DISABLE();
 8005762:	2201      	movs	r2, #1
      __HAL_RCC_HSI14ADC_DISABLE();
 8005764:	636b      	str	r3, [r5, #52]	@ 0x34
      __HAL_RCC_HSI14_DISABLE();
 8005766:	6b6b      	ldr	r3, [r5, #52]	@ 0x34
 8005768:	4393      	bics	r3, r2
 800576a:	636b      	str	r3, [r5, #52]	@ 0x34
      tickstart = HAL_GetTick();
 800576c:	f7ff fa02 	bl	8004b74 <HAL_GetTick>
 8005770:	0006      	movs	r6, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI14RDY) != RESET)
 8005772:	6b6b      	ldr	r3, [r5, #52]	@ 0x34
 8005774:	423b      	tst	r3, r7
 8005776:	d100      	bne.n	800577a <HAL_RCC_OscConfig+0x2f6>
 8005778:	e6b6      	b.n	80054e8 <HAL_RCC_OscConfig+0x64>
        if((HAL_GetTick() - tickstart) > HSI14_TIMEOUT_VALUE)
 800577a:	f7ff f9fb 	bl	8004b74 <HAL_GetTick>
 800577e:	1b80      	subs	r0, r0, r6
 8005780:	2802      	cmp	r0, #2
 8005782:	d9f6      	bls.n	8005772 <HAL_RCC_OscConfig+0x2ee>
 8005784:	e6e0      	b.n	8005548 <HAL_RCC_OscConfig+0xc4>
 8005786:	46c0      	nop			@ (mov r8, r8)
 8005788:	40021000 	.word	0x40021000
 800578c:	fffeffff 	.word	0xfffeffff
 8005790:	fffbffff 	.word	0xfffbffff
 8005794:	40007000 	.word	0x40007000
 8005798:	efffffff 	.word	0xefffffff
 800579c:	00001388 	.word	0x00001388
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 80057a0:	210c      	movs	r1, #12
 80057a2:	4d34      	ldr	r5, [pc, #208]	@ (8005874 <HAL_RCC_OscConfig+0x3f0>)
 80057a4:	686a      	ldr	r2, [r5, #4]
 80057a6:	400a      	ands	r2, r1
 80057a8:	2a08      	cmp	r2, #8
 80057aa:	d047      	beq.n	800583c <HAL_RCC_OscConfig+0x3b8>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 80057ac:	4a32      	ldr	r2, [pc, #200]	@ (8005878 <HAL_RCC_OscConfig+0x3f4>)
 80057ae:	2b02      	cmp	r3, #2
 80057b0:	d132      	bne.n	8005818 <HAL_RCC_OscConfig+0x394>
        __HAL_RCC_PLL_DISABLE();
 80057b2:	682b      	ldr	r3, [r5, #0]
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 80057b4:	2780      	movs	r7, #128	@ 0x80
        __HAL_RCC_PLL_DISABLE();
 80057b6:	4013      	ands	r3, r2
 80057b8:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 80057ba:	f7ff f9db 	bl	8004b74 <HAL_GetTick>
 80057be:	0006      	movs	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 80057c0:	04bf      	lsls	r7, r7, #18
 80057c2:	682b      	ldr	r3, [r5, #0]
 80057c4:	423b      	tst	r3, r7
 80057c6:	d121      	bne.n	800580c <HAL_RCC_OscConfig+0x388>
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 80057c8:	220f      	movs	r2, #15
 80057ca:	6aeb      	ldr	r3, [r5, #44]	@ 0x2c
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  == RESET)
 80057cc:	2680      	movs	r6, #128	@ 0x80
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 80057ce:	4393      	bics	r3, r2
 80057d0:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  == RESET)
 80057d2:	04b6      	lsls	r6, r6, #18
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 80057d4:	4313      	orrs	r3, r2
 80057d6:	62eb      	str	r3, [r5, #44]	@ 0x2c
 80057d8:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 80057da:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 80057dc:	686a      	ldr	r2, [r5, #4]
 80057de:	430b      	orrs	r3, r1
 80057e0:	4926      	ldr	r1, [pc, #152]	@ (800587c <HAL_RCC_OscConfig+0x3f8>)
 80057e2:	400a      	ands	r2, r1
 80057e4:	4313      	orrs	r3, r2
 80057e6:	606b      	str	r3, [r5, #4]
        __HAL_RCC_PLL_ENABLE();
 80057e8:	2380      	movs	r3, #128	@ 0x80
 80057ea:	682a      	ldr	r2, [r5, #0]
 80057ec:	045b      	lsls	r3, r3, #17
 80057ee:	4313      	orrs	r3, r2
 80057f0:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 80057f2:	f7ff f9bf 	bl	8004b74 <HAL_GetTick>
 80057f6:	0004      	movs	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  == RESET)
 80057f8:	682b      	ldr	r3, [r5, #0]
 80057fa:	4233      	tst	r3, r6
 80057fc:	d000      	beq.n	8005800 <HAL_RCC_OscConfig+0x37c>
 80057fe:	e677      	b.n	80054f0 <HAL_RCC_OscConfig+0x6c>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8005800:	f7ff f9b8 	bl	8004b74 <HAL_GetTick>
 8005804:	1b00      	subs	r0, r0, r4
 8005806:	2802      	cmp	r0, #2
 8005808:	d9f6      	bls.n	80057f8 <HAL_RCC_OscConfig+0x374>
 800580a:	e69d      	b.n	8005548 <HAL_RCC_OscConfig+0xc4>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800580c:	f7ff f9b2 	bl	8004b74 <HAL_GetTick>
 8005810:	1b80      	subs	r0, r0, r6
 8005812:	2802      	cmp	r0, #2
 8005814:	d9d5      	bls.n	80057c2 <HAL_RCC_OscConfig+0x33e>
 8005816:	e697      	b.n	8005548 <HAL_RCC_OscConfig+0xc4>
        __HAL_RCC_PLL_DISABLE();
 8005818:	682b      	ldr	r3, [r5, #0]
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 800581a:	2680      	movs	r6, #128	@ 0x80
        __HAL_RCC_PLL_DISABLE();
 800581c:	4013      	ands	r3, r2
 800581e:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 8005820:	f7ff f9a8 	bl	8004b74 <HAL_GetTick>
 8005824:	0004      	movs	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 8005826:	04b6      	lsls	r6, r6, #18
 8005828:	682b      	ldr	r3, [r5, #0]
 800582a:	4233      	tst	r3, r6
 800582c:	d100      	bne.n	8005830 <HAL_RCC_OscConfig+0x3ac>
 800582e:	e65f      	b.n	80054f0 <HAL_RCC_OscConfig+0x6c>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8005830:	f7ff f9a0 	bl	8004b74 <HAL_GetTick>
 8005834:	1b00      	subs	r0, r0, r4
 8005836:	2802      	cmp	r0, #2
 8005838:	d9f6      	bls.n	8005828 <HAL_RCC_OscConfig+0x3a4>
 800583a:	e685      	b.n	8005548 <HAL_RCC_OscConfig+0xc4>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 800583c:	2b01      	cmp	r3, #1
 800583e:	d100      	bne.n	8005842 <HAL_RCC_OscConfig+0x3be>
 8005840:	e66b      	b.n	800551a <HAL_RCC_OscConfig+0x96>
        if((READ_BIT(pll_config,  RCC_CFGR_PLLSRC)  != RCC_OscInitStruct->PLL.PLLSource) ||
 8005842:	2280      	movs	r2, #128	@ 0x80
        pll_config  = RCC->CFGR;
 8005844:	6868      	ldr	r0, [r5, #4]
        if((READ_BIT(pll_config,  RCC_CFGR_PLLSRC)  != RCC_OscInitStruct->PLL.PLLSource) ||
 8005846:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 8005848:	0252      	lsls	r2, r2, #9
        pll_config2 = RCC->CFGR2;
 800584a:	6aeb      	ldr	r3, [r5, #44]	@ 0x2c
        if((READ_BIT(pll_config,  RCC_CFGR_PLLSRC)  != RCC_OscInitStruct->PLL.PLLSource) ||
 800584c:	4002      	ands	r2, r0
 800584e:	428a      	cmp	r2, r1
 8005850:	d000      	beq.n	8005854 <HAL_RCC_OscConfig+0x3d0>
 8005852:	e662      	b.n	800551a <HAL_RCC_OscConfig+0x96>
           (READ_BIT(pll_config2, RCC_CFGR2_PREDIV) != RCC_OscInitStruct->PLL.PREDIV)    ||
 8005854:	220f      	movs	r2, #15
 8005856:	4013      	ands	r3, r2
        if((READ_BIT(pll_config,  RCC_CFGR_PLLSRC)  != RCC_OscInitStruct->PLL.PLLSource) ||
 8005858:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 800585a:	4293      	cmp	r3, r2
 800585c:	d000      	beq.n	8005860 <HAL_RCC_OscConfig+0x3dc>
 800585e:	e65c      	b.n	800551a <HAL_RCC_OscConfig+0x96>
           (READ_BIT(pll_config,  RCC_CFGR_PLLMUL)  != RCC_OscInitStruct->PLL.PLLMUL))
 8005860:	23f0      	movs	r3, #240	@ 0xf0
 8005862:	039b      	lsls	r3, r3, #14
 8005864:	4018      	ands	r0, r3
           (READ_BIT(pll_config2, RCC_CFGR2_PREDIV) != RCC_OscInitStruct->PLL.PREDIV)    ||
 8005866:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 8005868:	1ac0      	subs	r0, r0, r3
 800586a:	1e43      	subs	r3, r0, #1
 800586c:	4198      	sbcs	r0, r3
 800586e:	b2c0      	uxtb	r0, r0
 8005870:	e66b      	b.n	800554a <HAL_RCC_OscConfig+0xc6>
 8005872:	46c0      	nop			@ (mov r8, r8)
 8005874:	40021000 	.word	0x40021000
 8005878:	feffffff 	.word	0xfeffffff
 800587c:	ffc2ffff 	.word	0xffc2ffff

08005880 <HAL_RCC_GetSysClockFreq>:
  uint32_t sysclockfreq = 0U;
  
  tmpreg = RCC->CFGR;
  
  /* Get SYSCLK source -------------------------------------------------------*/
  switch (tmpreg & RCC_CFGR_SWS)
 8005880:	220c      	movs	r2, #12
{
 8005882:	b570      	push	{r4, r5, r6, lr}
  tmpreg = RCC->CFGR;
 8005884:	4d0e      	ldr	r5, [pc, #56]	@ (80058c0 <HAL_RCC_GetSysClockFreq+0x40>)
 8005886:	686b      	ldr	r3, [r5, #4]
  switch (tmpreg & RCC_CFGR_SWS)
 8005888:	401a      	ands	r2, r3
 800588a:	2a04      	cmp	r2, #4
 800588c:	d013      	beq.n	80058b6 <HAL_RCC_GetSysClockFreq+0x36>
 800588e:	2a08      	cmp	r2, #8
 8005890:	d113      	bne.n	80058ba <HAL_RCC_GetSysClockFreq+0x3a>
      sysclockfreq = HSE_VALUE;
      break;
    }
    case RCC_SYSCLKSOURCE_STATUS_PLLCLK:  /* PLL used as system clock */
    {
      pllmul = aPLLMULFactorTable[(uint32_t)(tmpreg & RCC_CFGR_PLLMUL) >> RCC_CFGR_PLLMUL_BITNUMBER];
 8005892:	200f      	movs	r0, #15
 8005894:	490b      	ldr	r1, [pc, #44]	@ (80058c4 <HAL_RCC_GetSysClockFreq+0x44>)
 8005896:	0c9a      	lsrs	r2, r3, #18
 8005898:	4002      	ands	r2, r0
 800589a:	5c8c      	ldrb	r4, [r1, r2]
      prediv = aPredivFactorTable[(uint32_t)(RCC->CFGR2 & RCC_CFGR2_PREDIV) >> RCC_CFGR2_PREDIV_BITNUMBER];
 800589c:	6aea      	ldr	r2, [r5, #44]	@ 0x2c
      if ((tmpreg & RCC_CFGR_PLLSRC) == RCC_PLLSOURCE_HSE)
 800589e:	03db      	lsls	r3, r3, #15
 80058a0:	d507      	bpl.n	80058b2 <HAL_RCC_GetSysClockFreq+0x32>
      prediv = aPredivFactorTable[(uint32_t)(RCC->CFGR2 & RCC_CFGR2_PREDIV) >> RCC_CFGR2_PREDIV_BITNUMBER];
 80058a2:	4909      	ldr	r1, [pc, #36]	@ (80058c8 <HAL_RCC_GetSysClockFreq+0x48>)
 80058a4:	4002      	ands	r2, r0
 80058a6:	5c89      	ldrb	r1, [r1, r2]
      {
        /* HSE used as PLL clock source : PLLCLK = HSE/PREDIV * PLLMUL */
        pllclk = (uint32_t)((uint64_t) HSE_VALUE / (uint64_t) (prediv)) * ((uint64_t) pllmul);
 80058a8:	4808      	ldr	r0, [pc, #32]	@ (80058cc <HAL_RCC_GetSysClockFreq+0x4c>)
 80058aa:	f7fa fc49 	bl	8000140 <__udivsi3>
#if  (defined(STM32F042x6) || defined(STM32F048xx) || defined(STM32F070x6) || defined(STM32F071xB) || defined(STM32F072xB) || defined(STM32F078xx) || defined(STM32F070xB) || defined(STM32F091xC) || defined(STM32F098xx) || defined(STM32F030xC))
        /* HSI used as PLL clock source : PLLCLK = HSI/PREDIV * PLLMUL */
        pllclk = (uint32_t)((uint64_t) HSI_VALUE / (uint64_t) (prediv)) * ((uint64_t) pllmul);
#else
        /* HSI used as PLL clock source : PLLCLK = HSI/2 * PLLMUL */
        pllclk = (uint32_t)((uint64_t) (HSI_VALUE >> 1U) * ((uint64_t) pllmul));
 80058ae:	4360      	muls	r0, r4
      sysclockfreq = HSI_VALUE;
      break;
    }
  }
  return sysclockfreq;
}
 80058b0:	bd70      	pop	{r4, r5, r6, pc}
        pllclk = (uint32_t)((uint64_t) (HSI_VALUE >> 1U) * ((uint64_t) pllmul));
 80058b2:	4807      	ldr	r0, [pc, #28]	@ (80058d0 <HAL_RCC_GetSysClockFreq+0x50>)
 80058b4:	e7fb      	b.n	80058ae <HAL_RCC_GetSysClockFreq+0x2e>
      sysclockfreq = HSE_VALUE;
 80058b6:	4805      	ldr	r0, [pc, #20]	@ (80058cc <HAL_RCC_GetSysClockFreq+0x4c>)
 80058b8:	e7fa      	b.n	80058b0 <HAL_RCC_GetSysClockFreq+0x30>
  switch (tmpreg & RCC_CFGR_SWS)
 80058ba:	4806      	ldr	r0, [pc, #24]	@ (80058d4 <HAL_RCC_GetSysClockFreq+0x54>)
  return sysclockfreq;
 80058bc:	e7f8      	b.n	80058b0 <HAL_RCC_GetSysClockFreq+0x30>
 80058be:	46c0      	nop			@ (mov r8, r8)
 80058c0:	40021000 	.word	0x40021000
 80058c4:	0800bf20 	.word	0x0800bf20
 80058c8:	0800bf10 	.word	0x0800bf10
 80058cc:	00f42400 	.word	0x00f42400
 80058d0:	003d0900 	.word	0x003d0900
 80058d4:	007a1200 	.word	0x007a1200

080058d8 <HAL_RCC_ClockConfig>:
{
 80058d8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80058da:	0004      	movs	r4, r0
 80058dc:	000e      	movs	r6, r1
  if(RCC_ClkInitStruct == NULL)
 80058de:	2800      	cmp	r0, #0
 80058e0:	d101      	bne.n	80058e6 <HAL_RCC_ClockConfig+0xe>
    return HAL_ERROR;
 80058e2:	2001      	movs	r0, #1
}
 80058e4:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 80058e6:	2201      	movs	r2, #1
 80058e8:	4d37      	ldr	r5, [pc, #220]	@ (80059c8 <HAL_RCC_ClockConfig+0xf0>)
 80058ea:	682b      	ldr	r3, [r5, #0]
 80058ec:	4013      	ands	r3, r2
 80058ee:	428b      	cmp	r3, r1
 80058f0:	d31c      	bcc.n	800592c <HAL_RCC_ClockConfig+0x54>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 80058f2:	6822      	ldr	r2, [r4, #0]
 80058f4:	0793      	lsls	r3, r2, #30
 80058f6:	d422      	bmi.n	800593e <HAL_RCC_ClockConfig+0x66>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 80058f8:	07d2      	lsls	r2, r2, #31
 80058fa:	d42f      	bmi.n	800595c <HAL_RCC_ClockConfig+0x84>
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 80058fc:	2301      	movs	r3, #1
 80058fe:	682a      	ldr	r2, [r5, #0]
 8005900:	401a      	ands	r2, r3
 8005902:	42b2      	cmp	r2, r6
 8005904:	d851      	bhi.n	80059aa <HAL_RCC_ClockConfig+0xd2>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8005906:	6823      	ldr	r3, [r4, #0]
 8005908:	4d30      	ldr	r5, [pc, #192]	@ (80059cc <HAL_RCC_ClockConfig+0xf4>)
 800590a:	075b      	lsls	r3, r3, #29
 800590c:	d454      	bmi.n	80059b8 <HAL_RCC_ClockConfig+0xe0>
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_BITNUMBER];
 800590e:	f7ff ffb7 	bl	8005880 <HAL_RCC_GetSysClockFreq>
 8005912:	686b      	ldr	r3, [r5, #4]
 8005914:	4a2e      	ldr	r2, [pc, #184]	@ (80059d0 <HAL_RCC_ClockConfig+0xf8>)
 8005916:	061b      	lsls	r3, r3, #24
 8005918:	0f1b      	lsrs	r3, r3, #28
 800591a:	5cd3      	ldrb	r3, [r2, r3]
 800591c:	492d      	ldr	r1, [pc, #180]	@ (80059d4 <HAL_RCC_ClockConfig+0xfc>)
 800591e:	40d8      	lsrs	r0, r3
 8005920:	6008      	str	r0, [r1, #0]
  HAL_InitTick (TICK_INT_PRIORITY);
 8005922:	2001      	movs	r0, #1
 8005924:	f7ff f8e6 	bl	8004af4 <HAL_InitTick>
  return HAL_OK;
 8005928:	2000      	movs	r0, #0
 800592a:	e7db      	b.n	80058e4 <HAL_RCC_ClockConfig+0xc>
    __HAL_FLASH_SET_LATENCY(FLatency);
 800592c:	682b      	ldr	r3, [r5, #0]
 800592e:	4393      	bics	r3, r2
 8005930:	430b      	orrs	r3, r1
 8005932:	602b      	str	r3, [r5, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 8005934:	682b      	ldr	r3, [r5, #0]
 8005936:	4013      	ands	r3, r2
 8005938:	428b      	cmp	r3, r1
 800593a:	d1d2      	bne.n	80058e2 <HAL_RCC_ClockConfig+0xa>
 800593c:	e7d9      	b.n	80058f2 <HAL_RCC_ClockConfig+0x1a>
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800593e:	4923      	ldr	r1, [pc, #140]	@ (80059cc <HAL_RCC_ClockConfig+0xf4>)
 8005940:	0753      	lsls	r3, r2, #29
 8005942:	d504      	bpl.n	800594e <HAL_RCC_ClockConfig+0x76>
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE, RCC_HCLK_DIV16);
 8005944:	23e0      	movs	r3, #224	@ 0xe0
 8005946:	6848      	ldr	r0, [r1, #4]
 8005948:	00db      	lsls	r3, r3, #3
 800594a:	4303      	orrs	r3, r0
 800594c:	604b      	str	r3, [r1, #4]
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 800594e:	20f0      	movs	r0, #240	@ 0xf0
 8005950:	684b      	ldr	r3, [r1, #4]
 8005952:	4383      	bics	r3, r0
 8005954:	68a0      	ldr	r0, [r4, #8]
 8005956:	4303      	orrs	r3, r0
 8005958:	604b      	str	r3, [r1, #4]
 800595a:	e7cd      	b.n	80058f8 <HAL_RCC_ClockConfig+0x20>
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 800595c:	4f1b      	ldr	r7, [pc, #108]	@ (80059cc <HAL_RCC_ClockConfig+0xf4>)
 800595e:	6862      	ldr	r2, [r4, #4]
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8005960:	683b      	ldr	r3, [r7, #0]
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8005962:	2a01      	cmp	r2, #1
 8005964:	d119      	bne.n	800599a <HAL_RCC_ClockConfig+0xc2>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8005966:	039b      	lsls	r3, r3, #14
 8005968:	d5bb      	bpl.n	80058e2 <HAL_RCC_ClockConfig+0xa>
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 800596a:	2103      	movs	r1, #3
 800596c:	687b      	ldr	r3, [r7, #4]
 800596e:	438b      	bics	r3, r1
 8005970:	4313      	orrs	r3, r2
 8005972:	607b      	str	r3, [r7, #4]
    tickstart = HAL_GetTick();
 8005974:	f7ff f8fe 	bl	8004b74 <HAL_GetTick>
 8005978:	9001      	str	r0, [sp, #4]
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 800597a:	230c      	movs	r3, #12
 800597c:	687a      	ldr	r2, [r7, #4]
 800597e:	401a      	ands	r2, r3
 8005980:	6863      	ldr	r3, [r4, #4]
 8005982:	009b      	lsls	r3, r3, #2
 8005984:	429a      	cmp	r2, r3
 8005986:	d0b9      	beq.n	80058fc <HAL_RCC_ClockConfig+0x24>
      if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 8005988:	f7ff f8f4 	bl	8004b74 <HAL_GetTick>
 800598c:	9b01      	ldr	r3, [sp, #4]
 800598e:	1ac0      	subs	r0, r0, r3
 8005990:	4b11      	ldr	r3, [pc, #68]	@ (80059d8 <HAL_RCC_ClockConfig+0x100>)
 8005992:	4298      	cmp	r0, r3
 8005994:	d9f1      	bls.n	800597a <HAL_RCC_ClockConfig+0xa2>
        return HAL_TIMEOUT;
 8005996:	2003      	movs	r0, #3
 8005998:	e7a4      	b.n	80058e4 <HAL_RCC_ClockConfig+0xc>
    else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 800599a:	2a02      	cmp	r2, #2
 800599c:	d102      	bne.n	80059a4 <HAL_RCC_ClockConfig+0xcc>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800599e:	019b      	lsls	r3, r3, #6
 80059a0:	d4e3      	bmi.n	800596a <HAL_RCC_ClockConfig+0x92>
 80059a2:	e79e      	b.n	80058e2 <HAL_RCC_ClockConfig+0xa>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 80059a4:	079b      	lsls	r3, r3, #30
 80059a6:	d4e0      	bmi.n	800596a <HAL_RCC_ClockConfig+0x92>
 80059a8:	e79b      	b.n	80058e2 <HAL_RCC_ClockConfig+0xa>
    __HAL_FLASH_SET_LATENCY(FLatency);
 80059aa:	682a      	ldr	r2, [r5, #0]
 80059ac:	439a      	bics	r2, r3
 80059ae:	602a      	str	r2, [r5, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 80059b0:	682a      	ldr	r2, [r5, #0]
 80059b2:	421a      	tst	r2, r3
 80059b4:	d0a7      	beq.n	8005906 <HAL_RCC_ClockConfig+0x2e>
 80059b6:	e794      	b.n	80058e2 <HAL_RCC_ClockConfig+0xa>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE, RCC_ClkInitStruct->APB1CLKDivider);
 80059b8:	686b      	ldr	r3, [r5, #4]
 80059ba:	4a08      	ldr	r2, [pc, #32]	@ (80059dc <HAL_RCC_ClockConfig+0x104>)
 80059bc:	4013      	ands	r3, r2
 80059be:	68e2      	ldr	r2, [r4, #12]
 80059c0:	4313      	orrs	r3, r2
 80059c2:	606b      	str	r3, [r5, #4]
 80059c4:	e7a3      	b.n	800590e <HAL_RCC_ClockConfig+0x36>
 80059c6:	46c0      	nop			@ (mov r8, r8)
 80059c8:	40022000 	.word	0x40022000
 80059cc:	40021000 	.word	0x40021000
 80059d0:	0800bf00 	.word	0x0800bf00
 80059d4:	20000024 	.word	0x20000024
 80059d8:	00001388 	.word	0x00001388
 80059dc:	fffff8ff 	.word	0xfffff8ff

080059e0 <SPI_WaitFlagStateUntilTimeout.constprop.0>:
  * @param  State flag state to check
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, FlagStatus State,
 80059e0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80059e2:	000e      	movs	r6, r1
 80059e4:	b085      	sub	sp, #20
 80059e6:	0015      	movs	r5, r2
 80059e8:	0004      	movs	r4, r0
  __IO uint32_t count;
  uint32_t tmp_timeout;
  uint32_t tmp_tickstart;

  /* Adjust Timeout value  in case of end of transfer */
  tmp_timeout   = Timeout - (HAL_GetTick() - Tickstart);
 80059ea:	f7ff f8c3 	bl	8004b74 <HAL_GetTick>
 80059ee:	19ad      	adds	r5, r5, r6
 80059f0:	1a2d      	subs	r5, r5, r0
  tmp_tickstart = HAL_GetTick();
 80059f2:	f7ff f8bf 	bl	8004b74 <HAL_GetTick>

  /* Calculate Timeout based on a software loop to avoid blocking issue if Systick is disabled */
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);

  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 80059f6:	2780      	movs	r7, #128	@ 0x80
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 80059f8:	4b25      	ldr	r3, [pc, #148]	@ (8005a90 <SPI_WaitFlagStateUntilTimeout.constprop.0+0xb0>)
  tmp_tickstart = HAL_GetTick();
 80059fa:	9001      	str	r0, [sp, #4]
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 80059fc:	681b      	ldr	r3, [r3, #0]
 80059fe:	015b      	lsls	r3, r3, #5
 8005a00:	0d1b      	lsrs	r3, r3, #20
 8005a02:	436b      	muls	r3, r5
 8005a04:	9303      	str	r3, [sp, #12]
  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 8005a06:	6822      	ldr	r2, [r4, #0]
 8005a08:	6893      	ldr	r3, [r2, #8]
 8005a0a:	0018      	movs	r0, r3
 8005a0c:	4038      	ands	r0, r7
 8005a0e:	423b      	tst	r3, r7
 8005a10:	d032      	beq.n	8005a78 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x98>
  {
    if (Timeout != HAL_MAX_DELAY)
 8005a12:	1c73      	adds	r3, r6, #1
 8005a14:	d0f8      	beq.n	8005a08 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x28>
    {
      if (((HAL_GetTick() - tmp_tickstart) >= tmp_timeout) || (tmp_timeout == 0U))
 8005a16:	f7ff f8ad 	bl	8004b74 <HAL_GetTick>
 8005a1a:	9b01      	ldr	r3, [sp, #4]
 8005a1c:	1ac0      	subs	r0, r0, r3
 8005a1e:	42a8      	cmp	r0, r5
 8005a20:	d32c      	bcc.n	8005a7c <SPI_WaitFlagStateUntilTimeout.constprop.0+0x9c>
        /* Disable the SPI and reset the CRC: the CRC value should be cleared
           on both master and slave sides in order to resynchronize the master
           and slave for their respective CRC calculation */

        /* Disable TXE, RXNE and ERR interrupts for the interrupt process */
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 8005a22:	21e0      	movs	r1, #224	@ 0xe0
 8005a24:	6823      	ldr	r3, [r4, #0]
 8005a26:	685a      	ldr	r2, [r3, #4]
 8005a28:	438a      	bics	r2, r1
 8005a2a:	605a      	str	r2, [r3, #4]

        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8005a2c:	2282      	movs	r2, #130	@ 0x82
 8005a2e:	6861      	ldr	r1, [r4, #4]
 8005a30:	0052      	lsls	r2, r2, #1
 8005a32:	4291      	cmp	r1, r2
 8005a34:	d10c      	bne.n	8005a50 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x70>
 8005a36:	2180      	movs	r1, #128	@ 0x80
 8005a38:	68a2      	ldr	r2, [r4, #8]
 8005a3a:	0209      	lsls	r1, r1, #8
 8005a3c:	428a      	cmp	r2, r1
 8005a3e:	d003      	beq.n	8005a48 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x68>
                                                     || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 8005a40:	2180      	movs	r1, #128	@ 0x80
 8005a42:	00c9      	lsls	r1, r1, #3
 8005a44:	428a      	cmp	r2, r1
 8005a46:	d103      	bne.n	8005a50 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x70>
        {
          /* Disable SPI peripheral */
          __HAL_SPI_DISABLE(hspi);
 8005a48:	2140      	movs	r1, #64	@ 0x40
 8005a4a:	681a      	ldr	r2, [r3, #0]
 8005a4c:	438a      	bics	r2, r1
 8005a4e:	601a      	str	r2, [r3, #0]
        }

        /* Reset CRC Calculation */
        if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 8005a50:	2180      	movs	r1, #128	@ 0x80
 8005a52:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
 8005a54:	0189      	lsls	r1, r1, #6
 8005a56:	428a      	cmp	r2, r1
 8005a58:	d106      	bne.n	8005a68 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x88>
        {
          SPI_RESET_CRC(hspi);
 8005a5a:	6819      	ldr	r1, [r3, #0]
 8005a5c:	480d      	ldr	r0, [pc, #52]	@ (8005a94 <SPI_WaitFlagStateUntilTimeout.constprop.0+0xb4>)
 8005a5e:	4001      	ands	r1, r0
 8005a60:	6019      	str	r1, [r3, #0]
 8005a62:	6819      	ldr	r1, [r3, #0]
 8005a64:	430a      	orrs	r2, r1
 8005a66:	601a      	str	r2, [r3, #0]
        }

        hspi->State = HAL_SPI_STATE_READY;
 8005a68:	0023      	movs	r3, r4
 8005a6a:	2201      	movs	r2, #1
 8005a6c:	335d      	adds	r3, #93	@ 0x5d
 8005a6e:	701a      	strb	r2, [r3, #0]

        /* Process Unlocked */
        __HAL_UNLOCK(hspi);
 8005a70:	2300      	movs	r3, #0

        return HAL_TIMEOUT;
 8005a72:	2003      	movs	r0, #3
        __HAL_UNLOCK(hspi);
 8005a74:	345c      	adds	r4, #92	@ 0x5c
 8005a76:	7023      	strb	r3, [r4, #0]
      count--;
    }
  }

  return HAL_OK;
}
 8005a78:	b005      	add	sp, #20
 8005a7a:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if (count == 0U)
 8005a7c:	9b03      	ldr	r3, [sp, #12]
 8005a7e:	2b00      	cmp	r3, #0
 8005a80:	d000      	beq.n	8005a84 <SPI_WaitFlagStateUntilTimeout.constprop.0+0xa4>
 8005a82:	002b      	movs	r3, r5
      count--;
 8005a84:	9a03      	ldr	r2, [sp, #12]
 8005a86:	001d      	movs	r5, r3
 8005a88:	3a01      	subs	r2, #1
 8005a8a:	9203      	str	r2, [sp, #12]
 8005a8c:	e7bb      	b.n	8005a06 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x26>
 8005a8e:	46c0      	nop			@ (mov r8, r8)
 8005a90:	20000024 	.word	0x20000024
 8005a94:	ffffdfff 	.word	0xffffdfff

08005a98 <SPI_WaitFifoStateUntilTimeout.constprop.0>:
  * @param  State Fifo state to check
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_WaitFifoStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Fifo, uint32_t State,
 8005a98:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005a9a:	0017      	movs	r7, r2
{
  __IO uint32_t count;
  uint32_t tmp_timeout;
  uint32_t tmp_tickstart;
  __IO uint8_t  *ptmpreg8;
  __IO uint8_t  tmpreg8 = 0;
 8005a9c:	2200      	movs	r2, #0
static HAL_StatusTypeDef SPI_WaitFifoStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Fifo, uint32_t State,
 8005a9e:	b085      	sub	sp, #20
 8005aa0:	001d      	movs	r5, r3
  __IO uint8_t  tmpreg8 = 0;
 8005aa2:	ab02      	add	r3, sp, #8
 8005aa4:	70da      	strb	r2, [r3, #3]
static HAL_StatusTypeDef SPI_WaitFifoStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Fifo, uint32_t State,
 8005aa6:	0004      	movs	r4, r0
 8005aa8:	000e      	movs	r6, r1

  /* Adjust Timeout value  in case of end of transfer */
  tmp_timeout = Timeout - (HAL_GetTick() - Tickstart);
 8005aaa:	f7ff f863 	bl	8004b74 <HAL_GetTick>
 8005aae:	19ed      	adds	r5, r5, r7
 8005ab0:	1a2d      	subs	r5, r5, r0
  tmp_tickstart = HAL_GetTick();
 8005ab2:	f7ff f85f 	bl	8004b74 <HAL_GetTick>

  /* Initialize the 8bit temporary pointer */
  ptmpreg8 = (__IO uint8_t *)&hspi->Instance->DR;

  /* Calculate Timeout based on a software loop to avoid blocking issue if Systick is disabled */
  count = tmp_timeout * ((SystemCoreClock * 35U) >> 20U);
 8005ab6:	2223      	movs	r2, #35	@ 0x23
  ptmpreg8 = (__IO uint8_t *)&hspi->Instance->DR;
 8005ab8:	6823      	ldr	r3, [r4, #0]
  tmp_tickstart = HAL_GetTick();
 8005aba:	9000      	str	r0, [sp, #0]
  ptmpreg8 = (__IO uint8_t *)&hspi->Instance->DR;
 8005abc:	9301      	str	r3, [sp, #4]
  count = tmp_timeout * ((SystemCoreClock * 35U) >> 20U);
 8005abe:	4b2a      	ldr	r3, [pc, #168]	@ (8005b68 <SPI_WaitFifoStateUntilTimeout.constprop.0+0xd0>)
 8005ac0:	681b      	ldr	r3, [r3, #0]
 8005ac2:	4353      	muls	r3, r2
 8005ac4:	0d1b      	lsrs	r3, r3, #20
 8005ac6:	436b      	muls	r3, r5
 8005ac8:	9303      	str	r3, [sp, #12]
  while ((hspi->Instance->SR & Fifo) != State)
  {
    if ((Fifo == SPI_SR_FRLVL) && (State == SPI_FRLVL_EMPTY))
    {
      /* Flush Data Register by a blank read */
      tmpreg8 = *ptmpreg8;
 8005aca:	ab02      	add	r3, sp, #8
  while ((hspi->Instance->SR & Fifo) != State)
 8005acc:	6821      	ldr	r1, [r4, #0]
      tmpreg8 = *ptmpreg8;
 8005ace:	1cda      	adds	r2, r3, #3
  while ((hspi->Instance->SR & Fifo) != State)
 8005ad0:	688b      	ldr	r3, [r1, #8]
 8005ad2:	0018      	movs	r0, r3
 8005ad4:	4030      	ands	r0, r6
 8005ad6:	4233      	tst	r3, r6
 8005ad8:	d03b      	beq.n	8005b52 <SPI_WaitFifoStateUntilTimeout.constprop.0+0xba>
    if ((Fifo == SPI_SR_FRLVL) && (State == SPI_FRLVL_EMPTY))
 8005ada:	23c0      	movs	r3, #192	@ 0xc0
 8005adc:	00db      	lsls	r3, r3, #3
 8005ade:	429e      	cmp	r6, r3
 8005ae0:	d104      	bne.n	8005aec <SPI_WaitFifoStateUntilTimeout.constprop.0+0x54>
      tmpreg8 = *ptmpreg8;
 8005ae2:	9b01      	ldr	r3, [sp, #4]
 8005ae4:	7b1b      	ldrb	r3, [r3, #12]
 8005ae6:	b2db      	uxtb	r3, r3
 8005ae8:	7013      	strb	r3, [r2, #0]
      /* To avoid GCC warning */
      UNUSED(tmpreg8);
 8005aea:	7813      	ldrb	r3, [r2, #0]
    }

    if (Timeout != HAL_MAX_DELAY)
 8005aec:	1c7b      	adds	r3, r7, #1
 8005aee:	d0ef      	beq.n	8005ad0 <SPI_WaitFifoStateUntilTimeout.constprop.0+0x38>
    {
      if (((HAL_GetTick() - tmp_tickstart) >= tmp_timeout) || (tmp_timeout == 0U))
 8005af0:	f7ff f840 	bl	8004b74 <HAL_GetTick>
 8005af4:	9b00      	ldr	r3, [sp, #0]
 8005af6:	1ac0      	subs	r0, r0, r3
 8005af8:	42a8      	cmp	r0, r5
 8005afa:	d32c      	bcc.n	8005b56 <SPI_WaitFifoStateUntilTimeout.constprop.0+0xbe>
        /* Disable the SPI and reset the CRC: the CRC value should be cleared
           on both master and slave sides in order to resynchronize the master
           and slave for their respective CRC calculation */

        /* Disable TXE, RXNE and ERR interrupts for the interrupt process */
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 8005afc:	21e0      	movs	r1, #224	@ 0xe0
 8005afe:	6823      	ldr	r3, [r4, #0]
 8005b00:	685a      	ldr	r2, [r3, #4]
 8005b02:	438a      	bics	r2, r1
 8005b04:	605a      	str	r2, [r3, #4]

        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8005b06:	2282      	movs	r2, #130	@ 0x82
 8005b08:	6861      	ldr	r1, [r4, #4]
 8005b0a:	0052      	lsls	r2, r2, #1
 8005b0c:	4291      	cmp	r1, r2
 8005b0e:	d10c      	bne.n	8005b2a <SPI_WaitFifoStateUntilTimeout.constprop.0+0x92>
 8005b10:	2180      	movs	r1, #128	@ 0x80
 8005b12:	68a2      	ldr	r2, [r4, #8]
 8005b14:	0209      	lsls	r1, r1, #8
 8005b16:	428a      	cmp	r2, r1
 8005b18:	d003      	beq.n	8005b22 <SPI_WaitFifoStateUntilTimeout.constprop.0+0x8a>
                                                     || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 8005b1a:	2180      	movs	r1, #128	@ 0x80
 8005b1c:	00c9      	lsls	r1, r1, #3
 8005b1e:	428a      	cmp	r2, r1
 8005b20:	d103      	bne.n	8005b2a <SPI_WaitFifoStateUntilTimeout.constprop.0+0x92>
        {
          /* Disable SPI peripheral */
          __HAL_SPI_DISABLE(hspi);
 8005b22:	2140      	movs	r1, #64	@ 0x40
 8005b24:	681a      	ldr	r2, [r3, #0]
 8005b26:	438a      	bics	r2, r1
 8005b28:	601a      	str	r2, [r3, #0]
        }

        /* Reset CRC Calculation */
        if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 8005b2a:	2180      	movs	r1, #128	@ 0x80
 8005b2c:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
 8005b2e:	0189      	lsls	r1, r1, #6
 8005b30:	428a      	cmp	r2, r1
 8005b32:	d106      	bne.n	8005b42 <SPI_WaitFifoStateUntilTimeout.constprop.0+0xaa>
        {
          SPI_RESET_CRC(hspi);
 8005b34:	6819      	ldr	r1, [r3, #0]
 8005b36:	480d      	ldr	r0, [pc, #52]	@ (8005b6c <SPI_WaitFifoStateUntilTimeout.constprop.0+0xd4>)
 8005b38:	4001      	ands	r1, r0
 8005b3a:	6019      	str	r1, [r3, #0]
 8005b3c:	6819      	ldr	r1, [r3, #0]
 8005b3e:	430a      	orrs	r2, r1
 8005b40:	601a      	str	r2, [r3, #0]
        }

        hspi->State = HAL_SPI_STATE_READY;
 8005b42:	0023      	movs	r3, r4
 8005b44:	2201      	movs	r2, #1
 8005b46:	335d      	adds	r3, #93	@ 0x5d
 8005b48:	701a      	strb	r2, [r3, #0]

        /* Process Unlocked */
        __HAL_UNLOCK(hspi);
 8005b4a:	2300      	movs	r3, #0

        return HAL_TIMEOUT;
 8005b4c:	2003      	movs	r0, #3
        __HAL_UNLOCK(hspi);
 8005b4e:	345c      	adds	r4, #92	@ 0x5c
 8005b50:	7023      	strb	r3, [r4, #0]
      count--;
    }
  }

  return HAL_OK;
}
 8005b52:	b005      	add	sp, #20
 8005b54:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if (count == 0U)
 8005b56:	9b03      	ldr	r3, [sp, #12]
 8005b58:	2b00      	cmp	r3, #0
 8005b5a:	d000      	beq.n	8005b5e <SPI_WaitFifoStateUntilTimeout.constprop.0+0xc6>
 8005b5c:	002b      	movs	r3, r5
      count--;
 8005b5e:	9a03      	ldr	r2, [sp, #12]
 8005b60:	001d      	movs	r5, r3
 8005b62:	3a01      	subs	r2, #1
 8005b64:	9203      	str	r2, [sp, #12]
 8005b66:	e7b0      	b.n	8005aca <SPI_WaitFifoStateUntilTimeout.constprop.0+0x32>
 8005b68:	20000024 	.word	0x20000024
 8005b6c:	ffffdfff 	.word	0xffffdfff

08005b70 <SPI_EndRxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTransaction(SPI_HandleTypeDef *hspi,  uint32_t Timeout, uint32_t Tickstart)
{
 8005b70:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8005b72:	2382      	movs	r3, #130	@ 0x82
{
 8005b74:	0017      	movs	r7, r2
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8005b76:	6842      	ldr	r2, [r0, #4]
{
 8005b78:	0004      	movs	r4, r0
 8005b7a:	000e      	movs	r6, r1
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8005b7c:	005b      	lsls	r3, r3, #1
 8005b7e:	429a      	cmp	r2, r3
 8005b80:	d10d      	bne.n	8005b9e <SPI_EndRxTransaction+0x2e>
 8005b82:	2280      	movs	r2, #128	@ 0x80
 8005b84:	6883      	ldr	r3, [r0, #8]
 8005b86:	0212      	lsls	r2, r2, #8
 8005b88:	4293      	cmp	r3, r2
 8005b8a:	d003      	beq.n	8005b94 <SPI_EndRxTransaction+0x24>
                                               || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 8005b8c:	2280      	movs	r2, #128	@ 0x80
 8005b8e:	00d2      	lsls	r2, r2, #3
 8005b90:	4293      	cmp	r3, r2
 8005b92:	d104      	bne.n	8005b9e <SPI_EndRxTransaction+0x2e>
  {
    /* Disable SPI peripheral */
    __HAL_SPI_DISABLE(hspi);
 8005b94:	2140      	movs	r1, #64	@ 0x40
 8005b96:	6822      	ldr	r2, [r4, #0]
 8005b98:	6813      	ldr	r3, [r2, #0]
 8005b9a:	438b      	bics	r3, r1
 8005b9c:	6013      	str	r3, [r2, #0]
  }

  /* Control the BSY flag */
  if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 8005b9e:	003a      	movs	r2, r7
 8005ba0:	0031      	movs	r1, r6
 8005ba2:	0020      	movs	r0, r4
 8005ba4:	f7ff ff1c 	bl	80059e0 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 8005ba8:	1e05      	subs	r5, r0, #0
 8005baa:	d005      	beq.n	8005bb8 <SPI_EndRxTransaction+0x48>
                                               || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
  {
    /* Empty the FRLVL fifo */
    if (SPI_WaitFifoStateUntilTimeout(hspi, SPI_FLAG_FRLVL, SPI_FRLVL_EMPTY, Timeout, Tickstart) != HAL_OK)
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 8005bac:	2320      	movs	r3, #32
 8005bae:	6e22      	ldr	r2, [r4, #96]	@ 0x60
    return HAL_TIMEOUT;
 8005bb0:	2503      	movs	r5, #3
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 8005bb2:	4313      	orrs	r3, r2
 8005bb4:	6623      	str	r3, [r4, #96]	@ 0x60
      return HAL_TIMEOUT;
 8005bb6:	e016      	b.n	8005be6 <SPI_EndRxTransaction+0x76>
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8005bb8:	2382      	movs	r3, #130	@ 0x82
 8005bba:	6862      	ldr	r2, [r4, #4]
 8005bbc:	005b      	lsls	r3, r3, #1
 8005bbe:	429a      	cmp	r2, r3
 8005bc0:	d111      	bne.n	8005be6 <SPI_EndRxTransaction+0x76>
 8005bc2:	2280      	movs	r2, #128	@ 0x80
 8005bc4:	68a3      	ldr	r3, [r4, #8]
 8005bc6:	0212      	lsls	r2, r2, #8
 8005bc8:	4293      	cmp	r3, r2
 8005bca:	d003      	beq.n	8005bd4 <SPI_EndRxTransaction+0x64>
                                               || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 8005bcc:	2280      	movs	r2, #128	@ 0x80
 8005bce:	00d2      	lsls	r2, r2, #3
 8005bd0:	4293      	cmp	r3, r2
 8005bd2:	d108      	bne.n	8005be6 <SPI_EndRxTransaction+0x76>
    if (SPI_WaitFifoStateUntilTimeout(hspi, SPI_FLAG_FRLVL, SPI_FRLVL_EMPTY, Timeout, Tickstart) != HAL_OK)
 8005bd4:	21c0      	movs	r1, #192	@ 0xc0
 8005bd6:	003b      	movs	r3, r7
 8005bd8:	0032      	movs	r2, r6
 8005bda:	0020      	movs	r0, r4
 8005bdc:	00c9      	lsls	r1, r1, #3
 8005bde:	f7ff ff5b 	bl	8005a98 <SPI_WaitFifoStateUntilTimeout.constprop.0>
 8005be2:	2800      	cmp	r0, #0
 8005be4:	d1e2      	bne.n	8005bac <SPI_EndRxTransaction+0x3c>
    }
  }
  return HAL_OK;
}
 8005be6:	0028      	movs	r0, r5
 8005be8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08005bea <SPI_EndRxTxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t Tickstart)
{
 8005bea:	b570      	push	{r4, r5, r6, lr}
  /* Control if the TX fifo is empty */
  if (SPI_WaitFifoStateUntilTimeout(hspi, SPI_FLAG_FTLVL, SPI_FTLVL_EMPTY, Timeout, Tickstart) != HAL_OK)
 8005bec:	0013      	movs	r3, r2
{
 8005bee:	000d      	movs	r5, r1
 8005bf0:	0016      	movs	r6, r2
  if (SPI_WaitFifoStateUntilTimeout(hspi, SPI_FLAG_FTLVL, SPI_FTLVL_EMPTY, Timeout, Tickstart) != HAL_OK)
 8005bf2:	000a      	movs	r2, r1
 8005bf4:	21c0      	movs	r1, #192	@ 0xc0
 8005bf6:	0149      	lsls	r1, r1, #5
{
 8005bf8:	0004      	movs	r4, r0
  if (SPI_WaitFifoStateUntilTimeout(hspi, SPI_FLAG_FTLVL, SPI_FTLVL_EMPTY, Timeout, Tickstart) != HAL_OK)
 8005bfa:	f7ff ff4d 	bl	8005a98 <SPI_WaitFifoStateUntilTimeout.constprop.0>
 8005bfe:	2800      	cmp	r0, #0
 8005c00:	d005      	beq.n	8005c0e <SPI_EndRxTxTransaction+0x24>
  }

  /* Control the BSY flag */
  if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
  {
    SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 8005c02:	2320      	movs	r3, #32
    return HAL_TIMEOUT;
 8005c04:	2003      	movs	r0, #3
    SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 8005c06:	6e22      	ldr	r2, [r4, #96]	@ 0x60
 8005c08:	4313      	orrs	r3, r2
 8005c0a:	6623      	str	r3, [r4, #96]	@ 0x60
    SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
    return HAL_TIMEOUT;
  }

  return HAL_OK;
}
 8005c0c:	bd70      	pop	{r4, r5, r6, pc}
  if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 8005c0e:	0032      	movs	r2, r6
 8005c10:	0029      	movs	r1, r5
 8005c12:	0020      	movs	r0, r4
 8005c14:	f7ff fee4 	bl	80059e0 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 8005c18:	2800      	cmp	r0, #0
 8005c1a:	d1f2      	bne.n	8005c02 <SPI_EndRxTxTransaction+0x18>
  if (SPI_WaitFifoStateUntilTimeout(hspi, SPI_FLAG_FRLVL, SPI_FRLVL_EMPTY, Timeout, Tickstart) != HAL_OK)
 8005c1c:	21c0      	movs	r1, #192	@ 0xc0
 8005c1e:	0033      	movs	r3, r6
 8005c20:	002a      	movs	r2, r5
 8005c22:	0020      	movs	r0, r4
 8005c24:	00c9      	lsls	r1, r1, #3
 8005c26:	f7ff ff37 	bl	8005a98 <SPI_WaitFifoStateUntilTimeout.constprop.0>
 8005c2a:	2800      	cmp	r0, #0
 8005c2c:	d0ee      	beq.n	8005c0c <SPI_EndRxTxTransaction+0x22>
 8005c2e:	e7e8      	b.n	8005c02 <SPI_EndRxTxTransaction+0x18>

08005c30 <HAL_SPI_Init>:
{
 8005c30:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8005c32:	0004      	movs	r4, r0
    return HAL_ERROR;
 8005c34:	2001      	movs	r0, #1
  if (hspi == NULL)
 8005c36:	2c00      	cmp	r4, #0
 8005c38:	d067      	beq.n	8005d0a <HAL_SPI_Init+0xda>
  if (hspi->Init.TIMode == SPI_TIMODE_DISABLE)
 8005c3a:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8005c3c:	2b00      	cmp	r3, #0
 8005c3e:	d165      	bne.n	8005d0c <HAL_SPI_Init+0xdc>
    if (hspi->Init.Mode == SPI_MODE_MASTER)
 8005c40:	2282      	movs	r2, #130	@ 0x82
 8005c42:	6861      	ldr	r1, [r4, #4]
 8005c44:	0052      	lsls	r2, r2, #1
 8005c46:	4291      	cmp	r1, r2
 8005c48:	d000      	beq.n	8005c4c <HAL_SPI_Init+0x1c>
      hspi->Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 8005c4a:	61e3      	str	r3, [r4, #28]
  hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8005c4c:	2300      	movs	r3, #0
  if (hspi->State == HAL_SPI_STATE_RESET)
 8005c4e:	0025      	movs	r5, r4
  hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8005c50:	62a3      	str	r3, [r4, #40]	@ 0x28
  if (hspi->State == HAL_SPI_STATE_RESET)
 8005c52:	355d      	adds	r5, #93	@ 0x5d
 8005c54:	782b      	ldrb	r3, [r5, #0]
 8005c56:	b2da      	uxtb	r2, r3
 8005c58:	2b00      	cmp	r3, #0
 8005c5a:	d105      	bne.n	8005c68 <HAL_SPI_Init+0x38>
    hspi->Lock = HAL_UNLOCKED;
 8005c5c:	0023      	movs	r3, r4
 8005c5e:	335c      	adds	r3, #92	@ 0x5c
    HAL_SPI_MspInit(hspi);
 8005c60:	0020      	movs	r0, r4
    hspi->Lock = HAL_UNLOCKED;
 8005c62:	701a      	strb	r2, [r3, #0]
    HAL_SPI_MspInit(hspi);
 8005c64:	f7fe fdfc 	bl	8004860 <HAL_SPI_MspInit>
  hspi->State = HAL_SPI_STATE_BUSY;
 8005c68:	2302      	movs	r3, #2
  __HAL_SPI_DISABLE(hspi);
 8005c6a:	2240      	movs	r2, #64	@ 0x40
  hspi->State = HAL_SPI_STATE_BUSY;
 8005c6c:	702b      	strb	r3, [r5, #0]
  __HAL_SPI_DISABLE(hspi);
 8005c6e:	6821      	ldr	r1, [r4, #0]
  if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
 8005c70:	68e6      	ldr	r6, [r4, #12]
  __HAL_SPI_DISABLE(hspi);
 8005c72:	680b      	ldr	r3, [r1, #0]
 8005c74:	4393      	bics	r3, r2
  if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
 8005c76:	22e0      	movs	r2, #224	@ 0xe0
  __HAL_SPI_DISABLE(hspi);
 8005c78:	600b      	str	r3, [r1, #0]
  if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
 8005c7a:	00d2      	lsls	r2, r2, #3
 8005c7c:	2300      	movs	r3, #0
 8005c7e:	4296      	cmp	r6, r2
 8005c80:	d948      	bls.n	8005d14 <HAL_SPI_Init+0xe4>
  if ((hspi->Init.DataSize != SPI_DATASIZE_16BIT) && (hspi->Init.DataSize != SPI_DATASIZE_8BIT))
 8005c82:	22f0      	movs	r2, #240	@ 0xf0
 8005c84:	0018      	movs	r0, r3
 8005c86:	0112      	lsls	r2, r2, #4
 8005c88:	4296      	cmp	r6, r2
 8005c8a:	d000      	beq.n	8005c8e <HAL_SPI_Init+0x5e>
    hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8005c8c:	62a3      	str	r3, [r4, #40]	@ 0x28
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 8005c8e:	2282      	movs	r2, #130	@ 0x82
 8005c90:	2784      	movs	r7, #132	@ 0x84
 8005c92:	6863      	ldr	r3, [r4, #4]
 8005c94:	0052      	lsls	r2, r2, #1
 8005c96:	4013      	ands	r3, r2
 8005c98:	68a2      	ldr	r2, [r4, #8]
 8005c9a:	023f      	lsls	r7, r7, #8
 8005c9c:	403a      	ands	r2, r7
 8005c9e:	2702      	movs	r7, #2
 8005ca0:	4313      	orrs	r3, r2
 8005ca2:	6922      	ldr	r2, [r4, #16]
 8005ca4:	69a5      	ldr	r5, [r4, #24]
 8005ca6:	403a      	ands	r2, r7
 8005ca8:	4313      	orrs	r3, r2
 8005caa:	2201      	movs	r2, #1
 8005cac:	6967      	ldr	r7, [r4, #20]
 8005cae:	4017      	ands	r7, r2
 8005cb0:	433b      	orrs	r3, r7
 8005cb2:	2780      	movs	r7, #128	@ 0x80
 8005cb4:	00bf      	lsls	r7, r7, #2
 8005cb6:	402f      	ands	r7, r5
 8005cb8:	433b      	orrs	r3, r7
 8005cba:	69e7      	ldr	r7, [r4, #28]
 8005cbc:	3237      	adds	r2, #55	@ 0x37
 8005cbe:	4017      	ands	r7, r2
 8005cc0:	433b      	orrs	r3, r7
 8005cc2:	6a27      	ldr	r7, [r4, #32]
 8005cc4:	3248      	adds	r2, #72	@ 0x48
 8005cc6:	4017      	ands	r7, r2
 8005cc8:	2280      	movs	r2, #128	@ 0x80
 8005cca:	433b      	orrs	r3, r7
 8005ccc:	6aa7      	ldr	r7, [r4, #40]	@ 0x28
 8005cce:	0192      	lsls	r2, r2, #6
 8005cd0:	4017      	ands	r7, r2
 8005cd2:	433b      	orrs	r3, r7
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) |
 8005cd4:	2710      	movs	r7, #16
 8005cd6:	2208      	movs	r2, #8
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 8005cd8:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) |
 8005cda:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8005cdc:	0c2d      	lsrs	r5, r5, #16
 8005cde:	403b      	ands	r3, r7
 8005ce0:	6b67      	ldr	r7, [r4, #52]	@ 0x34
 8005ce2:	4017      	ands	r7, r2
 8005ce4:	433b      	orrs	r3, r7
 8005ce6:	27f0      	movs	r7, #240	@ 0xf0
 8005ce8:	013f      	lsls	r7, r7, #4
 8005cea:	403e      	ands	r6, r7
 8005cec:	4333      	orrs	r3, r6
 8005cee:	2604      	movs	r6, #4
 8005cf0:	4035      	ands	r5, r6
 8005cf2:	432b      	orrs	r3, r5
 8005cf4:	4303      	orrs	r3, r0
 8005cf6:	604b      	str	r3, [r1, #4]
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 8005cf8:	69cb      	ldr	r3, [r1, #28]
 8005cfa:	4808      	ldr	r0, [pc, #32]	@ (8005d1c <HAL_SPI_Init+0xec>)
 8005cfc:	4003      	ands	r3, r0
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 8005cfe:	2000      	movs	r0, #0
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 8005d00:	61cb      	str	r3, [r1, #28]
  hspi->State     = HAL_SPI_STATE_READY;
 8005d02:	2301      	movs	r3, #1
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 8005d04:	6620      	str	r0, [r4, #96]	@ 0x60
  hspi->State     = HAL_SPI_STATE_READY;
 8005d06:	345d      	adds	r4, #93	@ 0x5d
 8005d08:	7023      	strb	r3, [r4, #0]
}
 8005d0a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    hspi->Init.CLKPolarity = SPI_POLARITY_LOW;
 8005d0c:	2300      	movs	r3, #0
 8005d0e:	6123      	str	r3, [r4, #16]
    hspi->Init.CLKPhase    = SPI_PHASE_1EDGE;
 8005d10:	6163      	str	r3, [r4, #20]
 8005d12:	e79b      	b.n	8005c4c <HAL_SPI_Init+0x1c>
 8005d14:	2080      	movs	r0, #128	@ 0x80
 8005d16:	0140      	lsls	r0, r0, #5
 8005d18:	e7b6      	b.n	8005c88 <HAL_SPI_Init+0x58>
 8005d1a:	46c0      	nop			@ (mov r8, r8)
 8005d1c:	fffff7ff 	.word	0xfffff7ff

08005d20 <HAL_SPI_TransmitReceive>:
{
 8005d20:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8005d22:	001e      	movs	r6, r3
  __HAL_LOCK(hspi);
 8005d24:	0003      	movs	r3, r0
 8005d26:	335c      	adds	r3, #92	@ 0x5c
{
 8005d28:	0017      	movs	r7, r2
  __HAL_LOCK(hspi);
 8005d2a:	781a      	ldrb	r2, [r3, #0]
{
 8005d2c:	0004      	movs	r4, r0
 8005d2e:	000d      	movs	r5, r1
  __HAL_LOCK(hspi);
 8005d30:	2002      	movs	r0, #2
 8005d32:	2a01      	cmp	r2, #1
 8005d34:	d01b      	beq.n	8005d6e <HAL_SPI_TransmitReceive+0x4e>
 8005d36:	2201      	movs	r2, #1
 8005d38:	701a      	strb	r2, [r3, #0]
  tickstart = HAL_GetTick();
 8005d3a:	f7fe ff1b 	bl	8004b74 <HAL_GetTick>
  tmp_state           = hspi->State;
 8005d3e:	0023      	movs	r3, r4
  tickstart = HAL_GetTick();
 8005d40:	9001      	str	r0, [sp, #4]
  tmp_state           = hspi->State;
 8005d42:	335d      	adds	r3, #93	@ 0x5d
 8005d44:	781b      	ldrb	r3, [r3, #0]
  tmp_mode            = hspi->Init.Mode;
 8005d46:	6861      	ldr	r1, [r4, #4]
  tmp_state           = hspi->State;
 8005d48:	b2da      	uxtb	r2, r3
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 8005d4a:	2b01      	cmp	r3, #1
 8005d4c:	d009      	beq.n	8005d62 <HAL_SPI_TransmitReceive+0x42>
 8005d4e:	2382      	movs	r3, #130	@ 0x82
    errorcode = HAL_BUSY;
 8005d50:	2002      	movs	r0, #2
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 8005d52:	005b      	lsls	r3, r3, #1
 8005d54:	4299      	cmp	r1, r3
 8005d56:	d107      	bne.n	8005d68 <HAL_SPI_TransmitReceive+0x48>
        ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_state == HAL_SPI_STATE_BUSY_RX))))
 8005d58:	68a3      	ldr	r3, [r4, #8]
 8005d5a:	2b00      	cmp	r3, #0
 8005d5c:	d104      	bne.n	8005d68 <HAL_SPI_TransmitReceive+0x48>
 8005d5e:	2a04      	cmp	r2, #4
 8005d60:	d102      	bne.n	8005d68 <HAL_SPI_TransmitReceive+0x48>
  if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
 8005d62:	2d00      	cmp	r5, #0
 8005d64:	d104      	bne.n	8005d70 <HAL_SPI_TransmitReceive+0x50>
    errorcode = HAL_ERROR;
 8005d66:	2001      	movs	r0, #1
  __HAL_UNLOCK(hspi);
 8005d68:	2300      	movs	r3, #0
 8005d6a:	345c      	adds	r4, #92	@ 0x5c
 8005d6c:	7023      	strb	r3, [r4, #0]
}
 8005d6e:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
  if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
 8005d70:	2f00      	cmp	r7, #0
 8005d72:	d0f8      	beq.n	8005d66 <HAL_SPI_TransmitReceive+0x46>
 8005d74:	2e00      	cmp	r6, #0
 8005d76:	d0f6      	beq.n	8005d66 <HAL_SPI_TransmitReceive+0x46>
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 8005d78:	0023      	movs	r3, r4
 8005d7a:	335d      	adds	r3, #93	@ 0x5d
 8005d7c:	781a      	ldrb	r2, [r3, #0]
 8005d7e:	2a04      	cmp	r2, #4
 8005d80:	d001      	beq.n	8005d86 <HAL_SPI_TransmitReceive+0x66>
    hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
 8005d82:	2205      	movs	r2, #5
 8005d84:	701a      	strb	r2, [r3, #0]
  hspi->RxXferCount = Size;
 8005d86:	0022      	movs	r2, r4
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8005d88:	2300      	movs	r3, #0
  hspi->RxXferCount = Size;
 8005d8a:	3208      	adds	r2, #8
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8005d8c:	6623      	str	r3, [r4, #96]	@ 0x60
  hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 8005d8e:	6427      	str	r7, [r4, #64]	@ 0x40
  hspi->RxXferCount = Size;
 8005d90:	87d6      	strh	r6, [r2, #62]	@ 0x3e
  hspi->RxXferSize  = Size;
 8005d92:	1da2      	adds	r2, r4, #6
 8005d94:	87d6      	strh	r6, [r2, #62]	@ 0x3e
  if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
 8005d96:	22e0      	movs	r2, #224	@ 0xe0
 8005d98:	68e0      	ldr	r0, [r4, #12]
  hspi->RxISR       = NULL;
 8005d9a:	64e3      	str	r3, [r4, #76]	@ 0x4c
  hspi->TxISR       = NULL;
 8005d9c:	6523      	str	r3, [r4, #80]	@ 0x50
  hspi->pTxBuffPtr  = (uint8_t *)pTxData;
 8005d9e:	63a5      	str	r5, [r4, #56]	@ 0x38
    CLEAR_BIT(hspi->Instance->CR2, SPI_RXFIFO_THRESHOLD);
 8005da0:	6823      	ldr	r3, [r4, #0]
  hspi->TxXferCount = Size;
 8005da2:	87e6      	strh	r6, [r4, #62]	@ 0x3e
  hspi->TxXferSize  = Size;
 8005da4:	87a6      	strh	r6, [r4, #60]	@ 0x3c
  if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
 8005da6:	00d2      	lsls	r2, r2, #3
 8005da8:	4290      	cmp	r0, r2
 8005daa:	d935      	bls.n	8005e18 <HAL_SPI_TransmitReceive+0xf8>
    CLEAR_BIT(hspi->Instance->CR2, SPI_RXFIFO_THRESHOLD);
 8005dac:	685a      	ldr	r2, [r3, #4]
 8005dae:	4f60      	ldr	r7, [pc, #384]	@ (8005f30 <HAL_SPI_TransmitReceive+0x210>)
 8005db0:	403a      	ands	r2, r7
    SET_BIT(hspi->Instance->CR2, SPI_RXFIFO_THRESHOLD);
 8005db2:	605a      	str	r2, [r3, #4]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8005db4:	2240      	movs	r2, #64	@ 0x40
 8005db6:	681f      	ldr	r7, [r3, #0]
 8005db8:	4217      	tst	r7, r2
 8005dba:	d102      	bne.n	8005dc2 <HAL_SPI_TransmitReceive+0xa2>
    __HAL_SPI_ENABLE(hspi);
 8005dbc:	681f      	ldr	r7, [r3, #0]
 8005dbe:	433a      	orrs	r2, r7
 8005dc0:	601a      	str	r2, [r3, #0]
  if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
 8005dc2:	22e0      	movs	r2, #224	@ 0xe0
 8005dc4:	00d2      	lsls	r2, r2, #3
 8005dc6:	4290      	cmp	r0, r2
 8005dc8:	d961      	bls.n	8005e8e <HAL_SPI_TransmitReceive+0x16e>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8005dca:	2900      	cmp	r1, #0
 8005dcc:	d001      	beq.n	8005dd2 <HAL_SPI_TransmitReceive+0xb2>
 8005dce:	2e01      	cmp	r6, #1
 8005dd0:	d107      	bne.n	8005de2 <HAL_SPI_TransmitReceive+0xc2>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 8005dd2:	882a      	ldrh	r2, [r5, #0]
      hspi->pTxBuffPtr += sizeof(uint16_t);
 8005dd4:	3502      	adds	r5, #2
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 8005dd6:	60da      	str	r2, [r3, #12]
      hspi->TxXferCount--;
 8005dd8:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
      hspi->pTxBuffPtr += sizeof(uint16_t);
 8005dda:	63a5      	str	r5, [r4, #56]	@ 0x38
      hspi->TxXferCount--;
 8005ddc:	3b01      	subs	r3, #1
 8005dde:	b29b      	uxth	r3, r3
 8005de0:	87e3      	strh	r3, [r4, #62]	@ 0x3e
        txallowed = 1U;
 8005de2:	2501      	movs	r5, #1
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 8005de4:	2702      	movs	r7, #2
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 8005de6:	002e      	movs	r6, r5
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 8005de8:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 8005dea:	2b00      	cmp	r3, #0
 8005dec:	d119      	bne.n	8005e22 <HAL_SPI_TransmitReceive+0x102>
 8005dee:	0023      	movs	r3, r4
 8005df0:	3308      	adds	r3, #8
 8005df2:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8005df4:	2b00      	cmp	r3, #0
 8005df6:	d114      	bne.n	8005e22 <HAL_SPI_TransmitReceive+0x102>
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 8005df8:	0020      	movs	r0, r4
 8005dfa:	9a01      	ldr	r2, [sp, #4]
 8005dfc:	9908      	ldr	r1, [sp, #32]
 8005dfe:	f7ff fef4 	bl	8005bea <SPI_EndRxTxTransaction>
 8005e02:	2800      	cmp	r0, #0
 8005e04:	d000      	beq.n	8005e08 <HAL_SPI_TransmitReceive+0xe8>
 8005e06:	e08e      	b.n	8005f26 <HAL_SPI_TransmitReceive+0x206>
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8005e08:	6e23      	ldr	r3, [r4, #96]	@ 0x60
 8005e0a:	2b00      	cmp	r3, #0
 8005e0c:	d1ab      	bne.n	8005d66 <HAL_SPI_TransmitReceive+0x46>
    hspi->State = HAL_SPI_STATE_READY;
 8005e0e:	0023      	movs	r3, r4
 8005e10:	2201      	movs	r2, #1
 8005e12:	335d      	adds	r3, #93	@ 0x5d
 8005e14:	701a      	strb	r2, [r3, #0]
 8005e16:	e7a7      	b.n	8005d68 <HAL_SPI_TransmitReceive+0x48>
    SET_BIT(hspi->Instance->CR2, SPI_RXFIFO_THRESHOLD);
 8005e18:	2280      	movs	r2, #128	@ 0x80
 8005e1a:	685f      	ldr	r7, [r3, #4]
 8005e1c:	0152      	lsls	r2, r2, #5
 8005e1e:	433a      	orrs	r2, r7
 8005e20:	e7c7      	b.n	8005db2 <HAL_SPI_TransmitReceive+0x92>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 8005e22:	6820      	ldr	r0, [r4, #0]
 8005e24:	6883      	ldr	r3, [r0, #8]
 8005e26:	423b      	tst	r3, r7
 8005e28:	d00e      	beq.n	8005e48 <HAL_SPI_TransmitReceive+0x128>
 8005e2a:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 8005e2c:	2b00      	cmp	r3, #0
 8005e2e:	d00b      	beq.n	8005e48 <HAL_SPI_TransmitReceive+0x128>
 8005e30:	2d01      	cmp	r5, #1
 8005e32:	d108      	bne.n	8005e46 <HAL_SPI_TransmitReceive+0x126>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 8005e34:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 8005e36:	881a      	ldrh	r2, [r3, #0]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 8005e38:	3302      	adds	r3, #2
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 8005e3a:	60c2      	str	r2, [r0, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 8005e3c:	63a3      	str	r3, [r4, #56]	@ 0x38
        hspi->TxXferCount--;
 8005e3e:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 8005e40:	3b01      	subs	r3, #1
 8005e42:	b29b      	uxth	r3, r3
 8005e44:	87e3      	strh	r3, [r4, #62]	@ 0x3e
{
 8005e46:	2500      	movs	r5, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 8005e48:	6883      	ldr	r3, [r0, #8]
 8005e4a:	0019      	movs	r1, r3
 8005e4c:	4031      	ands	r1, r6
 8005e4e:	4233      	tst	r3, r6
 8005e50:	d00e      	beq.n	8005e70 <HAL_SPI_TransmitReceive+0x150>
 8005e52:	0022      	movs	r2, r4
 8005e54:	3208      	adds	r2, #8
 8005e56:	8fd3      	ldrh	r3, [r2, #62]	@ 0x3e
 8005e58:	2b00      	cmp	r3, #0
 8005e5a:	d009      	beq.n	8005e70 <HAL_SPI_TransmitReceive+0x150>
        txallowed = 1U;
 8005e5c:	000d      	movs	r5, r1
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 8005e5e:	68c0      	ldr	r0, [r0, #12]
 8005e60:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8005e62:	8018      	strh	r0, [r3, #0]
        hspi->pRxBuffPtr += sizeof(uint16_t);
 8005e64:	3302      	adds	r3, #2
 8005e66:	6423      	str	r3, [r4, #64]	@ 0x40
        hspi->RxXferCount--;
 8005e68:	8fd3      	ldrh	r3, [r2, #62]	@ 0x3e
 8005e6a:	3b01      	subs	r3, #1
 8005e6c:	b29b      	uxth	r3, r3
 8005e6e:	87d3      	strh	r3, [r2, #62]	@ 0x3e
      if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
 8005e70:	f7fe fe80 	bl	8004b74 <HAL_GetTick>
 8005e74:	9b01      	ldr	r3, [sp, #4]
 8005e76:	1ac0      	subs	r0, r0, r3
 8005e78:	9b08      	ldr	r3, [sp, #32]
 8005e7a:	4298      	cmp	r0, r3
 8005e7c:	d3b4      	bcc.n	8005de8 <HAL_SPI_TransmitReceive+0xc8>
 8005e7e:	3301      	adds	r3, #1
 8005e80:	d0b2      	beq.n	8005de8 <HAL_SPI_TransmitReceive+0xc8>
        hspi->State = HAL_SPI_STATE_READY;
 8005e82:	0023      	movs	r3, r4
 8005e84:	2201      	movs	r2, #1
 8005e86:	335d      	adds	r3, #93	@ 0x5d
        errorcode = HAL_TIMEOUT;
 8005e88:	2003      	movs	r0, #3
        hspi->State = HAL_SPI_STATE_READY;
 8005e8a:	701a      	strb	r2, [r3, #0]
        goto error;
 8005e8c:	e76c      	b.n	8005d68 <HAL_SPI_TransmitReceive+0x48>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8005e8e:	2900      	cmp	r1, #0
 8005e90:	d001      	beq.n	8005e96 <HAL_SPI_TransmitReceive+0x176>
 8005e92:	2e01      	cmp	r6, #1
 8005e94:	d108      	bne.n	8005ea8 <HAL_SPI_TransmitReceive+0x188>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 8005e96:	782a      	ldrb	r2, [r5, #0]
 8005e98:	731a      	strb	r2, [r3, #12]
      hspi->pTxBuffPtr += sizeof(uint8_t);
 8005e9a:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 8005e9c:	3301      	adds	r3, #1
 8005e9e:	63a3      	str	r3, [r4, #56]	@ 0x38
      hspi->TxXferCount--;
 8005ea0:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 8005ea2:	3b01      	subs	r3, #1
 8005ea4:	b29b      	uxth	r3, r3
 8005ea6:	87e3      	strh	r3, [r4, #62]	@ 0x3e
        txallowed = 1U;
 8005ea8:	2501      	movs	r5, #1
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 8005eaa:	2702      	movs	r7, #2
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 8005eac:	002e      	movs	r6, r5
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 8005eae:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 8005eb0:	2b00      	cmp	r3, #0
 8005eb2:	d104      	bne.n	8005ebe <HAL_SPI_TransmitReceive+0x19e>
 8005eb4:	0023      	movs	r3, r4
 8005eb6:	3308      	adds	r3, #8
 8005eb8:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8005eba:	2b00      	cmp	r3, #0
 8005ebc:	d09c      	beq.n	8005df8 <HAL_SPI_TransmitReceive+0xd8>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 8005ebe:	6823      	ldr	r3, [r4, #0]
 8005ec0:	689a      	ldr	r2, [r3, #8]
 8005ec2:	423a      	tst	r2, r7
 8005ec4:	d00f      	beq.n	8005ee6 <HAL_SPI_TransmitReceive+0x1c6>
 8005ec6:	8fe2      	ldrh	r2, [r4, #62]	@ 0x3e
 8005ec8:	2a00      	cmp	r2, #0
 8005eca:	d00c      	beq.n	8005ee6 <HAL_SPI_TransmitReceive+0x1c6>
 8005ecc:	2d01      	cmp	r5, #1
 8005ece:	d109      	bne.n	8005ee4 <HAL_SPI_TransmitReceive+0x1c4>
        *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
 8005ed0:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 8005ed2:	7812      	ldrb	r2, [r2, #0]
 8005ed4:	731a      	strb	r2, [r3, #12]
        hspi->pTxBuffPtr++;
 8005ed6:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 8005ed8:	3301      	adds	r3, #1
 8005eda:	63a3      	str	r3, [r4, #56]	@ 0x38
        hspi->TxXferCount--;
 8005edc:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 8005ede:	3b01      	subs	r3, #1
 8005ee0:	b29b      	uxth	r3, r3
 8005ee2:	87e3      	strh	r3, [r4, #62]	@ 0x3e
        txallowed = 1U;
 8005ee4:	2500      	movs	r5, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 8005ee6:	6823      	ldr	r3, [r4, #0]
 8005ee8:	689a      	ldr	r2, [r3, #8]
 8005eea:	0011      	movs	r1, r2
 8005eec:	4031      	ands	r1, r6
 8005eee:	4232      	tst	r2, r6
 8005ef0:	d00f      	beq.n	8005f12 <HAL_SPI_TransmitReceive+0x1f2>
 8005ef2:	0022      	movs	r2, r4
 8005ef4:	3208      	adds	r2, #8
 8005ef6:	8fd0      	ldrh	r0, [r2, #62]	@ 0x3e
 8005ef8:	2800      	cmp	r0, #0
 8005efa:	d00a      	beq.n	8005f12 <HAL_SPI_TransmitReceive+0x1f2>
        txallowed = 1U;
 8005efc:	000d      	movs	r5, r1
        (*(uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 8005efe:	7b1b      	ldrb	r3, [r3, #12]
 8005f00:	6c20      	ldr	r0, [r4, #64]	@ 0x40
 8005f02:	7003      	strb	r3, [r0, #0]
        hspi->pRxBuffPtr++;
 8005f04:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8005f06:	3301      	adds	r3, #1
 8005f08:	6423      	str	r3, [r4, #64]	@ 0x40
        hspi->RxXferCount--;
 8005f0a:	8fd3      	ldrh	r3, [r2, #62]	@ 0x3e
 8005f0c:	3b01      	subs	r3, #1
 8005f0e:	b29b      	uxth	r3, r3
 8005f10:	87d3      	strh	r3, [r2, #62]	@ 0x3e
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 8005f12:	f7fe fe2f 	bl	8004b74 <HAL_GetTick>
 8005f16:	9b01      	ldr	r3, [sp, #4]
 8005f18:	1ac0      	subs	r0, r0, r3
 8005f1a:	9b08      	ldr	r3, [sp, #32]
 8005f1c:	4298      	cmp	r0, r3
 8005f1e:	d3c6      	bcc.n	8005eae <HAL_SPI_TransmitReceive+0x18e>
 8005f20:	3301      	adds	r3, #1
 8005f22:	d0c4      	beq.n	8005eae <HAL_SPI_TransmitReceive+0x18e>
 8005f24:	e7ad      	b.n	8005e82 <HAL_SPI_TransmitReceive+0x162>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 8005f26:	2320      	movs	r3, #32
    errorcode = HAL_ERROR;
 8005f28:	2001      	movs	r0, #1
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 8005f2a:	6623      	str	r3, [r4, #96]	@ 0x60
 8005f2c:	e76c      	b.n	8005e08 <HAL_SPI_TransmitReceive+0xe8>
 8005f2e:	46c0      	nop			@ (mov r8, r8)
 8005f30:	ffffefff 	.word	0xffffefff

08005f34 <HAL_SPI_Receive>:
{
 8005f34:	b5f0      	push	{r4, r5, r6, r7, lr}
  if (hspi->State != HAL_SPI_STATE_READY)
 8005f36:	0006      	movs	r6, r0
{
 8005f38:	b087      	sub	sp, #28
 8005f3a:	9104      	str	r1, [sp, #16]
 8005f3c:	9303      	str	r3, [sp, #12]
  if (hspi->State != HAL_SPI_STATE_READY)
 8005f3e:	365d      	adds	r6, #93	@ 0x5d
 8005f40:	7833      	ldrb	r3, [r6, #0]
{
 8005f42:	0004      	movs	r4, r0
 8005f44:	0017      	movs	r7, r2
  if (hspi->State != HAL_SPI_STATE_READY)
 8005f46:	b2dd      	uxtb	r5, r3
 8005f48:	2b01      	cmp	r3, #1
 8005f4a:	d000      	beq.n	8005f4e <HAL_SPI_Receive+0x1a>
 8005f4c:	e0aa      	b.n	80060a4 <HAL_SPI_Receive+0x170>
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 8005f4e:	3304      	adds	r3, #4
 8005f50:	6842      	ldr	r2, [r0, #4]
 8005f52:	33ff      	adds	r3, #255	@ 0xff
 8005f54:	429a      	cmp	r2, r3
 8005f56:	d10e      	bne.n	8005f76 <HAL_SPI_Receive+0x42>
 8005f58:	6883      	ldr	r3, [r0, #8]
 8005f5a:	2b00      	cmp	r3, #0
 8005f5c:	d10b      	bne.n	8005f76 <HAL_SPI_Receive+0x42>
    hspi->State = HAL_SPI_STATE_BUSY_RX;
 8005f5e:	3304      	adds	r3, #4
 8005f60:	7033      	strb	r3, [r6, #0]
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 8005f62:	9b03      	ldr	r3, [sp, #12]
 8005f64:	000a      	movs	r2, r1
 8005f66:	9300      	str	r3, [sp, #0]
 8005f68:	003b      	movs	r3, r7
 8005f6a:	f7ff fed9 	bl	8005d20 <HAL_SPI_TransmitReceive>
 8005f6e:	0005      	movs	r5, r0
}
 8005f70:	0028      	movs	r0, r5
 8005f72:	b007      	add	sp, #28
 8005f74:	bdf0      	pop	{r4, r5, r6, r7, pc}
  __HAL_LOCK(hspi);
 8005f76:	0023      	movs	r3, r4
 8005f78:	335c      	adds	r3, #92	@ 0x5c
 8005f7a:	781a      	ldrb	r2, [r3, #0]
 8005f7c:	2a01      	cmp	r2, #1
 8005f7e:	d100      	bne.n	8005f82 <HAL_SPI_Receive+0x4e>
 8005f80:	e092      	b.n	80060a8 <HAL_SPI_Receive+0x174>
 8005f82:	2201      	movs	r2, #1
 8005f84:	701a      	strb	r2, [r3, #0]
  tickstart = HAL_GetTick();
 8005f86:	f7fe fdf5 	bl	8004b74 <HAL_GetTick>
  if ((pData == NULL) || (Size == 0U))
 8005f8a:	9b04      	ldr	r3, [sp, #16]
  tickstart = HAL_GetTick();
 8005f8c:	9005      	str	r0, [sp, #20]
  if ((pData == NULL) || (Size == 0U))
 8005f8e:	2b00      	cmp	r3, #0
 8005f90:	d077      	beq.n	8006082 <HAL_SPI_Receive+0x14e>
 8005f92:	2f00      	cmp	r7, #0
 8005f94:	d075      	beq.n	8006082 <HAL_SPI_Receive+0x14e>
  hspi->State       = HAL_SPI_STATE_BUSY_RX;
 8005f96:	2304      	movs	r3, #4
 8005f98:	7033      	strb	r3, [r6, #0]
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8005f9a:	2300      	movs	r3, #0
  hspi->pRxBuffPtr  = (uint8_t *)pData;
 8005f9c:	9a04      	ldr	r2, [sp, #16]
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8005f9e:	6623      	str	r3, [r4, #96]	@ 0x60
  hspi->pRxBuffPtr  = (uint8_t *)pData;
 8005fa0:	6422      	str	r2, [r4, #64]	@ 0x40
  hspi->RxXferSize  = Size;
 8005fa2:	1da2      	adds	r2, r4, #6
 8005fa4:	87d7      	strh	r7, [r2, #62]	@ 0x3e
  hspi->RxXferCount = Size;
 8005fa6:	3202      	adds	r2, #2
 8005fa8:	87d7      	strh	r7, [r2, #62]	@ 0x3e
  if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
 8005faa:	22e0      	movs	r2, #224	@ 0xe0
 8005fac:	68e1      	ldr	r1, [r4, #12]
  hspi->pTxBuffPtr  = (uint8_t *)NULL;
 8005fae:	63a3      	str	r3, [r4, #56]	@ 0x38
  hspi->TxXferSize  = 0U;
 8005fb0:	87a3      	strh	r3, [r4, #60]	@ 0x3c
  hspi->TxXferCount = 0U;
 8005fb2:	87e3      	strh	r3, [r4, #62]	@ 0x3e
  hspi->RxISR       = NULL;
 8005fb4:	64e3      	str	r3, [r4, #76]	@ 0x4c
  hspi->TxISR       = NULL;
 8005fb6:	6523      	str	r3, [r4, #80]	@ 0x50
  if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
 8005fb8:	00d2      	lsls	r2, r2, #3
    CLEAR_BIT(hspi->Instance->CR2, SPI_RXFIFO_THRESHOLD);
 8005fba:	6823      	ldr	r3, [r4, #0]
  if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
 8005fbc:	4291      	cmp	r1, r2
 8005fbe:	d92f      	bls.n	8006020 <HAL_SPI_Receive+0xec>
    CLEAR_BIT(hspi->Instance->CR2, SPI_RXFIFO_THRESHOLD);
 8005fc0:	685a      	ldr	r2, [r3, #4]
 8005fc2:	483a      	ldr	r0, [pc, #232]	@ (80060ac <HAL_SPI_Receive+0x178>)
 8005fc4:	4002      	ands	r2, r0
    SET_BIT(hspi->Instance->CR2, SPI_RXFIFO_THRESHOLD);
 8005fc6:	605a      	str	r2, [r3, #4]
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8005fc8:	2280      	movs	r2, #128	@ 0x80
 8005fca:	68a0      	ldr	r0, [r4, #8]
 8005fcc:	0212      	lsls	r2, r2, #8
 8005fce:	4290      	cmp	r0, r2
 8005fd0:	d107      	bne.n	8005fe2 <HAL_SPI_Receive+0xae>
    __HAL_SPI_DISABLE(hspi);
 8005fd2:	2040      	movs	r0, #64	@ 0x40
 8005fd4:	681a      	ldr	r2, [r3, #0]
 8005fd6:	4382      	bics	r2, r0
 8005fd8:	601a      	str	r2, [r3, #0]
    SPI_1LINE_RX(hspi);
 8005fda:	681a      	ldr	r2, [r3, #0]
 8005fdc:	4834      	ldr	r0, [pc, #208]	@ (80060b0 <HAL_SPI_Receive+0x17c>)
 8005fde:	4002      	ands	r2, r0
 8005fe0:	601a      	str	r2, [r3, #0]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8005fe2:	2240      	movs	r2, #64	@ 0x40
 8005fe4:	6818      	ldr	r0, [r3, #0]
 8005fe6:	4210      	tst	r0, r2
 8005fe8:	d102      	bne.n	8005ff0 <HAL_SPI_Receive+0xbc>
    __HAL_SPI_ENABLE(hspi);
 8005fea:	6818      	ldr	r0, [r3, #0]
 8005fec:	4302      	orrs	r2, r0
 8005fee:	601a      	str	r2, [r3, #0]
  if (hspi->Init.DataSize <= SPI_DATASIZE_8BIT)
 8005ff0:	23e0      	movs	r3, #224	@ 0xe0
 8005ff2:	0027      	movs	r7, r4
 8005ff4:	00db      	lsls	r3, r3, #3
 8005ff6:	3708      	adds	r7, #8
 8005ff8:	4299      	cmp	r1, r3
 8005ffa:	d925      	bls.n	8006048 <HAL_SPI_Receive+0x114>
    while (hspi->RxXferCount > 0U)
 8005ffc:	8ffb      	ldrh	r3, [r7, #62]	@ 0x3e
 8005ffe:	2b00      	cmp	r3, #0
 8006000:	d025      	beq.n	800604e <HAL_SPI_Receive+0x11a>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 8006002:	2101      	movs	r1, #1
 8006004:	6823      	ldr	r3, [r4, #0]
 8006006:	689a      	ldr	r2, [r3, #8]
 8006008:	420a      	tst	r2, r1
 800600a:	d03e      	beq.n	800608a <HAL_SPI_Receive+0x156>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800600c:	68da      	ldr	r2, [r3, #12]
 800600e:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8006010:	801a      	strh	r2, [r3, #0]
        hspi->pRxBuffPtr += sizeof(uint16_t);
 8006012:	3302      	adds	r3, #2
 8006014:	6423      	str	r3, [r4, #64]	@ 0x40
        hspi->RxXferCount--;
 8006016:	8ffb      	ldrh	r3, [r7, #62]	@ 0x3e
 8006018:	3b01      	subs	r3, #1
 800601a:	b29b      	uxth	r3, r3
 800601c:	87fb      	strh	r3, [r7, #62]	@ 0x3e
 800601e:	e7ed      	b.n	8005ffc <HAL_SPI_Receive+0xc8>
    SET_BIT(hspi->Instance->CR2, SPI_RXFIFO_THRESHOLD);
 8006020:	2280      	movs	r2, #128	@ 0x80
 8006022:	6858      	ldr	r0, [r3, #4]
 8006024:	0152      	lsls	r2, r2, #5
 8006026:	4302      	orrs	r2, r0
 8006028:	e7cd      	b.n	8005fc6 <HAL_SPI_Receive+0x92>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800602a:	2101      	movs	r1, #1
 800602c:	6823      	ldr	r3, [r4, #0]
 800602e:	689a      	ldr	r2, [r3, #8]
 8006030:	420a      	tst	r2, r1
 8006032:	d01a      	beq.n	800606a <HAL_SPI_Receive+0x136>
        (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 8006034:	7b1b      	ldrb	r3, [r3, #12]
 8006036:	6c22      	ldr	r2, [r4, #64]	@ 0x40
 8006038:	7013      	strb	r3, [r2, #0]
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800603a:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 800603c:	185b      	adds	r3, r3, r1
 800603e:	6423      	str	r3, [r4, #64]	@ 0x40
        hspi->RxXferCount--;
 8006040:	8ffb      	ldrh	r3, [r7, #62]	@ 0x3e
 8006042:	3b01      	subs	r3, #1
 8006044:	b29b      	uxth	r3, r3
 8006046:	87fb      	strh	r3, [r7, #62]	@ 0x3e
    while (hspi->RxXferCount > 0U)
 8006048:	8ffb      	ldrh	r3, [r7, #62]	@ 0x3e
 800604a:	2b00      	cmp	r3, #0
 800604c:	d1ed      	bne.n	800602a <HAL_SPI_Receive+0xf6>
  if (SPI_EndRxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 800604e:	0020      	movs	r0, r4
 8006050:	9a05      	ldr	r2, [sp, #20]
 8006052:	9903      	ldr	r1, [sp, #12]
 8006054:	f7ff fd8c 	bl	8005b70 <SPI_EndRxTransaction>
 8006058:	2800      	cmp	r0, #0
 800605a:	d120      	bne.n	800609e <HAL_SPI_Receive+0x16a>
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800605c:	6e23      	ldr	r3, [r4, #96]	@ 0x60
 800605e:	2b00      	cmp	r3, #0
 8006060:	d10f      	bne.n	8006082 <HAL_SPI_Receive+0x14e>
    hspi->State = HAL_SPI_STATE_READY;
 8006062:	2201      	movs	r2, #1
  HAL_StatusTypeDef errorcode = HAL_OK;
 8006064:	001d      	movs	r5, r3
    hspi->State = HAL_SPI_STATE_READY;
 8006066:	7032      	strb	r2, [r6, #0]
 8006068:	e00b      	b.n	8006082 <HAL_SPI_Receive+0x14e>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800606a:	f7fe fd83 	bl	8004b74 <HAL_GetTick>
 800606e:	9b05      	ldr	r3, [sp, #20]
 8006070:	1ac0      	subs	r0, r0, r3
 8006072:	9b03      	ldr	r3, [sp, #12]
 8006074:	4298      	cmp	r0, r3
 8006076:	d3e7      	bcc.n	8006048 <HAL_SPI_Receive+0x114>
 8006078:	3301      	adds	r3, #1
 800607a:	d0e5      	beq.n	8006048 <HAL_SPI_Receive+0x114>
          hspi->State = HAL_SPI_STATE_READY;
 800607c:	2301      	movs	r3, #1
          errorcode = HAL_TIMEOUT;
 800607e:	2503      	movs	r5, #3
          hspi->State = HAL_SPI_STATE_READY;
 8006080:	7033      	strb	r3, [r6, #0]
  __HAL_UNLOCK(hspi);
 8006082:	2300      	movs	r3, #0
 8006084:	345c      	adds	r4, #92	@ 0x5c
 8006086:	7023      	strb	r3, [r4, #0]
  return errorcode;
 8006088:	e772      	b.n	8005f70 <HAL_SPI_Receive+0x3c>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800608a:	f7fe fd73 	bl	8004b74 <HAL_GetTick>
 800608e:	9b05      	ldr	r3, [sp, #20]
 8006090:	1ac0      	subs	r0, r0, r3
 8006092:	9b03      	ldr	r3, [sp, #12]
 8006094:	4298      	cmp	r0, r3
 8006096:	d3b1      	bcc.n	8005ffc <HAL_SPI_Receive+0xc8>
 8006098:	3301      	adds	r3, #1
 800609a:	d0af      	beq.n	8005ffc <HAL_SPI_Receive+0xc8>
 800609c:	e7ee      	b.n	800607c <HAL_SPI_Receive+0x148>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800609e:	2320      	movs	r3, #32
 80060a0:	6623      	str	r3, [r4, #96]	@ 0x60
 80060a2:	e7db      	b.n	800605c <HAL_SPI_Receive+0x128>
    errorcode = HAL_BUSY;
 80060a4:	2502      	movs	r5, #2
 80060a6:	e7ec      	b.n	8006082 <HAL_SPI_Receive+0x14e>
  __HAL_LOCK(hspi);
 80060a8:	2502      	movs	r5, #2
 80060aa:	e761      	b.n	8005f70 <HAL_SPI_Receive+0x3c>
 80060ac:	ffffefff 	.word	0xffffefff
 80060b0:	ffffbfff 	.word	0xffffbfff

080060b4 <HAL_SPI_ErrorCallback>:
__weak void HAL_SPI_ErrorCallback(SPI_HandleTypeDef *hspi)
 80060b4:	4770      	bx	lr
	...

080060b8 <HAL_SPI_IRQHandler>:
  uint32_t itsource = hspi->Instance->CR2;
 80060b8:	6803      	ldr	r3, [r0, #0]
{
 80060ba:	b5f0      	push	{r4, r5, r6, r7, lr}
 80060bc:	0004      	movs	r4, r0
  uint32_t itsource = hspi->Instance->CR2;
 80060be:	6858      	ldr	r0, [r3, #4]
  uint32_t itflag   = hspi->Instance->SR;
 80060c0:	6899      	ldr	r1, [r3, #8]
  if ((SPI_CHECK_FLAG(itflag, SPI_FLAG_OVR) == RESET) &&
 80060c2:	2501      	movs	r5, #1
 80060c4:	098a      	lsrs	r2, r1, #6
 80060c6:	0016      	movs	r6, r2
{
 80060c8:	b085      	sub	sp, #20
 80060ca:	402e      	ands	r6, r5
  if ((SPI_CHECK_FLAG(itflag, SPI_FLAG_OVR) == RESET) &&
 80060cc:	422a      	tst	r2, r5
 80060ce:	d108      	bne.n	80060e2 <HAL_SPI_IRQHandler+0x2a>
 80060d0:	4229      	tst	r1, r5
 80060d2:	d006      	beq.n	80060e2 <HAL_SPI_IRQHandler+0x2a>
      (SPI_CHECK_FLAG(itflag, SPI_FLAG_RXNE) != RESET) && (SPI_CHECK_IT_SOURCE(itsource, SPI_IT_RXNE) != RESET))
 80060d4:	0645      	lsls	r5, r0, #25
 80060d6:	d504      	bpl.n	80060e2 <HAL_SPI_IRQHandler+0x2a>
    hspi->RxISR(hspi);
 80060d8:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
    hspi->TxISR(hspi);
 80060da:	0020      	movs	r0, r4
 80060dc:	4798      	blx	r3
}
 80060de:	b005      	add	sp, #20
 80060e0:	bdf0      	pop	{r4, r5, r6, r7, pc}
  if ((SPI_CHECK_FLAG(itflag, SPI_FLAG_TXE) != RESET) && (SPI_CHECK_IT_SOURCE(itsource, SPI_IT_TXE) != RESET))
 80060e2:	078d      	lsls	r5, r1, #30
 80060e4:	d503      	bpl.n	80060ee <HAL_SPI_IRQHandler+0x36>
 80060e6:	0605      	lsls	r5, r0, #24
 80060e8:	d501      	bpl.n	80060ee <HAL_SPI_IRQHandler+0x36>
    hspi->TxISR(hspi);
 80060ea:	6d23      	ldr	r3, [r4, #80]	@ 0x50
 80060ec:	e7f5      	b.n	80060da <HAL_SPI_IRQHandler+0x22>
  if (((SPI_CHECK_FLAG(itflag, SPI_FLAG_MODF) != RESET) || (SPI_CHECK_FLAG(itflag, SPI_FLAG_OVR) != RESET)
 80060ee:	2780      	movs	r7, #128	@ 0x80
 80060f0:	094d      	lsrs	r5, r1, #5
 80060f2:	007f      	lsls	r7, r7, #1
 80060f4:	4039      	ands	r1, r7
       || (SPI_CHECK_FLAG(itflag, SPI_FLAG_FRE) != RESET)) && (SPI_CHECK_IT_SOURCE(itsource, SPI_IT_ERR) != RESET))
 80060f6:	432a      	orrs	r2, r5
 80060f8:	3fff      	subs	r7, #255	@ 0xff
 80060fa:	403a      	ands	r2, r7
 80060fc:	430a      	orrs	r2, r1
 80060fe:	d0ee      	beq.n	80060de <HAL_SPI_IRQHandler+0x26>
 8006100:	0682      	lsls	r2, r0, #26
 8006102:	d5ec      	bpl.n	80060de <HAL_SPI_IRQHandler+0x26>
    if (SPI_CHECK_FLAG(itflag, SPI_FLAG_OVR) != RESET)
 8006104:	2e00      	cmp	r6, #0
 8006106:	d00f      	beq.n	8006128 <HAL_SPI_IRQHandler+0x70>
      if (hspi->State != HAL_SPI_STATE_BUSY_TX)
 8006108:	0022      	movs	r2, r4
 800610a:	325d      	adds	r2, #93	@ 0x5d
 800610c:	7812      	ldrb	r2, [r2, #0]
 800610e:	2a03      	cmp	r2, #3
 8006110:	d050      	beq.n	80061b4 <HAL_SPI_IRQHandler+0xfc>
        SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_OVR);
 8006112:	2204      	movs	r2, #4
 8006114:	6e26      	ldr	r6, [r4, #96]	@ 0x60
 8006116:	4332      	orrs	r2, r6
 8006118:	6622      	str	r2, [r4, #96]	@ 0x60
        __HAL_SPI_CLEAR_OVRFLAG(hspi);
 800611a:	2200      	movs	r2, #0
 800611c:	9200      	str	r2, [sp, #0]
 800611e:	68da      	ldr	r2, [r3, #12]
 8006120:	9200      	str	r2, [sp, #0]
 8006122:	689a      	ldr	r2, [r3, #8]
 8006124:	9200      	str	r2, [sp, #0]
 8006126:	9a00      	ldr	r2, [sp, #0]
    if (SPI_CHECK_FLAG(itflag, SPI_FLAG_MODF) != RESET)
 8006128:	2201      	movs	r2, #1
 800612a:	4215      	tst	r5, r2
 800612c:	d00b      	beq.n	8006146 <HAL_SPI_IRQHandler+0x8e>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_MODF);
 800612e:	6e25      	ldr	r5, [r4, #96]	@ 0x60
 8006130:	432a      	orrs	r2, r5
 8006132:	6622      	str	r2, [r4, #96]	@ 0x60
      __HAL_SPI_CLEAR_MODFFLAG(hspi);
 8006134:	2200      	movs	r2, #0
 8006136:	2540      	movs	r5, #64	@ 0x40
 8006138:	9202      	str	r2, [sp, #8]
 800613a:	689a      	ldr	r2, [r3, #8]
 800613c:	9202      	str	r2, [sp, #8]
 800613e:	681a      	ldr	r2, [r3, #0]
 8006140:	43aa      	bics	r2, r5
 8006142:	601a      	str	r2, [r3, #0]
 8006144:	9a02      	ldr	r2, [sp, #8]
    if (SPI_CHECK_FLAG(itflag, SPI_FLAG_FRE) != RESET)
 8006146:	2900      	cmp	r1, #0
 8006148:	d008      	beq.n	800615c <HAL_SPI_IRQHandler+0xa4>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FRE);
 800614a:	2208      	movs	r2, #8
 800614c:	6e21      	ldr	r1, [r4, #96]	@ 0x60
 800614e:	430a      	orrs	r2, r1
 8006150:	6622      	str	r2, [r4, #96]	@ 0x60
      __HAL_SPI_CLEAR_FREFLAG(hspi);
 8006152:	2200      	movs	r2, #0
 8006154:	9203      	str	r2, [sp, #12]
 8006156:	689a      	ldr	r2, [r3, #8]
 8006158:	9203      	str	r2, [sp, #12]
 800615a:	9a03      	ldr	r2, [sp, #12]
    if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800615c:	6e22      	ldr	r2, [r4, #96]	@ 0x60
 800615e:	2a00      	cmp	r2, #0
 8006160:	d0bd      	beq.n	80060de <HAL_SPI_IRQHandler+0x26>
      __HAL_SPI_DISABLE_IT(hspi, SPI_IT_RXNE | SPI_IT_TXE | SPI_IT_ERR);
 8006162:	21e0      	movs	r1, #224	@ 0xe0
 8006164:	685a      	ldr	r2, [r3, #4]
 8006166:	438a      	bics	r2, r1
 8006168:	605a      	str	r2, [r3, #4]
      hspi->State = HAL_SPI_STATE_READY;
 800616a:	0022      	movs	r2, r4
 800616c:	39df      	subs	r1, #223	@ 0xdf
 800616e:	325d      	adds	r2, #93	@ 0x5d
 8006170:	7011      	strb	r1, [r2, #0]
      if ((HAL_IS_BIT_SET(itsource, SPI_CR2_TXDMAEN)) || (HAL_IS_BIT_SET(itsource, SPI_CR2_RXDMAEN)))
 8006172:	3102      	adds	r1, #2
 8006174:	4208      	tst	r0, r1
 8006176:	d025      	beq.n	80061c4 <HAL_SPI_IRQHandler+0x10c>
        CLEAR_BIT(hspi->Instance->CR2, (SPI_CR2_TXDMAEN | SPI_CR2_RXDMAEN));
 8006178:	685a      	ldr	r2, [r3, #4]
        if (hspi->hdmarx != NULL)
 800617a:	6da0      	ldr	r0, [r4, #88]	@ 0x58
        CLEAR_BIT(hspi->Instance->CR2, (SPI_CR2_TXDMAEN | SPI_CR2_RXDMAEN));
 800617c:	438a      	bics	r2, r1
 800617e:	605a      	str	r2, [r3, #4]
        if (hspi->hdmarx != NULL)
 8006180:	2800      	cmp	r0, #0
 8006182:	d009      	beq.n	8006198 <HAL_SPI_IRQHandler+0xe0>
          hspi->hdmarx->XferAbortCallback = SPI_DMAAbortOnError;
 8006184:	4b11      	ldr	r3, [pc, #68]	@ (80061cc <HAL_SPI_IRQHandler+0x114>)
 8006186:	6343      	str	r3, [r0, #52]	@ 0x34
          if (HAL_OK != HAL_DMA_Abort_IT(hspi->hdmarx))
 8006188:	f7fe fd8e 	bl	8004ca8 <HAL_DMA_Abort_IT>
 800618c:	2800      	cmp	r0, #0
 800618e:	d003      	beq.n	8006198 <HAL_SPI_IRQHandler+0xe0>
            SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
 8006190:	2340      	movs	r3, #64	@ 0x40
 8006192:	6e22      	ldr	r2, [r4, #96]	@ 0x60
 8006194:	4313      	orrs	r3, r2
 8006196:	6623      	str	r3, [r4, #96]	@ 0x60
        if (hspi->hdmatx != NULL)
 8006198:	6d60      	ldr	r0, [r4, #84]	@ 0x54
 800619a:	2800      	cmp	r0, #0
 800619c:	d09f      	beq.n	80060de <HAL_SPI_IRQHandler+0x26>
          hspi->hdmatx->XferAbortCallback = SPI_DMAAbortOnError;
 800619e:	4b0b      	ldr	r3, [pc, #44]	@ (80061cc <HAL_SPI_IRQHandler+0x114>)
 80061a0:	6343      	str	r3, [r0, #52]	@ 0x34
          if (HAL_OK != HAL_DMA_Abort_IT(hspi->hdmatx))
 80061a2:	f7fe fd81 	bl	8004ca8 <HAL_DMA_Abort_IT>
 80061a6:	2800      	cmp	r0, #0
 80061a8:	d099      	beq.n	80060de <HAL_SPI_IRQHandler+0x26>
            SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
 80061aa:	2340      	movs	r3, #64	@ 0x40
 80061ac:	6e22      	ldr	r2, [r4, #96]	@ 0x60
 80061ae:	4313      	orrs	r3, r2
 80061b0:	6623      	str	r3, [r4, #96]	@ 0x60
 80061b2:	e794      	b.n	80060de <HAL_SPI_IRQHandler+0x26>
        __HAL_SPI_CLEAR_OVRFLAG(hspi);
 80061b4:	2200      	movs	r2, #0
 80061b6:	9201      	str	r2, [sp, #4]
 80061b8:	68da      	ldr	r2, [r3, #12]
 80061ba:	9201      	str	r2, [sp, #4]
 80061bc:	689b      	ldr	r3, [r3, #8]
 80061be:	9301      	str	r3, [sp, #4]
 80061c0:	9b01      	ldr	r3, [sp, #4]
        return;
 80061c2:	e78c      	b.n	80060de <HAL_SPI_IRQHandler+0x26>
        HAL_SPI_ErrorCallback(hspi);
 80061c4:	0020      	movs	r0, r4
 80061c6:	f7ff ff75 	bl	80060b4 <HAL_SPI_ErrorCallback>
 80061ca:	e788      	b.n	80060de <HAL_SPI_IRQHandler+0x26>
 80061cc:	080061d1 	.word	0x080061d1

080061d0 <SPI_DMAAbortOnError>:
  SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogation MISRAC2012-Rule-11.5 */
 80061d0:	6a40      	ldr	r0, [r0, #36]	@ 0x24
  hspi->RxXferCount = 0U;
 80061d2:	2300      	movs	r3, #0
 80061d4:	0002      	movs	r2, r0
{
 80061d6:	b510      	push	{r4, lr}
  hspi->RxXferCount = 0U;
 80061d8:	3208      	adds	r2, #8
 80061da:	87d3      	strh	r3, [r2, #62]	@ 0x3e
  hspi->TxXferCount = 0U;
 80061dc:	87c3      	strh	r3, [r0, #62]	@ 0x3e
  HAL_SPI_ErrorCallback(hspi);
 80061de:	f7ff ff69 	bl	80060b4 <HAL_SPI_ErrorCallback>
}
 80061e2:	bd10      	pop	{r4, pc}

080061e4 <HAL_TIM_Base_Start_IT>:

  /* Check the parameters */
  assert_param(IS_TIM_INSTANCE(htim->Instance));

  /* Check the TIM state */
  if (htim->State != HAL_TIM_STATE_READY)
 80061e4:	0001      	movs	r1, r0
{
 80061e6:	0003      	movs	r3, r0
  {
    return HAL_ERROR;
 80061e8:	2001      	movs	r0, #1
{
 80061ea:	b510      	push	{r4, lr}
  if (htim->State != HAL_TIM_STATE_READY)
 80061ec:	313d      	adds	r1, #61	@ 0x3d
 80061ee:	780c      	ldrb	r4, [r1, #0]
 80061f0:	b2e2      	uxtb	r2, r4
 80061f2:	4284      	cmp	r4, r0
 80061f4:	d118      	bne.n	8006228 <HAL_TIM_Base_Start_IT+0x44>
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
 80061f6:	1800      	adds	r0, r0, r0
 80061f8:	7008      	strb	r0, [r1, #0]

  /* Enable the TIM Update interrupt */
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 80061fa:	681b      	ldr	r3, [r3, #0]
 80061fc:	68d9      	ldr	r1, [r3, #12]
 80061fe:	4311      	orrs	r1, r2
 8006200:	60d9      	str	r1, [r3, #12]

  /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger */
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 8006202:	490b      	ldr	r1, [pc, #44]	@ (8006230 <HAL_TIM_Base_Start_IT+0x4c>)
 8006204:	428b      	cmp	r3, r1
 8006206:	d005      	beq.n	8006214 <HAL_TIM_Base_Start_IT+0x30>
 8006208:	490a      	ldr	r1, [pc, #40]	@ (8006234 <HAL_TIM_Base_Start_IT+0x50>)
 800620a:	428b      	cmp	r3, r1
 800620c:	d002      	beq.n	8006214 <HAL_TIM_Base_Start_IT+0x30>
 800620e:	490a      	ldr	r1, [pc, #40]	@ (8006238 <HAL_TIM_Base_Start_IT+0x54>)
 8006210:	428b      	cmp	r3, r1
 8006212:	d10a      	bne.n	800622a <HAL_TIM_Base_Start_IT+0x46>
  {
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 8006214:	2107      	movs	r1, #7
 8006216:	689a      	ldr	r2, [r3, #8]
 8006218:	400a      	ands	r2, r1
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 800621a:	2a06      	cmp	r2, #6
 800621c:	d003      	beq.n	8006226 <HAL_TIM_Base_Start_IT+0x42>
    {
      __HAL_TIM_ENABLE(htim);
 800621e:	2201      	movs	r2, #1
 8006220:	6819      	ldr	r1, [r3, #0]
 8006222:	430a      	orrs	r2, r1
 8006224:	601a      	str	r2, [r3, #0]
  {
    __HAL_TIM_ENABLE(htim);
  }

  /* Return function status */
  return HAL_OK;
 8006226:	2000      	movs	r0, #0
}
 8006228:	bd10      	pop	{r4, pc}
    __HAL_TIM_ENABLE(htim);
 800622a:	6819      	ldr	r1, [r3, #0]
 800622c:	e7f9      	b.n	8006222 <HAL_TIM_Base_Start_IT+0x3e>
 800622e:	46c0      	nop			@ (mov r8, r8)
 8006230:	40012c00 	.word	0x40012c00
 8006234:	40000400 	.word	0x40000400
 8006238:	40014000 	.word	0x40014000

0800623c <HAL_TIM_OC_DelayElapsedCallback>:
/**
  * @brief  Output Compare callback in non-blocking mode
  * @param  htim TIM OC handle
  * @retval None
  */
__weak void HAL_TIM_OC_DelayElapsedCallback(TIM_HandleTypeDef *htim)
 800623c:	4770      	bx	lr

0800623e <HAL_TIM_IC_CaptureCallback>:
/**
  * @brief  Input Capture callback in non-blocking mode
  * @param  htim TIM IC handle
  * @retval None
  */
__weak void HAL_TIM_IC_CaptureCallback(TIM_HandleTypeDef *htim)
 800623e:	4770      	bx	lr

08006240 <HAL_TIM_PWM_PulseFinishedCallback>:
/**
  * @brief  PWM Pulse finished callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIM_PWM_PulseFinishedCallback(TIM_HandleTypeDef *htim)
 8006240:	4770      	bx	lr

08006242 <HAL_TIM_TriggerCallback>:
/**
  * @brief  Hall Trigger detection callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIM_TriggerCallback(TIM_HandleTypeDef *htim)
 8006242:	4770      	bx	lr

08006244 <HAL_TIM_IRQHandler>:
  if ((itflag & (TIM_FLAG_CC1)) == (TIM_FLAG_CC1))
 8006244:	2202      	movs	r2, #2
  uint32_t itsource = htim->Instance->DIER;
 8006246:	6803      	ldr	r3, [r0, #0]
{
 8006248:	b570      	push	{r4, r5, r6, lr}
  uint32_t itsource = htim->Instance->DIER;
 800624a:	68dd      	ldr	r5, [r3, #12]
  uint32_t itflag   = htim->Instance->SR;
 800624c:	691e      	ldr	r6, [r3, #16]
{
 800624e:	0004      	movs	r4, r0
  if ((itflag & (TIM_FLAG_CC1)) == (TIM_FLAG_CC1))
 8006250:	4216      	tst	r6, r2
 8006252:	d00d      	beq.n	8006270 <HAL_TIM_IRQHandler+0x2c>
    if ((itsource & (TIM_IT_CC1)) == (TIM_IT_CC1))
 8006254:	4215      	tst	r5, r2
 8006256:	d00b      	beq.n	8006270 <HAL_TIM_IRQHandler+0x2c>
        __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC1);
 8006258:	3a05      	subs	r2, #5
 800625a:	611a      	str	r2, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 800625c:	3204      	adds	r2, #4
 800625e:	7702      	strb	r2, [r0, #28]
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 8006260:	699b      	ldr	r3, [r3, #24]
 8006262:	079b      	lsls	r3, r3, #30
 8006264:	d100      	bne.n	8006268 <HAL_TIM_IRQHandler+0x24>
 8006266:	e071      	b.n	800634c <HAL_TIM_IRQHandler+0x108>
          HAL_TIM_IC_CaptureCallback(htim);
 8006268:	f7ff ffe9 	bl	800623e <HAL_TIM_IC_CaptureCallback>
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800626c:	2300      	movs	r3, #0
 800626e:	7723      	strb	r3, [r4, #28]
  if ((itflag & (TIM_FLAG_CC2)) == (TIM_FLAG_CC2))
 8006270:	2304      	movs	r3, #4
 8006272:	421e      	tst	r6, r3
 8006274:	d011      	beq.n	800629a <HAL_TIM_IRQHandler+0x56>
    if ((itsource & (TIM_IT_CC2)) == (TIM_IT_CC2))
 8006276:	421d      	tst	r5, r3
 8006278:	d00f      	beq.n	800629a <HAL_TIM_IRQHandler+0x56>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC2);
 800627a:	2205      	movs	r2, #5
 800627c:	6823      	ldr	r3, [r4, #0]
 800627e:	4252      	negs	r2, r2
 8006280:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 8006282:	3207      	adds	r2, #7
 8006284:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 8006286:	699a      	ldr	r2, [r3, #24]
 8006288:	23c0      	movs	r3, #192	@ 0xc0
 800628a:	009b      	lsls	r3, r3, #2
        HAL_TIM_IC_CaptureCallback(htim);
 800628c:	0020      	movs	r0, r4
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 800628e:	421a      	tst	r2, r3
 8006290:	d062      	beq.n	8006358 <HAL_TIM_IRQHandler+0x114>
        HAL_TIM_IC_CaptureCallback(htim);
 8006292:	f7ff ffd4 	bl	800623e <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8006296:	2300      	movs	r3, #0
 8006298:	7723      	strb	r3, [r4, #28]
  if ((itflag & (TIM_FLAG_CC3)) == (TIM_FLAG_CC3))
 800629a:	2308      	movs	r3, #8
 800629c:	421e      	tst	r6, r3
 800629e:	d00f      	beq.n	80062c0 <HAL_TIM_IRQHandler+0x7c>
    if ((itsource & (TIM_IT_CC3)) == (TIM_IT_CC3))
 80062a0:	421d      	tst	r5, r3
 80062a2:	d00d      	beq.n	80062c0 <HAL_TIM_IRQHandler+0x7c>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC3);
 80062a4:	2209      	movs	r2, #9
 80062a6:	6823      	ldr	r3, [r4, #0]
 80062a8:	4252      	negs	r2, r2
 80062aa:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 80062ac:	320d      	adds	r2, #13
 80062ae:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 80062b0:	69db      	ldr	r3, [r3, #28]
        HAL_TIM_IC_CaptureCallback(htim);
 80062b2:	0020      	movs	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 80062b4:	079b      	lsls	r3, r3, #30
 80062b6:	d055      	beq.n	8006364 <HAL_TIM_IRQHandler+0x120>
        HAL_TIM_IC_CaptureCallback(htim);
 80062b8:	f7ff ffc1 	bl	800623e <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 80062bc:	2300      	movs	r3, #0
 80062be:	7723      	strb	r3, [r4, #28]
  if ((itflag & (TIM_FLAG_CC4)) == (TIM_FLAG_CC4))
 80062c0:	2310      	movs	r3, #16
 80062c2:	421e      	tst	r6, r3
 80062c4:	d011      	beq.n	80062ea <HAL_TIM_IRQHandler+0xa6>
    if ((itsource & (TIM_IT_CC4)) == (TIM_IT_CC4))
 80062c6:	421d      	tst	r5, r3
 80062c8:	d00f      	beq.n	80062ea <HAL_TIM_IRQHandler+0xa6>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC4);
 80062ca:	2211      	movs	r2, #17
 80062cc:	6823      	ldr	r3, [r4, #0]
 80062ce:	4252      	negs	r2, r2
 80062d0:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 80062d2:	3219      	adds	r2, #25
 80062d4:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 80062d6:	69da      	ldr	r2, [r3, #28]
 80062d8:	23c0      	movs	r3, #192	@ 0xc0
 80062da:	009b      	lsls	r3, r3, #2
        HAL_TIM_IC_CaptureCallback(htim);
 80062dc:	0020      	movs	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 80062de:	421a      	tst	r2, r3
 80062e0:	d046      	beq.n	8006370 <HAL_TIM_IRQHandler+0x12c>
        HAL_TIM_IC_CaptureCallback(htim);
 80062e2:	f7ff ffac 	bl	800623e <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 80062e6:	2300      	movs	r3, #0
 80062e8:	7723      	strb	r3, [r4, #28]
  if ((itflag & (TIM_FLAG_UPDATE)) == (TIM_FLAG_UPDATE))
 80062ea:	2301      	movs	r3, #1
 80062ec:	421e      	tst	r6, r3
 80062ee:	d008      	beq.n	8006302 <HAL_TIM_IRQHandler+0xbe>
    if ((itsource & (TIM_IT_UPDATE)) == (TIM_IT_UPDATE))
 80062f0:	421d      	tst	r5, r3
 80062f2:	d006      	beq.n	8006302 <HAL_TIM_IRQHandler+0xbe>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_UPDATE);
 80062f4:	2202      	movs	r2, #2
 80062f6:	6823      	ldr	r3, [r4, #0]
 80062f8:	4252      	negs	r2, r2
      HAL_TIM_PeriodElapsedCallback(htim);
 80062fa:	0020      	movs	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_UPDATE);
 80062fc:	611a      	str	r2, [r3, #16]
      HAL_TIM_PeriodElapsedCallback(htim);
 80062fe:	f7fe f893 	bl	8004428 <HAL_TIM_PeriodElapsedCallback>
  if ((itflag & (TIM_FLAG_BREAK)) == (TIM_FLAG_BREAK))
 8006302:	2380      	movs	r3, #128	@ 0x80
 8006304:	421e      	tst	r6, r3
 8006306:	d008      	beq.n	800631a <HAL_TIM_IRQHandler+0xd6>
    if ((itsource & (TIM_IT_BREAK)) == (TIM_IT_BREAK))
 8006308:	421d      	tst	r5, r3
 800630a:	d006      	beq.n	800631a <HAL_TIM_IRQHandler+0xd6>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK);
 800630c:	2281      	movs	r2, #129	@ 0x81
 800630e:	6823      	ldr	r3, [r4, #0]
 8006310:	4252      	negs	r2, r2
      HAL_TIMEx_BreakCallback(htim);
 8006312:	0020      	movs	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK);
 8006314:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_BreakCallback(htim);
 8006316:	f000 f976 	bl	8006606 <HAL_TIMEx_BreakCallback>
  if ((itflag & (TIM_FLAG_TRIGGER)) == (TIM_FLAG_TRIGGER))
 800631a:	2340      	movs	r3, #64	@ 0x40
 800631c:	421e      	tst	r6, r3
 800631e:	d008      	beq.n	8006332 <HAL_TIM_IRQHandler+0xee>
    if ((itsource & (TIM_IT_TRIGGER)) == (TIM_IT_TRIGGER))
 8006320:	421d      	tst	r5, r3
 8006322:	d006      	beq.n	8006332 <HAL_TIM_IRQHandler+0xee>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_TRIGGER);
 8006324:	2241      	movs	r2, #65	@ 0x41
 8006326:	6823      	ldr	r3, [r4, #0]
 8006328:	4252      	negs	r2, r2
      HAL_TIM_TriggerCallback(htim);
 800632a:	0020      	movs	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_TRIGGER);
 800632c:	611a      	str	r2, [r3, #16]
      HAL_TIM_TriggerCallback(htim);
 800632e:	f7ff ff88 	bl	8006242 <HAL_TIM_TriggerCallback>
  if ((itflag & (TIM_FLAG_COM)) == (TIM_FLAG_COM))
 8006332:	2320      	movs	r3, #32
 8006334:	421e      	tst	r6, r3
 8006336:	d008      	beq.n	800634a <HAL_TIM_IRQHandler+0x106>
    if ((itsource & (TIM_IT_COM)) == (TIM_IT_COM))
 8006338:	421d      	tst	r5, r3
 800633a:	d006      	beq.n	800634a <HAL_TIM_IRQHandler+0x106>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_COM);
 800633c:	2221      	movs	r2, #33	@ 0x21
 800633e:	6823      	ldr	r3, [r4, #0]
 8006340:	4252      	negs	r2, r2
      HAL_TIMEx_CommutCallback(htim);
 8006342:	0020      	movs	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_COM);
 8006344:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_CommutCallback(htim);
 8006346:	f000 f95d 	bl	8006604 <HAL_TIMEx_CommutCallback>
}
 800634a:	bd70      	pop	{r4, r5, r6, pc}
          HAL_TIM_OC_DelayElapsedCallback(htim);
 800634c:	f7ff ff76 	bl	800623c <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 8006350:	0020      	movs	r0, r4
 8006352:	f7ff ff75 	bl	8006240 <HAL_TIM_PWM_PulseFinishedCallback>
 8006356:	e789      	b.n	800626c <HAL_TIM_IRQHandler+0x28>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8006358:	f7ff ff70 	bl	800623c <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800635c:	0020      	movs	r0, r4
 800635e:	f7ff ff6f 	bl	8006240 <HAL_TIM_PWM_PulseFinishedCallback>
 8006362:	e798      	b.n	8006296 <HAL_TIM_IRQHandler+0x52>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8006364:	f7ff ff6a 	bl	800623c <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8006368:	0020      	movs	r0, r4
 800636a:	f7ff ff69 	bl	8006240 <HAL_TIM_PWM_PulseFinishedCallback>
 800636e:	e7a5      	b.n	80062bc <HAL_TIM_IRQHandler+0x78>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8006370:	f7ff ff64 	bl	800623c <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8006374:	0020      	movs	r0, r4
 8006376:	f7ff ff63 	bl	8006240 <HAL_TIM_PWM_PulseFinishedCallback>
 800637a:	e7b4      	b.n	80062e6 <HAL_TIM_IRQHandler+0xa2>

0800637c <TIM_Base_SetConfig>:
  * @param  TIMx TIM peripheral
  * @param  Structure TIM Base configuration structure
  * @retval None
  */
void TIM_Base_SetConfig(TIM_TypeDef *TIMx, const TIM_Base_InitTypeDef *Structure)
{
 800637c:	b510      	push	{r4, lr}
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800637e:	4c1e      	ldr	r4, [pc, #120]	@ (80063f8 <TIM_Base_SetConfig+0x7c>)
  tmpcr1 = TIMx->CR1;
 8006380:	6803      	ldr	r3, [r0, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 8006382:	42a0      	cmp	r0, r4
 8006384:	d00a      	beq.n	800639c <TIM_Base_SetConfig+0x20>
 8006386:	4a1d      	ldr	r2, [pc, #116]	@ (80063fc <TIM_Base_SetConfig+0x80>)
 8006388:	4290      	cmp	r0, r2
 800638a:	d007      	beq.n	800639c <TIM_Base_SetConfig+0x20>
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
    tmpcr1 |= Structure->CounterMode;
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 800638c:	4a1c      	ldr	r2, [pc, #112]	@ (8006400 <TIM_Base_SetConfig+0x84>)
 800638e:	4290      	cmp	r0, r2
 8006390:	d109      	bne.n	80063a6 <TIM_Base_SetConfig+0x2a>
  {
    /* Set the clock division */
    tmpcr1 &= ~TIM_CR1_CKD;
 8006392:	4a1c      	ldr	r2, [pc, #112]	@ (8006404 <TIM_Base_SetConfig+0x88>)
 8006394:	401a      	ands	r2, r3
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 8006396:	68cb      	ldr	r3, [r1, #12]
 8006398:	4313      	orrs	r3, r2
 800639a:	e00d      	b.n	80063b8 <TIM_Base_SetConfig+0x3c>
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 800639c:	2270      	movs	r2, #112	@ 0x70
 800639e:	4393      	bics	r3, r2
    tmpcr1 |= Structure->CounterMode;
 80063a0:	684a      	ldr	r2, [r1, #4]
 80063a2:	4313      	orrs	r3, r2
  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 80063a4:	e7f5      	b.n	8006392 <TIM_Base_SetConfig+0x16>
 80063a6:	4a18      	ldr	r2, [pc, #96]	@ (8006408 <TIM_Base_SetConfig+0x8c>)
 80063a8:	4290      	cmp	r0, r2
 80063aa:	d0f2      	beq.n	8006392 <TIM_Base_SetConfig+0x16>
 80063ac:	4a17      	ldr	r2, [pc, #92]	@ (800640c <TIM_Base_SetConfig+0x90>)
 80063ae:	4290      	cmp	r0, r2
 80063b0:	d0ef      	beq.n	8006392 <TIM_Base_SetConfig+0x16>
 80063b2:	4a17      	ldr	r2, [pc, #92]	@ (8006410 <TIM_Base_SetConfig+0x94>)
 80063b4:	4290      	cmp	r0, r2
 80063b6:	d0ec      	beq.n	8006392 <TIM_Base_SetConfig+0x16>
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 80063b8:	2280      	movs	r2, #128	@ 0x80
 80063ba:	4393      	bics	r3, r2
 80063bc:	694a      	ldr	r2, [r1, #20]
 80063be:	4313      	orrs	r3, r2

  TIMx->CR1 = tmpcr1;
 80063c0:	6003      	str	r3, [r0, #0]

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 80063c2:	688b      	ldr	r3, [r1, #8]
 80063c4:	62c3      	str	r3, [r0, #44]	@ 0x2c

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 80063c6:	680b      	ldr	r3, [r1, #0]
 80063c8:	6283      	str	r3, [r0, #40]	@ 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 80063ca:	42a0      	cmp	r0, r4
 80063cc:	d008      	beq.n	80063e0 <TIM_Base_SetConfig+0x64>
 80063ce:	4b0e      	ldr	r3, [pc, #56]	@ (8006408 <TIM_Base_SetConfig+0x8c>)
 80063d0:	4298      	cmp	r0, r3
 80063d2:	d005      	beq.n	80063e0 <TIM_Base_SetConfig+0x64>
 80063d4:	4b0d      	ldr	r3, [pc, #52]	@ (800640c <TIM_Base_SetConfig+0x90>)
 80063d6:	4298      	cmp	r0, r3
 80063d8:	d002      	beq.n	80063e0 <TIM_Base_SetConfig+0x64>
 80063da:	4b0d      	ldr	r3, [pc, #52]	@ (8006410 <TIM_Base_SetConfig+0x94>)
 80063dc:	4298      	cmp	r0, r3
 80063de:	d101      	bne.n	80063e4 <TIM_Base_SetConfig+0x68>
  {
    /* Set the Repetition Counter value */
    TIMx->RCR = Structure->RepetitionCounter;
 80063e0:	690b      	ldr	r3, [r1, #16]
 80063e2:	6303      	str	r3, [r0, #48]	@ 0x30
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 80063e4:	2201      	movs	r2, #1
 80063e6:	6142      	str	r2, [r0, #20]

  /* Check if the update flag is set after the Update Generation, if so clear the UIF flag */
  if (HAL_IS_BIT_SET(TIMx->SR, TIM_FLAG_UPDATE))
 80063e8:	6903      	ldr	r3, [r0, #16]
 80063ea:	4213      	tst	r3, r2
 80063ec:	d002      	beq.n	80063f4 <TIM_Base_SetConfig+0x78>
  {
    /* Clear the update flag */
    CLEAR_BIT(TIMx->SR, TIM_FLAG_UPDATE);
 80063ee:	6903      	ldr	r3, [r0, #16]
 80063f0:	4393      	bics	r3, r2
 80063f2:	6103      	str	r3, [r0, #16]
  }
}
 80063f4:	bd10      	pop	{r4, pc}
 80063f6:	46c0      	nop			@ (mov r8, r8)
 80063f8:	40012c00 	.word	0x40012c00
 80063fc:	40000400 	.word	0x40000400
 8006400:	40002000 	.word	0x40002000
 8006404:	fffffcff 	.word	0xfffffcff
 8006408:	40014000 	.word	0x40014000
 800640c:	40014400 	.word	0x40014400
 8006410:	40014800 	.word	0x40014800

08006414 <HAL_TIM_Base_Init>:
{
 8006414:	b570      	push	{r4, r5, r6, lr}
 8006416:	0004      	movs	r4, r0
    return HAL_ERROR;
 8006418:	2001      	movs	r0, #1
  if (htim == NULL)
 800641a:	2c00      	cmp	r4, #0
 800641c:	d021      	beq.n	8006462 <HAL_TIM_Base_Init+0x4e>
  if (htim->State == HAL_TIM_STATE_RESET)
 800641e:	0025      	movs	r5, r4
 8006420:	353d      	adds	r5, #61	@ 0x3d
 8006422:	782b      	ldrb	r3, [r5, #0]
 8006424:	b2da      	uxtb	r2, r3
 8006426:	2b00      	cmp	r3, #0
 8006428:	d105      	bne.n	8006436 <HAL_TIM_Base_Init+0x22>
    htim->Lock = HAL_UNLOCKED;
 800642a:	0023      	movs	r3, r4
 800642c:	333c      	adds	r3, #60	@ 0x3c
    HAL_TIM_Base_MspInit(htim);
 800642e:	0020      	movs	r0, r4
    htim->Lock = HAL_UNLOCKED;
 8006430:	701a      	strb	r2, [r3, #0]
    HAL_TIM_Base_MspInit(htim);
 8006432:	f7fe fa8d 	bl	8004950 <HAL_TIM_Base_MspInit>
  htim->State = HAL_TIM_STATE_BUSY;
 8006436:	2302      	movs	r3, #2
 8006438:	702b      	strb	r3, [r5, #0]
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 800643a:	6820      	ldr	r0, [r4, #0]
 800643c:	1d21      	adds	r1, r4, #4
 800643e:	f7ff ff9d 	bl	800637c <TIM_Base_SetConfig>
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 8006442:	0022      	movs	r2, r4
 8006444:	2301      	movs	r3, #1
  return HAL_OK;
 8006446:	2000      	movs	r0, #0
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 8006448:	3246      	adds	r2, #70	@ 0x46
 800644a:	7013      	strb	r3, [r2, #0]
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800644c:	3445      	adds	r4, #69	@ 0x45
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800644e:	3a08      	subs	r2, #8
 8006450:	7013      	strb	r3, [r2, #0]
 8006452:	7053      	strb	r3, [r2, #1]
 8006454:	7093      	strb	r3, [r2, #2]
 8006456:	70d3      	strb	r3, [r2, #3]
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 8006458:	7113      	strb	r3, [r2, #4]
 800645a:	7153      	strb	r3, [r2, #5]
 800645c:	7193      	strb	r3, [r2, #6]
 800645e:	7023      	strb	r3, [r4, #0]
  htim->State = HAL_TIM_STATE_READY;
 8006460:	702b      	strb	r3, [r5, #0]
}
 8006462:	bd70      	pop	{r4, r5, r6, pc}

08006464 <TIM_ETR_SetConfig>:
  *          This parameter must be a value between 0x00 and 0x0F
  * @retval None
  */
void TIM_ETR_SetConfig(TIM_TypeDef *TIMx, uint32_t TIM_ExtTRGPrescaler,
                       uint32_t TIM_ExtTRGPolarity, uint32_t ExtTRGFilter)
{
 8006464:	b530      	push	{r4, r5, lr}
  uint32_t tmpsmcr;

  tmpsmcr = TIMx->SMCR;
 8006466:	6884      	ldr	r4, [r0, #8]

  /* Reset the ETR Bits */
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 8006468:	4d03      	ldr	r5, [pc, #12]	@ (8006478 <TIM_ETR_SetConfig+0x14>)

  /* Set the Prescaler, the Filter value and the Polarity */
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800646a:	430a      	orrs	r2, r1
 800646c:	021b      	lsls	r3, r3, #8
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 800646e:	402c      	ands	r4, r5
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 8006470:	4313      	orrs	r3, r2
 8006472:	4323      	orrs	r3, r4

  /* Write to TIMx SMCR */
  TIMx->SMCR = tmpsmcr;
 8006474:	6083      	str	r3, [r0, #8]
}
 8006476:	bd30      	pop	{r4, r5, pc}
 8006478:	ffff00ff 	.word	0xffff00ff

0800647c <HAL_TIM_ConfigClockSource>:
{
 800647c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  __HAL_LOCK(htim);
 800647e:	0005      	movs	r5, r0
 8006480:	2202      	movs	r2, #2
 8006482:	353c      	adds	r5, #60	@ 0x3c
 8006484:	782c      	ldrb	r4, [r5, #0]
{
 8006486:	0003      	movs	r3, r0
  __HAL_LOCK(htim);
 8006488:	0010      	movs	r0, r2
 800648a:	2c01      	cmp	r4, #1
 800648c:	d01b      	beq.n	80064c6 <HAL_TIM_ConfigClockSource+0x4a>
  htim->State = HAL_TIM_STATE_BUSY;
 800648e:	001e      	movs	r6, r3
  __HAL_LOCK(htim);
 8006490:	3801      	subs	r0, #1
  htim->State = HAL_TIM_STATE_BUSY;
 8006492:	363d      	adds	r6, #61	@ 0x3d
  __HAL_LOCK(htim);
 8006494:	7028      	strb	r0, [r5, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 8006496:	7032      	strb	r2, [r6, #0]
  tmpsmcr = htim->Instance->SMCR;
 8006498:	681c      	ldr	r4, [r3, #0]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 800649a:	4a41      	ldr	r2, [pc, #260]	@ (80065a0 <HAL_TIM_ConfigClockSource+0x124>)
  tmpsmcr = htim->Instance->SMCR;
 800649c:	68a3      	ldr	r3, [r4, #8]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 800649e:	4013      	ands	r3, r2
  htim->Instance->SMCR = tmpsmcr;
 80064a0:	60a3      	str	r3, [r4, #8]
  switch (sClockSourceConfig->ClockSource)
 80064a2:	680b      	ldr	r3, [r1, #0]
 80064a4:	2b60      	cmp	r3, #96	@ 0x60
 80064a6:	d04e      	beq.n	8006546 <HAL_TIM_ConfigClockSource+0xca>
 80064a8:	d82d      	bhi.n	8006506 <HAL_TIM_ConfigClockSource+0x8a>
 80064aa:	2b40      	cmp	r3, #64	@ 0x40
 80064ac:	d062      	beq.n	8006574 <HAL_TIM_ConfigClockSource+0xf8>
 80064ae:	d813      	bhi.n	80064d8 <HAL_TIM_ConfigClockSource+0x5c>
 80064b0:	2b20      	cmp	r3, #32
 80064b2:	d00b      	beq.n	80064cc <HAL_TIM_ConfigClockSource+0x50>
 80064b4:	d808      	bhi.n	80064c8 <HAL_TIM_ConfigClockSource+0x4c>
 80064b6:	2210      	movs	r2, #16
 80064b8:	0019      	movs	r1, r3
 80064ba:	4391      	bics	r1, r2
 80064bc:	d006      	beq.n	80064cc <HAL_TIM_ConfigClockSource+0x50>
  htim->State = HAL_TIM_STATE_READY;
 80064be:	2301      	movs	r3, #1
 80064c0:	7033      	strb	r3, [r6, #0]
  __HAL_UNLOCK(htim);
 80064c2:	2300      	movs	r3, #0
 80064c4:	702b      	strb	r3, [r5, #0]
}
 80064c6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  switch (sClockSourceConfig->ClockSource)
 80064c8:	2b30      	cmp	r3, #48	@ 0x30
 80064ca:	d1f8      	bne.n	80064be <HAL_TIM_ConfigClockSource+0x42>
  tmpsmcr &= ~TIM_SMCR_TS;
 80064cc:	2170      	movs	r1, #112	@ 0x70
  tmpsmcr = TIMx->SMCR;
 80064ce:	68a2      	ldr	r2, [r4, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
 80064d0:	438a      	bics	r2, r1
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 80064d2:	4313      	orrs	r3, r2
 80064d4:	2207      	movs	r2, #7
 80064d6:	e028      	b.n	800652a <HAL_TIM_ConfigClockSource+0xae>
  switch (sClockSourceConfig->ClockSource)
 80064d8:	2b50      	cmp	r3, #80	@ 0x50
 80064da:	d1f0      	bne.n	80064be <HAL_TIM_ConfigClockSource+0x42>
                               sClockSourceConfig->ClockPolarity,
 80064dc:	684a      	ldr	r2, [r1, #4]
                               sClockSourceConfig->ClockFilter);
 80064de:	68cb      	ldr	r3, [r1, #12]
  tmpccer = TIMx->CCER;
 80064e0:	6a21      	ldr	r1, [r4, #32]
  TIMx->CCER &= ~TIM_CCER_CC1E;
 80064e2:	6a27      	ldr	r7, [r4, #32]
  tmpccmr1 |= (TIM_ICFilter << 4U);
 80064e4:	011b      	lsls	r3, r3, #4
  TIMx->CCER &= ~TIM_CCER_CC1E;
 80064e6:	4387      	bics	r7, r0
 80064e8:	6227      	str	r7, [r4, #32]
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 80064ea:	27f0      	movs	r7, #240	@ 0xf0
  tmpccmr1 = TIMx->CCMR1;
 80064ec:	69a0      	ldr	r0, [r4, #24]
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 80064ee:	43b8      	bics	r0, r7
  tmpccmr1 |= (TIM_ICFilter << 4U);
 80064f0:	4303      	orrs	r3, r0
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 80064f2:	200a      	movs	r0, #10
  TIMx->CCMR1 = tmpccmr1;
 80064f4:	61a3      	str	r3, [r4, #24]
  tmpsmcr &= ~TIM_SMCR_TS;
 80064f6:	2370      	movs	r3, #112	@ 0x70
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 80064f8:	4381      	bics	r1, r0
  tmpccer |= TIM_ICPolarity;
 80064fa:	430a      	orrs	r2, r1
  TIMx->CCER = tmpccer;
 80064fc:	6222      	str	r2, [r4, #32]
  tmpsmcr = TIMx->SMCR;
 80064fe:	68a2      	ldr	r2, [r4, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
 8006500:	439a      	bics	r2, r3
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 8006502:	3b19      	subs	r3, #25
 8006504:	e011      	b.n	800652a <HAL_TIM_ConfigClockSource+0xae>
  switch (sClockSourceConfig->ClockSource)
 8006506:	2280      	movs	r2, #128	@ 0x80
 8006508:	0152      	lsls	r2, r2, #5
 800650a:	4293      	cmp	r3, r2
 800650c:	d00f      	beq.n	800652e <HAL_TIM_ConfigClockSource+0xb2>
 800650e:	2280      	movs	r2, #128	@ 0x80
 8006510:	0192      	lsls	r2, r2, #6
 8006512:	4293      	cmp	r3, r2
 8006514:	d00d      	beq.n	8006532 <HAL_TIM_ConfigClockSource+0xb6>
 8006516:	2b70      	cmp	r3, #112	@ 0x70
 8006518:	d1d1      	bne.n	80064be <HAL_TIM_ConfigClockSource+0x42>
      TIM_ETR_SetConfig(htim->Instance,
 800651a:	68cb      	ldr	r3, [r1, #12]
 800651c:	684a      	ldr	r2, [r1, #4]
 800651e:	0020      	movs	r0, r4
 8006520:	6889      	ldr	r1, [r1, #8]
 8006522:	f7ff ff9f 	bl	8006464 <TIM_ETR_SetConfig>
      tmpsmcr |= (TIM_SLAVEMODE_EXTERNAL1 | TIM_CLOCKSOURCE_ETRMODE1);
 8006526:	2377      	movs	r3, #119	@ 0x77
      tmpsmcr = htim->Instance->SMCR;
 8006528:	68a2      	ldr	r2, [r4, #8]
      tmpsmcr |= (TIM_SLAVEMODE_EXTERNAL1 | TIM_CLOCKSOURCE_ETRMODE1);
 800652a:	4313      	orrs	r3, r2
      htim->Instance->SMCR = tmpsmcr;
 800652c:	60a3      	str	r3, [r4, #8]
  HAL_StatusTypeDef status = HAL_OK;
 800652e:	2000      	movs	r0, #0
 8006530:	e7c5      	b.n	80064be <HAL_TIM_ConfigClockSource+0x42>
      TIM_ETR_SetConfig(htim->Instance,
 8006532:	68cb      	ldr	r3, [r1, #12]
 8006534:	684a      	ldr	r2, [r1, #4]
 8006536:	0020      	movs	r0, r4
 8006538:	6889      	ldr	r1, [r1, #8]
 800653a:	f7ff ff93 	bl	8006464 <TIM_ETR_SetConfig>
      htim->Instance->SMCR |= TIM_SMCR_ECE;
 800653e:	2380      	movs	r3, #128	@ 0x80
 8006540:	68a2      	ldr	r2, [r4, #8]
 8006542:	01db      	lsls	r3, r3, #7
 8006544:	e7f1      	b.n	800652a <HAL_TIM_ConfigClockSource+0xae>
  TIMx->CCER &= ~TIM_CCER_CC2E;
 8006546:	2710      	movs	r7, #16
                               sClockSourceConfig->ClockPolarity,
 8006548:	684b      	ldr	r3, [r1, #4]
                               sClockSourceConfig->ClockFilter);
 800654a:	68ca      	ldr	r2, [r1, #12]
  tmpccer = TIMx->CCER;
 800654c:	6a21      	ldr	r1, [r4, #32]
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800654e:	6a20      	ldr	r0, [r4, #32]
  tmpccmr1 |= (TIM_ICFilter << 12U);
 8006550:	0312      	lsls	r2, r2, #12
  TIMx->CCER &= ~TIM_CCER_CC2E;
 8006552:	43b8      	bics	r0, r7
 8006554:	6220      	str	r0, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
 8006556:	69a0      	ldr	r0, [r4, #24]
  tmpccmr1 &= ~TIM_CCMR1_IC2F;
 8006558:	4f12      	ldr	r7, [pc, #72]	@ (80065a4 <HAL_TIM_ConfigClockSource+0x128>)
  tmpccer |= (TIM_ICPolarity << 4U);
 800655a:	011b      	lsls	r3, r3, #4
  tmpccmr1 &= ~TIM_CCMR1_IC2F;
 800655c:	4038      	ands	r0, r7
  tmpccmr1 |= (TIM_ICFilter << 12U);
 800655e:	4302      	orrs	r2, r0
  tmpccer &= ~(TIM_CCER_CC2P | TIM_CCER_CC2NP);
 8006560:	20a0      	movs	r0, #160	@ 0xa0
 8006562:	4381      	bics	r1, r0
  tmpccer |= (TIM_ICPolarity << 4U);
 8006564:	430b      	orrs	r3, r1
  TIMx->CCMR1 = tmpccmr1 ;
 8006566:	61a2      	str	r2, [r4, #24]
  TIMx->CCER = tmpccer;
 8006568:	6223      	str	r3, [r4, #32]
  tmpsmcr &= ~TIM_SMCR_TS;
 800656a:	2370      	movs	r3, #112	@ 0x70
  tmpsmcr = TIMx->SMCR;
 800656c:	68a2      	ldr	r2, [r4, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
 800656e:	439a      	bics	r2, r3
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 8006570:	3b09      	subs	r3, #9
 8006572:	e7da      	b.n	800652a <HAL_TIM_ConfigClockSource+0xae>
                               sClockSourceConfig->ClockPolarity,
 8006574:	684a      	ldr	r2, [r1, #4]
                               sClockSourceConfig->ClockFilter);
 8006576:	68cb      	ldr	r3, [r1, #12]
  tmpccer = TIMx->CCER;
 8006578:	6a21      	ldr	r1, [r4, #32]
  TIMx->CCER &= ~TIM_CCER_CC1E;
 800657a:	6a27      	ldr	r7, [r4, #32]
  tmpccmr1 |= (TIM_ICFilter << 4U);
 800657c:	011b      	lsls	r3, r3, #4
  TIMx->CCER &= ~TIM_CCER_CC1E;
 800657e:	4387      	bics	r7, r0
 8006580:	6227      	str	r7, [r4, #32]
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 8006582:	27f0      	movs	r7, #240	@ 0xf0
  tmpccmr1 = TIMx->CCMR1;
 8006584:	69a0      	ldr	r0, [r4, #24]
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 8006586:	43b8      	bics	r0, r7
  tmpccmr1 |= (TIM_ICFilter << 4U);
 8006588:	4303      	orrs	r3, r0
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 800658a:	200a      	movs	r0, #10
  TIMx->CCMR1 = tmpccmr1;
 800658c:	61a3      	str	r3, [r4, #24]
  tmpsmcr &= ~TIM_SMCR_TS;
 800658e:	2370      	movs	r3, #112	@ 0x70
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 8006590:	4381      	bics	r1, r0
  tmpccer |= TIM_ICPolarity;
 8006592:	430a      	orrs	r2, r1
  TIMx->CCER = tmpccer;
 8006594:	6222      	str	r2, [r4, #32]
  tmpsmcr = TIMx->SMCR;
 8006596:	68a2      	ldr	r2, [r4, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
 8006598:	439a      	bics	r2, r3
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 800659a:	3b29      	subs	r3, #41	@ 0x29
 800659c:	e7c5      	b.n	800652a <HAL_TIM_ConfigClockSource+0xae>
 800659e:	46c0      	nop			@ (mov r8, r8)
 80065a0:	ffff0088 	.word	0xffff0088
 80065a4:	ffff0fff 	.word	0xffff0fff

080065a8 <HAL_TIMEx_MasterConfigSynchronization>:
  *         mode.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIMEx_MasterConfigSynchronization(TIM_HandleTypeDef *htim,
                                                        const TIM_MasterConfigTypeDef *sMasterConfig)
{
 80065a8:	b570      	push	{r4, r5, r6, lr}
  assert_param(IS_TIM_MASTER_INSTANCE(htim->Instance));
  assert_param(IS_TIM_TRGO_SOURCE(sMasterConfig->MasterOutputTrigger));
  assert_param(IS_TIM_MSM_STATE(sMasterConfig->MasterSlaveMode));

  /* Check input state */
  __HAL_LOCK(htim);
 80065aa:	0004      	movs	r4, r0
 80065ac:	2202      	movs	r2, #2
 80065ae:	343c      	adds	r4, #60	@ 0x3c
 80065b0:	7825      	ldrb	r5, [r4, #0]
{
 80065b2:	0003      	movs	r3, r0
  __HAL_LOCK(htim);
 80065b4:	0010      	movs	r0, r2
 80065b6:	2d01      	cmp	r5, #1
 80065b8:	d01c      	beq.n	80065f4 <HAL_TIMEx_MasterConfigSynchronization+0x4c>

  /* Change the handler state */
  htim->State = HAL_TIM_STATE_BUSY;
 80065ba:	001d      	movs	r5, r3

  /* Get the TIMx SMCR register value */
  tmpsmcr = htim->Instance->SMCR;

  /* Reset the MMS Bits */
  tmpcr2 &= ~TIM_CR2_MMS;
 80065bc:	2670      	movs	r6, #112	@ 0x70
  htim->State = HAL_TIM_STATE_BUSY;
 80065be:	353d      	adds	r5, #61	@ 0x3d
 80065c0:	702a      	strb	r2, [r5, #0]
  tmpcr2 = htim->Instance->CR2;
 80065c2:	681b      	ldr	r3, [r3, #0]
 80065c4:	6858      	ldr	r0, [r3, #4]
  tmpsmcr = htim->Instance->SMCR;
 80065c6:	689a      	ldr	r2, [r3, #8]
  tmpcr2 &= ~TIM_CR2_MMS;
 80065c8:	43b0      	bics	r0, r6
  /* Select the TRGO source */
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 80065ca:	680e      	ldr	r6, [r1, #0]
 80065cc:	4330      	orrs	r0, r6

  /* Update TIMx CR2 */
  htim->Instance->CR2 = tmpcr2;
 80065ce:	6058      	str	r0, [r3, #4]

  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 80065d0:	4809      	ldr	r0, [pc, #36]	@ (80065f8 <HAL_TIMEx_MasterConfigSynchronization+0x50>)
 80065d2:	4283      	cmp	r3, r0
 80065d4:	d005      	beq.n	80065e2 <HAL_TIMEx_MasterConfigSynchronization+0x3a>
 80065d6:	4809      	ldr	r0, [pc, #36]	@ (80065fc <HAL_TIMEx_MasterConfigSynchronization+0x54>)
 80065d8:	4283      	cmp	r3, r0
 80065da:	d002      	beq.n	80065e2 <HAL_TIMEx_MasterConfigSynchronization+0x3a>
 80065dc:	4808      	ldr	r0, [pc, #32]	@ (8006600 <HAL_TIMEx_MasterConfigSynchronization+0x58>)
 80065de:	4283      	cmp	r3, r0
 80065e0:	d104      	bne.n	80065ec <HAL_TIMEx_MasterConfigSynchronization+0x44>
  {
    /* Reset the MSM Bit */
    tmpsmcr &= ~TIM_SMCR_MSM;
 80065e2:	2080      	movs	r0, #128	@ 0x80
    /* Set master mode */
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 80065e4:	6849      	ldr	r1, [r1, #4]
    tmpsmcr &= ~TIM_SMCR_MSM;
 80065e6:	4382      	bics	r2, r0
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 80065e8:	430a      	orrs	r2, r1

    /* Update TIMx SMCR */
    htim->Instance->SMCR = tmpsmcr;
 80065ea:	609a      	str	r2, [r3, #8]
  }

  /* Change the htim state */
  htim->State = HAL_TIM_STATE_READY;
 80065ec:	2301      	movs	r3, #1

  __HAL_UNLOCK(htim);
 80065ee:	2000      	movs	r0, #0
  htim->State = HAL_TIM_STATE_READY;
 80065f0:	702b      	strb	r3, [r5, #0]
  __HAL_UNLOCK(htim);
 80065f2:	7020      	strb	r0, [r4, #0]

  return HAL_OK;
}
 80065f4:	bd70      	pop	{r4, r5, r6, pc}
 80065f6:	46c0      	nop			@ (mov r8, r8)
 80065f8:	40012c00 	.word	0x40012c00
 80065fc:	40000400 	.word	0x40000400
 8006600:	40014000 	.word	0x40014000

08006604 <HAL_TIMEx_CommutCallback>:
/**
  * @brief  Commutation callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_CommutCallback(TIM_HandleTypeDef *htim)
 8006604:	4770      	bx	lr

08006606 <HAL_TIMEx_BreakCallback>:
/**
  * @brief  Break detection callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_BreakCallback(TIM_HandleTypeDef *htim)
 8006606:	4770      	bx	lr

08006608 <__cvt>:
 8006608:	b5f0      	push	{r4, r5, r6, r7, lr}
 800660a:	001f      	movs	r7, r3
 800660c:	2300      	movs	r3, #0
 800660e:	0016      	movs	r6, r2
 8006610:	b08b      	sub	sp, #44	@ 0x2c
 8006612:	429f      	cmp	r7, r3
 8006614:	da04      	bge.n	8006620 <__cvt+0x18>
 8006616:	2180      	movs	r1, #128	@ 0x80
 8006618:	0609      	lsls	r1, r1, #24
 800661a:	187b      	adds	r3, r7, r1
 800661c:	001f      	movs	r7, r3
 800661e:	232d      	movs	r3, #45	@ 0x2d
 8006620:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8006622:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8006624:	7013      	strb	r3, [r2, #0]
 8006626:	2320      	movs	r3, #32
 8006628:	2203      	movs	r2, #3
 800662a:	439d      	bics	r5, r3
 800662c:	2d46      	cmp	r5, #70	@ 0x46
 800662e:	d007      	beq.n	8006640 <__cvt+0x38>
 8006630:	002b      	movs	r3, r5
 8006632:	3b45      	subs	r3, #69	@ 0x45
 8006634:	4259      	negs	r1, r3
 8006636:	414b      	adcs	r3, r1
 8006638:	9910      	ldr	r1, [sp, #64]	@ 0x40
 800663a:	3a01      	subs	r2, #1
 800663c:	18cb      	adds	r3, r1, r3
 800663e:	9310      	str	r3, [sp, #64]	@ 0x40
 8006640:	ab09      	add	r3, sp, #36	@ 0x24
 8006642:	9304      	str	r3, [sp, #16]
 8006644:	ab08      	add	r3, sp, #32
 8006646:	9303      	str	r3, [sp, #12]
 8006648:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 800664a:	9200      	str	r2, [sp, #0]
 800664c:	9302      	str	r3, [sp, #8]
 800664e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8006650:	0032      	movs	r2, r6
 8006652:	9301      	str	r3, [sp, #4]
 8006654:	003b      	movs	r3, r7
 8006656:	f000 fe89 	bl	800736c <_dtoa_r>
 800665a:	0004      	movs	r4, r0
 800665c:	2d47      	cmp	r5, #71	@ 0x47
 800665e:	d11b      	bne.n	8006698 <__cvt+0x90>
 8006660:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8006662:	07db      	lsls	r3, r3, #31
 8006664:	d511      	bpl.n	800668a <__cvt+0x82>
 8006666:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8006668:	18c3      	adds	r3, r0, r3
 800666a:	9307      	str	r3, [sp, #28]
 800666c:	2200      	movs	r2, #0
 800666e:	2300      	movs	r3, #0
 8006670:	0030      	movs	r0, r6
 8006672:	0039      	movs	r1, r7
 8006674:	f7f9 feea 	bl	800044c <__aeabi_dcmpeq>
 8006678:	2800      	cmp	r0, #0
 800667a:	d001      	beq.n	8006680 <__cvt+0x78>
 800667c:	9b07      	ldr	r3, [sp, #28]
 800667e:	9309      	str	r3, [sp, #36]	@ 0x24
 8006680:	2230      	movs	r2, #48	@ 0x30
 8006682:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8006684:	9907      	ldr	r1, [sp, #28]
 8006686:	428b      	cmp	r3, r1
 8006688:	d320      	bcc.n	80066cc <__cvt+0xc4>
 800668a:	0020      	movs	r0, r4
 800668c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800668e:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 8006690:	1b1b      	subs	r3, r3, r4
 8006692:	6013      	str	r3, [r2, #0]
 8006694:	b00b      	add	sp, #44	@ 0x2c
 8006696:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8006698:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 800669a:	18c3      	adds	r3, r0, r3
 800669c:	9307      	str	r3, [sp, #28]
 800669e:	2d46      	cmp	r5, #70	@ 0x46
 80066a0:	d1e4      	bne.n	800666c <__cvt+0x64>
 80066a2:	7803      	ldrb	r3, [r0, #0]
 80066a4:	2b30      	cmp	r3, #48	@ 0x30
 80066a6:	d10c      	bne.n	80066c2 <__cvt+0xba>
 80066a8:	2200      	movs	r2, #0
 80066aa:	2300      	movs	r3, #0
 80066ac:	0030      	movs	r0, r6
 80066ae:	0039      	movs	r1, r7
 80066b0:	f7f9 fecc 	bl	800044c <__aeabi_dcmpeq>
 80066b4:	2800      	cmp	r0, #0
 80066b6:	d104      	bne.n	80066c2 <__cvt+0xba>
 80066b8:	2301      	movs	r3, #1
 80066ba:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 80066bc:	1a9b      	subs	r3, r3, r2
 80066be:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80066c0:	6013      	str	r3, [r2, #0]
 80066c2:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 80066c4:	9a07      	ldr	r2, [sp, #28]
 80066c6:	681b      	ldr	r3, [r3, #0]
 80066c8:	18d3      	adds	r3, r2, r3
 80066ca:	e7ce      	b.n	800666a <__cvt+0x62>
 80066cc:	1c59      	adds	r1, r3, #1
 80066ce:	9109      	str	r1, [sp, #36]	@ 0x24
 80066d0:	701a      	strb	r2, [r3, #0]
 80066d2:	e7d6      	b.n	8006682 <__cvt+0x7a>

080066d4 <__exponent>:
 80066d4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80066d6:	232b      	movs	r3, #43	@ 0x2b
 80066d8:	b085      	sub	sp, #20
 80066da:	0005      	movs	r5, r0
 80066dc:	1e0c      	subs	r4, r1, #0
 80066de:	7002      	strb	r2, [r0, #0]
 80066e0:	da01      	bge.n	80066e6 <__exponent+0x12>
 80066e2:	424c      	negs	r4, r1
 80066e4:	3302      	adds	r3, #2
 80066e6:	706b      	strb	r3, [r5, #1]
 80066e8:	2c09      	cmp	r4, #9
 80066ea:	dd2c      	ble.n	8006746 <__exponent+0x72>
 80066ec:	ab02      	add	r3, sp, #8
 80066ee:	1dde      	adds	r6, r3, #7
 80066f0:	0020      	movs	r0, r4
 80066f2:	210a      	movs	r1, #10
 80066f4:	f7f9 fe94 	bl	8000420 <__aeabi_idivmod>
 80066f8:	0037      	movs	r7, r6
 80066fa:	3130      	adds	r1, #48	@ 0x30
 80066fc:	3e01      	subs	r6, #1
 80066fe:	0020      	movs	r0, r4
 8006700:	7031      	strb	r1, [r6, #0]
 8006702:	210a      	movs	r1, #10
 8006704:	9401      	str	r4, [sp, #4]
 8006706:	f7f9 fda5 	bl	8000254 <__divsi3>
 800670a:	9b01      	ldr	r3, [sp, #4]
 800670c:	0004      	movs	r4, r0
 800670e:	2b63      	cmp	r3, #99	@ 0x63
 8006710:	dcee      	bgt.n	80066f0 <__exponent+0x1c>
 8006712:	1eba      	subs	r2, r7, #2
 8006714:	1ca8      	adds	r0, r5, #2
 8006716:	0001      	movs	r1, r0
 8006718:	0013      	movs	r3, r2
 800671a:	3430      	adds	r4, #48	@ 0x30
 800671c:	7014      	strb	r4, [r2, #0]
 800671e:	ac02      	add	r4, sp, #8
 8006720:	3407      	adds	r4, #7
 8006722:	429c      	cmp	r4, r3
 8006724:	d80a      	bhi.n	800673c <__exponent+0x68>
 8006726:	2300      	movs	r3, #0
 8006728:	4294      	cmp	r4, r2
 800672a:	d303      	bcc.n	8006734 <__exponent+0x60>
 800672c:	3309      	adds	r3, #9
 800672e:	aa02      	add	r2, sp, #8
 8006730:	189b      	adds	r3, r3, r2
 8006732:	1bdb      	subs	r3, r3, r7
 8006734:	18c0      	adds	r0, r0, r3
 8006736:	1b40      	subs	r0, r0, r5
 8006738:	b005      	add	sp, #20
 800673a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800673c:	781c      	ldrb	r4, [r3, #0]
 800673e:	3301      	adds	r3, #1
 8006740:	700c      	strb	r4, [r1, #0]
 8006742:	3101      	adds	r1, #1
 8006744:	e7eb      	b.n	800671e <__exponent+0x4a>
 8006746:	2330      	movs	r3, #48	@ 0x30
 8006748:	18e4      	adds	r4, r4, r3
 800674a:	70ab      	strb	r3, [r5, #2]
 800674c:	1d28      	adds	r0, r5, #4
 800674e:	70ec      	strb	r4, [r5, #3]
 8006750:	e7f1      	b.n	8006736 <__exponent+0x62>
	...

08006754 <_printf_float>:
 8006754:	b5f0      	push	{r4, r5, r6, r7, lr}
 8006756:	b097      	sub	sp, #92	@ 0x5c
 8006758:	000d      	movs	r5, r1
 800675a:	920a      	str	r2, [sp, #40]	@ 0x28
 800675c:	9c1c      	ldr	r4, [sp, #112]	@ 0x70
 800675e:	930b      	str	r3, [sp, #44]	@ 0x2c
 8006760:	9009      	str	r0, [sp, #36]	@ 0x24
 8006762:	f000 fceb 	bl	800713c <_localeconv_r>
 8006766:	6803      	ldr	r3, [r0, #0]
 8006768:	0018      	movs	r0, r3
 800676a:	930d      	str	r3, [sp, #52]	@ 0x34
 800676c:	f7f9 fccc 	bl	8000108 <strlen>
 8006770:	2300      	movs	r3, #0
 8006772:	900f      	str	r0, [sp, #60]	@ 0x3c
 8006774:	9314      	str	r3, [sp, #80]	@ 0x50
 8006776:	7e2b      	ldrb	r3, [r5, #24]
 8006778:	2207      	movs	r2, #7
 800677a:	930c      	str	r3, [sp, #48]	@ 0x30
 800677c:	682b      	ldr	r3, [r5, #0]
 800677e:	930e      	str	r3, [sp, #56]	@ 0x38
 8006780:	990e      	ldr	r1, [sp, #56]	@ 0x38
 8006782:	6823      	ldr	r3, [r4, #0]
 8006784:	05c9      	lsls	r1, r1, #23
 8006786:	d545      	bpl.n	8006814 <_printf_float+0xc0>
 8006788:	189b      	adds	r3, r3, r2
 800678a:	4393      	bics	r3, r2
 800678c:	001a      	movs	r2, r3
 800678e:	3208      	adds	r2, #8
 8006790:	6022      	str	r2, [r4, #0]
 8006792:	2201      	movs	r2, #1
 8006794:	681e      	ldr	r6, [r3, #0]
 8006796:	685f      	ldr	r7, [r3, #4]
 8006798:	007b      	lsls	r3, r7, #1
 800679a:	085b      	lsrs	r3, r3, #1
 800679c:	9311      	str	r3, [sp, #68]	@ 0x44
 800679e:	9610      	str	r6, [sp, #64]	@ 0x40
 80067a0:	64ae      	str	r6, [r5, #72]	@ 0x48
 80067a2:	64ef      	str	r7, [r5, #76]	@ 0x4c
 80067a4:	9810      	ldr	r0, [sp, #64]	@ 0x40
 80067a6:	9911      	ldr	r1, [sp, #68]	@ 0x44
 80067a8:	4ba7      	ldr	r3, [pc, #668]	@ (8006a48 <_printf_float+0x2f4>)
 80067aa:	4252      	negs	r2, r2
 80067ac:	f7fc fdf2 	bl	8003394 <__aeabi_dcmpun>
 80067b0:	2800      	cmp	r0, #0
 80067b2:	d131      	bne.n	8006818 <_printf_float+0xc4>
 80067b4:	9810      	ldr	r0, [sp, #64]	@ 0x40
 80067b6:	9911      	ldr	r1, [sp, #68]	@ 0x44
 80067b8:	2201      	movs	r2, #1
 80067ba:	4ba3      	ldr	r3, [pc, #652]	@ (8006a48 <_printf_float+0x2f4>)
 80067bc:	4252      	negs	r2, r2
 80067be:	f7f9 fe55 	bl	800046c <__aeabi_dcmple>
 80067c2:	2800      	cmp	r0, #0
 80067c4:	d128      	bne.n	8006818 <_printf_float+0xc4>
 80067c6:	2200      	movs	r2, #0
 80067c8:	2300      	movs	r3, #0
 80067ca:	0030      	movs	r0, r6
 80067cc:	0039      	movs	r1, r7
 80067ce:	f7f9 fe43 	bl	8000458 <__aeabi_dcmplt>
 80067d2:	2800      	cmp	r0, #0
 80067d4:	d003      	beq.n	80067de <_printf_float+0x8a>
 80067d6:	002b      	movs	r3, r5
 80067d8:	222d      	movs	r2, #45	@ 0x2d
 80067da:	3343      	adds	r3, #67	@ 0x43
 80067dc:	701a      	strb	r2, [r3, #0]
 80067de:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80067e0:	4f9a      	ldr	r7, [pc, #616]	@ (8006a4c <_printf_float+0x2f8>)
 80067e2:	2b47      	cmp	r3, #71	@ 0x47
 80067e4:	d800      	bhi.n	80067e8 <_printf_float+0x94>
 80067e6:	4f9a      	ldr	r7, [pc, #616]	@ (8006a50 <_printf_float+0x2fc>)
 80067e8:	2303      	movs	r3, #3
 80067ea:	2400      	movs	r4, #0
 80067ec:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 80067ee:	612b      	str	r3, [r5, #16]
 80067f0:	3301      	adds	r3, #1
 80067f2:	439a      	bics	r2, r3
 80067f4:	602a      	str	r2, [r5, #0]
 80067f6:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80067f8:	0029      	movs	r1, r5
 80067fa:	9300      	str	r3, [sp, #0]
 80067fc:	9809      	ldr	r0, [sp, #36]	@ 0x24
 80067fe:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8006800:	aa15      	add	r2, sp, #84	@ 0x54
 8006802:	f000 f9e5 	bl	8006bd0 <_printf_common>
 8006806:	3001      	adds	r0, #1
 8006808:	d000      	beq.n	800680c <_printf_float+0xb8>
 800680a:	e09e      	b.n	800694a <_printf_float+0x1f6>
 800680c:	2001      	movs	r0, #1
 800680e:	4240      	negs	r0, r0
 8006810:	b017      	add	sp, #92	@ 0x5c
 8006812:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8006814:	3307      	adds	r3, #7
 8006816:	e7b8      	b.n	800678a <_printf_float+0x36>
 8006818:	0032      	movs	r2, r6
 800681a:	003b      	movs	r3, r7
 800681c:	0030      	movs	r0, r6
 800681e:	0039      	movs	r1, r7
 8006820:	f7fc fdb8 	bl	8003394 <__aeabi_dcmpun>
 8006824:	2800      	cmp	r0, #0
 8006826:	d00b      	beq.n	8006840 <_printf_float+0xec>
 8006828:	2f00      	cmp	r7, #0
 800682a:	da03      	bge.n	8006834 <_printf_float+0xe0>
 800682c:	002b      	movs	r3, r5
 800682e:	222d      	movs	r2, #45	@ 0x2d
 8006830:	3343      	adds	r3, #67	@ 0x43
 8006832:	701a      	strb	r2, [r3, #0]
 8006834:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8006836:	4f87      	ldr	r7, [pc, #540]	@ (8006a54 <_printf_float+0x300>)
 8006838:	2b47      	cmp	r3, #71	@ 0x47
 800683a:	d8d5      	bhi.n	80067e8 <_printf_float+0x94>
 800683c:	4f86      	ldr	r7, [pc, #536]	@ (8006a58 <_printf_float+0x304>)
 800683e:	e7d3      	b.n	80067e8 <_printf_float+0x94>
 8006840:	2220      	movs	r2, #32
 8006842:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 8006844:	686b      	ldr	r3, [r5, #4]
 8006846:	4394      	bics	r4, r2
 8006848:	1c5a      	adds	r2, r3, #1
 800684a:	d146      	bne.n	80068da <_printf_float+0x186>
 800684c:	3307      	adds	r3, #7
 800684e:	606b      	str	r3, [r5, #4]
 8006850:	2380      	movs	r3, #128	@ 0x80
 8006852:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8006854:	00db      	lsls	r3, r3, #3
 8006856:	4313      	orrs	r3, r2
 8006858:	2200      	movs	r2, #0
 800685a:	602b      	str	r3, [r5, #0]
 800685c:	9206      	str	r2, [sp, #24]
 800685e:	aa14      	add	r2, sp, #80	@ 0x50
 8006860:	9205      	str	r2, [sp, #20]
 8006862:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8006864:	a90a      	add	r1, sp, #40	@ 0x28
 8006866:	9204      	str	r2, [sp, #16]
 8006868:	aa13      	add	r2, sp, #76	@ 0x4c
 800686a:	9203      	str	r2, [sp, #12]
 800686c:	2223      	movs	r2, #35	@ 0x23
 800686e:	1852      	adds	r2, r2, r1
 8006870:	9202      	str	r2, [sp, #8]
 8006872:	9301      	str	r3, [sp, #4]
 8006874:	686b      	ldr	r3, [r5, #4]
 8006876:	0032      	movs	r2, r6
 8006878:	9300      	str	r3, [sp, #0]
 800687a:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800687c:	003b      	movs	r3, r7
 800687e:	f7ff fec3 	bl	8006608 <__cvt>
 8006882:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8006884:	0007      	movs	r7, r0
 8006886:	2c47      	cmp	r4, #71	@ 0x47
 8006888:	d12d      	bne.n	80068e6 <_printf_float+0x192>
 800688a:	1cd3      	adds	r3, r2, #3
 800688c:	db02      	blt.n	8006894 <_printf_float+0x140>
 800688e:	686b      	ldr	r3, [r5, #4]
 8006890:	429a      	cmp	r2, r3
 8006892:	dd47      	ble.n	8006924 <_printf_float+0x1d0>
 8006894:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8006896:	3b02      	subs	r3, #2
 8006898:	b2db      	uxtb	r3, r3
 800689a:	930c      	str	r3, [sp, #48]	@ 0x30
 800689c:	0028      	movs	r0, r5
 800689e:	9913      	ldr	r1, [sp, #76]	@ 0x4c
 80068a0:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 80068a2:	3901      	subs	r1, #1
 80068a4:	3050      	adds	r0, #80	@ 0x50
 80068a6:	9113      	str	r1, [sp, #76]	@ 0x4c
 80068a8:	f7ff ff14 	bl	80066d4 <__exponent>
 80068ac:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80068ae:	0004      	movs	r4, r0
 80068b0:	1813      	adds	r3, r2, r0
 80068b2:	612b      	str	r3, [r5, #16]
 80068b4:	2a01      	cmp	r2, #1
 80068b6:	dc02      	bgt.n	80068be <_printf_float+0x16a>
 80068b8:	682a      	ldr	r2, [r5, #0]
 80068ba:	07d2      	lsls	r2, r2, #31
 80068bc:	d501      	bpl.n	80068c2 <_printf_float+0x16e>
 80068be:	3301      	adds	r3, #1
 80068c0:	612b      	str	r3, [r5, #16]
 80068c2:	2323      	movs	r3, #35	@ 0x23
 80068c4:	aa0a      	add	r2, sp, #40	@ 0x28
 80068c6:	189b      	adds	r3, r3, r2
 80068c8:	781b      	ldrb	r3, [r3, #0]
 80068ca:	2b00      	cmp	r3, #0
 80068cc:	d100      	bne.n	80068d0 <_printf_float+0x17c>
 80068ce:	e792      	b.n	80067f6 <_printf_float+0xa2>
 80068d0:	002b      	movs	r3, r5
 80068d2:	222d      	movs	r2, #45	@ 0x2d
 80068d4:	3343      	adds	r3, #67	@ 0x43
 80068d6:	701a      	strb	r2, [r3, #0]
 80068d8:	e78d      	b.n	80067f6 <_printf_float+0xa2>
 80068da:	2c47      	cmp	r4, #71	@ 0x47
 80068dc:	d1b8      	bne.n	8006850 <_printf_float+0xfc>
 80068de:	2b00      	cmp	r3, #0
 80068e0:	d1b6      	bne.n	8006850 <_printf_float+0xfc>
 80068e2:	3301      	adds	r3, #1
 80068e4:	e7b3      	b.n	800684e <_printf_float+0xfa>
 80068e6:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80068e8:	2b65      	cmp	r3, #101	@ 0x65
 80068ea:	d9d7      	bls.n	800689c <_printf_float+0x148>
 80068ec:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80068ee:	2b66      	cmp	r3, #102	@ 0x66
 80068f0:	d11a      	bne.n	8006928 <_printf_float+0x1d4>
 80068f2:	686b      	ldr	r3, [r5, #4]
 80068f4:	2a00      	cmp	r2, #0
 80068f6:	dd09      	ble.n	800690c <_printf_float+0x1b8>
 80068f8:	612a      	str	r2, [r5, #16]
 80068fa:	2b00      	cmp	r3, #0
 80068fc:	d102      	bne.n	8006904 <_printf_float+0x1b0>
 80068fe:	6829      	ldr	r1, [r5, #0]
 8006900:	07c9      	lsls	r1, r1, #31
 8006902:	d50b      	bpl.n	800691c <_printf_float+0x1c8>
 8006904:	3301      	adds	r3, #1
 8006906:	189b      	adds	r3, r3, r2
 8006908:	612b      	str	r3, [r5, #16]
 800690a:	e007      	b.n	800691c <_printf_float+0x1c8>
 800690c:	2b00      	cmp	r3, #0
 800690e:	d103      	bne.n	8006918 <_printf_float+0x1c4>
 8006910:	2201      	movs	r2, #1
 8006912:	6829      	ldr	r1, [r5, #0]
 8006914:	4211      	tst	r1, r2
 8006916:	d000      	beq.n	800691a <_printf_float+0x1c6>
 8006918:	1c9a      	adds	r2, r3, #2
 800691a:	612a      	str	r2, [r5, #16]
 800691c:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 800691e:	2400      	movs	r4, #0
 8006920:	65ab      	str	r3, [r5, #88]	@ 0x58
 8006922:	e7ce      	b.n	80068c2 <_printf_float+0x16e>
 8006924:	2367      	movs	r3, #103	@ 0x67
 8006926:	930c      	str	r3, [sp, #48]	@ 0x30
 8006928:	9913      	ldr	r1, [sp, #76]	@ 0x4c
 800692a:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 800692c:	4299      	cmp	r1, r3
 800692e:	db06      	blt.n	800693e <_printf_float+0x1ea>
 8006930:	682b      	ldr	r3, [r5, #0]
 8006932:	6129      	str	r1, [r5, #16]
 8006934:	07db      	lsls	r3, r3, #31
 8006936:	d5f1      	bpl.n	800691c <_printf_float+0x1c8>
 8006938:	3101      	adds	r1, #1
 800693a:	6129      	str	r1, [r5, #16]
 800693c:	e7ee      	b.n	800691c <_printf_float+0x1c8>
 800693e:	2201      	movs	r2, #1
 8006940:	2900      	cmp	r1, #0
 8006942:	dce0      	bgt.n	8006906 <_printf_float+0x1b2>
 8006944:	1892      	adds	r2, r2, r2
 8006946:	1a52      	subs	r2, r2, r1
 8006948:	e7dd      	b.n	8006906 <_printf_float+0x1b2>
 800694a:	682a      	ldr	r2, [r5, #0]
 800694c:	0553      	lsls	r3, r2, #21
 800694e:	d408      	bmi.n	8006962 <_printf_float+0x20e>
 8006950:	692b      	ldr	r3, [r5, #16]
 8006952:	003a      	movs	r2, r7
 8006954:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8006956:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8006958:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 800695a:	47a0      	blx	r4
 800695c:	3001      	adds	r0, #1
 800695e:	d129      	bne.n	80069b4 <_printf_float+0x260>
 8006960:	e754      	b.n	800680c <_printf_float+0xb8>
 8006962:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8006964:	2b65      	cmp	r3, #101	@ 0x65
 8006966:	d800      	bhi.n	800696a <_printf_float+0x216>
 8006968:	e0db      	b.n	8006b22 <_printf_float+0x3ce>
 800696a:	6ca8      	ldr	r0, [r5, #72]	@ 0x48
 800696c:	6ce9      	ldr	r1, [r5, #76]	@ 0x4c
 800696e:	2200      	movs	r2, #0
 8006970:	2300      	movs	r3, #0
 8006972:	f7f9 fd6b 	bl	800044c <__aeabi_dcmpeq>
 8006976:	2800      	cmp	r0, #0
 8006978:	d033      	beq.n	80069e2 <_printf_float+0x28e>
 800697a:	2301      	movs	r3, #1
 800697c:	4a37      	ldr	r2, [pc, #220]	@ (8006a5c <_printf_float+0x308>)
 800697e:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8006980:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8006982:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8006984:	47a0      	blx	r4
 8006986:	3001      	adds	r0, #1
 8006988:	d100      	bne.n	800698c <_printf_float+0x238>
 800698a:	e73f      	b.n	800680c <_printf_float+0xb8>
 800698c:	9e14      	ldr	r6, [sp, #80]	@ 0x50
 800698e:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8006990:	42b3      	cmp	r3, r6
 8006992:	db02      	blt.n	800699a <_printf_float+0x246>
 8006994:	682b      	ldr	r3, [r5, #0]
 8006996:	07db      	lsls	r3, r3, #31
 8006998:	d50c      	bpl.n	80069b4 <_printf_float+0x260>
 800699a:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 800699c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800699e:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 80069a0:	990a      	ldr	r1, [sp, #40]	@ 0x28
 80069a2:	9809      	ldr	r0, [sp, #36]	@ 0x24
 80069a4:	47a0      	blx	r4
 80069a6:	2400      	movs	r4, #0
 80069a8:	3001      	adds	r0, #1
 80069aa:	d100      	bne.n	80069ae <_printf_float+0x25a>
 80069ac:	e72e      	b.n	800680c <_printf_float+0xb8>
 80069ae:	1e73      	subs	r3, r6, #1
 80069b0:	42a3      	cmp	r3, r4
 80069b2:	dc0a      	bgt.n	80069ca <_printf_float+0x276>
 80069b4:	682b      	ldr	r3, [r5, #0]
 80069b6:	079b      	lsls	r3, r3, #30
 80069b8:	d500      	bpl.n	80069bc <_printf_float+0x268>
 80069ba:	e106      	b.n	8006bca <_printf_float+0x476>
 80069bc:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 80069be:	68e8      	ldr	r0, [r5, #12]
 80069c0:	4298      	cmp	r0, r3
 80069c2:	db00      	blt.n	80069c6 <_printf_float+0x272>
 80069c4:	e724      	b.n	8006810 <_printf_float+0xbc>
 80069c6:	0018      	movs	r0, r3
 80069c8:	e722      	b.n	8006810 <_printf_float+0xbc>
 80069ca:	002a      	movs	r2, r5
 80069cc:	2301      	movs	r3, #1
 80069ce:	990a      	ldr	r1, [sp, #40]	@ 0x28
 80069d0:	9809      	ldr	r0, [sp, #36]	@ 0x24
 80069d2:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
 80069d4:	321a      	adds	r2, #26
 80069d6:	47b8      	blx	r7
 80069d8:	3001      	adds	r0, #1
 80069da:	d100      	bne.n	80069de <_printf_float+0x28a>
 80069dc:	e716      	b.n	800680c <_printf_float+0xb8>
 80069de:	3401      	adds	r4, #1
 80069e0:	e7e5      	b.n	80069ae <_printf_float+0x25a>
 80069e2:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 80069e4:	2b00      	cmp	r3, #0
 80069e6:	dc3b      	bgt.n	8006a60 <_printf_float+0x30c>
 80069e8:	2301      	movs	r3, #1
 80069ea:	4a1c      	ldr	r2, [pc, #112]	@ (8006a5c <_printf_float+0x308>)
 80069ec:	990a      	ldr	r1, [sp, #40]	@ 0x28
 80069ee:	9809      	ldr	r0, [sp, #36]	@ 0x24
 80069f0:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 80069f2:	47a0      	blx	r4
 80069f4:	3001      	adds	r0, #1
 80069f6:	d100      	bne.n	80069fa <_printf_float+0x2a6>
 80069f8:	e708      	b.n	800680c <_printf_float+0xb8>
 80069fa:	9e14      	ldr	r6, [sp, #80]	@ 0x50
 80069fc:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 80069fe:	4333      	orrs	r3, r6
 8006a00:	d102      	bne.n	8006a08 <_printf_float+0x2b4>
 8006a02:	682b      	ldr	r3, [r5, #0]
 8006a04:	07db      	lsls	r3, r3, #31
 8006a06:	d5d5      	bpl.n	80069b4 <_printf_float+0x260>
 8006a08:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8006a0a:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8006a0c:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8006a0e:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8006a10:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8006a12:	47a0      	blx	r4
 8006a14:	2300      	movs	r3, #0
 8006a16:	3001      	adds	r0, #1
 8006a18:	d100      	bne.n	8006a1c <_printf_float+0x2c8>
 8006a1a:	e6f7      	b.n	800680c <_printf_float+0xb8>
 8006a1c:	930c      	str	r3, [sp, #48]	@ 0x30
 8006a1e:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8006a20:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8006a22:	425b      	negs	r3, r3
 8006a24:	4293      	cmp	r3, r2
 8006a26:	dc01      	bgt.n	8006a2c <_printf_float+0x2d8>
 8006a28:	0033      	movs	r3, r6
 8006a2a:	e792      	b.n	8006952 <_printf_float+0x1fe>
 8006a2c:	002a      	movs	r2, r5
 8006a2e:	2301      	movs	r3, #1
 8006a30:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8006a32:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8006a34:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8006a36:	321a      	adds	r2, #26
 8006a38:	47a0      	blx	r4
 8006a3a:	3001      	adds	r0, #1
 8006a3c:	d100      	bne.n	8006a40 <_printf_float+0x2ec>
 8006a3e:	e6e5      	b.n	800680c <_printf_float+0xb8>
 8006a40:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8006a42:	3301      	adds	r3, #1
 8006a44:	e7ea      	b.n	8006a1c <_printf_float+0x2c8>
 8006a46:	46c0      	nop			@ (mov r8, r8)
 8006a48:	7fefffff 	.word	0x7fefffff
 8006a4c:	0800955d 	.word	0x0800955d
 8006a50:	08009559 	.word	0x08009559
 8006a54:	08009565 	.word	0x08009565
 8006a58:	08009561 	.word	0x08009561
 8006a5c:	08009569 	.word	0x08009569
 8006a60:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 8006a62:	6dae      	ldr	r6, [r5, #88]	@ 0x58
 8006a64:	930c      	str	r3, [sp, #48]	@ 0x30
 8006a66:	429e      	cmp	r6, r3
 8006a68:	dd00      	ble.n	8006a6c <_printf_float+0x318>
 8006a6a:	001e      	movs	r6, r3
 8006a6c:	2e00      	cmp	r6, #0
 8006a6e:	dc31      	bgt.n	8006ad4 <_printf_float+0x380>
 8006a70:	43f3      	mvns	r3, r6
 8006a72:	2400      	movs	r4, #0
 8006a74:	17db      	asrs	r3, r3, #31
 8006a76:	4033      	ands	r3, r6
 8006a78:	930e      	str	r3, [sp, #56]	@ 0x38
 8006a7a:	6dae      	ldr	r6, [r5, #88]	@ 0x58
 8006a7c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8006a7e:	1af3      	subs	r3, r6, r3
 8006a80:	42a3      	cmp	r3, r4
 8006a82:	dc30      	bgt.n	8006ae6 <_printf_float+0x392>
 8006a84:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8006a86:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8006a88:	429a      	cmp	r2, r3
 8006a8a:	dc38      	bgt.n	8006afe <_printf_float+0x3aa>
 8006a8c:	682b      	ldr	r3, [r5, #0]
 8006a8e:	07db      	lsls	r3, r3, #31
 8006a90:	d435      	bmi.n	8006afe <_printf_float+0x3aa>
 8006a92:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8006a94:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8006a96:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8006a98:	1b9b      	subs	r3, r3, r6
 8006a9a:	1b14      	subs	r4, r2, r4
 8006a9c:	429c      	cmp	r4, r3
 8006a9e:	dd00      	ble.n	8006aa2 <_printf_float+0x34e>
 8006aa0:	001c      	movs	r4, r3
 8006aa2:	2c00      	cmp	r4, #0
 8006aa4:	dc34      	bgt.n	8006b10 <_printf_float+0x3bc>
 8006aa6:	43e3      	mvns	r3, r4
 8006aa8:	2600      	movs	r6, #0
 8006aaa:	17db      	asrs	r3, r3, #31
 8006aac:	401c      	ands	r4, r3
 8006aae:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8006ab0:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8006ab2:	1ad3      	subs	r3, r2, r3
 8006ab4:	1b1b      	subs	r3, r3, r4
 8006ab6:	42b3      	cmp	r3, r6
 8006ab8:	dc00      	bgt.n	8006abc <_printf_float+0x368>
 8006aba:	e77b      	b.n	80069b4 <_printf_float+0x260>
 8006abc:	002a      	movs	r2, r5
 8006abe:	2301      	movs	r3, #1
 8006ac0:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8006ac2:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8006ac4:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
 8006ac6:	321a      	adds	r2, #26
 8006ac8:	47b8      	blx	r7
 8006aca:	3001      	adds	r0, #1
 8006acc:	d100      	bne.n	8006ad0 <_printf_float+0x37c>
 8006ace:	e69d      	b.n	800680c <_printf_float+0xb8>
 8006ad0:	3601      	adds	r6, #1
 8006ad2:	e7ec      	b.n	8006aae <_printf_float+0x35a>
 8006ad4:	0033      	movs	r3, r6
 8006ad6:	003a      	movs	r2, r7
 8006ad8:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8006ada:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8006adc:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8006ade:	47a0      	blx	r4
 8006ae0:	3001      	adds	r0, #1
 8006ae2:	d1c5      	bne.n	8006a70 <_printf_float+0x31c>
 8006ae4:	e692      	b.n	800680c <_printf_float+0xb8>
 8006ae6:	002a      	movs	r2, r5
 8006ae8:	2301      	movs	r3, #1
 8006aea:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8006aec:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8006aee:	9e0b      	ldr	r6, [sp, #44]	@ 0x2c
 8006af0:	321a      	adds	r2, #26
 8006af2:	47b0      	blx	r6
 8006af4:	3001      	adds	r0, #1
 8006af6:	d100      	bne.n	8006afa <_printf_float+0x3a6>
 8006af8:	e688      	b.n	800680c <_printf_float+0xb8>
 8006afa:	3401      	adds	r4, #1
 8006afc:	e7bd      	b.n	8006a7a <_printf_float+0x326>
 8006afe:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8006b00:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8006b02:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8006b04:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8006b06:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8006b08:	47a0      	blx	r4
 8006b0a:	3001      	adds	r0, #1
 8006b0c:	d1c1      	bne.n	8006a92 <_printf_float+0x33e>
 8006b0e:	e67d      	b.n	800680c <_printf_float+0xb8>
 8006b10:	19ba      	adds	r2, r7, r6
 8006b12:	0023      	movs	r3, r4
 8006b14:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8006b16:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8006b18:	9e0b      	ldr	r6, [sp, #44]	@ 0x2c
 8006b1a:	47b0      	blx	r6
 8006b1c:	3001      	adds	r0, #1
 8006b1e:	d1c2      	bne.n	8006aa6 <_printf_float+0x352>
 8006b20:	e674      	b.n	800680c <_printf_float+0xb8>
 8006b22:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 8006b24:	930c      	str	r3, [sp, #48]	@ 0x30
 8006b26:	2b01      	cmp	r3, #1
 8006b28:	dc02      	bgt.n	8006b30 <_printf_float+0x3dc>
 8006b2a:	2301      	movs	r3, #1
 8006b2c:	421a      	tst	r2, r3
 8006b2e:	d039      	beq.n	8006ba4 <_printf_float+0x450>
 8006b30:	2301      	movs	r3, #1
 8006b32:	003a      	movs	r2, r7
 8006b34:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8006b36:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8006b38:	9e0b      	ldr	r6, [sp, #44]	@ 0x2c
 8006b3a:	47b0      	blx	r6
 8006b3c:	3001      	adds	r0, #1
 8006b3e:	d100      	bne.n	8006b42 <_printf_float+0x3ee>
 8006b40:	e664      	b.n	800680c <_printf_float+0xb8>
 8006b42:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8006b44:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8006b46:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8006b48:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8006b4a:	9e0b      	ldr	r6, [sp, #44]	@ 0x2c
 8006b4c:	47b0      	blx	r6
 8006b4e:	3001      	adds	r0, #1
 8006b50:	d100      	bne.n	8006b54 <_printf_float+0x400>
 8006b52:	e65b      	b.n	800680c <_printf_float+0xb8>
 8006b54:	6ca8      	ldr	r0, [r5, #72]	@ 0x48
 8006b56:	6ce9      	ldr	r1, [r5, #76]	@ 0x4c
 8006b58:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8006b5a:	2200      	movs	r2, #0
 8006b5c:	3b01      	subs	r3, #1
 8006b5e:	930c      	str	r3, [sp, #48]	@ 0x30
 8006b60:	2300      	movs	r3, #0
 8006b62:	f7f9 fc73 	bl	800044c <__aeabi_dcmpeq>
 8006b66:	2800      	cmp	r0, #0
 8006b68:	d11a      	bne.n	8006ba0 <_printf_float+0x44c>
 8006b6a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8006b6c:	1c7a      	adds	r2, r7, #1
 8006b6e:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8006b70:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8006b72:	9e0b      	ldr	r6, [sp, #44]	@ 0x2c
 8006b74:	47b0      	blx	r6
 8006b76:	3001      	adds	r0, #1
 8006b78:	d10e      	bne.n	8006b98 <_printf_float+0x444>
 8006b7a:	e647      	b.n	800680c <_printf_float+0xb8>
 8006b7c:	002a      	movs	r2, r5
 8006b7e:	2301      	movs	r3, #1
 8006b80:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8006b82:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8006b84:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
 8006b86:	321a      	adds	r2, #26
 8006b88:	47b8      	blx	r7
 8006b8a:	3001      	adds	r0, #1
 8006b8c:	d100      	bne.n	8006b90 <_printf_float+0x43c>
 8006b8e:	e63d      	b.n	800680c <_printf_float+0xb8>
 8006b90:	3601      	adds	r6, #1
 8006b92:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8006b94:	429e      	cmp	r6, r3
 8006b96:	dbf1      	blt.n	8006b7c <_printf_float+0x428>
 8006b98:	002a      	movs	r2, r5
 8006b9a:	0023      	movs	r3, r4
 8006b9c:	3250      	adds	r2, #80	@ 0x50
 8006b9e:	e6d9      	b.n	8006954 <_printf_float+0x200>
 8006ba0:	2600      	movs	r6, #0
 8006ba2:	e7f6      	b.n	8006b92 <_printf_float+0x43e>
 8006ba4:	003a      	movs	r2, r7
 8006ba6:	e7e2      	b.n	8006b6e <_printf_float+0x41a>
 8006ba8:	002a      	movs	r2, r5
 8006baa:	2301      	movs	r3, #1
 8006bac:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8006bae:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8006bb0:	9e0b      	ldr	r6, [sp, #44]	@ 0x2c
 8006bb2:	3219      	adds	r2, #25
 8006bb4:	47b0      	blx	r6
 8006bb6:	3001      	adds	r0, #1
 8006bb8:	d100      	bne.n	8006bbc <_printf_float+0x468>
 8006bba:	e627      	b.n	800680c <_printf_float+0xb8>
 8006bbc:	3401      	adds	r4, #1
 8006bbe:	68eb      	ldr	r3, [r5, #12]
 8006bc0:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 8006bc2:	1a9b      	subs	r3, r3, r2
 8006bc4:	42a3      	cmp	r3, r4
 8006bc6:	dcef      	bgt.n	8006ba8 <_printf_float+0x454>
 8006bc8:	e6f8      	b.n	80069bc <_printf_float+0x268>
 8006bca:	2400      	movs	r4, #0
 8006bcc:	e7f7      	b.n	8006bbe <_printf_float+0x46a>
 8006bce:	46c0      	nop			@ (mov r8, r8)

08006bd0 <_printf_common>:
 8006bd0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8006bd2:	0016      	movs	r6, r2
 8006bd4:	9301      	str	r3, [sp, #4]
 8006bd6:	688a      	ldr	r2, [r1, #8]
 8006bd8:	690b      	ldr	r3, [r1, #16]
 8006bda:	000c      	movs	r4, r1
 8006bdc:	9000      	str	r0, [sp, #0]
 8006bde:	4293      	cmp	r3, r2
 8006be0:	da00      	bge.n	8006be4 <_printf_common+0x14>
 8006be2:	0013      	movs	r3, r2
 8006be4:	0022      	movs	r2, r4
 8006be6:	6033      	str	r3, [r6, #0]
 8006be8:	3243      	adds	r2, #67	@ 0x43
 8006bea:	7812      	ldrb	r2, [r2, #0]
 8006bec:	2a00      	cmp	r2, #0
 8006bee:	d001      	beq.n	8006bf4 <_printf_common+0x24>
 8006bf0:	3301      	adds	r3, #1
 8006bf2:	6033      	str	r3, [r6, #0]
 8006bf4:	6823      	ldr	r3, [r4, #0]
 8006bf6:	069b      	lsls	r3, r3, #26
 8006bf8:	d502      	bpl.n	8006c00 <_printf_common+0x30>
 8006bfa:	6833      	ldr	r3, [r6, #0]
 8006bfc:	3302      	adds	r3, #2
 8006bfe:	6033      	str	r3, [r6, #0]
 8006c00:	6822      	ldr	r2, [r4, #0]
 8006c02:	2306      	movs	r3, #6
 8006c04:	0015      	movs	r5, r2
 8006c06:	401d      	ands	r5, r3
 8006c08:	421a      	tst	r2, r3
 8006c0a:	d027      	beq.n	8006c5c <_printf_common+0x8c>
 8006c0c:	0023      	movs	r3, r4
 8006c0e:	3343      	adds	r3, #67	@ 0x43
 8006c10:	781b      	ldrb	r3, [r3, #0]
 8006c12:	1e5a      	subs	r2, r3, #1
 8006c14:	4193      	sbcs	r3, r2
 8006c16:	6822      	ldr	r2, [r4, #0]
 8006c18:	0692      	lsls	r2, r2, #26
 8006c1a:	d430      	bmi.n	8006c7e <_printf_common+0xae>
 8006c1c:	0022      	movs	r2, r4
 8006c1e:	9901      	ldr	r1, [sp, #4]
 8006c20:	9800      	ldr	r0, [sp, #0]
 8006c22:	9d08      	ldr	r5, [sp, #32]
 8006c24:	3243      	adds	r2, #67	@ 0x43
 8006c26:	47a8      	blx	r5
 8006c28:	3001      	adds	r0, #1
 8006c2a:	d025      	beq.n	8006c78 <_printf_common+0xa8>
 8006c2c:	2206      	movs	r2, #6
 8006c2e:	6823      	ldr	r3, [r4, #0]
 8006c30:	2500      	movs	r5, #0
 8006c32:	4013      	ands	r3, r2
 8006c34:	2b04      	cmp	r3, #4
 8006c36:	d105      	bne.n	8006c44 <_printf_common+0x74>
 8006c38:	6833      	ldr	r3, [r6, #0]
 8006c3a:	68e5      	ldr	r5, [r4, #12]
 8006c3c:	1aed      	subs	r5, r5, r3
 8006c3e:	43eb      	mvns	r3, r5
 8006c40:	17db      	asrs	r3, r3, #31
 8006c42:	401d      	ands	r5, r3
 8006c44:	68a3      	ldr	r3, [r4, #8]
 8006c46:	6922      	ldr	r2, [r4, #16]
 8006c48:	4293      	cmp	r3, r2
 8006c4a:	dd01      	ble.n	8006c50 <_printf_common+0x80>
 8006c4c:	1a9b      	subs	r3, r3, r2
 8006c4e:	18ed      	adds	r5, r5, r3
 8006c50:	2600      	movs	r6, #0
 8006c52:	42b5      	cmp	r5, r6
 8006c54:	d120      	bne.n	8006c98 <_printf_common+0xc8>
 8006c56:	2000      	movs	r0, #0
 8006c58:	e010      	b.n	8006c7c <_printf_common+0xac>
 8006c5a:	3501      	adds	r5, #1
 8006c5c:	68e3      	ldr	r3, [r4, #12]
 8006c5e:	6832      	ldr	r2, [r6, #0]
 8006c60:	1a9b      	subs	r3, r3, r2
 8006c62:	42ab      	cmp	r3, r5
 8006c64:	ddd2      	ble.n	8006c0c <_printf_common+0x3c>
 8006c66:	0022      	movs	r2, r4
 8006c68:	2301      	movs	r3, #1
 8006c6a:	9901      	ldr	r1, [sp, #4]
 8006c6c:	9800      	ldr	r0, [sp, #0]
 8006c6e:	9f08      	ldr	r7, [sp, #32]
 8006c70:	3219      	adds	r2, #25
 8006c72:	47b8      	blx	r7
 8006c74:	3001      	adds	r0, #1
 8006c76:	d1f0      	bne.n	8006c5a <_printf_common+0x8a>
 8006c78:	2001      	movs	r0, #1
 8006c7a:	4240      	negs	r0, r0
 8006c7c:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8006c7e:	2030      	movs	r0, #48	@ 0x30
 8006c80:	18e1      	adds	r1, r4, r3
 8006c82:	3143      	adds	r1, #67	@ 0x43
 8006c84:	7008      	strb	r0, [r1, #0]
 8006c86:	0021      	movs	r1, r4
 8006c88:	1c5a      	adds	r2, r3, #1
 8006c8a:	3145      	adds	r1, #69	@ 0x45
 8006c8c:	7809      	ldrb	r1, [r1, #0]
 8006c8e:	18a2      	adds	r2, r4, r2
 8006c90:	3243      	adds	r2, #67	@ 0x43
 8006c92:	3302      	adds	r3, #2
 8006c94:	7011      	strb	r1, [r2, #0]
 8006c96:	e7c1      	b.n	8006c1c <_printf_common+0x4c>
 8006c98:	0022      	movs	r2, r4
 8006c9a:	2301      	movs	r3, #1
 8006c9c:	9901      	ldr	r1, [sp, #4]
 8006c9e:	9800      	ldr	r0, [sp, #0]
 8006ca0:	9f08      	ldr	r7, [sp, #32]
 8006ca2:	321a      	adds	r2, #26
 8006ca4:	47b8      	blx	r7
 8006ca6:	3001      	adds	r0, #1
 8006ca8:	d0e6      	beq.n	8006c78 <_printf_common+0xa8>
 8006caa:	3601      	adds	r6, #1
 8006cac:	e7d1      	b.n	8006c52 <_printf_common+0x82>
	...

08006cb0 <_printf_i>:
 8006cb0:	b5f0      	push	{r4, r5, r6, r7, lr}
 8006cb2:	b08b      	sub	sp, #44	@ 0x2c
 8006cb4:	9206      	str	r2, [sp, #24]
 8006cb6:	000a      	movs	r2, r1
 8006cb8:	3243      	adds	r2, #67	@ 0x43
 8006cba:	9307      	str	r3, [sp, #28]
 8006cbc:	9005      	str	r0, [sp, #20]
 8006cbe:	9203      	str	r2, [sp, #12]
 8006cc0:	7e0a      	ldrb	r2, [r1, #24]
 8006cc2:	000c      	movs	r4, r1
 8006cc4:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8006cc6:	2a78      	cmp	r2, #120	@ 0x78
 8006cc8:	d809      	bhi.n	8006cde <_printf_i+0x2e>
 8006cca:	2a62      	cmp	r2, #98	@ 0x62
 8006ccc:	d80b      	bhi.n	8006ce6 <_printf_i+0x36>
 8006cce:	2a00      	cmp	r2, #0
 8006cd0:	d100      	bne.n	8006cd4 <_printf_i+0x24>
 8006cd2:	e0ba      	b.n	8006e4a <_printf_i+0x19a>
 8006cd4:	497a      	ldr	r1, [pc, #488]	@ (8006ec0 <_printf_i+0x210>)
 8006cd6:	9104      	str	r1, [sp, #16]
 8006cd8:	2a58      	cmp	r2, #88	@ 0x58
 8006cda:	d100      	bne.n	8006cde <_printf_i+0x2e>
 8006cdc:	e08e      	b.n	8006dfc <_printf_i+0x14c>
 8006cde:	0025      	movs	r5, r4
 8006ce0:	3542      	adds	r5, #66	@ 0x42
 8006ce2:	702a      	strb	r2, [r5, #0]
 8006ce4:	e022      	b.n	8006d2c <_printf_i+0x7c>
 8006ce6:	0010      	movs	r0, r2
 8006ce8:	3863      	subs	r0, #99	@ 0x63
 8006cea:	2815      	cmp	r0, #21
 8006cec:	d8f7      	bhi.n	8006cde <_printf_i+0x2e>
 8006cee:	f7f9 fa1d 	bl	800012c <__gnu_thumb1_case_shi>
 8006cf2:	0016      	.short	0x0016
 8006cf4:	fff6001f 	.word	0xfff6001f
 8006cf8:	fff6fff6 	.word	0xfff6fff6
 8006cfc:	001ffff6 	.word	0x001ffff6
 8006d00:	fff6fff6 	.word	0xfff6fff6
 8006d04:	fff6fff6 	.word	0xfff6fff6
 8006d08:	0036009f 	.word	0x0036009f
 8006d0c:	fff6007e 	.word	0xfff6007e
 8006d10:	00b0fff6 	.word	0x00b0fff6
 8006d14:	0036fff6 	.word	0x0036fff6
 8006d18:	fff6fff6 	.word	0xfff6fff6
 8006d1c:	0082      	.short	0x0082
 8006d1e:	0025      	movs	r5, r4
 8006d20:	681a      	ldr	r2, [r3, #0]
 8006d22:	3542      	adds	r5, #66	@ 0x42
 8006d24:	1d11      	adds	r1, r2, #4
 8006d26:	6019      	str	r1, [r3, #0]
 8006d28:	6813      	ldr	r3, [r2, #0]
 8006d2a:	702b      	strb	r3, [r5, #0]
 8006d2c:	2301      	movs	r3, #1
 8006d2e:	e09e      	b.n	8006e6e <_printf_i+0x1be>
 8006d30:	6818      	ldr	r0, [r3, #0]
 8006d32:	6809      	ldr	r1, [r1, #0]
 8006d34:	1d02      	adds	r2, r0, #4
 8006d36:	060d      	lsls	r5, r1, #24
 8006d38:	d50b      	bpl.n	8006d52 <_printf_i+0xa2>
 8006d3a:	6806      	ldr	r6, [r0, #0]
 8006d3c:	601a      	str	r2, [r3, #0]
 8006d3e:	2e00      	cmp	r6, #0
 8006d40:	da03      	bge.n	8006d4a <_printf_i+0x9a>
 8006d42:	232d      	movs	r3, #45	@ 0x2d
 8006d44:	9a03      	ldr	r2, [sp, #12]
 8006d46:	4276      	negs	r6, r6
 8006d48:	7013      	strb	r3, [r2, #0]
 8006d4a:	4b5d      	ldr	r3, [pc, #372]	@ (8006ec0 <_printf_i+0x210>)
 8006d4c:	270a      	movs	r7, #10
 8006d4e:	9304      	str	r3, [sp, #16]
 8006d50:	e018      	b.n	8006d84 <_printf_i+0xd4>
 8006d52:	6806      	ldr	r6, [r0, #0]
 8006d54:	601a      	str	r2, [r3, #0]
 8006d56:	0649      	lsls	r1, r1, #25
 8006d58:	d5f1      	bpl.n	8006d3e <_printf_i+0x8e>
 8006d5a:	b236      	sxth	r6, r6
 8006d5c:	e7ef      	b.n	8006d3e <_printf_i+0x8e>
 8006d5e:	6808      	ldr	r0, [r1, #0]
 8006d60:	6819      	ldr	r1, [r3, #0]
 8006d62:	c940      	ldmia	r1!, {r6}
 8006d64:	0605      	lsls	r5, r0, #24
 8006d66:	d402      	bmi.n	8006d6e <_printf_i+0xbe>
 8006d68:	0640      	lsls	r0, r0, #25
 8006d6a:	d500      	bpl.n	8006d6e <_printf_i+0xbe>
 8006d6c:	b2b6      	uxth	r6, r6
 8006d6e:	6019      	str	r1, [r3, #0]
 8006d70:	4b53      	ldr	r3, [pc, #332]	@ (8006ec0 <_printf_i+0x210>)
 8006d72:	270a      	movs	r7, #10
 8006d74:	9304      	str	r3, [sp, #16]
 8006d76:	2a6f      	cmp	r2, #111	@ 0x6f
 8006d78:	d100      	bne.n	8006d7c <_printf_i+0xcc>
 8006d7a:	3f02      	subs	r7, #2
 8006d7c:	0023      	movs	r3, r4
 8006d7e:	2200      	movs	r2, #0
 8006d80:	3343      	adds	r3, #67	@ 0x43
 8006d82:	701a      	strb	r2, [r3, #0]
 8006d84:	6863      	ldr	r3, [r4, #4]
 8006d86:	60a3      	str	r3, [r4, #8]
 8006d88:	2b00      	cmp	r3, #0
 8006d8a:	db06      	blt.n	8006d9a <_printf_i+0xea>
 8006d8c:	2104      	movs	r1, #4
 8006d8e:	6822      	ldr	r2, [r4, #0]
 8006d90:	9d03      	ldr	r5, [sp, #12]
 8006d92:	438a      	bics	r2, r1
 8006d94:	6022      	str	r2, [r4, #0]
 8006d96:	4333      	orrs	r3, r6
 8006d98:	d00c      	beq.n	8006db4 <_printf_i+0x104>
 8006d9a:	9d03      	ldr	r5, [sp, #12]
 8006d9c:	0030      	movs	r0, r6
 8006d9e:	0039      	movs	r1, r7
 8006da0:	f7f9 fa54 	bl	800024c <__aeabi_uidivmod>
 8006da4:	9b04      	ldr	r3, [sp, #16]
 8006da6:	3d01      	subs	r5, #1
 8006da8:	5c5b      	ldrb	r3, [r3, r1]
 8006daa:	702b      	strb	r3, [r5, #0]
 8006dac:	0033      	movs	r3, r6
 8006dae:	0006      	movs	r6, r0
 8006db0:	429f      	cmp	r7, r3
 8006db2:	d9f3      	bls.n	8006d9c <_printf_i+0xec>
 8006db4:	2f08      	cmp	r7, #8
 8006db6:	d109      	bne.n	8006dcc <_printf_i+0x11c>
 8006db8:	6823      	ldr	r3, [r4, #0]
 8006dba:	07db      	lsls	r3, r3, #31
 8006dbc:	d506      	bpl.n	8006dcc <_printf_i+0x11c>
 8006dbe:	6862      	ldr	r2, [r4, #4]
 8006dc0:	6923      	ldr	r3, [r4, #16]
 8006dc2:	429a      	cmp	r2, r3
 8006dc4:	dc02      	bgt.n	8006dcc <_printf_i+0x11c>
 8006dc6:	2330      	movs	r3, #48	@ 0x30
 8006dc8:	3d01      	subs	r5, #1
 8006dca:	702b      	strb	r3, [r5, #0]
 8006dcc:	9b03      	ldr	r3, [sp, #12]
 8006dce:	1b5b      	subs	r3, r3, r5
 8006dd0:	6123      	str	r3, [r4, #16]
 8006dd2:	9b07      	ldr	r3, [sp, #28]
 8006dd4:	0021      	movs	r1, r4
 8006dd6:	9300      	str	r3, [sp, #0]
 8006dd8:	9805      	ldr	r0, [sp, #20]
 8006dda:	9b06      	ldr	r3, [sp, #24]
 8006ddc:	aa09      	add	r2, sp, #36	@ 0x24
 8006dde:	f7ff fef7 	bl	8006bd0 <_printf_common>
 8006de2:	3001      	adds	r0, #1
 8006de4:	d148      	bne.n	8006e78 <_printf_i+0x1c8>
 8006de6:	2001      	movs	r0, #1
 8006de8:	4240      	negs	r0, r0
 8006dea:	b00b      	add	sp, #44	@ 0x2c
 8006dec:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8006dee:	2220      	movs	r2, #32
 8006df0:	6809      	ldr	r1, [r1, #0]
 8006df2:	430a      	orrs	r2, r1
 8006df4:	6022      	str	r2, [r4, #0]
 8006df6:	2278      	movs	r2, #120	@ 0x78
 8006df8:	4932      	ldr	r1, [pc, #200]	@ (8006ec4 <_printf_i+0x214>)
 8006dfa:	9104      	str	r1, [sp, #16]
 8006dfc:	0021      	movs	r1, r4
 8006dfe:	3145      	adds	r1, #69	@ 0x45
 8006e00:	700a      	strb	r2, [r1, #0]
 8006e02:	6819      	ldr	r1, [r3, #0]
 8006e04:	6822      	ldr	r2, [r4, #0]
 8006e06:	c940      	ldmia	r1!, {r6}
 8006e08:	0610      	lsls	r0, r2, #24
 8006e0a:	d402      	bmi.n	8006e12 <_printf_i+0x162>
 8006e0c:	0650      	lsls	r0, r2, #25
 8006e0e:	d500      	bpl.n	8006e12 <_printf_i+0x162>
 8006e10:	b2b6      	uxth	r6, r6
 8006e12:	6019      	str	r1, [r3, #0]
 8006e14:	07d3      	lsls	r3, r2, #31
 8006e16:	d502      	bpl.n	8006e1e <_printf_i+0x16e>
 8006e18:	2320      	movs	r3, #32
 8006e1a:	4313      	orrs	r3, r2
 8006e1c:	6023      	str	r3, [r4, #0]
 8006e1e:	2e00      	cmp	r6, #0
 8006e20:	d001      	beq.n	8006e26 <_printf_i+0x176>
 8006e22:	2710      	movs	r7, #16
 8006e24:	e7aa      	b.n	8006d7c <_printf_i+0xcc>
 8006e26:	2220      	movs	r2, #32
 8006e28:	6823      	ldr	r3, [r4, #0]
 8006e2a:	4393      	bics	r3, r2
 8006e2c:	6023      	str	r3, [r4, #0]
 8006e2e:	e7f8      	b.n	8006e22 <_printf_i+0x172>
 8006e30:	681a      	ldr	r2, [r3, #0]
 8006e32:	680d      	ldr	r5, [r1, #0]
 8006e34:	1d10      	adds	r0, r2, #4
 8006e36:	6949      	ldr	r1, [r1, #20]
 8006e38:	6018      	str	r0, [r3, #0]
 8006e3a:	6813      	ldr	r3, [r2, #0]
 8006e3c:	062e      	lsls	r6, r5, #24
 8006e3e:	d501      	bpl.n	8006e44 <_printf_i+0x194>
 8006e40:	6019      	str	r1, [r3, #0]
 8006e42:	e002      	b.n	8006e4a <_printf_i+0x19a>
 8006e44:	066d      	lsls	r5, r5, #25
 8006e46:	d5fb      	bpl.n	8006e40 <_printf_i+0x190>
 8006e48:	8019      	strh	r1, [r3, #0]
 8006e4a:	2300      	movs	r3, #0
 8006e4c:	9d03      	ldr	r5, [sp, #12]
 8006e4e:	6123      	str	r3, [r4, #16]
 8006e50:	e7bf      	b.n	8006dd2 <_printf_i+0x122>
 8006e52:	681a      	ldr	r2, [r3, #0]
 8006e54:	1d11      	adds	r1, r2, #4
 8006e56:	6019      	str	r1, [r3, #0]
 8006e58:	6815      	ldr	r5, [r2, #0]
 8006e5a:	2100      	movs	r1, #0
 8006e5c:	0028      	movs	r0, r5
 8006e5e:	6862      	ldr	r2, [r4, #4]
 8006e60:	f000 f9eb 	bl	800723a <memchr>
 8006e64:	2800      	cmp	r0, #0
 8006e66:	d001      	beq.n	8006e6c <_printf_i+0x1bc>
 8006e68:	1b40      	subs	r0, r0, r5
 8006e6a:	6060      	str	r0, [r4, #4]
 8006e6c:	6863      	ldr	r3, [r4, #4]
 8006e6e:	6123      	str	r3, [r4, #16]
 8006e70:	2300      	movs	r3, #0
 8006e72:	9a03      	ldr	r2, [sp, #12]
 8006e74:	7013      	strb	r3, [r2, #0]
 8006e76:	e7ac      	b.n	8006dd2 <_printf_i+0x122>
 8006e78:	002a      	movs	r2, r5
 8006e7a:	6923      	ldr	r3, [r4, #16]
 8006e7c:	9906      	ldr	r1, [sp, #24]
 8006e7e:	9805      	ldr	r0, [sp, #20]
 8006e80:	9d07      	ldr	r5, [sp, #28]
 8006e82:	47a8      	blx	r5
 8006e84:	3001      	adds	r0, #1
 8006e86:	d0ae      	beq.n	8006de6 <_printf_i+0x136>
 8006e88:	6823      	ldr	r3, [r4, #0]
 8006e8a:	079b      	lsls	r3, r3, #30
 8006e8c:	d415      	bmi.n	8006eba <_printf_i+0x20a>
 8006e8e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8006e90:	68e0      	ldr	r0, [r4, #12]
 8006e92:	4298      	cmp	r0, r3
 8006e94:	daa9      	bge.n	8006dea <_printf_i+0x13a>
 8006e96:	0018      	movs	r0, r3
 8006e98:	e7a7      	b.n	8006dea <_printf_i+0x13a>
 8006e9a:	0022      	movs	r2, r4
 8006e9c:	2301      	movs	r3, #1
 8006e9e:	9906      	ldr	r1, [sp, #24]
 8006ea0:	9805      	ldr	r0, [sp, #20]
 8006ea2:	9e07      	ldr	r6, [sp, #28]
 8006ea4:	3219      	adds	r2, #25
 8006ea6:	47b0      	blx	r6
 8006ea8:	3001      	adds	r0, #1
 8006eaa:	d09c      	beq.n	8006de6 <_printf_i+0x136>
 8006eac:	3501      	adds	r5, #1
 8006eae:	68e3      	ldr	r3, [r4, #12]
 8006eb0:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8006eb2:	1a9b      	subs	r3, r3, r2
 8006eb4:	42ab      	cmp	r3, r5
 8006eb6:	dcf0      	bgt.n	8006e9a <_printf_i+0x1ea>
 8006eb8:	e7e9      	b.n	8006e8e <_printf_i+0x1de>
 8006eba:	2500      	movs	r5, #0
 8006ebc:	e7f7      	b.n	8006eae <_printf_i+0x1fe>
 8006ebe:	46c0      	nop			@ (mov r8, r8)
 8006ec0:	0800956b 	.word	0x0800956b
 8006ec4:	0800957c 	.word	0x0800957c

08006ec8 <std>:
 8006ec8:	2300      	movs	r3, #0
 8006eca:	b510      	push	{r4, lr}
 8006ecc:	0004      	movs	r4, r0
 8006ece:	6003      	str	r3, [r0, #0]
 8006ed0:	6043      	str	r3, [r0, #4]
 8006ed2:	6083      	str	r3, [r0, #8]
 8006ed4:	8181      	strh	r1, [r0, #12]
 8006ed6:	6643      	str	r3, [r0, #100]	@ 0x64
 8006ed8:	81c2      	strh	r2, [r0, #14]
 8006eda:	6103      	str	r3, [r0, #16]
 8006edc:	6143      	str	r3, [r0, #20]
 8006ede:	6183      	str	r3, [r0, #24]
 8006ee0:	0019      	movs	r1, r3
 8006ee2:	2208      	movs	r2, #8
 8006ee4:	305c      	adds	r0, #92	@ 0x5c
 8006ee6:	f000 f921 	bl	800712c <memset>
 8006eea:	4b0b      	ldr	r3, [pc, #44]	@ (8006f18 <std+0x50>)
 8006eec:	6224      	str	r4, [r4, #32]
 8006eee:	6263      	str	r3, [r4, #36]	@ 0x24
 8006ef0:	4b0a      	ldr	r3, [pc, #40]	@ (8006f1c <std+0x54>)
 8006ef2:	62a3      	str	r3, [r4, #40]	@ 0x28
 8006ef4:	4b0a      	ldr	r3, [pc, #40]	@ (8006f20 <std+0x58>)
 8006ef6:	62e3      	str	r3, [r4, #44]	@ 0x2c
 8006ef8:	4b0a      	ldr	r3, [pc, #40]	@ (8006f24 <std+0x5c>)
 8006efa:	6323      	str	r3, [r4, #48]	@ 0x30
 8006efc:	4b0a      	ldr	r3, [pc, #40]	@ (8006f28 <std+0x60>)
 8006efe:	429c      	cmp	r4, r3
 8006f00:	d005      	beq.n	8006f0e <std+0x46>
 8006f02:	4b0a      	ldr	r3, [pc, #40]	@ (8006f2c <std+0x64>)
 8006f04:	429c      	cmp	r4, r3
 8006f06:	d002      	beq.n	8006f0e <std+0x46>
 8006f08:	4b09      	ldr	r3, [pc, #36]	@ (8006f30 <std+0x68>)
 8006f0a:	429c      	cmp	r4, r3
 8006f0c:	d103      	bne.n	8006f16 <std+0x4e>
 8006f0e:	0020      	movs	r0, r4
 8006f10:	3058      	adds	r0, #88	@ 0x58
 8006f12:	f000 f98f 	bl	8007234 <__retarget_lock_init_recursive>
 8006f16:	bd10      	pop	{r4, pc}
 8006f18:	08007095 	.word	0x08007095
 8006f1c:	080070bd 	.word	0x080070bd
 8006f20:	080070f5 	.word	0x080070f5
 8006f24:	08007121 	.word	0x08007121
 8006f28:	20000848 	.word	0x20000848
 8006f2c:	200008b0 	.word	0x200008b0
 8006f30:	20000918 	.word	0x20000918

08006f34 <stdio_exit_handler>:
 8006f34:	b510      	push	{r4, lr}
 8006f36:	4a03      	ldr	r2, [pc, #12]	@ (8006f44 <stdio_exit_handler+0x10>)
 8006f38:	4903      	ldr	r1, [pc, #12]	@ (8006f48 <stdio_exit_handler+0x14>)
 8006f3a:	4804      	ldr	r0, [pc, #16]	@ (8006f4c <stdio_exit_handler+0x18>)
 8006f3c:	f000 f86c 	bl	8007018 <_fwalk_sglue>
 8006f40:	bd10      	pop	{r4, pc}
 8006f42:	46c0      	nop			@ (mov r8, r8)
 8006f44:	20000030 	.word	0x20000030
 8006f48:	08008c59 	.word	0x08008c59
 8006f4c:	20000040 	.word	0x20000040

08006f50 <cleanup_stdio>:
 8006f50:	6841      	ldr	r1, [r0, #4]
 8006f52:	4b0b      	ldr	r3, [pc, #44]	@ (8006f80 <cleanup_stdio+0x30>)
 8006f54:	b510      	push	{r4, lr}
 8006f56:	0004      	movs	r4, r0
 8006f58:	4299      	cmp	r1, r3
 8006f5a:	d001      	beq.n	8006f60 <cleanup_stdio+0x10>
 8006f5c:	f001 fe7c 	bl	8008c58 <_fflush_r>
 8006f60:	68a1      	ldr	r1, [r4, #8]
 8006f62:	4b08      	ldr	r3, [pc, #32]	@ (8006f84 <cleanup_stdio+0x34>)
 8006f64:	4299      	cmp	r1, r3
 8006f66:	d002      	beq.n	8006f6e <cleanup_stdio+0x1e>
 8006f68:	0020      	movs	r0, r4
 8006f6a:	f001 fe75 	bl	8008c58 <_fflush_r>
 8006f6e:	68e1      	ldr	r1, [r4, #12]
 8006f70:	4b05      	ldr	r3, [pc, #20]	@ (8006f88 <cleanup_stdio+0x38>)
 8006f72:	4299      	cmp	r1, r3
 8006f74:	d002      	beq.n	8006f7c <cleanup_stdio+0x2c>
 8006f76:	0020      	movs	r0, r4
 8006f78:	f001 fe6e 	bl	8008c58 <_fflush_r>
 8006f7c:	bd10      	pop	{r4, pc}
 8006f7e:	46c0      	nop			@ (mov r8, r8)
 8006f80:	20000848 	.word	0x20000848
 8006f84:	200008b0 	.word	0x200008b0
 8006f88:	20000918 	.word	0x20000918

08006f8c <global_stdio_init.part.0>:
 8006f8c:	b510      	push	{r4, lr}
 8006f8e:	4b09      	ldr	r3, [pc, #36]	@ (8006fb4 <global_stdio_init.part.0+0x28>)
 8006f90:	4a09      	ldr	r2, [pc, #36]	@ (8006fb8 <global_stdio_init.part.0+0x2c>)
 8006f92:	2104      	movs	r1, #4
 8006f94:	601a      	str	r2, [r3, #0]
 8006f96:	4809      	ldr	r0, [pc, #36]	@ (8006fbc <global_stdio_init.part.0+0x30>)
 8006f98:	2200      	movs	r2, #0
 8006f9a:	f7ff ff95 	bl	8006ec8 <std>
 8006f9e:	2201      	movs	r2, #1
 8006fa0:	2109      	movs	r1, #9
 8006fa2:	4807      	ldr	r0, [pc, #28]	@ (8006fc0 <global_stdio_init.part.0+0x34>)
 8006fa4:	f7ff ff90 	bl	8006ec8 <std>
 8006fa8:	2202      	movs	r2, #2
 8006faa:	2112      	movs	r1, #18
 8006fac:	4805      	ldr	r0, [pc, #20]	@ (8006fc4 <global_stdio_init.part.0+0x38>)
 8006fae:	f7ff ff8b 	bl	8006ec8 <std>
 8006fb2:	bd10      	pop	{r4, pc}
 8006fb4:	20000980 	.word	0x20000980
 8006fb8:	08006f35 	.word	0x08006f35
 8006fbc:	20000848 	.word	0x20000848
 8006fc0:	200008b0 	.word	0x200008b0
 8006fc4:	20000918 	.word	0x20000918

08006fc8 <__sfp_lock_acquire>:
 8006fc8:	b510      	push	{r4, lr}
 8006fca:	4802      	ldr	r0, [pc, #8]	@ (8006fd4 <__sfp_lock_acquire+0xc>)
 8006fcc:	f000 f933 	bl	8007236 <__retarget_lock_acquire_recursive>
 8006fd0:	bd10      	pop	{r4, pc}
 8006fd2:	46c0      	nop			@ (mov r8, r8)
 8006fd4:	20000989 	.word	0x20000989

08006fd8 <__sfp_lock_release>:
 8006fd8:	b510      	push	{r4, lr}
 8006fda:	4802      	ldr	r0, [pc, #8]	@ (8006fe4 <__sfp_lock_release+0xc>)
 8006fdc:	f000 f92c 	bl	8007238 <__retarget_lock_release_recursive>
 8006fe0:	bd10      	pop	{r4, pc}
 8006fe2:	46c0      	nop			@ (mov r8, r8)
 8006fe4:	20000989 	.word	0x20000989

08006fe8 <__sinit>:
 8006fe8:	b510      	push	{r4, lr}
 8006fea:	0004      	movs	r4, r0
 8006fec:	f7ff ffec 	bl	8006fc8 <__sfp_lock_acquire>
 8006ff0:	6a23      	ldr	r3, [r4, #32]
 8006ff2:	2b00      	cmp	r3, #0
 8006ff4:	d002      	beq.n	8006ffc <__sinit+0x14>
 8006ff6:	f7ff ffef 	bl	8006fd8 <__sfp_lock_release>
 8006ffa:	bd10      	pop	{r4, pc}
 8006ffc:	4b04      	ldr	r3, [pc, #16]	@ (8007010 <__sinit+0x28>)
 8006ffe:	6223      	str	r3, [r4, #32]
 8007000:	4b04      	ldr	r3, [pc, #16]	@ (8007014 <__sinit+0x2c>)
 8007002:	681b      	ldr	r3, [r3, #0]
 8007004:	2b00      	cmp	r3, #0
 8007006:	d1f6      	bne.n	8006ff6 <__sinit+0xe>
 8007008:	f7ff ffc0 	bl	8006f8c <global_stdio_init.part.0>
 800700c:	e7f3      	b.n	8006ff6 <__sinit+0xe>
 800700e:	46c0      	nop			@ (mov r8, r8)
 8007010:	08006f51 	.word	0x08006f51
 8007014:	20000980 	.word	0x20000980

08007018 <_fwalk_sglue>:
 8007018:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800701a:	0014      	movs	r4, r2
 800701c:	2600      	movs	r6, #0
 800701e:	9000      	str	r0, [sp, #0]
 8007020:	9101      	str	r1, [sp, #4]
 8007022:	68a5      	ldr	r5, [r4, #8]
 8007024:	6867      	ldr	r7, [r4, #4]
 8007026:	3f01      	subs	r7, #1
 8007028:	d504      	bpl.n	8007034 <_fwalk_sglue+0x1c>
 800702a:	6824      	ldr	r4, [r4, #0]
 800702c:	2c00      	cmp	r4, #0
 800702e:	d1f8      	bne.n	8007022 <_fwalk_sglue+0xa>
 8007030:	0030      	movs	r0, r6
 8007032:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8007034:	89ab      	ldrh	r3, [r5, #12]
 8007036:	2b01      	cmp	r3, #1
 8007038:	d908      	bls.n	800704c <_fwalk_sglue+0x34>
 800703a:	220e      	movs	r2, #14
 800703c:	5eab      	ldrsh	r3, [r5, r2]
 800703e:	3301      	adds	r3, #1
 8007040:	d004      	beq.n	800704c <_fwalk_sglue+0x34>
 8007042:	0029      	movs	r1, r5
 8007044:	9800      	ldr	r0, [sp, #0]
 8007046:	9b01      	ldr	r3, [sp, #4]
 8007048:	4798      	blx	r3
 800704a:	4306      	orrs	r6, r0
 800704c:	3568      	adds	r5, #104	@ 0x68
 800704e:	e7ea      	b.n	8007026 <_fwalk_sglue+0xe>

08007050 <siprintf>:
 8007050:	b40e      	push	{r1, r2, r3}
 8007052:	b510      	push	{r4, lr}
 8007054:	2400      	movs	r4, #0
 8007056:	490c      	ldr	r1, [pc, #48]	@ (8007088 <siprintf+0x38>)
 8007058:	b09d      	sub	sp, #116	@ 0x74
 800705a:	ab1f      	add	r3, sp, #124	@ 0x7c
 800705c:	9002      	str	r0, [sp, #8]
 800705e:	9006      	str	r0, [sp, #24]
 8007060:	9107      	str	r1, [sp, #28]
 8007062:	9104      	str	r1, [sp, #16]
 8007064:	4809      	ldr	r0, [pc, #36]	@ (800708c <siprintf+0x3c>)
 8007066:	490a      	ldr	r1, [pc, #40]	@ (8007090 <siprintf+0x40>)
 8007068:	cb04      	ldmia	r3!, {r2}
 800706a:	9105      	str	r1, [sp, #20]
 800706c:	6800      	ldr	r0, [r0, #0]
 800706e:	a902      	add	r1, sp, #8
 8007070:	9301      	str	r3, [sp, #4]
 8007072:	941b      	str	r4, [sp, #108]	@ 0x6c
 8007074:	f001 fc6c 	bl	8008950 <_svfiprintf_r>
 8007078:	9b02      	ldr	r3, [sp, #8]
 800707a:	701c      	strb	r4, [r3, #0]
 800707c:	b01d      	add	sp, #116	@ 0x74
 800707e:	bc10      	pop	{r4}
 8007080:	bc08      	pop	{r3}
 8007082:	b003      	add	sp, #12
 8007084:	4718      	bx	r3
 8007086:	46c0      	nop			@ (mov r8, r8)
 8007088:	7fffffff 	.word	0x7fffffff
 800708c:	2000003c 	.word	0x2000003c
 8007090:	ffff0208 	.word	0xffff0208

08007094 <__sread>:
 8007094:	b570      	push	{r4, r5, r6, lr}
 8007096:	000c      	movs	r4, r1
 8007098:	250e      	movs	r5, #14
 800709a:	5f49      	ldrsh	r1, [r1, r5]
 800709c:	f000 f878 	bl	8007190 <_read_r>
 80070a0:	2800      	cmp	r0, #0
 80070a2:	db03      	blt.n	80070ac <__sread+0x18>
 80070a4:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 80070a6:	181b      	adds	r3, r3, r0
 80070a8:	6563      	str	r3, [r4, #84]	@ 0x54
 80070aa:	bd70      	pop	{r4, r5, r6, pc}
 80070ac:	89a3      	ldrh	r3, [r4, #12]
 80070ae:	4a02      	ldr	r2, [pc, #8]	@ (80070b8 <__sread+0x24>)
 80070b0:	4013      	ands	r3, r2
 80070b2:	81a3      	strh	r3, [r4, #12]
 80070b4:	e7f9      	b.n	80070aa <__sread+0x16>
 80070b6:	46c0      	nop			@ (mov r8, r8)
 80070b8:	ffffefff 	.word	0xffffefff

080070bc <__swrite>:
 80070bc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80070be:	001f      	movs	r7, r3
 80070c0:	898b      	ldrh	r3, [r1, #12]
 80070c2:	0005      	movs	r5, r0
 80070c4:	000c      	movs	r4, r1
 80070c6:	0016      	movs	r6, r2
 80070c8:	05db      	lsls	r3, r3, #23
 80070ca:	d505      	bpl.n	80070d8 <__swrite+0x1c>
 80070cc:	230e      	movs	r3, #14
 80070ce:	5ec9      	ldrsh	r1, [r1, r3]
 80070d0:	2200      	movs	r2, #0
 80070d2:	2302      	movs	r3, #2
 80070d4:	f000 f848 	bl	8007168 <_lseek_r>
 80070d8:	89a3      	ldrh	r3, [r4, #12]
 80070da:	4a05      	ldr	r2, [pc, #20]	@ (80070f0 <__swrite+0x34>)
 80070dc:	0028      	movs	r0, r5
 80070de:	4013      	ands	r3, r2
 80070e0:	81a3      	strh	r3, [r4, #12]
 80070e2:	0032      	movs	r2, r6
 80070e4:	230e      	movs	r3, #14
 80070e6:	5ee1      	ldrsh	r1, [r4, r3]
 80070e8:	003b      	movs	r3, r7
 80070ea:	f000 f865 	bl	80071b8 <_write_r>
 80070ee:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80070f0:	ffffefff 	.word	0xffffefff

080070f4 <__sseek>:
 80070f4:	b570      	push	{r4, r5, r6, lr}
 80070f6:	000c      	movs	r4, r1
 80070f8:	250e      	movs	r5, #14
 80070fa:	5f49      	ldrsh	r1, [r1, r5]
 80070fc:	f000 f834 	bl	8007168 <_lseek_r>
 8007100:	89a3      	ldrh	r3, [r4, #12]
 8007102:	1c42      	adds	r2, r0, #1
 8007104:	d103      	bne.n	800710e <__sseek+0x1a>
 8007106:	4a05      	ldr	r2, [pc, #20]	@ (800711c <__sseek+0x28>)
 8007108:	4013      	ands	r3, r2
 800710a:	81a3      	strh	r3, [r4, #12]
 800710c:	bd70      	pop	{r4, r5, r6, pc}
 800710e:	2280      	movs	r2, #128	@ 0x80
 8007110:	0152      	lsls	r2, r2, #5
 8007112:	4313      	orrs	r3, r2
 8007114:	81a3      	strh	r3, [r4, #12]
 8007116:	6560      	str	r0, [r4, #84]	@ 0x54
 8007118:	e7f8      	b.n	800710c <__sseek+0x18>
 800711a:	46c0      	nop			@ (mov r8, r8)
 800711c:	ffffefff 	.word	0xffffefff

08007120 <__sclose>:
 8007120:	b510      	push	{r4, lr}
 8007122:	230e      	movs	r3, #14
 8007124:	5ec9      	ldrsh	r1, [r1, r3]
 8007126:	f000 f80d 	bl	8007144 <_close_r>
 800712a:	bd10      	pop	{r4, pc}

0800712c <memset>:
 800712c:	0003      	movs	r3, r0
 800712e:	1882      	adds	r2, r0, r2
 8007130:	4293      	cmp	r3, r2
 8007132:	d100      	bne.n	8007136 <memset+0xa>
 8007134:	4770      	bx	lr
 8007136:	7019      	strb	r1, [r3, #0]
 8007138:	3301      	adds	r3, #1
 800713a:	e7f9      	b.n	8007130 <memset+0x4>

0800713c <_localeconv_r>:
 800713c:	4800      	ldr	r0, [pc, #0]	@ (8007140 <_localeconv_r+0x4>)
 800713e:	4770      	bx	lr
 8007140:	2000017c 	.word	0x2000017c

08007144 <_close_r>:
 8007144:	2300      	movs	r3, #0
 8007146:	b570      	push	{r4, r5, r6, lr}
 8007148:	4d06      	ldr	r5, [pc, #24]	@ (8007164 <_close_r+0x20>)
 800714a:	0004      	movs	r4, r0
 800714c:	0008      	movs	r0, r1
 800714e:	602b      	str	r3, [r5, #0]
 8007150:	f7fd fc78 	bl	8004a44 <_close>
 8007154:	1c43      	adds	r3, r0, #1
 8007156:	d103      	bne.n	8007160 <_close_r+0x1c>
 8007158:	682b      	ldr	r3, [r5, #0]
 800715a:	2b00      	cmp	r3, #0
 800715c:	d000      	beq.n	8007160 <_close_r+0x1c>
 800715e:	6023      	str	r3, [r4, #0]
 8007160:	bd70      	pop	{r4, r5, r6, pc}
 8007162:	46c0      	nop			@ (mov r8, r8)
 8007164:	20000984 	.word	0x20000984

08007168 <_lseek_r>:
 8007168:	b570      	push	{r4, r5, r6, lr}
 800716a:	0004      	movs	r4, r0
 800716c:	0008      	movs	r0, r1
 800716e:	0011      	movs	r1, r2
 8007170:	001a      	movs	r2, r3
 8007172:	2300      	movs	r3, #0
 8007174:	4d05      	ldr	r5, [pc, #20]	@ (800718c <_lseek_r+0x24>)
 8007176:	602b      	str	r3, [r5, #0]
 8007178:	f7fd fc6e 	bl	8004a58 <_lseek>
 800717c:	1c43      	adds	r3, r0, #1
 800717e:	d103      	bne.n	8007188 <_lseek_r+0x20>
 8007180:	682b      	ldr	r3, [r5, #0]
 8007182:	2b00      	cmp	r3, #0
 8007184:	d000      	beq.n	8007188 <_lseek_r+0x20>
 8007186:	6023      	str	r3, [r4, #0]
 8007188:	bd70      	pop	{r4, r5, r6, pc}
 800718a:	46c0      	nop			@ (mov r8, r8)
 800718c:	20000984 	.word	0x20000984

08007190 <_read_r>:
 8007190:	b570      	push	{r4, r5, r6, lr}
 8007192:	0004      	movs	r4, r0
 8007194:	0008      	movs	r0, r1
 8007196:	0011      	movs	r1, r2
 8007198:	001a      	movs	r2, r3
 800719a:	2300      	movs	r3, #0
 800719c:	4d05      	ldr	r5, [pc, #20]	@ (80071b4 <_read_r+0x24>)
 800719e:	602b      	str	r3, [r5, #0]
 80071a0:	f7fd fc36 	bl	8004a10 <_read>
 80071a4:	1c43      	adds	r3, r0, #1
 80071a6:	d103      	bne.n	80071b0 <_read_r+0x20>
 80071a8:	682b      	ldr	r3, [r5, #0]
 80071aa:	2b00      	cmp	r3, #0
 80071ac:	d000      	beq.n	80071b0 <_read_r+0x20>
 80071ae:	6023      	str	r3, [r4, #0]
 80071b0:	bd70      	pop	{r4, r5, r6, pc}
 80071b2:	46c0      	nop			@ (mov r8, r8)
 80071b4:	20000984 	.word	0x20000984

080071b8 <_write_r>:
 80071b8:	b570      	push	{r4, r5, r6, lr}
 80071ba:	0004      	movs	r4, r0
 80071bc:	0008      	movs	r0, r1
 80071be:	0011      	movs	r1, r2
 80071c0:	001a      	movs	r2, r3
 80071c2:	2300      	movs	r3, #0
 80071c4:	4d05      	ldr	r5, [pc, #20]	@ (80071dc <_write_r+0x24>)
 80071c6:	602b      	str	r3, [r5, #0]
 80071c8:	f7fd fc2f 	bl	8004a2a <_write>
 80071cc:	1c43      	adds	r3, r0, #1
 80071ce:	d103      	bne.n	80071d8 <_write_r+0x20>
 80071d0:	682b      	ldr	r3, [r5, #0]
 80071d2:	2b00      	cmp	r3, #0
 80071d4:	d000      	beq.n	80071d8 <_write_r+0x20>
 80071d6:	6023      	str	r3, [r4, #0]
 80071d8:	bd70      	pop	{r4, r5, r6, pc}
 80071da:	46c0      	nop			@ (mov r8, r8)
 80071dc:	20000984 	.word	0x20000984

080071e0 <__errno>:
 80071e0:	4b01      	ldr	r3, [pc, #4]	@ (80071e8 <__errno+0x8>)
 80071e2:	6818      	ldr	r0, [r3, #0]
 80071e4:	4770      	bx	lr
 80071e6:	46c0      	nop			@ (mov r8, r8)
 80071e8:	2000003c 	.word	0x2000003c

080071ec <__libc_init_array>:
 80071ec:	b570      	push	{r4, r5, r6, lr}
 80071ee:	2600      	movs	r6, #0
 80071f0:	4c0c      	ldr	r4, [pc, #48]	@ (8007224 <__libc_init_array+0x38>)
 80071f2:	4d0d      	ldr	r5, [pc, #52]	@ (8007228 <__libc_init_array+0x3c>)
 80071f4:	1b64      	subs	r4, r4, r5
 80071f6:	10a4      	asrs	r4, r4, #2
 80071f8:	42a6      	cmp	r6, r4
 80071fa:	d109      	bne.n	8007210 <__libc_init_array+0x24>
 80071fc:	2600      	movs	r6, #0
 80071fe:	f002 f8f1 	bl	80093e4 <_init>
 8007202:	4c0a      	ldr	r4, [pc, #40]	@ (800722c <__libc_init_array+0x40>)
 8007204:	4d0a      	ldr	r5, [pc, #40]	@ (8007230 <__libc_init_array+0x44>)
 8007206:	1b64      	subs	r4, r4, r5
 8007208:	10a4      	asrs	r4, r4, #2
 800720a:	42a6      	cmp	r6, r4
 800720c:	d105      	bne.n	800721a <__libc_init_array+0x2e>
 800720e:	bd70      	pop	{r4, r5, r6, pc}
 8007210:	00b3      	lsls	r3, r6, #2
 8007212:	58eb      	ldr	r3, [r5, r3]
 8007214:	4798      	blx	r3
 8007216:	3601      	adds	r6, #1
 8007218:	e7ee      	b.n	80071f8 <__libc_init_array+0xc>
 800721a:	00b3      	lsls	r3, r6, #2
 800721c:	58eb      	ldr	r3, [r5, r3]
 800721e:	4798      	blx	r3
 8007220:	3601      	adds	r6, #1
 8007222:	e7f2      	b.n	800720a <__libc_init_array+0x1e>
 8007224:	0800c134 	.word	0x0800c134
 8007228:	0800c134 	.word	0x0800c134
 800722c:	0800c138 	.word	0x0800c138
 8007230:	0800c134 	.word	0x0800c134

08007234 <__retarget_lock_init_recursive>:
 8007234:	4770      	bx	lr

08007236 <__retarget_lock_acquire_recursive>:
 8007236:	4770      	bx	lr

08007238 <__retarget_lock_release_recursive>:
 8007238:	4770      	bx	lr

0800723a <memchr>:
 800723a:	b2c9      	uxtb	r1, r1
 800723c:	1882      	adds	r2, r0, r2
 800723e:	4290      	cmp	r0, r2
 8007240:	d101      	bne.n	8007246 <memchr+0xc>
 8007242:	2000      	movs	r0, #0
 8007244:	4770      	bx	lr
 8007246:	7803      	ldrb	r3, [r0, #0]
 8007248:	428b      	cmp	r3, r1
 800724a:	d0fb      	beq.n	8007244 <memchr+0xa>
 800724c:	3001      	adds	r0, #1
 800724e:	e7f6      	b.n	800723e <memchr+0x4>

08007250 <memcpy>:
 8007250:	2300      	movs	r3, #0
 8007252:	b510      	push	{r4, lr}
 8007254:	429a      	cmp	r2, r3
 8007256:	d100      	bne.n	800725a <memcpy+0xa>
 8007258:	bd10      	pop	{r4, pc}
 800725a:	5ccc      	ldrb	r4, [r1, r3]
 800725c:	54c4      	strb	r4, [r0, r3]
 800725e:	3301      	adds	r3, #1
 8007260:	e7f8      	b.n	8007254 <memcpy+0x4>

08007262 <quorem>:
 8007262:	b5f0      	push	{r4, r5, r6, r7, lr}
 8007264:	6903      	ldr	r3, [r0, #16]
 8007266:	690c      	ldr	r4, [r1, #16]
 8007268:	b089      	sub	sp, #36	@ 0x24
 800726a:	9003      	str	r0, [sp, #12]
 800726c:	9106      	str	r1, [sp, #24]
 800726e:	2000      	movs	r0, #0
 8007270:	42a3      	cmp	r3, r4
 8007272:	db63      	blt.n	800733c <quorem+0xda>
 8007274:	000b      	movs	r3, r1
 8007276:	3c01      	subs	r4, #1
 8007278:	3314      	adds	r3, #20
 800727a:	00a5      	lsls	r5, r4, #2
 800727c:	9304      	str	r3, [sp, #16]
 800727e:	195b      	adds	r3, r3, r5
 8007280:	9305      	str	r3, [sp, #20]
 8007282:	9b03      	ldr	r3, [sp, #12]
 8007284:	3314      	adds	r3, #20
 8007286:	9301      	str	r3, [sp, #4]
 8007288:	195d      	adds	r5, r3, r5
 800728a:	9b05      	ldr	r3, [sp, #20]
 800728c:	682f      	ldr	r7, [r5, #0]
 800728e:	681e      	ldr	r6, [r3, #0]
 8007290:	0038      	movs	r0, r7
 8007292:	3601      	adds	r6, #1
 8007294:	0031      	movs	r1, r6
 8007296:	f7f8 ff53 	bl	8000140 <__udivsi3>
 800729a:	9002      	str	r0, [sp, #8]
 800729c:	42b7      	cmp	r7, r6
 800729e:	d327      	bcc.n	80072f0 <quorem+0x8e>
 80072a0:	9b04      	ldr	r3, [sp, #16]
 80072a2:	2700      	movs	r7, #0
 80072a4:	469c      	mov	ip, r3
 80072a6:	9e01      	ldr	r6, [sp, #4]
 80072a8:	9707      	str	r7, [sp, #28]
 80072aa:	4662      	mov	r2, ip
 80072ac:	ca08      	ldmia	r2!, {r3}
 80072ae:	6830      	ldr	r0, [r6, #0]
 80072b0:	4694      	mov	ip, r2
 80072b2:	9a02      	ldr	r2, [sp, #8]
 80072b4:	b299      	uxth	r1, r3
 80072b6:	4351      	muls	r1, r2
 80072b8:	0c1b      	lsrs	r3, r3, #16
 80072ba:	4353      	muls	r3, r2
 80072bc:	19c9      	adds	r1, r1, r7
 80072be:	0c0a      	lsrs	r2, r1, #16
 80072c0:	189b      	adds	r3, r3, r2
 80072c2:	b289      	uxth	r1, r1
 80072c4:	b282      	uxth	r2, r0
 80072c6:	1a52      	subs	r2, r2, r1
 80072c8:	9907      	ldr	r1, [sp, #28]
 80072ca:	0c1f      	lsrs	r7, r3, #16
 80072cc:	1852      	adds	r2, r2, r1
 80072ce:	0c00      	lsrs	r0, r0, #16
 80072d0:	b29b      	uxth	r3, r3
 80072d2:	1411      	asrs	r1, r2, #16
 80072d4:	1ac3      	subs	r3, r0, r3
 80072d6:	185b      	adds	r3, r3, r1
 80072d8:	1419      	asrs	r1, r3, #16
 80072da:	b292      	uxth	r2, r2
 80072dc:	041b      	lsls	r3, r3, #16
 80072de:	431a      	orrs	r2, r3
 80072e0:	9b05      	ldr	r3, [sp, #20]
 80072e2:	9107      	str	r1, [sp, #28]
 80072e4:	c604      	stmia	r6!, {r2}
 80072e6:	4563      	cmp	r3, ip
 80072e8:	d2df      	bcs.n	80072aa <quorem+0x48>
 80072ea:	682b      	ldr	r3, [r5, #0]
 80072ec:	2b00      	cmp	r3, #0
 80072ee:	d02b      	beq.n	8007348 <quorem+0xe6>
 80072f0:	9906      	ldr	r1, [sp, #24]
 80072f2:	9803      	ldr	r0, [sp, #12]
 80072f4:	f001 f9b6 	bl	8008664 <__mcmp>
 80072f8:	2800      	cmp	r0, #0
 80072fa:	db1e      	blt.n	800733a <quorem+0xd8>
 80072fc:	2600      	movs	r6, #0
 80072fe:	9d01      	ldr	r5, [sp, #4]
 8007300:	9904      	ldr	r1, [sp, #16]
 8007302:	c901      	ldmia	r1!, {r0}
 8007304:	682b      	ldr	r3, [r5, #0]
 8007306:	b287      	uxth	r7, r0
 8007308:	b29a      	uxth	r2, r3
 800730a:	1bd2      	subs	r2, r2, r7
 800730c:	1992      	adds	r2, r2, r6
 800730e:	0c00      	lsrs	r0, r0, #16
 8007310:	0c1b      	lsrs	r3, r3, #16
 8007312:	1a1b      	subs	r3, r3, r0
 8007314:	1410      	asrs	r0, r2, #16
 8007316:	181b      	adds	r3, r3, r0
 8007318:	141e      	asrs	r6, r3, #16
 800731a:	b292      	uxth	r2, r2
 800731c:	041b      	lsls	r3, r3, #16
 800731e:	431a      	orrs	r2, r3
 8007320:	9b05      	ldr	r3, [sp, #20]
 8007322:	c504      	stmia	r5!, {r2}
 8007324:	428b      	cmp	r3, r1
 8007326:	d2ec      	bcs.n	8007302 <quorem+0xa0>
 8007328:	9a01      	ldr	r2, [sp, #4]
 800732a:	00a3      	lsls	r3, r4, #2
 800732c:	18d3      	adds	r3, r2, r3
 800732e:	681a      	ldr	r2, [r3, #0]
 8007330:	2a00      	cmp	r2, #0
 8007332:	d014      	beq.n	800735e <quorem+0xfc>
 8007334:	9b02      	ldr	r3, [sp, #8]
 8007336:	3301      	adds	r3, #1
 8007338:	9302      	str	r3, [sp, #8]
 800733a:	9802      	ldr	r0, [sp, #8]
 800733c:	b009      	add	sp, #36	@ 0x24
 800733e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8007340:	682b      	ldr	r3, [r5, #0]
 8007342:	2b00      	cmp	r3, #0
 8007344:	d104      	bne.n	8007350 <quorem+0xee>
 8007346:	3c01      	subs	r4, #1
 8007348:	9b01      	ldr	r3, [sp, #4]
 800734a:	3d04      	subs	r5, #4
 800734c:	42ab      	cmp	r3, r5
 800734e:	d3f7      	bcc.n	8007340 <quorem+0xde>
 8007350:	9b03      	ldr	r3, [sp, #12]
 8007352:	611c      	str	r4, [r3, #16]
 8007354:	e7cc      	b.n	80072f0 <quorem+0x8e>
 8007356:	681a      	ldr	r2, [r3, #0]
 8007358:	2a00      	cmp	r2, #0
 800735a:	d104      	bne.n	8007366 <quorem+0x104>
 800735c:	3c01      	subs	r4, #1
 800735e:	9a01      	ldr	r2, [sp, #4]
 8007360:	3b04      	subs	r3, #4
 8007362:	429a      	cmp	r2, r3
 8007364:	d3f7      	bcc.n	8007356 <quorem+0xf4>
 8007366:	9b03      	ldr	r3, [sp, #12]
 8007368:	611c      	str	r4, [r3, #16]
 800736a:	e7e3      	b.n	8007334 <quorem+0xd2>

0800736c <_dtoa_r>:
 800736c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800736e:	0014      	movs	r4, r2
 8007370:	001d      	movs	r5, r3
 8007372:	69c6      	ldr	r6, [r0, #28]
 8007374:	b09d      	sub	sp, #116	@ 0x74
 8007376:	940a      	str	r4, [sp, #40]	@ 0x28
 8007378:	950b      	str	r5, [sp, #44]	@ 0x2c
 800737a:	9f25      	ldr	r7, [sp, #148]	@ 0x94
 800737c:	9003      	str	r0, [sp, #12]
 800737e:	2e00      	cmp	r6, #0
 8007380:	d10f      	bne.n	80073a2 <_dtoa_r+0x36>
 8007382:	2010      	movs	r0, #16
 8007384:	f000 fe2c 	bl	8007fe0 <malloc>
 8007388:	9b03      	ldr	r3, [sp, #12]
 800738a:	1e02      	subs	r2, r0, #0
 800738c:	61d8      	str	r0, [r3, #28]
 800738e:	d104      	bne.n	800739a <_dtoa_r+0x2e>
 8007390:	21ef      	movs	r1, #239	@ 0xef
 8007392:	4bc7      	ldr	r3, [pc, #796]	@ (80076b0 <_dtoa_r+0x344>)
 8007394:	48c7      	ldr	r0, [pc, #796]	@ (80076b4 <_dtoa_r+0x348>)
 8007396:	f001 fcaf 	bl	8008cf8 <__assert_func>
 800739a:	6046      	str	r6, [r0, #4]
 800739c:	6086      	str	r6, [r0, #8]
 800739e:	6006      	str	r6, [r0, #0]
 80073a0:	60c6      	str	r6, [r0, #12]
 80073a2:	9b03      	ldr	r3, [sp, #12]
 80073a4:	69db      	ldr	r3, [r3, #28]
 80073a6:	6819      	ldr	r1, [r3, #0]
 80073a8:	2900      	cmp	r1, #0
 80073aa:	d00b      	beq.n	80073c4 <_dtoa_r+0x58>
 80073ac:	685a      	ldr	r2, [r3, #4]
 80073ae:	2301      	movs	r3, #1
 80073b0:	4093      	lsls	r3, r2
 80073b2:	604a      	str	r2, [r1, #4]
 80073b4:	608b      	str	r3, [r1, #8]
 80073b6:	9803      	ldr	r0, [sp, #12]
 80073b8:	f000 ff12 	bl	80081e0 <_Bfree>
 80073bc:	2200      	movs	r2, #0
 80073be:	9b03      	ldr	r3, [sp, #12]
 80073c0:	69db      	ldr	r3, [r3, #28]
 80073c2:	601a      	str	r2, [r3, #0]
 80073c4:	2d00      	cmp	r5, #0
 80073c6:	da1e      	bge.n	8007406 <_dtoa_r+0x9a>
 80073c8:	2301      	movs	r3, #1
 80073ca:	603b      	str	r3, [r7, #0]
 80073cc:	006b      	lsls	r3, r5, #1
 80073ce:	085b      	lsrs	r3, r3, #1
 80073d0:	930b      	str	r3, [sp, #44]	@ 0x2c
 80073d2:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
 80073d4:	4bb8      	ldr	r3, [pc, #736]	@ (80076b8 <_dtoa_r+0x34c>)
 80073d6:	4ab8      	ldr	r2, [pc, #736]	@ (80076b8 <_dtoa_r+0x34c>)
 80073d8:	403b      	ands	r3, r7
 80073da:	4293      	cmp	r3, r2
 80073dc:	d116      	bne.n	800740c <_dtoa_r+0xa0>
 80073de:	4bb7      	ldr	r3, [pc, #732]	@ (80076bc <_dtoa_r+0x350>)
 80073e0:	9a24      	ldr	r2, [sp, #144]	@ 0x90
 80073e2:	6013      	str	r3, [r2, #0]
 80073e4:	033b      	lsls	r3, r7, #12
 80073e6:	0b1b      	lsrs	r3, r3, #12
 80073e8:	4323      	orrs	r3, r4
 80073ea:	d101      	bne.n	80073f0 <_dtoa_r+0x84>
 80073ec:	f000 fd80 	bl	8007ef0 <_dtoa_r+0xb84>
 80073f0:	4bb3      	ldr	r3, [pc, #716]	@ (80076c0 <_dtoa_r+0x354>)
 80073f2:	9a26      	ldr	r2, [sp, #152]	@ 0x98
 80073f4:	9308      	str	r3, [sp, #32]
 80073f6:	2a00      	cmp	r2, #0
 80073f8:	d002      	beq.n	8007400 <_dtoa_r+0x94>
 80073fa:	4bb2      	ldr	r3, [pc, #712]	@ (80076c4 <_dtoa_r+0x358>)
 80073fc:	9a26      	ldr	r2, [sp, #152]	@ 0x98
 80073fe:	6013      	str	r3, [r2, #0]
 8007400:	9808      	ldr	r0, [sp, #32]
 8007402:	b01d      	add	sp, #116	@ 0x74
 8007404:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8007406:	2300      	movs	r3, #0
 8007408:	603b      	str	r3, [r7, #0]
 800740a:	e7e2      	b.n	80073d2 <_dtoa_r+0x66>
 800740c:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 800740e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8007410:	9212      	str	r2, [sp, #72]	@ 0x48
 8007412:	9313      	str	r3, [sp, #76]	@ 0x4c
 8007414:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8007416:	9913      	ldr	r1, [sp, #76]	@ 0x4c
 8007418:	2200      	movs	r2, #0
 800741a:	2300      	movs	r3, #0
 800741c:	f7f9 f816 	bl	800044c <__aeabi_dcmpeq>
 8007420:	1e06      	subs	r6, r0, #0
 8007422:	d00b      	beq.n	800743c <_dtoa_r+0xd0>
 8007424:	2301      	movs	r3, #1
 8007426:	9a24      	ldr	r2, [sp, #144]	@ 0x90
 8007428:	6013      	str	r3, [r2, #0]
 800742a:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 800742c:	2b00      	cmp	r3, #0
 800742e:	d002      	beq.n	8007436 <_dtoa_r+0xca>
 8007430:	4ba5      	ldr	r3, [pc, #660]	@ (80076c8 <_dtoa_r+0x35c>)
 8007432:	9a26      	ldr	r2, [sp, #152]	@ 0x98
 8007434:	6013      	str	r3, [r2, #0]
 8007436:	4ba5      	ldr	r3, [pc, #660]	@ (80076cc <_dtoa_r+0x360>)
 8007438:	9308      	str	r3, [sp, #32]
 800743a:	e7e1      	b.n	8007400 <_dtoa_r+0x94>
 800743c:	ab1a      	add	r3, sp, #104	@ 0x68
 800743e:	9301      	str	r3, [sp, #4]
 8007440:	ab1b      	add	r3, sp, #108	@ 0x6c
 8007442:	9300      	str	r3, [sp, #0]
 8007444:	9803      	ldr	r0, [sp, #12]
 8007446:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8007448:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 800744a:	f001 f9c1 	bl	80087d0 <__d2b>
 800744e:	007a      	lsls	r2, r7, #1
 8007450:	9005      	str	r0, [sp, #20]
 8007452:	0d52      	lsrs	r2, r2, #21
 8007454:	d100      	bne.n	8007458 <_dtoa_r+0xec>
 8007456:	e07b      	b.n	8007550 <_dtoa_r+0x1e4>
 8007458:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 800745a:	9618      	str	r6, [sp, #96]	@ 0x60
 800745c:	0319      	lsls	r1, r3, #12
 800745e:	4b9c      	ldr	r3, [pc, #624]	@ (80076d0 <_dtoa_r+0x364>)
 8007460:	0b09      	lsrs	r1, r1, #12
 8007462:	430b      	orrs	r3, r1
 8007464:	499b      	ldr	r1, [pc, #620]	@ (80076d4 <_dtoa_r+0x368>)
 8007466:	1857      	adds	r7, r2, r1
 8007468:	9812      	ldr	r0, [sp, #72]	@ 0x48
 800746a:	9913      	ldr	r1, [sp, #76]	@ 0x4c
 800746c:	0019      	movs	r1, r3
 800746e:	2200      	movs	r2, #0
 8007470:	4b99      	ldr	r3, [pc, #612]	@ (80076d8 <_dtoa_r+0x36c>)
 8007472:	f7fb fb85 	bl	8002b80 <__aeabi_dsub>
 8007476:	4a99      	ldr	r2, [pc, #612]	@ (80076dc <_dtoa_r+0x370>)
 8007478:	4b99      	ldr	r3, [pc, #612]	@ (80076e0 <_dtoa_r+0x374>)
 800747a:	f7fb f89b 	bl	80025b4 <__aeabi_dmul>
 800747e:	4a99      	ldr	r2, [pc, #612]	@ (80076e4 <_dtoa_r+0x378>)
 8007480:	4b99      	ldr	r3, [pc, #612]	@ (80076e8 <_dtoa_r+0x37c>)
 8007482:	f7fa f897 	bl	80015b4 <__aeabi_dadd>
 8007486:	0004      	movs	r4, r0
 8007488:	0038      	movs	r0, r7
 800748a:	000d      	movs	r5, r1
 800748c:	f7fb ffe0 	bl	8003450 <__aeabi_i2d>
 8007490:	4a96      	ldr	r2, [pc, #600]	@ (80076ec <_dtoa_r+0x380>)
 8007492:	4b97      	ldr	r3, [pc, #604]	@ (80076f0 <_dtoa_r+0x384>)
 8007494:	f7fb f88e 	bl	80025b4 <__aeabi_dmul>
 8007498:	0002      	movs	r2, r0
 800749a:	000b      	movs	r3, r1
 800749c:	0020      	movs	r0, r4
 800749e:	0029      	movs	r1, r5
 80074a0:	f7fa f888 	bl	80015b4 <__aeabi_dadd>
 80074a4:	0004      	movs	r4, r0
 80074a6:	000d      	movs	r5, r1
 80074a8:	f7fb ff96 	bl	80033d8 <__aeabi_d2iz>
 80074ac:	2200      	movs	r2, #0
 80074ae:	9004      	str	r0, [sp, #16]
 80074b0:	2300      	movs	r3, #0
 80074b2:	0020      	movs	r0, r4
 80074b4:	0029      	movs	r1, r5
 80074b6:	f7f8 ffcf 	bl	8000458 <__aeabi_dcmplt>
 80074ba:	2800      	cmp	r0, #0
 80074bc:	d00b      	beq.n	80074d6 <_dtoa_r+0x16a>
 80074be:	9804      	ldr	r0, [sp, #16]
 80074c0:	f7fb ffc6 	bl	8003450 <__aeabi_i2d>
 80074c4:	002b      	movs	r3, r5
 80074c6:	0022      	movs	r2, r4
 80074c8:	f7f8 ffc0 	bl	800044c <__aeabi_dcmpeq>
 80074cc:	4243      	negs	r3, r0
 80074ce:	4158      	adcs	r0, r3
 80074d0:	9b04      	ldr	r3, [sp, #16]
 80074d2:	1a1b      	subs	r3, r3, r0
 80074d4:	9304      	str	r3, [sp, #16]
 80074d6:	2301      	movs	r3, #1
 80074d8:	9315      	str	r3, [sp, #84]	@ 0x54
 80074da:	9b04      	ldr	r3, [sp, #16]
 80074dc:	2b16      	cmp	r3, #22
 80074de:	d810      	bhi.n	8007502 <_dtoa_r+0x196>
 80074e0:	9812      	ldr	r0, [sp, #72]	@ 0x48
 80074e2:	9913      	ldr	r1, [sp, #76]	@ 0x4c
 80074e4:	9a04      	ldr	r2, [sp, #16]
 80074e6:	4b83      	ldr	r3, [pc, #524]	@ (80076f4 <_dtoa_r+0x388>)
 80074e8:	00d2      	lsls	r2, r2, #3
 80074ea:	189b      	adds	r3, r3, r2
 80074ec:	681a      	ldr	r2, [r3, #0]
 80074ee:	685b      	ldr	r3, [r3, #4]
 80074f0:	f7f8 ffb2 	bl	8000458 <__aeabi_dcmplt>
 80074f4:	2800      	cmp	r0, #0
 80074f6:	d047      	beq.n	8007588 <_dtoa_r+0x21c>
 80074f8:	9b04      	ldr	r3, [sp, #16]
 80074fa:	3b01      	subs	r3, #1
 80074fc:	9304      	str	r3, [sp, #16]
 80074fe:	2300      	movs	r3, #0
 8007500:	9315      	str	r3, [sp, #84]	@ 0x54
 8007502:	2200      	movs	r2, #0
 8007504:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 8007506:	9206      	str	r2, [sp, #24]
 8007508:	1bdb      	subs	r3, r3, r7
 800750a:	1e5a      	subs	r2, r3, #1
 800750c:	d53e      	bpl.n	800758c <_dtoa_r+0x220>
 800750e:	2201      	movs	r2, #1
 8007510:	1ad3      	subs	r3, r2, r3
 8007512:	9306      	str	r3, [sp, #24]
 8007514:	2300      	movs	r3, #0
 8007516:	930d      	str	r3, [sp, #52]	@ 0x34
 8007518:	9b04      	ldr	r3, [sp, #16]
 800751a:	2b00      	cmp	r3, #0
 800751c:	db38      	blt.n	8007590 <_dtoa_r+0x224>
 800751e:	9a04      	ldr	r2, [sp, #16]
 8007520:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8007522:	4694      	mov	ip, r2
 8007524:	4463      	add	r3, ip
 8007526:	930d      	str	r3, [sp, #52]	@ 0x34
 8007528:	2300      	movs	r3, #0
 800752a:	9214      	str	r2, [sp, #80]	@ 0x50
 800752c:	930f      	str	r3, [sp, #60]	@ 0x3c
 800752e:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 8007530:	2401      	movs	r4, #1
 8007532:	2b09      	cmp	r3, #9
 8007534:	d862      	bhi.n	80075fc <_dtoa_r+0x290>
 8007536:	2b05      	cmp	r3, #5
 8007538:	dd02      	ble.n	8007540 <_dtoa_r+0x1d4>
 800753a:	2400      	movs	r4, #0
 800753c:	3b04      	subs	r3, #4
 800753e:	9322      	str	r3, [sp, #136]	@ 0x88
 8007540:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 8007542:	1e98      	subs	r0, r3, #2
 8007544:	2803      	cmp	r0, #3
 8007546:	d863      	bhi.n	8007610 <_dtoa_r+0x2a4>
 8007548:	f7f8 fde6 	bl	8000118 <__gnu_thumb1_case_uqi>
 800754c:	2b385654 	.word	0x2b385654
 8007550:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 8007552:	9e1a      	ldr	r6, [sp, #104]	@ 0x68
 8007554:	18f6      	adds	r6, r6, r3
 8007556:	4b68      	ldr	r3, [pc, #416]	@ (80076f8 <_dtoa_r+0x38c>)
 8007558:	18f2      	adds	r2, r6, r3
 800755a:	2a20      	cmp	r2, #32
 800755c:	dd0f      	ble.n	800757e <_dtoa_r+0x212>
 800755e:	2340      	movs	r3, #64	@ 0x40
 8007560:	1a9b      	subs	r3, r3, r2
 8007562:	409f      	lsls	r7, r3
 8007564:	4b65      	ldr	r3, [pc, #404]	@ (80076fc <_dtoa_r+0x390>)
 8007566:	0038      	movs	r0, r7
 8007568:	18f3      	adds	r3, r6, r3
 800756a:	40dc      	lsrs	r4, r3
 800756c:	4320      	orrs	r0, r4
 800756e:	f7fb ff9d 	bl	80034ac <__aeabi_ui2d>
 8007572:	2201      	movs	r2, #1
 8007574:	4b62      	ldr	r3, [pc, #392]	@ (8007700 <_dtoa_r+0x394>)
 8007576:	1e77      	subs	r7, r6, #1
 8007578:	18cb      	adds	r3, r1, r3
 800757a:	9218      	str	r2, [sp, #96]	@ 0x60
 800757c:	e776      	b.n	800746c <_dtoa_r+0x100>
 800757e:	2320      	movs	r3, #32
 8007580:	0020      	movs	r0, r4
 8007582:	1a9b      	subs	r3, r3, r2
 8007584:	4098      	lsls	r0, r3
 8007586:	e7f2      	b.n	800756e <_dtoa_r+0x202>
 8007588:	9015      	str	r0, [sp, #84]	@ 0x54
 800758a:	e7ba      	b.n	8007502 <_dtoa_r+0x196>
 800758c:	920d      	str	r2, [sp, #52]	@ 0x34
 800758e:	e7c3      	b.n	8007518 <_dtoa_r+0x1ac>
 8007590:	9b06      	ldr	r3, [sp, #24]
 8007592:	9a04      	ldr	r2, [sp, #16]
 8007594:	1a9b      	subs	r3, r3, r2
 8007596:	9306      	str	r3, [sp, #24]
 8007598:	4253      	negs	r3, r2
 800759a:	930f      	str	r3, [sp, #60]	@ 0x3c
 800759c:	2300      	movs	r3, #0
 800759e:	9314      	str	r3, [sp, #80]	@ 0x50
 80075a0:	e7c5      	b.n	800752e <_dtoa_r+0x1c2>
 80075a2:	2301      	movs	r3, #1
 80075a4:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 80075a6:	9310      	str	r3, [sp, #64]	@ 0x40
 80075a8:	4694      	mov	ip, r2
 80075aa:	9b04      	ldr	r3, [sp, #16]
 80075ac:	4463      	add	r3, ip
 80075ae:	930e      	str	r3, [sp, #56]	@ 0x38
 80075b0:	3301      	adds	r3, #1
 80075b2:	9309      	str	r3, [sp, #36]	@ 0x24
 80075b4:	2b00      	cmp	r3, #0
 80075b6:	dc08      	bgt.n	80075ca <_dtoa_r+0x25e>
 80075b8:	2301      	movs	r3, #1
 80075ba:	e006      	b.n	80075ca <_dtoa_r+0x25e>
 80075bc:	2301      	movs	r3, #1
 80075be:	9310      	str	r3, [sp, #64]	@ 0x40
 80075c0:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 80075c2:	2b00      	cmp	r3, #0
 80075c4:	dd28      	ble.n	8007618 <_dtoa_r+0x2ac>
 80075c6:	930e      	str	r3, [sp, #56]	@ 0x38
 80075c8:	9309      	str	r3, [sp, #36]	@ 0x24
 80075ca:	9a03      	ldr	r2, [sp, #12]
 80075cc:	2100      	movs	r1, #0
 80075ce:	69d0      	ldr	r0, [r2, #28]
 80075d0:	2204      	movs	r2, #4
 80075d2:	0015      	movs	r5, r2
 80075d4:	3514      	adds	r5, #20
 80075d6:	429d      	cmp	r5, r3
 80075d8:	d923      	bls.n	8007622 <_dtoa_r+0x2b6>
 80075da:	6041      	str	r1, [r0, #4]
 80075dc:	9803      	ldr	r0, [sp, #12]
 80075de:	f000 fdbb 	bl	8008158 <_Balloc>
 80075e2:	9008      	str	r0, [sp, #32]
 80075e4:	2800      	cmp	r0, #0
 80075e6:	d11f      	bne.n	8007628 <_dtoa_r+0x2bc>
 80075e8:	21b0      	movs	r1, #176	@ 0xb0
 80075ea:	4b46      	ldr	r3, [pc, #280]	@ (8007704 <_dtoa_r+0x398>)
 80075ec:	4831      	ldr	r0, [pc, #196]	@ (80076b4 <_dtoa_r+0x348>)
 80075ee:	9a08      	ldr	r2, [sp, #32]
 80075f0:	31ff      	adds	r1, #255	@ 0xff
 80075f2:	e6d0      	b.n	8007396 <_dtoa_r+0x2a>
 80075f4:	2300      	movs	r3, #0
 80075f6:	e7e2      	b.n	80075be <_dtoa_r+0x252>
 80075f8:	2300      	movs	r3, #0
 80075fa:	e7d3      	b.n	80075a4 <_dtoa_r+0x238>
 80075fc:	2300      	movs	r3, #0
 80075fe:	9410      	str	r4, [sp, #64]	@ 0x40
 8007600:	9322      	str	r3, [sp, #136]	@ 0x88
 8007602:	3b01      	subs	r3, #1
 8007604:	2200      	movs	r2, #0
 8007606:	930e      	str	r3, [sp, #56]	@ 0x38
 8007608:	9309      	str	r3, [sp, #36]	@ 0x24
 800760a:	3313      	adds	r3, #19
 800760c:	9223      	str	r2, [sp, #140]	@ 0x8c
 800760e:	e7dc      	b.n	80075ca <_dtoa_r+0x25e>
 8007610:	2301      	movs	r3, #1
 8007612:	9310      	str	r3, [sp, #64]	@ 0x40
 8007614:	3b02      	subs	r3, #2
 8007616:	e7f5      	b.n	8007604 <_dtoa_r+0x298>
 8007618:	2301      	movs	r3, #1
 800761a:	001a      	movs	r2, r3
 800761c:	930e      	str	r3, [sp, #56]	@ 0x38
 800761e:	9309      	str	r3, [sp, #36]	@ 0x24
 8007620:	e7f4      	b.n	800760c <_dtoa_r+0x2a0>
 8007622:	3101      	adds	r1, #1
 8007624:	0052      	lsls	r2, r2, #1
 8007626:	e7d4      	b.n	80075d2 <_dtoa_r+0x266>
 8007628:	9b03      	ldr	r3, [sp, #12]
 800762a:	9a08      	ldr	r2, [sp, #32]
 800762c:	69db      	ldr	r3, [r3, #28]
 800762e:	601a      	str	r2, [r3, #0]
 8007630:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8007632:	2b0e      	cmp	r3, #14
 8007634:	d900      	bls.n	8007638 <_dtoa_r+0x2cc>
 8007636:	e0d6      	b.n	80077e6 <_dtoa_r+0x47a>
 8007638:	2c00      	cmp	r4, #0
 800763a:	d100      	bne.n	800763e <_dtoa_r+0x2d2>
 800763c:	e0d3      	b.n	80077e6 <_dtoa_r+0x47a>
 800763e:	9b04      	ldr	r3, [sp, #16]
 8007640:	2b00      	cmp	r3, #0
 8007642:	dd63      	ble.n	800770c <_dtoa_r+0x3a0>
 8007644:	210f      	movs	r1, #15
 8007646:	9a04      	ldr	r2, [sp, #16]
 8007648:	4b2a      	ldr	r3, [pc, #168]	@ (80076f4 <_dtoa_r+0x388>)
 800764a:	400a      	ands	r2, r1
 800764c:	00d2      	lsls	r2, r2, #3
 800764e:	189b      	adds	r3, r3, r2
 8007650:	681e      	ldr	r6, [r3, #0]
 8007652:	685f      	ldr	r7, [r3, #4]
 8007654:	9b04      	ldr	r3, [sp, #16]
 8007656:	2402      	movs	r4, #2
 8007658:	111d      	asrs	r5, r3, #4
 800765a:	05db      	lsls	r3, r3, #23
 800765c:	d50a      	bpl.n	8007674 <_dtoa_r+0x308>
 800765e:	4b2a      	ldr	r3, [pc, #168]	@ (8007708 <_dtoa_r+0x39c>)
 8007660:	400d      	ands	r5, r1
 8007662:	6a1a      	ldr	r2, [r3, #32]
 8007664:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8007666:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8007668:	9913      	ldr	r1, [sp, #76]	@ 0x4c
 800766a:	f7fa fb69 	bl	8001d40 <__aeabi_ddiv>
 800766e:	900a      	str	r0, [sp, #40]	@ 0x28
 8007670:	910b      	str	r1, [sp, #44]	@ 0x2c
 8007672:	3401      	adds	r4, #1
 8007674:	4b24      	ldr	r3, [pc, #144]	@ (8007708 <_dtoa_r+0x39c>)
 8007676:	930c      	str	r3, [sp, #48]	@ 0x30
 8007678:	2d00      	cmp	r5, #0
 800767a:	d108      	bne.n	800768e <_dtoa_r+0x322>
 800767c:	980a      	ldr	r0, [sp, #40]	@ 0x28
 800767e:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8007680:	0032      	movs	r2, r6
 8007682:	003b      	movs	r3, r7
 8007684:	f7fa fb5c 	bl	8001d40 <__aeabi_ddiv>
 8007688:	900a      	str	r0, [sp, #40]	@ 0x28
 800768a:	910b      	str	r1, [sp, #44]	@ 0x2c
 800768c:	e059      	b.n	8007742 <_dtoa_r+0x3d6>
 800768e:	2301      	movs	r3, #1
 8007690:	421d      	tst	r5, r3
 8007692:	d009      	beq.n	80076a8 <_dtoa_r+0x33c>
 8007694:	18e4      	adds	r4, r4, r3
 8007696:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8007698:	0030      	movs	r0, r6
 800769a:	681a      	ldr	r2, [r3, #0]
 800769c:	685b      	ldr	r3, [r3, #4]
 800769e:	0039      	movs	r1, r7
 80076a0:	f7fa ff88 	bl	80025b4 <__aeabi_dmul>
 80076a4:	0006      	movs	r6, r0
 80076a6:	000f      	movs	r7, r1
 80076a8:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80076aa:	106d      	asrs	r5, r5, #1
 80076ac:	3308      	adds	r3, #8
 80076ae:	e7e2      	b.n	8007676 <_dtoa_r+0x30a>
 80076b0:	0800959a 	.word	0x0800959a
 80076b4:	080095b1 	.word	0x080095b1
 80076b8:	7ff00000 	.word	0x7ff00000
 80076bc:	0000270f 	.word	0x0000270f
 80076c0:	08009596 	.word	0x08009596
 80076c4:	08009599 	.word	0x08009599
 80076c8:	0800956a 	.word	0x0800956a
 80076cc:	08009569 	.word	0x08009569
 80076d0:	3ff00000 	.word	0x3ff00000
 80076d4:	fffffc01 	.word	0xfffffc01
 80076d8:	3ff80000 	.word	0x3ff80000
 80076dc:	636f4361 	.word	0x636f4361
 80076e0:	3fd287a7 	.word	0x3fd287a7
 80076e4:	8b60c8b3 	.word	0x8b60c8b3
 80076e8:	3fc68a28 	.word	0x3fc68a28
 80076ec:	509f79fb 	.word	0x509f79fb
 80076f0:	3fd34413 	.word	0x3fd34413
 80076f4:	0800bf68 	.word	0x0800bf68
 80076f8:	00000432 	.word	0x00000432
 80076fc:	00000412 	.word	0x00000412
 8007700:	fe100000 	.word	0xfe100000
 8007704:	08009609 	.word	0x08009609
 8007708:	0800bf40 	.word	0x0800bf40
 800770c:	9b04      	ldr	r3, [sp, #16]
 800770e:	2402      	movs	r4, #2
 8007710:	2b00      	cmp	r3, #0
 8007712:	d016      	beq.n	8007742 <_dtoa_r+0x3d6>
 8007714:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8007716:	9913      	ldr	r1, [sp, #76]	@ 0x4c
 8007718:	220f      	movs	r2, #15
 800771a:	425d      	negs	r5, r3
 800771c:	402a      	ands	r2, r5
 800771e:	4bd5      	ldr	r3, [pc, #852]	@ (8007a74 <_dtoa_r+0x708>)
 8007720:	00d2      	lsls	r2, r2, #3
 8007722:	189b      	adds	r3, r3, r2
 8007724:	681a      	ldr	r2, [r3, #0]
 8007726:	685b      	ldr	r3, [r3, #4]
 8007728:	f7fa ff44 	bl	80025b4 <__aeabi_dmul>
 800772c:	2701      	movs	r7, #1
 800772e:	2300      	movs	r3, #0
 8007730:	900a      	str	r0, [sp, #40]	@ 0x28
 8007732:	910b      	str	r1, [sp, #44]	@ 0x2c
 8007734:	4ed0      	ldr	r6, [pc, #832]	@ (8007a78 <_dtoa_r+0x70c>)
 8007736:	112d      	asrs	r5, r5, #4
 8007738:	2d00      	cmp	r5, #0
 800773a:	d000      	beq.n	800773e <_dtoa_r+0x3d2>
 800773c:	e095      	b.n	800786a <_dtoa_r+0x4fe>
 800773e:	2b00      	cmp	r3, #0
 8007740:	d1a2      	bne.n	8007688 <_dtoa_r+0x31c>
 8007742:	9e0a      	ldr	r6, [sp, #40]	@ 0x28
 8007744:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
 8007746:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 8007748:	2b00      	cmp	r3, #0
 800774a:	d100      	bne.n	800774e <_dtoa_r+0x3e2>
 800774c:	e098      	b.n	8007880 <_dtoa_r+0x514>
 800774e:	2200      	movs	r2, #0
 8007750:	0030      	movs	r0, r6
 8007752:	0039      	movs	r1, r7
 8007754:	4bc9      	ldr	r3, [pc, #804]	@ (8007a7c <_dtoa_r+0x710>)
 8007756:	f7f8 fe7f 	bl	8000458 <__aeabi_dcmplt>
 800775a:	2800      	cmp	r0, #0
 800775c:	d100      	bne.n	8007760 <_dtoa_r+0x3f4>
 800775e:	e08f      	b.n	8007880 <_dtoa_r+0x514>
 8007760:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8007762:	2b00      	cmp	r3, #0
 8007764:	d100      	bne.n	8007768 <_dtoa_r+0x3fc>
 8007766:	e08b      	b.n	8007880 <_dtoa_r+0x514>
 8007768:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800776a:	2b00      	cmp	r3, #0
 800776c:	dd37      	ble.n	80077de <_dtoa_r+0x472>
 800776e:	9b04      	ldr	r3, [sp, #16]
 8007770:	2200      	movs	r2, #0
 8007772:	3b01      	subs	r3, #1
 8007774:	930c      	str	r3, [sp, #48]	@ 0x30
 8007776:	0030      	movs	r0, r6
 8007778:	4bc1      	ldr	r3, [pc, #772]	@ (8007a80 <_dtoa_r+0x714>)
 800777a:	0039      	movs	r1, r7
 800777c:	f7fa ff1a 	bl	80025b4 <__aeabi_dmul>
 8007780:	900a      	str	r0, [sp, #40]	@ 0x28
 8007782:	910b      	str	r1, [sp, #44]	@ 0x2c
 8007784:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8007786:	3401      	adds	r4, #1
 8007788:	0020      	movs	r0, r4
 800778a:	9311      	str	r3, [sp, #68]	@ 0x44
 800778c:	f7fb fe60 	bl	8003450 <__aeabi_i2d>
 8007790:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8007792:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8007794:	f7fa ff0e 	bl	80025b4 <__aeabi_dmul>
 8007798:	4bba      	ldr	r3, [pc, #744]	@ (8007a84 <_dtoa_r+0x718>)
 800779a:	2200      	movs	r2, #0
 800779c:	f7f9 ff0a 	bl	80015b4 <__aeabi_dadd>
 80077a0:	4bb9      	ldr	r3, [pc, #740]	@ (8007a88 <_dtoa_r+0x71c>)
 80077a2:	0006      	movs	r6, r0
 80077a4:	18cf      	adds	r7, r1, r3
 80077a6:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 80077a8:	2b00      	cmp	r3, #0
 80077aa:	d16d      	bne.n	8007888 <_dtoa_r+0x51c>
 80077ac:	980a      	ldr	r0, [sp, #40]	@ 0x28
 80077ae:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 80077b0:	2200      	movs	r2, #0
 80077b2:	4bb6      	ldr	r3, [pc, #728]	@ (8007a8c <_dtoa_r+0x720>)
 80077b4:	f7fb f9e4 	bl	8002b80 <__aeabi_dsub>
 80077b8:	0032      	movs	r2, r6
 80077ba:	003b      	movs	r3, r7
 80077bc:	0004      	movs	r4, r0
 80077be:	000d      	movs	r5, r1
 80077c0:	f7f8 fe5e 	bl	8000480 <__aeabi_dcmpgt>
 80077c4:	2800      	cmp	r0, #0
 80077c6:	d000      	beq.n	80077ca <_dtoa_r+0x45e>
 80077c8:	e2b6      	b.n	8007d38 <_dtoa_r+0x9cc>
 80077ca:	2180      	movs	r1, #128	@ 0x80
 80077cc:	0609      	lsls	r1, r1, #24
 80077ce:	187b      	adds	r3, r7, r1
 80077d0:	0032      	movs	r2, r6
 80077d2:	0020      	movs	r0, r4
 80077d4:	0029      	movs	r1, r5
 80077d6:	f7f8 fe3f 	bl	8000458 <__aeabi_dcmplt>
 80077da:	2800      	cmp	r0, #0
 80077dc:	d128      	bne.n	8007830 <_dtoa_r+0x4c4>
 80077de:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 80077e0:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 80077e2:	930a      	str	r3, [sp, #40]	@ 0x28
 80077e4:	940b      	str	r4, [sp, #44]	@ 0x2c
 80077e6:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 80077e8:	2b00      	cmp	r3, #0
 80077ea:	da00      	bge.n	80077ee <_dtoa_r+0x482>
 80077ec:	e174      	b.n	8007ad8 <_dtoa_r+0x76c>
 80077ee:	9a04      	ldr	r2, [sp, #16]
 80077f0:	2a0e      	cmp	r2, #14
 80077f2:	dd00      	ble.n	80077f6 <_dtoa_r+0x48a>
 80077f4:	e170      	b.n	8007ad8 <_dtoa_r+0x76c>
 80077f6:	4b9f      	ldr	r3, [pc, #636]	@ (8007a74 <_dtoa_r+0x708>)
 80077f8:	00d2      	lsls	r2, r2, #3
 80077fa:	189b      	adds	r3, r3, r2
 80077fc:	685c      	ldr	r4, [r3, #4]
 80077fe:	681b      	ldr	r3, [r3, #0]
 8007800:	9306      	str	r3, [sp, #24]
 8007802:	9407      	str	r4, [sp, #28]
 8007804:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 8007806:	2b00      	cmp	r3, #0
 8007808:	db00      	blt.n	800780c <_dtoa_r+0x4a0>
 800780a:	e0e7      	b.n	80079dc <_dtoa_r+0x670>
 800780c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800780e:	2b00      	cmp	r3, #0
 8007810:	dd00      	ble.n	8007814 <_dtoa_r+0x4a8>
 8007812:	e0e3      	b.n	80079dc <_dtoa_r+0x670>
 8007814:	d10c      	bne.n	8007830 <_dtoa_r+0x4c4>
 8007816:	9806      	ldr	r0, [sp, #24]
 8007818:	9907      	ldr	r1, [sp, #28]
 800781a:	2200      	movs	r2, #0
 800781c:	4b9b      	ldr	r3, [pc, #620]	@ (8007a8c <_dtoa_r+0x720>)
 800781e:	f7fa fec9 	bl	80025b4 <__aeabi_dmul>
 8007822:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8007824:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8007826:	f7f8 fe35 	bl	8000494 <__aeabi_dcmpge>
 800782a:	2800      	cmp	r0, #0
 800782c:	d100      	bne.n	8007830 <_dtoa_r+0x4c4>
 800782e:	e286      	b.n	8007d3e <_dtoa_r+0x9d2>
 8007830:	2600      	movs	r6, #0
 8007832:	0037      	movs	r7, r6
 8007834:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 8007836:	9c08      	ldr	r4, [sp, #32]
 8007838:	43db      	mvns	r3, r3
 800783a:	930c      	str	r3, [sp, #48]	@ 0x30
 800783c:	9704      	str	r7, [sp, #16]
 800783e:	2700      	movs	r7, #0
 8007840:	0031      	movs	r1, r6
 8007842:	9803      	ldr	r0, [sp, #12]
 8007844:	f000 fccc 	bl	80081e0 <_Bfree>
 8007848:	9b04      	ldr	r3, [sp, #16]
 800784a:	2b00      	cmp	r3, #0
 800784c:	d100      	bne.n	8007850 <_dtoa_r+0x4e4>
 800784e:	e0bb      	b.n	80079c8 <_dtoa_r+0x65c>
 8007850:	2f00      	cmp	r7, #0
 8007852:	d005      	beq.n	8007860 <_dtoa_r+0x4f4>
 8007854:	429f      	cmp	r7, r3
 8007856:	d003      	beq.n	8007860 <_dtoa_r+0x4f4>
 8007858:	0039      	movs	r1, r7
 800785a:	9803      	ldr	r0, [sp, #12]
 800785c:	f000 fcc0 	bl	80081e0 <_Bfree>
 8007860:	9904      	ldr	r1, [sp, #16]
 8007862:	9803      	ldr	r0, [sp, #12]
 8007864:	f000 fcbc 	bl	80081e0 <_Bfree>
 8007868:	e0ae      	b.n	80079c8 <_dtoa_r+0x65c>
 800786a:	423d      	tst	r5, r7
 800786c:	d005      	beq.n	800787a <_dtoa_r+0x50e>
 800786e:	6832      	ldr	r2, [r6, #0]
 8007870:	6873      	ldr	r3, [r6, #4]
 8007872:	f7fa fe9f 	bl	80025b4 <__aeabi_dmul>
 8007876:	003b      	movs	r3, r7
 8007878:	3401      	adds	r4, #1
 800787a:	106d      	asrs	r5, r5, #1
 800787c:	3608      	adds	r6, #8
 800787e:	e75b      	b.n	8007738 <_dtoa_r+0x3cc>
 8007880:	9b04      	ldr	r3, [sp, #16]
 8007882:	930c      	str	r3, [sp, #48]	@ 0x30
 8007884:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8007886:	e77f      	b.n	8007788 <_dtoa_r+0x41c>
 8007888:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 800788a:	4b7a      	ldr	r3, [pc, #488]	@ (8007a74 <_dtoa_r+0x708>)
 800788c:	3a01      	subs	r2, #1
 800788e:	00d2      	lsls	r2, r2, #3
 8007890:	9910      	ldr	r1, [sp, #64]	@ 0x40
 8007892:	189b      	adds	r3, r3, r2
 8007894:	681a      	ldr	r2, [r3, #0]
 8007896:	685b      	ldr	r3, [r3, #4]
 8007898:	2900      	cmp	r1, #0
 800789a:	d04c      	beq.n	8007936 <_dtoa_r+0x5ca>
 800789c:	2000      	movs	r0, #0
 800789e:	497c      	ldr	r1, [pc, #496]	@ (8007a90 <_dtoa_r+0x724>)
 80078a0:	f7fa fa4e 	bl	8001d40 <__aeabi_ddiv>
 80078a4:	0032      	movs	r2, r6
 80078a6:	003b      	movs	r3, r7
 80078a8:	f7fb f96a 	bl	8002b80 <__aeabi_dsub>
 80078ac:	9a08      	ldr	r2, [sp, #32]
 80078ae:	0006      	movs	r6, r0
 80078b0:	4694      	mov	ip, r2
 80078b2:	000f      	movs	r7, r1
 80078b4:	9b08      	ldr	r3, [sp, #32]
 80078b6:	9316      	str	r3, [sp, #88]	@ 0x58
 80078b8:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 80078ba:	4463      	add	r3, ip
 80078bc:	9311      	str	r3, [sp, #68]	@ 0x44
 80078be:	980a      	ldr	r0, [sp, #40]	@ 0x28
 80078c0:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 80078c2:	f7fb fd89 	bl	80033d8 <__aeabi_d2iz>
 80078c6:	0005      	movs	r5, r0
 80078c8:	f7fb fdc2 	bl	8003450 <__aeabi_i2d>
 80078cc:	0002      	movs	r2, r0
 80078ce:	000b      	movs	r3, r1
 80078d0:	980a      	ldr	r0, [sp, #40]	@ 0x28
 80078d2:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 80078d4:	f7fb f954 	bl	8002b80 <__aeabi_dsub>
 80078d8:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 80078da:	3530      	adds	r5, #48	@ 0x30
 80078dc:	1c5c      	adds	r4, r3, #1
 80078de:	701d      	strb	r5, [r3, #0]
 80078e0:	0032      	movs	r2, r6
 80078e2:	003b      	movs	r3, r7
 80078e4:	900a      	str	r0, [sp, #40]	@ 0x28
 80078e6:	910b      	str	r1, [sp, #44]	@ 0x2c
 80078e8:	f7f8 fdb6 	bl	8000458 <__aeabi_dcmplt>
 80078ec:	2800      	cmp	r0, #0
 80078ee:	d16b      	bne.n	80079c8 <_dtoa_r+0x65c>
 80078f0:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 80078f2:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80078f4:	2000      	movs	r0, #0
 80078f6:	4961      	ldr	r1, [pc, #388]	@ (8007a7c <_dtoa_r+0x710>)
 80078f8:	f7fb f942 	bl	8002b80 <__aeabi_dsub>
 80078fc:	0032      	movs	r2, r6
 80078fe:	003b      	movs	r3, r7
 8007900:	f7f8 fdaa 	bl	8000458 <__aeabi_dcmplt>
 8007904:	2800      	cmp	r0, #0
 8007906:	d000      	beq.n	800790a <_dtoa_r+0x59e>
 8007908:	e0c6      	b.n	8007a98 <_dtoa_r+0x72c>
 800790a:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 800790c:	42a3      	cmp	r3, r4
 800790e:	d100      	bne.n	8007912 <_dtoa_r+0x5a6>
 8007910:	e765      	b.n	80077de <_dtoa_r+0x472>
 8007912:	2200      	movs	r2, #0
 8007914:	0030      	movs	r0, r6
 8007916:	0039      	movs	r1, r7
 8007918:	4b59      	ldr	r3, [pc, #356]	@ (8007a80 <_dtoa_r+0x714>)
 800791a:	f7fa fe4b 	bl	80025b4 <__aeabi_dmul>
 800791e:	2200      	movs	r2, #0
 8007920:	0006      	movs	r6, r0
 8007922:	000f      	movs	r7, r1
 8007924:	980a      	ldr	r0, [sp, #40]	@ 0x28
 8007926:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8007928:	4b55      	ldr	r3, [pc, #340]	@ (8007a80 <_dtoa_r+0x714>)
 800792a:	f7fa fe43 	bl	80025b4 <__aeabi_dmul>
 800792e:	9416      	str	r4, [sp, #88]	@ 0x58
 8007930:	900a      	str	r0, [sp, #40]	@ 0x28
 8007932:	910b      	str	r1, [sp, #44]	@ 0x2c
 8007934:	e7c3      	b.n	80078be <_dtoa_r+0x552>
 8007936:	0030      	movs	r0, r6
 8007938:	0039      	movs	r1, r7
 800793a:	f7fa fe3b 	bl	80025b4 <__aeabi_dmul>
 800793e:	9d08      	ldr	r5, [sp, #32]
 8007940:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8007942:	002b      	movs	r3, r5
 8007944:	4694      	mov	ip, r2
 8007946:	9016      	str	r0, [sp, #88]	@ 0x58
 8007948:	9117      	str	r1, [sp, #92]	@ 0x5c
 800794a:	4463      	add	r3, ip
 800794c:	9319      	str	r3, [sp, #100]	@ 0x64
 800794e:	980a      	ldr	r0, [sp, #40]	@ 0x28
 8007950:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8007952:	f7fb fd41 	bl	80033d8 <__aeabi_d2iz>
 8007956:	0004      	movs	r4, r0
 8007958:	f7fb fd7a 	bl	8003450 <__aeabi_i2d>
 800795c:	000b      	movs	r3, r1
 800795e:	0002      	movs	r2, r0
 8007960:	980a      	ldr	r0, [sp, #40]	@ 0x28
 8007962:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8007964:	f7fb f90c 	bl	8002b80 <__aeabi_dsub>
 8007968:	3430      	adds	r4, #48	@ 0x30
 800796a:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 800796c:	702c      	strb	r4, [r5, #0]
 800796e:	3501      	adds	r5, #1
 8007970:	0006      	movs	r6, r0
 8007972:	000f      	movs	r7, r1
 8007974:	42ab      	cmp	r3, r5
 8007976:	d12a      	bne.n	80079ce <_dtoa_r+0x662>
 8007978:	9816      	ldr	r0, [sp, #88]	@ 0x58
 800797a:	9917      	ldr	r1, [sp, #92]	@ 0x5c
 800797c:	9b08      	ldr	r3, [sp, #32]
 800797e:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 8007980:	469c      	mov	ip, r3
 8007982:	2200      	movs	r2, #0
 8007984:	4b42      	ldr	r3, [pc, #264]	@ (8007a90 <_dtoa_r+0x724>)
 8007986:	4464      	add	r4, ip
 8007988:	f7f9 fe14 	bl	80015b4 <__aeabi_dadd>
 800798c:	0002      	movs	r2, r0
 800798e:	000b      	movs	r3, r1
 8007990:	0030      	movs	r0, r6
 8007992:	0039      	movs	r1, r7
 8007994:	f7f8 fd74 	bl	8000480 <__aeabi_dcmpgt>
 8007998:	2800      	cmp	r0, #0
 800799a:	d000      	beq.n	800799e <_dtoa_r+0x632>
 800799c:	e07c      	b.n	8007a98 <_dtoa_r+0x72c>
 800799e:	9a16      	ldr	r2, [sp, #88]	@ 0x58
 80079a0:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 80079a2:	2000      	movs	r0, #0
 80079a4:	493a      	ldr	r1, [pc, #232]	@ (8007a90 <_dtoa_r+0x724>)
 80079a6:	f7fb f8eb 	bl	8002b80 <__aeabi_dsub>
 80079aa:	0002      	movs	r2, r0
 80079ac:	000b      	movs	r3, r1
 80079ae:	0030      	movs	r0, r6
 80079b0:	0039      	movs	r1, r7
 80079b2:	f7f8 fd51 	bl	8000458 <__aeabi_dcmplt>
 80079b6:	2800      	cmp	r0, #0
 80079b8:	d100      	bne.n	80079bc <_dtoa_r+0x650>
 80079ba:	e710      	b.n	80077de <_dtoa_r+0x472>
 80079bc:	0023      	movs	r3, r4
 80079be:	3c01      	subs	r4, #1
 80079c0:	7822      	ldrb	r2, [r4, #0]
 80079c2:	2a30      	cmp	r2, #48	@ 0x30
 80079c4:	d0fa      	beq.n	80079bc <_dtoa_r+0x650>
 80079c6:	001c      	movs	r4, r3
 80079c8:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80079ca:	9304      	str	r3, [sp, #16]
 80079cc:	e042      	b.n	8007a54 <_dtoa_r+0x6e8>
 80079ce:	2200      	movs	r2, #0
 80079d0:	4b2b      	ldr	r3, [pc, #172]	@ (8007a80 <_dtoa_r+0x714>)
 80079d2:	f7fa fdef 	bl	80025b4 <__aeabi_dmul>
 80079d6:	900a      	str	r0, [sp, #40]	@ 0x28
 80079d8:	910b      	str	r1, [sp, #44]	@ 0x2c
 80079da:	e7b8      	b.n	800794e <_dtoa_r+0x5e2>
 80079dc:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80079de:	9d08      	ldr	r5, [sp, #32]
 80079e0:	3b01      	subs	r3, #1
 80079e2:	195b      	adds	r3, r3, r5
 80079e4:	9e0a      	ldr	r6, [sp, #40]	@ 0x28
 80079e6:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
 80079e8:	930a      	str	r3, [sp, #40]	@ 0x28
 80079ea:	9a06      	ldr	r2, [sp, #24]
 80079ec:	9b07      	ldr	r3, [sp, #28]
 80079ee:	0030      	movs	r0, r6
 80079f0:	0039      	movs	r1, r7
 80079f2:	f7fa f9a5 	bl	8001d40 <__aeabi_ddiv>
 80079f6:	f7fb fcef 	bl	80033d8 <__aeabi_d2iz>
 80079fa:	9009      	str	r0, [sp, #36]	@ 0x24
 80079fc:	f7fb fd28 	bl	8003450 <__aeabi_i2d>
 8007a00:	9a06      	ldr	r2, [sp, #24]
 8007a02:	9b07      	ldr	r3, [sp, #28]
 8007a04:	f7fa fdd6 	bl	80025b4 <__aeabi_dmul>
 8007a08:	0002      	movs	r2, r0
 8007a0a:	000b      	movs	r3, r1
 8007a0c:	0030      	movs	r0, r6
 8007a0e:	0039      	movs	r1, r7
 8007a10:	f7fb f8b6 	bl	8002b80 <__aeabi_dsub>
 8007a14:	002b      	movs	r3, r5
 8007a16:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8007a18:	3501      	adds	r5, #1
 8007a1a:	3230      	adds	r2, #48	@ 0x30
 8007a1c:	701a      	strb	r2, [r3, #0]
 8007a1e:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8007a20:	002c      	movs	r4, r5
 8007a22:	429a      	cmp	r2, r3
 8007a24:	d14b      	bne.n	8007abe <_dtoa_r+0x752>
 8007a26:	0002      	movs	r2, r0
 8007a28:	000b      	movs	r3, r1
 8007a2a:	f7f9 fdc3 	bl	80015b4 <__aeabi_dadd>
 8007a2e:	9a06      	ldr	r2, [sp, #24]
 8007a30:	9b07      	ldr	r3, [sp, #28]
 8007a32:	0006      	movs	r6, r0
 8007a34:	000f      	movs	r7, r1
 8007a36:	f7f8 fd23 	bl	8000480 <__aeabi_dcmpgt>
 8007a3a:	2800      	cmp	r0, #0
 8007a3c:	d12a      	bne.n	8007a94 <_dtoa_r+0x728>
 8007a3e:	9a06      	ldr	r2, [sp, #24]
 8007a40:	9b07      	ldr	r3, [sp, #28]
 8007a42:	0030      	movs	r0, r6
 8007a44:	0039      	movs	r1, r7
 8007a46:	f7f8 fd01 	bl	800044c <__aeabi_dcmpeq>
 8007a4a:	2800      	cmp	r0, #0
 8007a4c:	d002      	beq.n	8007a54 <_dtoa_r+0x6e8>
 8007a4e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8007a50:	07dd      	lsls	r5, r3, #31
 8007a52:	d41f      	bmi.n	8007a94 <_dtoa_r+0x728>
 8007a54:	9905      	ldr	r1, [sp, #20]
 8007a56:	9803      	ldr	r0, [sp, #12]
 8007a58:	f000 fbc2 	bl	80081e0 <_Bfree>
 8007a5c:	2300      	movs	r3, #0
 8007a5e:	7023      	strb	r3, [r4, #0]
 8007a60:	9b04      	ldr	r3, [sp, #16]
 8007a62:	9a24      	ldr	r2, [sp, #144]	@ 0x90
 8007a64:	3301      	adds	r3, #1
 8007a66:	6013      	str	r3, [r2, #0]
 8007a68:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 8007a6a:	2b00      	cmp	r3, #0
 8007a6c:	d100      	bne.n	8007a70 <_dtoa_r+0x704>
 8007a6e:	e4c7      	b.n	8007400 <_dtoa_r+0x94>
 8007a70:	601c      	str	r4, [r3, #0]
 8007a72:	e4c5      	b.n	8007400 <_dtoa_r+0x94>
 8007a74:	0800bf68 	.word	0x0800bf68
 8007a78:	0800bf40 	.word	0x0800bf40
 8007a7c:	3ff00000 	.word	0x3ff00000
 8007a80:	40240000 	.word	0x40240000
 8007a84:	401c0000 	.word	0x401c0000
 8007a88:	fcc00000 	.word	0xfcc00000
 8007a8c:	40140000 	.word	0x40140000
 8007a90:	3fe00000 	.word	0x3fe00000
 8007a94:	9b04      	ldr	r3, [sp, #16]
 8007a96:	930c      	str	r3, [sp, #48]	@ 0x30
 8007a98:	0023      	movs	r3, r4
 8007a9a:	001c      	movs	r4, r3
 8007a9c:	3b01      	subs	r3, #1
 8007a9e:	781a      	ldrb	r2, [r3, #0]
 8007aa0:	2a39      	cmp	r2, #57	@ 0x39
 8007aa2:	d108      	bne.n	8007ab6 <_dtoa_r+0x74a>
 8007aa4:	9a08      	ldr	r2, [sp, #32]
 8007aa6:	429a      	cmp	r2, r3
 8007aa8:	d1f7      	bne.n	8007a9a <_dtoa_r+0x72e>
 8007aaa:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8007aac:	9908      	ldr	r1, [sp, #32]
 8007aae:	3201      	adds	r2, #1
 8007ab0:	920c      	str	r2, [sp, #48]	@ 0x30
 8007ab2:	2230      	movs	r2, #48	@ 0x30
 8007ab4:	700a      	strb	r2, [r1, #0]
 8007ab6:	781a      	ldrb	r2, [r3, #0]
 8007ab8:	3201      	adds	r2, #1
 8007aba:	701a      	strb	r2, [r3, #0]
 8007abc:	e784      	b.n	80079c8 <_dtoa_r+0x65c>
 8007abe:	2200      	movs	r2, #0
 8007ac0:	4bc6      	ldr	r3, [pc, #792]	@ (8007ddc <_dtoa_r+0xa70>)
 8007ac2:	f7fa fd77 	bl	80025b4 <__aeabi_dmul>
 8007ac6:	2200      	movs	r2, #0
 8007ac8:	2300      	movs	r3, #0
 8007aca:	0006      	movs	r6, r0
 8007acc:	000f      	movs	r7, r1
 8007ace:	f7f8 fcbd 	bl	800044c <__aeabi_dcmpeq>
 8007ad2:	2800      	cmp	r0, #0
 8007ad4:	d089      	beq.n	80079ea <_dtoa_r+0x67e>
 8007ad6:	e7bd      	b.n	8007a54 <_dtoa_r+0x6e8>
 8007ad8:	9f10      	ldr	r7, [sp, #64]	@ 0x40
 8007ada:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 8007adc:	9c06      	ldr	r4, [sp, #24]
 8007ade:	2f00      	cmp	r7, #0
 8007ae0:	d014      	beq.n	8007b0c <_dtoa_r+0x7a0>
 8007ae2:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 8007ae4:	2a01      	cmp	r2, #1
 8007ae6:	dd00      	ble.n	8007aea <_dtoa_r+0x77e>
 8007ae8:	e0e4      	b.n	8007cb4 <_dtoa_r+0x948>
 8007aea:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 8007aec:	2a00      	cmp	r2, #0
 8007aee:	d100      	bne.n	8007af2 <_dtoa_r+0x786>
 8007af0:	e0da      	b.n	8007ca8 <_dtoa_r+0x93c>
 8007af2:	4abb      	ldr	r2, [pc, #748]	@ (8007de0 <_dtoa_r+0xa74>)
 8007af4:	189b      	adds	r3, r3, r2
 8007af6:	9a06      	ldr	r2, [sp, #24]
 8007af8:	2101      	movs	r1, #1
 8007afa:	18d2      	adds	r2, r2, r3
 8007afc:	9206      	str	r2, [sp, #24]
 8007afe:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8007b00:	9803      	ldr	r0, [sp, #12]
 8007b02:	18d3      	adds	r3, r2, r3
 8007b04:	930d      	str	r3, [sp, #52]	@ 0x34
 8007b06:	f000 fc23 	bl	8008350 <__i2b>
 8007b0a:	0007      	movs	r7, r0
 8007b0c:	2c00      	cmp	r4, #0
 8007b0e:	d00e      	beq.n	8007b2e <_dtoa_r+0x7c2>
 8007b10:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8007b12:	2b00      	cmp	r3, #0
 8007b14:	dd0b      	ble.n	8007b2e <_dtoa_r+0x7c2>
 8007b16:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8007b18:	0023      	movs	r3, r4
 8007b1a:	4294      	cmp	r4, r2
 8007b1c:	dd00      	ble.n	8007b20 <_dtoa_r+0x7b4>
 8007b1e:	0013      	movs	r3, r2
 8007b20:	9a06      	ldr	r2, [sp, #24]
 8007b22:	1ae4      	subs	r4, r4, r3
 8007b24:	1ad2      	subs	r2, r2, r3
 8007b26:	9206      	str	r2, [sp, #24]
 8007b28:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8007b2a:	1ad3      	subs	r3, r2, r3
 8007b2c:	930d      	str	r3, [sp, #52]	@ 0x34
 8007b2e:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8007b30:	2b00      	cmp	r3, #0
 8007b32:	d021      	beq.n	8007b78 <_dtoa_r+0x80c>
 8007b34:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8007b36:	2b00      	cmp	r3, #0
 8007b38:	d100      	bne.n	8007b3c <_dtoa_r+0x7d0>
 8007b3a:	e0d3      	b.n	8007ce4 <_dtoa_r+0x978>
 8007b3c:	9e05      	ldr	r6, [sp, #20]
 8007b3e:	2d00      	cmp	r5, #0
 8007b40:	d014      	beq.n	8007b6c <_dtoa_r+0x800>
 8007b42:	0039      	movs	r1, r7
 8007b44:	002a      	movs	r2, r5
 8007b46:	9803      	ldr	r0, [sp, #12]
 8007b48:	f000 fcc4 	bl	80084d4 <__pow5mult>
 8007b4c:	9a05      	ldr	r2, [sp, #20]
 8007b4e:	0001      	movs	r1, r0
 8007b50:	0007      	movs	r7, r0
 8007b52:	9803      	ldr	r0, [sp, #12]
 8007b54:	f000 fc14 	bl	8008380 <__multiply>
 8007b58:	0006      	movs	r6, r0
 8007b5a:	9905      	ldr	r1, [sp, #20]
 8007b5c:	9803      	ldr	r0, [sp, #12]
 8007b5e:	f000 fb3f 	bl	80081e0 <_Bfree>
 8007b62:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8007b64:	9605      	str	r6, [sp, #20]
 8007b66:	1b5b      	subs	r3, r3, r5
 8007b68:	930f      	str	r3, [sp, #60]	@ 0x3c
 8007b6a:	d005      	beq.n	8007b78 <_dtoa_r+0x80c>
 8007b6c:	0031      	movs	r1, r6
 8007b6e:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8007b70:	9803      	ldr	r0, [sp, #12]
 8007b72:	f000 fcaf 	bl	80084d4 <__pow5mult>
 8007b76:	9005      	str	r0, [sp, #20]
 8007b78:	2101      	movs	r1, #1
 8007b7a:	9803      	ldr	r0, [sp, #12]
 8007b7c:	f000 fbe8 	bl	8008350 <__i2b>
 8007b80:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 8007b82:	0006      	movs	r6, r0
 8007b84:	2b00      	cmp	r3, #0
 8007b86:	d100      	bne.n	8007b8a <_dtoa_r+0x81e>
 8007b88:	e1bc      	b.n	8007f04 <_dtoa_r+0xb98>
 8007b8a:	001a      	movs	r2, r3
 8007b8c:	0001      	movs	r1, r0
 8007b8e:	9803      	ldr	r0, [sp, #12]
 8007b90:	f000 fca0 	bl	80084d4 <__pow5mult>
 8007b94:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 8007b96:	0006      	movs	r6, r0
 8007b98:	2500      	movs	r5, #0
 8007b9a:	2b01      	cmp	r3, #1
 8007b9c:	dc16      	bgt.n	8007bcc <_dtoa_r+0x860>
 8007b9e:	2500      	movs	r5, #0
 8007ba0:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8007ba2:	42ab      	cmp	r3, r5
 8007ba4:	d10e      	bne.n	8007bc4 <_dtoa_r+0x858>
 8007ba6:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8007ba8:	031b      	lsls	r3, r3, #12
 8007baa:	42ab      	cmp	r3, r5
 8007bac:	d10a      	bne.n	8007bc4 <_dtoa_r+0x858>
 8007bae:	4b8d      	ldr	r3, [pc, #564]	@ (8007de4 <_dtoa_r+0xa78>)
 8007bb0:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8007bb2:	4213      	tst	r3, r2
 8007bb4:	d006      	beq.n	8007bc4 <_dtoa_r+0x858>
 8007bb6:	9b06      	ldr	r3, [sp, #24]
 8007bb8:	3501      	adds	r5, #1
 8007bba:	3301      	adds	r3, #1
 8007bbc:	9306      	str	r3, [sp, #24]
 8007bbe:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8007bc0:	3301      	adds	r3, #1
 8007bc2:	930d      	str	r3, [sp, #52]	@ 0x34
 8007bc4:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 8007bc6:	2001      	movs	r0, #1
 8007bc8:	2b00      	cmp	r3, #0
 8007bca:	d008      	beq.n	8007bde <_dtoa_r+0x872>
 8007bcc:	6933      	ldr	r3, [r6, #16]
 8007bce:	3303      	adds	r3, #3
 8007bd0:	009b      	lsls	r3, r3, #2
 8007bd2:	18f3      	adds	r3, r6, r3
 8007bd4:	6858      	ldr	r0, [r3, #4]
 8007bd6:	f000 fb6b 	bl	80082b0 <__hi0bits>
 8007bda:	2320      	movs	r3, #32
 8007bdc:	1a18      	subs	r0, r3, r0
 8007bde:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8007be0:	1818      	adds	r0, r3, r0
 8007be2:	0002      	movs	r2, r0
 8007be4:	231f      	movs	r3, #31
 8007be6:	401a      	ands	r2, r3
 8007be8:	4218      	tst	r0, r3
 8007bea:	d100      	bne.n	8007bee <_dtoa_r+0x882>
 8007bec:	e081      	b.n	8007cf2 <_dtoa_r+0x986>
 8007bee:	3301      	adds	r3, #1
 8007bf0:	1a9b      	subs	r3, r3, r2
 8007bf2:	2b04      	cmp	r3, #4
 8007bf4:	dd79      	ble.n	8007cea <_dtoa_r+0x97e>
 8007bf6:	231c      	movs	r3, #28
 8007bf8:	1a9b      	subs	r3, r3, r2
 8007bfa:	9a06      	ldr	r2, [sp, #24]
 8007bfc:	18e4      	adds	r4, r4, r3
 8007bfe:	18d2      	adds	r2, r2, r3
 8007c00:	9206      	str	r2, [sp, #24]
 8007c02:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8007c04:	18d3      	adds	r3, r2, r3
 8007c06:	930d      	str	r3, [sp, #52]	@ 0x34
 8007c08:	9b06      	ldr	r3, [sp, #24]
 8007c0a:	2b00      	cmp	r3, #0
 8007c0c:	dd05      	ble.n	8007c1a <_dtoa_r+0x8ae>
 8007c0e:	001a      	movs	r2, r3
 8007c10:	9905      	ldr	r1, [sp, #20]
 8007c12:	9803      	ldr	r0, [sp, #12]
 8007c14:	f000 fcba 	bl	800858c <__lshift>
 8007c18:	9005      	str	r0, [sp, #20]
 8007c1a:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8007c1c:	2b00      	cmp	r3, #0
 8007c1e:	dd05      	ble.n	8007c2c <_dtoa_r+0x8c0>
 8007c20:	0031      	movs	r1, r6
 8007c22:	001a      	movs	r2, r3
 8007c24:	9803      	ldr	r0, [sp, #12]
 8007c26:	f000 fcb1 	bl	800858c <__lshift>
 8007c2a:	0006      	movs	r6, r0
 8007c2c:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 8007c2e:	2b00      	cmp	r3, #0
 8007c30:	d061      	beq.n	8007cf6 <_dtoa_r+0x98a>
 8007c32:	0031      	movs	r1, r6
 8007c34:	9805      	ldr	r0, [sp, #20]
 8007c36:	f000 fd15 	bl	8008664 <__mcmp>
 8007c3a:	2800      	cmp	r0, #0
 8007c3c:	da5b      	bge.n	8007cf6 <_dtoa_r+0x98a>
 8007c3e:	9b04      	ldr	r3, [sp, #16]
 8007c40:	220a      	movs	r2, #10
 8007c42:	3b01      	subs	r3, #1
 8007c44:	930c      	str	r3, [sp, #48]	@ 0x30
 8007c46:	9905      	ldr	r1, [sp, #20]
 8007c48:	2300      	movs	r3, #0
 8007c4a:	9803      	ldr	r0, [sp, #12]
 8007c4c:	f000 faec 	bl	8008228 <__multadd>
 8007c50:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8007c52:	9005      	str	r0, [sp, #20]
 8007c54:	2b00      	cmp	r3, #0
 8007c56:	d100      	bne.n	8007c5a <_dtoa_r+0x8ee>
 8007c58:	e15b      	b.n	8007f12 <_dtoa_r+0xba6>
 8007c5a:	2300      	movs	r3, #0
 8007c5c:	0039      	movs	r1, r7
 8007c5e:	220a      	movs	r2, #10
 8007c60:	9803      	ldr	r0, [sp, #12]
 8007c62:	f000 fae1 	bl	8008228 <__multadd>
 8007c66:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8007c68:	0007      	movs	r7, r0
 8007c6a:	2b00      	cmp	r3, #0
 8007c6c:	dc4d      	bgt.n	8007d0a <_dtoa_r+0x99e>
 8007c6e:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 8007c70:	2b02      	cmp	r3, #2
 8007c72:	dd46      	ble.n	8007d02 <_dtoa_r+0x996>
 8007c74:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8007c76:	2b00      	cmp	r3, #0
 8007c78:	d000      	beq.n	8007c7c <_dtoa_r+0x910>
 8007c7a:	e5db      	b.n	8007834 <_dtoa_r+0x4c8>
 8007c7c:	0031      	movs	r1, r6
 8007c7e:	2205      	movs	r2, #5
 8007c80:	9803      	ldr	r0, [sp, #12]
 8007c82:	f000 fad1 	bl	8008228 <__multadd>
 8007c86:	0006      	movs	r6, r0
 8007c88:	0001      	movs	r1, r0
 8007c8a:	9805      	ldr	r0, [sp, #20]
 8007c8c:	f000 fcea 	bl	8008664 <__mcmp>
 8007c90:	2800      	cmp	r0, #0
 8007c92:	dc00      	bgt.n	8007c96 <_dtoa_r+0x92a>
 8007c94:	e5ce      	b.n	8007834 <_dtoa_r+0x4c8>
 8007c96:	9b08      	ldr	r3, [sp, #32]
 8007c98:	9a08      	ldr	r2, [sp, #32]
 8007c9a:	1c5c      	adds	r4, r3, #1
 8007c9c:	2331      	movs	r3, #49	@ 0x31
 8007c9e:	7013      	strb	r3, [r2, #0]
 8007ca0:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8007ca2:	3301      	adds	r3, #1
 8007ca4:	930c      	str	r3, [sp, #48]	@ 0x30
 8007ca6:	e5c9      	b.n	800783c <_dtoa_r+0x4d0>
 8007ca8:	2336      	movs	r3, #54	@ 0x36
 8007caa:	9a1a      	ldr	r2, [sp, #104]	@ 0x68
 8007cac:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 8007cae:	1a9b      	subs	r3, r3, r2
 8007cb0:	9c06      	ldr	r4, [sp, #24]
 8007cb2:	e720      	b.n	8007af6 <_dtoa_r+0x78a>
 8007cb4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8007cb6:	1e5d      	subs	r5, r3, #1
 8007cb8:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8007cba:	42ab      	cmp	r3, r5
 8007cbc:	db08      	blt.n	8007cd0 <_dtoa_r+0x964>
 8007cbe:	1b5d      	subs	r5, r3, r5
 8007cc0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8007cc2:	2b00      	cmp	r3, #0
 8007cc4:	daf4      	bge.n	8007cb0 <_dtoa_r+0x944>
 8007cc6:	9b06      	ldr	r3, [sp, #24]
 8007cc8:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8007cca:	1a9c      	subs	r4, r3, r2
 8007ccc:	2300      	movs	r3, #0
 8007cce:	e712      	b.n	8007af6 <_dtoa_r+0x78a>
 8007cd0:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8007cd2:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8007cd4:	1aeb      	subs	r3, r5, r3
 8007cd6:	18d3      	adds	r3, r2, r3
 8007cd8:	9314      	str	r3, [sp, #80]	@ 0x50
 8007cda:	950f      	str	r5, [sp, #60]	@ 0x3c
 8007cdc:	9c06      	ldr	r4, [sp, #24]
 8007cde:	2500      	movs	r5, #0
 8007ce0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8007ce2:	e708      	b.n	8007af6 <_dtoa_r+0x78a>
 8007ce4:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8007ce6:	9905      	ldr	r1, [sp, #20]
 8007ce8:	e742      	b.n	8007b70 <_dtoa_r+0x804>
 8007cea:	2b04      	cmp	r3, #4
 8007cec:	d08c      	beq.n	8007c08 <_dtoa_r+0x89c>
 8007cee:	331c      	adds	r3, #28
 8007cf0:	e783      	b.n	8007bfa <_dtoa_r+0x88e>
 8007cf2:	0013      	movs	r3, r2
 8007cf4:	e7fb      	b.n	8007cee <_dtoa_r+0x982>
 8007cf6:	9b04      	ldr	r3, [sp, #16]
 8007cf8:	930c      	str	r3, [sp, #48]	@ 0x30
 8007cfa:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8007cfc:	930e      	str	r3, [sp, #56]	@ 0x38
 8007cfe:	2b00      	cmp	r3, #0
 8007d00:	ddb5      	ble.n	8007c6e <_dtoa_r+0x902>
 8007d02:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8007d04:	2b00      	cmp	r3, #0
 8007d06:	d100      	bne.n	8007d0a <_dtoa_r+0x99e>
 8007d08:	e107      	b.n	8007f1a <_dtoa_r+0xbae>
 8007d0a:	2c00      	cmp	r4, #0
 8007d0c:	dd05      	ble.n	8007d1a <_dtoa_r+0x9ae>
 8007d0e:	0039      	movs	r1, r7
 8007d10:	0022      	movs	r2, r4
 8007d12:	9803      	ldr	r0, [sp, #12]
 8007d14:	f000 fc3a 	bl	800858c <__lshift>
 8007d18:	0007      	movs	r7, r0
 8007d1a:	9704      	str	r7, [sp, #16]
 8007d1c:	2d00      	cmp	r5, #0
 8007d1e:	d020      	beq.n	8007d62 <_dtoa_r+0x9f6>
 8007d20:	6879      	ldr	r1, [r7, #4]
 8007d22:	9803      	ldr	r0, [sp, #12]
 8007d24:	f000 fa18 	bl	8008158 <_Balloc>
 8007d28:	1e04      	subs	r4, r0, #0
 8007d2a:	d10c      	bne.n	8007d46 <_dtoa_r+0x9da>
 8007d2c:	0022      	movs	r2, r4
 8007d2e:	4b2e      	ldr	r3, [pc, #184]	@ (8007de8 <_dtoa_r+0xa7c>)
 8007d30:	482e      	ldr	r0, [pc, #184]	@ (8007dec <_dtoa_r+0xa80>)
 8007d32:	492f      	ldr	r1, [pc, #188]	@ (8007df0 <_dtoa_r+0xa84>)
 8007d34:	f7ff fb2f 	bl	8007396 <_dtoa_r+0x2a>
 8007d38:	9e11      	ldr	r6, [sp, #68]	@ 0x44
 8007d3a:	0037      	movs	r7, r6
 8007d3c:	e7ab      	b.n	8007c96 <_dtoa_r+0x92a>
 8007d3e:	9b04      	ldr	r3, [sp, #16]
 8007d40:	9e09      	ldr	r6, [sp, #36]	@ 0x24
 8007d42:	930c      	str	r3, [sp, #48]	@ 0x30
 8007d44:	e7f9      	b.n	8007d3a <_dtoa_r+0x9ce>
 8007d46:	0039      	movs	r1, r7
 8007d48:	693a      	ldr	r2, [r7, #16]
 8007d4a:	310c      	adds	r1, #12
 8007d4c:	3202      	adds	r2, #2
 8007d4e:	0092      	lsls	r2, r2, #2
 8007d50:	300c      	adds	r0, #12
 8007d52:	f7ff fa7d 	bl	8007250 <memcpy>
 8007d56:	2201      	movs	r2, #1
 8007d58:	0021      	movs	r1, r4
 8007d5a:	9803      	ldr	r0, [sp, #12]
 8007d5c:	f000 fc16 	bl	800858c <__lshift>
 8007d60:	9004      	str	r0, [sp, #16]
 8007d62:	9b08      	ldr	r3, [sp, #32]
 8007d64:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8007d66:	9306      	str	r3, [sp, #24]
 8007d68:	3b01      	subs	r3, #1
 8007d6a:	189b      	adds	r3, r3, r2
 8007d6c:	2201      	movs	r2, #1
 8007d6e:	930f      	str	r3, [sp, #60]	@ 0x3c
 8007d70:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8007d72:	4013      	ands	r3, r2
 8007d74:	930e      	str	r3, [sp, #56]	@ 0x38
 8007d76:	0031      	movs	r1, r6
 8007d78:	9805      	ldr	r0, [sp, #20]
 8007d7a:	f7ff fa72 	bl	8007262 <quorem>
 8007d7e:	0039      	movs	r1, r7
 8007d80:	0005      	movs	r5, r0
 8007d82:	900a      	str	r0, [sp, #40]	@ 0x28
 8007d84:	9805      	ldr	r0, [sp, #20]
 8007d86:	f000 fc6d 	bl	8008664 <__mcmp>
 8007d8a:	9a04      	ldr	r2, [sp, #16]
 8007d8c:	900d      	str	r0, [sp, #52]	@ 0x34
 8007d8e:	0031      	movs	r1, r6
 8007d90:	9803      	ldr	r0, [sp, #12]
 8007d92:	f000 fc83 	bl	800869c <__mdiff>
 8007d96:	2201      	movs	r2, #1
 8007d98:	68c3      	ldr	r3, [r0, #12]
 8007d9a:	0004      	movs	r4, r0
 8007d9c:	3530      	adds	r5, #48	@ 0x30
 8007d9e:	9209      	str	r2, [sp, #36]	@ 0x24
 8007da0:	2b00      	cmp	r3, #0
 8007da2:	d104      	bne.n	8007dae <_dtoa_r+0xa42>
 8007da4:	0001      	movs	r1, r0
 8007da6:	9805      	ldr	r0, [sp, #20]
 8007da8:	f000 fc5c 	bl	8008664 <__mcmp>
 8007dac:	9009      	str	r0, [sp, #36]	@ 0x24
 8007dae:	0021      	movs	r1, r4
 8007db0:	9803      	ldr	r0, [sp, #12]
 8007db2:	f000 fa15 	bl	80081e0 <_Bfree>
 8007db6:	9b06      	ldr	r3, [sp, #24]
 8007db8:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 8007dba:	1c5c      	adds	r4, r3, #1
 8007dbc:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8007dbe:	4313      	orrs	r3, r2
 8007dc0:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8007dc2:	4313      	orrs	r3, r2
 8007dc4:	d116      	bne.n	8007df4 <_dtoa_r+0xa88>
 8007dc6:	2d39      	cmp	r5, #57	@ 0x39
 8007dc8:	d02f      	beq.n	8007e2a <_dtoa_r+0xabe>
 8007dca:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8007dcc:	2b00      	cmp	r3, #0
 8007dce:	dd01      	ble.n	8007dd4 <_dtoa_r+0xa68>
 8007dd0:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 8007dd2:	3531      	adds	r5, #49	@ 0x31
 8007dd4:	9b06      	ldr	r3, [sp, #24]
 8007dd6:	701d      	strb	r5, [r3, #0]
 8007dd8:	e532      	b.n	8007840 <_dtoa_r+0x4d4>
 8007dda:	46c0      	nop			@ (mov r8, r8)
 8007ddc:	40240000 	.word	0x40240000
 8007de0:	00000433 	.word	0x00000433
 8007de4:	7ff00000 	.word	0x7ff00000
 8007de8:	08009609 	.word	0x08009609
 8007dec:	080095b1 	.word	0x080095b1
 8007df0:	000002ef 	.word	0x000002ef
 8007df4:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8007df6:	2b00      	cmp	r3, #0
 8007df8:	db04      	blt.n	8007e04 <_dtoa_r+0xa98>
 8007dfa:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 8007dfc:	4313      	orrs	r3, r2
 8007dfe:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8007e00:	4313      	orrs	r3, r2
 8007e02:	d11e      	bne.n	8007e42 <_dtoa_r+0xad6>
 8007e04:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8007e06:	2b00      	cmp	r3, #0
 8007e08:	dde4      	ble.n	8007dd4 <_dtoa_r+0xa68>
 8007e0a:	9905      	ldr	r1, [sp, #20]
 8007e0c:	2201      	movs	r2, #1
 8007e0e:	9803      	ldr	r0, [sp, #12]
 8007e10:	f000 fbbc 	bl	800858c <__lshift>
 8007e14:	0031      	movs	r1, r6
 8007e16:	9005      	str	r0, [sp, #20]
 8007e18:	f000 fc24 	bl	8008664 <__mcmp>
 8007e1c:	2800      	cmp	r0, #0
 8007e1e:	dc02      	bgt.n	8007e26 <_dtoa_r+0xaba>
 8007e20:	d1d8      	bne.n	8007dd4 <_dtoa_r+0xa68>
 8007e22:	07eb      	lsls	r3, r5, #31
 8007e24:	d5d6      	bpl.n	8007dd4 <_dtoa_r+0xa68>
 8007e26:	2d39      	cmp	r5, #57	@ 0x39
 8007e28:	d1d2      	bne.n	8007dd0 <_dtoa_r+0xa64>
 8007e2a:	2339      	movs	r3, #57	@ 0x39
 8007e2c:	9a06      	ldr	r2, [sp, #24]
 8007e2e:	7013      	strb	r3, [r2, #0]
 8007e30:	0023      	movs	r3, r4
 8007e32:	001c      	movs	r4, r3
 8007e34:	3b01      	subs	r3, #1
 8007e36:	781a      	ldrb	r2, [r3, #0]
 8007e38:	2a39      	cmp	r2, #57	@ 0x39
 8007e3a:	d050      	beq.n	8007ede <_dtoa_r+0xb72>
 8007e3c:	3201      	adds	r2, #1
 8007e3e:	701a      	strb	r2, [r3, #0]
 8007e40:	e4fe      	b.n	8007840 <_dtoa_r+0x4d4>
 8007e42:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8007e44:	2b00      	cmp	r3, #0
 8007e46:	dd03      	ble.n	8007e50 <_dtoa_r+0xae4>
 8007e48:	2d39      	cmp	r5, #57	@ 0x39
 8007e4a:	d0ee      	beq.n	8007e2a <_dtoa_r+0xabe>
 8007e4c:	3501      	adds	r5, #1
 8007e4e:	e7c1      	b.n	8007dd4 <_dtoa_r+0xa68>
 8007e50:	9b06      	ldr	r3, [sp, #24]
 8007e52:	9a06      	ldr	r2, [sp, #24]
 8007e54:	701d      	strb	r5, [r3, #0]
 8007e56:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8007e58:	4293      	cmp	r3, r2
 8007e5a:	d02b      	beq.n	8007eb4 <_dtoa_r+0xb48>
 8007e5c:	2300      	movs	r3, #0
 8007e5e:	220a      	movs	r2, #10
 8007e60:	9905      	ldr	r1, [sp, #20]
 8007e62:	9803      	ldr	r0, [sp, #12]
 8007e64:	f000 f9e0 	bl	8008228 <__multadd>
 8007e68:	9b04      	ldr	r3, [sp, #16]
 8007e6a:	9005      	str	r0, [sp, #20]
 8007e6c:	429f      	cmp	r7, r3
 8007e6e:	d109      	bne.n	8007e84 <_dtoa_r+0xb18>
 8007e70:	0039      	movs	r1, r7
 8007e72:	2300      	movs	r3, #0
 8007e74:	220a      	movs	r2, #10
 8007e76:	9803      	ldr	r0, [sp, #12]
 8007e78:	f000 f9d6 	bl	8008228 <__multadd>
 8007e7c:	0007      	movs	r7, r0
 8007e7e:	9004      	str	r0, [sp, #16]
 8007e80:	9406      	str	r4, [sp, #24]
 8007e82:	e778      	b.n	8007d76 <_dtoa_r+0xa0a>
 8007e84:	0039      	movs	r1, r7
 8007e86:	2300      	movs	r3, #0
 8007e88:	220a      	movs	r2, #10
 8007e8a:	9803      	ldr	r0, [sp, #12]
 8007e8c:	f000 f9cc 	bl	8008228 <__multadd>
 8007e90:	2300      	movs	r3, #0
 8007e92:	0007      	movs	r7, r0
 8007e94:	220a      	movs	r2, #10
 8007e96:	9904      	ldr	r1, [sp, #16]
 8007e98:	9803      	ldr	r0, [sp, #12]
 8007e9a:	f000 f9c5 	bl	8008228 <__multadd>
 8007e9e:	9004      	str	r0, [sp, #16]
 8007ea0:	e7ee      	b.n	8007e80 <_dtoa_r+0xb14>
 8007ea2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8007ea4:	2401      	movs	r4, #1
 8007ea6:	2b00      	cmp	r3, #0
 8007ea8:	dd00      	ble.n	8007eac <_dtoa_r+0xb40>
 8007eaa:	001c      	movs	r4, r3
 8007eac:	9704      	str	r7, [sp, #16]
 8007eae:	2700      	movs	r7, #0
 8007eb0:	9b08      	ldr	r3, [sp, #32]
 8007eb2:	191c      	adds	r4, r3, r4
 8007eb4:	9905      	ldr	r1, [sp, #20]
 8007eb6:	2201      	movs	r2, #1
 8007eb8:	9803      	ldr	r0, [sp, #12]
 8007eba:	f000 fb67 	bl	800858c <__lshift>
 8007ebe:	0031      	movs	r1, r6
 8007ec0:	9005      	str	r0, [sp, #20]
 8007ec2:	f000 fbcf 	bl	8008664 <__mcmp>
 8007ec6:	2800      	cmp	r0, #0
 8007ec8:	dcb2      	bgt.n	8007e30 <_dtoa_r+0xac4>
 8007eca:	d101      	bne.n	8007ed0 <_dtoa_r+0xb64>
 8007ecc:	07ed      	lsls	r5, r5, #31
 8007ece:	d4af      	bmi.n	8007e30 <_dtoa_r+0xac4>
 8007ed0:	0023      	movs	r3, r4
 8007ed2:	001c      	movs	r4, r3
 8007ed4:	3b01      	subs	r3, #1
 8007ed6:	781a      	ldrb	r2, [r3, #0]
 8007ed8:	2a30      	cmp	r2, #48	@ 0x30
 8007eda:	d0fa      	beq.n	8007ed2 <_dtoa_r+0xb66>
 8007edc:	e4b0      	b.n	8007840 <_dtoa_r+0x4d4>
 8007ede:	9a08      	ldr	r2, [sp, #32]
 8007ee0:	429a      	cmp	r2, r3
 8007ee2:	d1a6      	bne.n	8007e32 <_dtoa_r+0xac6>
 8007ee4:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8007ee6:	3301      	adds	r3, #1
 8007ee8:	930c      	str	r3, [sp, #48]	@ 0x30
 8007eea:	2331      	movs	r3, #49	@ 0x31
 8007eec:	7013      	strb	r3, [r2, #0]
 8007eee:	e4a7      	b.n	8007840 <_dtoa_r+0x4d4>
 8007ef0:	4b14      	ldr	r3, [pc, #80]	@ (8007f44 <_dtoa_r+0xbd8>)
 8007ef2:	9a26      	ldr	r2, [sp, #152]	@ 0x98
 8007ef4:	9308      	str	r3, [sp, #32]
 8007ef6:	4b14      	ldr	r3, [pc, #80]	@ (8007f48 <_dtoa_r+0xbdc>)
 8007ef8:	2a00      	cmp	r2, #0
 8007efa:	d001      	beq.n	8007f00 <_dtoa_r+0xb94>
 8007efc:	f7ff fa7e 	bl	80073fc <_dtoa_r+0x90>
 8007f00:	f7ff fa7e 	bl	8007400 <_dtoa_r+0x94>
 8007f04:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 8007f06:	2b01      	cmp	r3, #1
 8007f08:	dc00      	bgt.n	8007f0c <_dtoa_r+0xba0>
 8007f0a:	e648      	b.n	8007b9e <_dtoa_r+0x832>
 8007f0c:	2001      	movs	r0, #1
 8007f0e:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8007f10:	e665      	b.n	8007bde <_dtoa_r+0x872>
 8007f12:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8007f14:	2b00      	cmp	r3, #0
 8007f16:	dc00      	bgt.n	8007f1a <_dtoa_r+0xbae>
 8007f18:	e6a9      	b.n	8007c6e <_dtoa_r+0x902>
 8007f1a:	2400      	movs	r4, #0
 8007f1c:	0031      	movs	r1, r6
 8007f1e:	9805      	ldr	r0, [sp, #20]
 8007f20:	f7ff f99f 	bl	8007262 <quorem>
 8007f24:	9b08      	ldr	r3, [sp, #32]
 8007f26:	3030      	adds	r0, #48	@ 0x30
 8007f28:	5518      	strb	r0, [r3, r4]
 8007f2a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8007f2c:	3401      	adds	r4, #1
 8007f2e:	0005      	movs	r5, r0
 8007f30:	42a3      	cmp	r3, r4
 8007f32:	ddb6      	ble.n	8007ea2 <_dtoa_r+0xb36>
 8007f34:	2300      	movs	r3, #0
 8007f36:	220a      	movs	r2, #10
 8007f38:	9905      	ldr	r1, [sp, #20]
 8007f3a:	9803      	ldr	r0, [sp, #12]
 8007f3c:	f000 f974 	bl	8008228 <__multadd>
 8007f40:	9005      	str	r0, [sp, #20]
 8007f42:	e7eb      	b.n	8007f1c <_dtoa_r+0xbb0>
 8007f44:	0800958d 	.word	0x0800958d
 8007f48:	08009595 	.word	0x08009595

08007f4c <_free_r>:
 8007f4c:	b570      	push	{r4, r5, r6, lr}
 8007f4e:	0005      	movs	r5, r0
 8007f50:	1e0c      	subs	r4, r1, #0
 8007f52:	d010      	beq.n	8007f76 <_free_r+0x2a>
 8007f54:	3c04      	subs	r4, #4
 8007f56:	6823      	ldr	r3, [r4, #0]
 8007f58:	2b00      	cmp	r3, #0
 8007f5a:	da00      	bge.n	8007f5e <_free_r+0x12>
 8007f5c:	18e4      	adds	r4, r4, r3
 8007f5e:	0028      	movs	r0, r5
 8007f60:	f000 f8ea 	bl	8008138 <__malloc_lock>
 8007f64:	4a1d      	ldr	r2, [pc, #116]	@ (8007fdc <_free_r+0x90>)
 8007f66:	6813      	ldr	r3, [r2, #0]
 8007f68:	2b00      	cmp	r3, #0
 8007f6a:	d105      	bne.n	8007f78 <_free_r+0x2c>
 8007f6c:	6063      	str	r3, [r4, #4]
 8007f6e:	6014      	str	r4, [r2, #0]
 8007f70:	0028      	movs	r0, r5
 8007f72:	f000 f8e9 	bl	8008148 <__malloc_unlock>
 8007f76:	bd70      	pop	{r4, r5, r6, pc}
 8007f78:	42a3      	cmp	r3, r4
 8007f7a:	d908      	bls.n	8007f8e <_free_r+0x42>
 8007f7c:	6820      	ldr	r0, [r4, #0]
 8007f7e:	1821      	adds	r1, r4, r0
 8007f80:	428b      	cmp	r3, r1
 8007f82:	d1f3      	bne.n	8007f6c <_free_r+0x20>
 8007f84:	6819      	ldr	r1, [r3, #0]
 8007f86:	685b      	ldr	r3, [r3, #4]
 8007f88:	1809      	adds	r1, r1, r0
 8007f8a:	6021      	str	r1, [r4, #0]
 8007f8c:	e7ee      	b.n	8007f6c <_free_r+0x20>
 8007f8e:	001a      	movs	r2, r3
 8007f90:	685b      	ldr	r3, [r3, #4]
 8007f92:	2b00      	cmp	r3, #0
 8007f94:	d001      	beq.n	8007f9a <_free_r+0x4e>
 8007f96:	42a3      	cmp	r3, r4
 8007f98:	d9f9      	bls.n	8007f8e <_free_r+0x42>
 8007f9a:	6811      	ldr	r1, [r2, #0]
 8007f9c:	1850      	adds	r0, r2, r1
 8007f9e:	42a0      	cmp	r0, r4
 8007fa0:	d10b      	bne.n	8007fba <_free_r+0x6e>
 8007fa2:	6820      	ldr	r0, [r4, #0]
 8007fa4:	1809      	adds	r1, r1, r0
 8007fa6:	1850      	adds	r0, r2, r1
 8007fa8:	6011      	str	r1, [r2, #0]
 8007faa:	4283      	cmp	r3, r0
 8007fac:	d1e0      	bne.n	8007f70 <_free_r+0x24>
 8007fae:	6818      	ldr	r0, [r3, #0]
 8007fb0:	685b      	ldr	r3, [r3, #4]
 8007fb2:	1841      	adds	r1, r0, r1
 8007fb4:	6011      	str	r1, [r2, #0]
 8007fb6:	6053      	str	r3, [r2, #4]
 8007fb8:	e7da      	b.n	8007f70 <_free_r+0x24>
 8007fba:	42a0      	cmp	r0, r4
 8007fbc:	d902      	bls.n	8007fc4 <_free_r+0x78>
 8007fbe:	230c      	movs	r3, #12
 8007fc0:	602b      	str	r3, [r5, #0]
 8007fc2:	e7d5      	b.n	8007f70 <_free_r+0x24>
 8007fc4:	6820      	ldr	r0, [r4, #0]
 8007fc6:	1821      	adds	r1, r4, r0
 8007fc8:	428b      	cmp	r3, r1
 8007fca:	d103      	bne.n	8007fd4 <_free_r+0x88>
 8007fcc:	6819      	ldr	r1, [r3, #0]
 8007fce:	685b      	ldr	r3, [r3, #4]
 8007fd0:	1809      	adds	r1, r1, r0
 8007fd2:	6021      	str	r1, [r4, #0]
 8007fd4:	6063      	str	r3, [r4, #4]
 8007fd6:	6054      	str	r4, [r2, #4]
 8007fd8:	e7ca      	b.n	8007f70 <_free_r+0x24>
 8007fda:	46c0      	nop			@ (mov r8, r8)
 8007fdc:	20000990 	.word	0x20000990

08007fe0 <malloc>:
 8007fe0:	b510      	push	{r4, lr}
 8007fe2:	4b03      	ldr	r3, [pc, #12]	@ (8007ff0 <malloc+0x10>)
 8007fe4:	0001      	movs	r1, r0
 8007fe6:	6818      	ldr	r0, [r3, #0]
 8007fe8:	f000 f826 	bl	8008038 <_malloc_r>
 8007fec:	bd10      	pop	{r4, pc}
 8007fee:	46c0      	nop			@ (mov r8, r8)
 8007ff0:	2000003c 	.word	0x2000003c

08007ff4 <sbrk_aligned>:
 8007ff4:	b570      	push	{r4, r5, r6, lr}
 8007ff6:	4e0f      	ldr	r6, [pc, #60]	@ (8008034 <sbrk_aligned+0x40>)
 8007ff8:	000d      	movs	r5, r1
 8007ffa:	6831      	ldr	r1, [r6, #0]
 8007ffc:	0004      	movs	r4, r0
 8007ffe:	2900      	cmp	r1, #0
 8008000:	d102      	bne.n	8008008 <sbrk_aligned+0x14>
 8008002:	f000 fe67 	bl	8008cd4 <_sbrk_r>
 8008006:	6030      	str	r0, [r6, #0]
 8008008:	0029      	movs	r1, r5
 800800a:	0020      	movs	r0, r4
 800800c:	f000 fe62 	bl	8008cd4 <_sbrk_r>
 8008010:	1c43      	adds	r3, r0, #1
 8008012:	d103      	bne.n	800801c <sbrk_aligned+0x28>
 8008014:	2501      	movs	r5, #1
 8008016:	426d      	negs	r5, r5
 8008018:	0028      	movs	r0, r5
 800801a:	bd70      	pop	{r4, r5, r6, pc}
 800801c:	2303      	movs	r3, #3
 800801e:	1cc5      	adds	r5, r0, #3
 8008020:	439d      	bics	r5, r3
 8008022:	42a8      	cmp	r0, r5
 8008024:	d0f8      	beq.n	8008018 <sbrk_aligned+0x24>
 8008026:	1a29      	subs	r1, r5, r0
 8008028:	0020      	movs	r0, r4
 800802a:	f000 fe53 	bl	8008cd4 <_sbrk_r>
 800802e:	3001      	adds	r0, #1
 8008030:	d1f2      	bne.n	8008018 <sbrk_aligned+0x24>
 8008032:	e7ef      	b.n	8008014 <sbrk_aligned+0x20>
 8008034:	2000098c 	.word	0x2000098c

08008038 <_malloc_r>:
 8008038:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800803a:	2203      	movs	r2, #3
 800803c:	1ccb      	adds	r3, r1, #3
 800803e:	4393      	bics	r3, r2
 8008040:	3308      	adds	r3, #8
 8008042:	0005      	movs	r5, r0
 8008044:	001f      	movs	r7, r3
 8008046:	2b0c      	cmp	r3, #12
 8008048:	d234      	bcs.n	80080b4 <_malloc_r+0x7c>
 800804a:	270c      	movs	r7, #12
 800804c:	42b9      	cmp	r1, r7
 800804e:	d833      	bhi.n	80080b8 <_malloc_r+0x80>
 8008050:	0028      	movs	r0, r5
 8008052:	f000 f871 	bl	8008138 <__malloc_lock>
 8008056:	4e37      	ldr	r6, [pc, #220]	@ (8008134 <_malloc_r+0xfc>)
 8008058:	6833      	ldr	r3, [r6, #0]
 800805a:	001c      	movs	r4, r3
 800805c:	2c00      	cmp	r4, #0
 800805e:	d12f      	bne.n	80080c0 <_malloc_r+0x88>
 8008060:	0039      	movs	r1, r7
 8008062:	0028      	movs	r0, r5
 8008064:	f7ff ffc6 	bl	8007ff4 <sbrk_aligned>
 8008068:	0004      	movs	r4, r0
 800806a:	1c43      	adds	r3, r0, #1
 800806c:	d15f      	bne.n	800812e <_malloc_r+0xf6>
 800806e:	6834      	ldr	r4, [r6, #0]
 8008070:	9400      	str	r4, [sp, #0]
 8008072:	9b00      	ldr	r3, [sp, #0]
 8008074:	2b00      	cmp	r3, #0
 8008076:	d14a      	bne.n	800810e <_malloc_r+0xd6>
 8008078:	2c00      	cmp	r4, #0
 800807a:	d052      	beq.n	8008122 <_malloc_r+0xea>
 800807c:	6823      	ldr	r3, [r4, #0]
 800807e:	0028      	movs	r0, r5
 8008080:	18e3      	adds	r3, r4, r3
 8008082:	9900      	ldr	r1, [sp, #0]
 8008084:	9301      	str	r3, [sp, #4]
 8008086:	f000 fe25 	bl	8008cd4 <_sbrk_r>
 800808a:	9b01      	ldr	r3, [sp, #4]
 800808c:	4283      	cmp	r3, r0
 800808e:	d148      	bne.n	8008122 <_malloc_r+0xea>
 8008090:	6823      	ldr	r3, [r4, #0]
 8008092:	0028      	movs	r0, r5
 8008094:	1aff      	subs	r7, r7, r3
 8008096:	0039      	movs	r1, r7
 8008098:	f7ff ffac 	bl	8007ff4 <sbrk_aligned>
 800809c:	3001      	adds	r0, #1
 800809e:	d040      	beq.n	8008122 <_malloc_r+0xea>
 80080a0:	6823      	ldr	r3, [r4, #0]
 80080a2:	19db      	adds	r3, r3, r7
 80080a4:	6023      	str	r3, [r4, #0]
 80080a6:	6833      	ldr	r3, [r6, #0]
 80080a8:	685a      	ldr	r2, [r3, #4]
 80080aa:	2a00      	cmp	r2, #0
 80080ac:	d133      	bne.n	8008116 <_malloc_r+0xde>
 80080ae:	9b00      	ldr	r3, [sp, #0]
 80080b0:	6033      	str	r3, [r6, #0]
 80080b2:	e019      	b.n	80080e8 <_malloc_r+0xb0>
 80080b4:	2b00      	cmp	r3, #0
 80080b6:	dac9      	bge.n	800804c <_malloc_r+0x14>
 80080b8:	230c      	movs	r3, #12
 80080ba:	602b      	str	r3, [r5, #0]
 80080bc:	2000      	movs	r0, #0
 80080be:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 80080c0:	6821      	ldr	r1, [r4, #0]
 80080c2:	1bc9      	subs	r1, r1, r7
 80080c4:	d420      	bmi.n	8008108 <_malloc_r+0xd0>
 80080c6:	290b      	cmp	r1, #11
 80080c8:	d90a      	bls.n	80080e0 <_malloc_r+0xa8>
 80080ca:	19e2      	adds	r2, r4, r7
 80080cc:	6027      	str	r7, [r4, #0]
 80080ce:	42a3      	cmp	r3, r4
 80080d0:	d104      	bne.n	80080dc <_malloc_r+0xa4>
 80080d2:	6032      	str	r2, [r6, #0]
 80080d4:	6863      	ldr	r3, [r4, #4]
 80080d6:	6011      	str	r1, [r2, #0]
 80080d8:	6053      	str	r3, [r2, #4]
 80080da:	e005      	b.n	80080e8 <_malloc_r+0xb0>
 80080dc:	605a      	str	r2, [r3, #4]
 80080de:	e7f9      	b.n	80080d4 <_malloc_r+0x9c>
 80080e0:	6862      	ldr	r2, [r4, #4]
 80080e2:	42a3      	cmp	r3, r4
 80080e4:	d10e      	bne.n	8008104 <_malloc_r+0xcc>
 80080e6:	6032      	str	r2, [r6, #0]
 80080e8:	0028      	movs	r0, r5
 80080ea:	f000 f82d 	bl	8008148 <__malloc_unlock>
 80080ee:	0020      	movs	r0, r4
 80080f0:	2207      	movs	r2, #7
 80080f2:	300b      	adds	r0, #11
 80080f4:	1d23      	adds	r3, r4, #4
 80080f6:	4390      	bics	r0, r2
 80080f8:	1ac2      	subs	r2, r0, r3
 80080fa:	4298      	cmp	r0, r3
 80080fc:	d0df      	beq.n	80080be <_malloc_r+0x86>
 80080fe:	1a1b      	subs	r3, r3, r0
 8008100:	50a3      	str	r3, [r4, r2]
 8008102:	e7dc      	b.n	80080be <_malloc_r+0x86>
 8008104:	605a      	str	r2, [r3, #4]
 8008106:	e7ef      	b.n	80080e8 <_malloc_r+0xb0>
 8008108:	0023      	movs	r3, r4
 800810a:	6864      	ldr	r4, [r4, #4]
 800810c:	e7a6      	b.n	800805c <_malloc_r+0x24>
 800810e:	9c00      	ldr	r4, [sp, #0]
 8008110:	6863      	ldr	r3, [r4, #4]
 8008112:	9300      	str	r3, [sp, #0]
 8008114:	e7ad      	b.n	8008072 <_malloc_r+0x3a>
 8008116:	001a      	movs	r2, r3
 8008118:	685b      	ldr	r3, [r3, #4]
 800811a:	42a3      	cmp	r3, r4
 800811c:	d1fb      	bne.n	8008116 <_malloc_r+0xde>
 800811e:	2300      	movs	r3, #0
 8008120:	e7da      	b.n	80080d8 <_malloc_r+0xa0>
 8008122:	230c      	movs	r3, #12
 8008124:	0028      	movs	r0, r5
 8008126:	602b      	str	r3, [r5, #0]
 8008128:	f000 f80e 	bl	8008148 <__malloc_unlock>
 800812c:	e7c6      	b.n	80080bc <_malloc_r+0x84>
 800812e:	6007      	str	r7, [r0, #0]
 8008130:	e7da      	b.n	80080e8 <_malloc_r+0xb0>
 8008132:	46c0      	nop			@ (mov r8, r8)
 8008134:	20000990 	.word	0x20000990

08008138 <__malloc_lock>:
 8008138:	b510      	push	{r4, lr}
 800813a:	4802      	ldr	r0, [pc, #8]	@ (8008144 <__malloc_lock+0xc>)
 800813c:	f7ff f87b 	bl	8007236 <__retarget_lock_acquire_recursive>
 8008140:	bd10      	pop	{r4, pc}
 8008142:	46c0      	nop			@ (mov r8, r8)
 8008144:	20000988 	.word	0x20000988

08008148 <__malloc_unlock>:
 8008148:	b510      	push	{r4, lr}
 800814a:	4802      	ldr	r0, [pc, #8]	@ (8008154 <__malloc_unlock+0xc>)
 800814c:	f7ff f874 	bl	8007238 <__retarget_lock_release_recursive>
 8008150:	bd10      	pop	{r4, pc}
 8008152:	46c0      	nop			@ (mov r8, r8)
 8008154:	20000988 	.word	0x20000988

08008158 <_Balloc>:
 8008158:	b570      	push	{r4, r5, r6, lr}
 800815a:	69c5      	ldr	r5, [r0, #28]
 800815c:	0006      	movs	r6, r0
 800815e:	000c      	movs	r4, r1
 8008160:	2d00      	cmp	r5, #0
 8008162:	d10e      	bne.n	8008182 <_Balloc+0x2a>
 8008164:	2010      	movs	r0, #16
 8008166:	f7ff ff3b 	bl	8007fe0 <malloc>
 800816a:	1e02      	subs	r2, r0, #0
 800816c:	61f0      	str	r0, [r6, #28]
 800816e:	d104      	bne.n	800817a <_Balloc+0x22>
 8008170:	216b      	movs	r1, #107	@ 0x6b
 8008172:	4b19      	ldr	r3, [pc, #100]	@ (80081d8 <_Balloc+0x80>)
 8008174:	4819      	ldr	r0, [pc, #100]	@ (80081dc <_Balloc+0x84>)
 8008176:	f000 fdbf 	bl	8008cf8 <__assert_func>
 800817a:	6045      	str	r5, [r0, #4]
 800817c:	6085      	str	r5, [r0, #8]
 800817e:	6005      	str	r5, [r0, #0]
 8008180:	60c5      	str	r5, [r0, #12]
 8008182:	69f5      	ldr	r5, [r6, #28]
 8008184:	68eb      	ldr	r3, [r5, #12]
 8008186:	2b00      	cmp	r3, #0
 8008188:	d013      	beq.n	80081b2 <_Balloc+0x5a>
 800818a:	69f3      	ldr	r3, [r6, #28]
 800818c:	00a2      	lsls	r2, r4, #2
 800818e:	68db      	ldr	r3, [r3, #12]
 8008190:	189b      	adds	r3, r3, r2
 8008192:	6818      	ldr	r0, [r3, #0]
 8008194:	2800      	cmp	r0, #0
 8008196:	d118      	bne.n	80081ca <_Balloc+0x72>
 8008198:	2101      	movs	r1, #1
 800819a:	000d      	movs	r5, r1
 800819c:	40a5      	lsls	r5, r4
 800819e:	1d6a      	adds	r2, r5, #5
 80081a0:	0030      	movs	r0, r6
 80081a2:	0092      	lsls	r2, r2, #2
 80081a4:	f000 fdc6 	bl	8008d34 <_calloc_r>
 80081a8:	2800      	cmp	r0, #0
 80081aa:	d00c      	beq.n	80081c6 <_Balloc+0x6e>
 80081ac:	6044      	str	r4, [r0, #4]
 80081ae:	6085      	str	r5, [r0, #8]
 80081b0:	e00d      	b.n	80081ce <_Balloc+0x76>
 80081b2:	2221      	movs	r2, #33	@ 0x21
 80081b4:	2104      	movs	r1, #4
 80081b6:	0030      	movs	r0, r6
 80081b8:	f000 fdbc 	bl	8008d34 <_calloc_r>
 80081bc:	69f3      	ldr	r3, [r6, #28]
 80081be:	60e8      	str	r0, [r5, #12]
 80081c0:	68db      	ldr	r3, [r3, #12]
 80081c2:	2b00      	cmp	r3, #0
 80081c4:	d1e1      	bne.n	800818a <_Balloc+0x32>
 80081c6:	2000      	movs	r0, #0
 80081c8:	bd70      	pop	{r4, r5, r6, pc}
 80081ca:	6802      	ldr	r2, [r0, #0]
 80081cc:	601a      	str	r2, [r3, #0]
 80081ce:	2300      	movs	r3, #0
 80081d0:	6103      	str	r3, [r0, #16]
 80081d2:	60c3      	str	r3, [r0, #12]
 80081d4:	e7f8      	b.n	80081c8 <_Balloc+0x70>
 80081d6:	46c0      	nop			@ (mov r8, r8)
 80081d8:	0800959a 	.word	0x0800959a
 80081dc:	0800961a 	.word	0x0800961a

080081e0 <_Bfree>:
 80081e0:	b570      	push	{r4, r5, r6, lr}
 80081e2:	69c6      	ldr	r6, [r0, #28]
 80081e4:	0005      	movs	r5, r0
 80081e6:	000c      	movs	r4, r1
 80081e8:	2e00      	cmp	r6, #0
 80081ea:	d10e      	bne.n	800820a <_Bfree+0x2a>
 80081ec:	2010      	movs	r0, #16
 80081ee:	f7ff fef7 	bl	8007fe0 <malloc>
 80081f2:	1e02      	subs	r2, r0, #0
 80081f4:	61e8      	str	r0, [r5, #28]
 80081f6:	d104      	bne.n	8008202 <_Bfree+0x22>
 80081f8:	218f      	movs	r1, #143	@ 0x8f
 80081fa:	4b09      	ldr	r3, [pc, #36]	@ (8008220 <_Bfree+0x40>)
 80081fc:	4809      	ldr	r0, [pc, #36]	@ (8008224 <_Bfree+0x44>)
 80081fe:	f000 fd7b 	bl	8008cf8 <__assert_func>
 8008202:	6046      	str	r6, [r0, #4]
 8008204:	6086      	str	r6, [r0, #8]
 8008206:	6006      	str	r6, [r0, #0]
 8008208:	60c6      	str	r6, [r0, #12]
 800820a:	2c00      	cmp	r4, #0
 800820c:	d007      	beq.n	800821e <_Bfree+0x3e>
 800820e:	69eb      	ldr	r3, [r5, #28]
 8008210:	6862      	ldr	r2, [r4, #4]
 8008212:	68db      	ldr	r3, [r3, #12]
 8008214:	0092      	lsls	r2, r2, #2
 8008216:	189b      	adds	r3, r3, r2
 8008218:	681a      	ldr	r2, [r3, #0]
 800821a:	6022      	str	r2, [r4, #0]
 800821c:	601c      	str	r4, [r3, #0]
 800821e:	bd70      	pop	{r4, r5, r6, pc}
 8008220:	0800959a 	.word	0x0800959a
 8008224:	0800961a 	.word	0x0800961a

08008228 <__multadd>:
 8008228:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800822a:	000f      	movs	r7, r1
 800822c:	9001      	str	r0, [sp, #4]
 800822e:	000c      	movs	r4, r1
 8008230:	001e      	movs	r6, r3
 8008232:	2000      	movs	r0, #0
 8008234:	690d      	ldr	r5, [r1, #16]
 8008236:	3714      	adds	r7, #20
 8008238:	683b      	ldr	r3, [r7, #0]
 800823a:	3001      	adds	r0, #1
 800823c:	b299      	uxth	r1, r3
 800823e:	4351      	muls	r1, r2
 8008240:	0c1b      	lsrs	r3, r3, #16
 8008242:	4353      	muls	r3, r2
 8008244:	1989      	adds	r1, r1, r6
 8008246:	0c0e      	lsrs	r6, r1, #16
 8008248:	199b      	adds	r3, r3, r6
 800824a:	0c1e      	lsrs	r6, r3, #16
 800824c:	b289      	uxth	r1, r1
 800824e:	041b      	lsls	r3, r3, #16
 8008250:	185b      	adds	r3, r3, r1
 8008252:	c708      	stmia	r7!, {r3}
 8008254:	4285      	cmp	r5, r0
 8008256:	dcef      	bgt.n	8008238 <__multadd+0x10>
 8008258:	2e00      	cmp	r6, #0
 800825a:	d022      	beq.n	80082a2 <__multadd+0x7a>
 800825c:	68a3      	ldr	r3, [r4, #8]
 800825e:	42ab      	cmp	r3, r5
 8008260:	dc19      	bgt.n	8008296 <__multadd+0x6e>
 8008262:	6861      	ldr	r1, [r4, #4]
 8008264:	9801      	ldr	r0, [sp, #4]
 8008266:	3101      	adds	r1, #1
 8008268:	f7ff ff76 	bl	8008158 <_Balloc>
 800826c:	1e07      	subs	r7, r0, #0
 800826e:	d105      	bne.n	800827c <__multadd+0x54>
 8008270:	003a      	movs	r2, r7
 8008272:	21ba      	movs	r1, #186	@ 0xba
 8008274:	4b0c      	ldr	r3, [pc, #48]	@ (80082a8 <__multadd+0x80>)
 8008276:	480d      	ldr	r0, [pc, #52]	@ (80082ac <__multadd+0x84>)
 8008278:	f000 fd3e 	bl	8008cf8 <__assert_func>
 800827c:	0021      	movs	r1, r4
 800827e:	6922      	ldr	r2, [r4, #16]
 8008280:	310c      	adds	r1, #12
 8008282:	3202      	adds	r2, #2
 8008284:	0092      	lsls	r2, r2, #2
 8008286:	300c      	adds	r0, #12
 8008288:	f7fe ffe2 	bl	8007250 <memcpy>
 800828c:	0021      	movs	r1, r4
 800828e:	9801      	ldr	r0, [sp, #4]
 8008290:	f7ff ffa6 	bl	80081e0 <_Bfree>
 8008294:	003c      	movs	r4, r7
 8008296:	1d2b      	adds	r3, r5, #4
 8008298:	009b      	lsls	r3, r3, #2
 800829a:	18e3      	adds	r3, r4, r3
 800829c:	3501      	adds	r5, #1
 800829e:	605e      	str	r6, [r3, #4]
 80082a0:	6125      	str	r5, [r4, #16]
 80082a2:	0020      	movs	r0, r4
 80082a4:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 80082a6:	46c0      	nop			@ (mov r8, r8)
 80082a8:	08009609 	.word	0x08009609
 80082ac:	0800961a 	.word	0x0800961a

080082b0 <__hi0bits>:
 80082b0:	2280      	movs	r2, #128	@ 0x80
 80082b2:	0003      	movs	r3, r0
 80082b4:	0252      	lsls	r2, r2, #9
 80082b6:	2000      	movs	r0, #0
 80082b8:	4293      	cmp	r3, r2
 80082ba:	d201      	bcs.n	80082c0 <__hi0bits+0x10>
 80082bc:	041b      	lsls	r3, r3, #16
 80082be:	3010      	adds	r0, #16
 80082c0:	2280      	movs	r2, #128	@ 0x80
 80082c2:	0452      	lsls	r2, r2, #17
 80082c4:	4293      	cmp	r3, r2
 80082c6:	d201      	bcs.n	80082cc <__hi0bits+0x1c>
 80082c8:	3008      	adds	r0, #8
 80082ca:	021b      	lsls	r3, r3, #8
 80082cc:	2280      	movs	r2, #128	@ 0x80
 80082ce:	0552      	lsls	r2, r2, #21
 80082d0:	4293      	cmp	r3, r2
 80082d2:	d201      	bcs.n	80082d8 <__hi0bits+0x28>
 80082d4:	3004      	adds	r0, #4
 80082d6:	011b      	lsls	r3, r3, #4
 80082d8:	2280      	movs	r2, #128	@ 0x80
 80082da:	05d2      	lsls	r2, r2, #23
 80082dc:	4293      	cmp	r3, r2
 80082de:	d201      	bcs.n	80082e4 <__hi0bits+0x34>
 80082e0:	3002      	adds	r0, #2
 80082e2:	009b      	lsls	r3, r3, #2
 80082e4:	2b00      	cmp	r3, #0
 80082e6:	db03      	blt.n	80082f0 <__hi0bits+0x40>
 80082e8:	3001      	adds	r0, #1
 80082ea:	4213      	tst	r3, r2
 80082ec:	d100      	bne.n	80082f0 <__hi0bits+0x40>
 80082ee:	2020      	movs	r0, #32
 80082f0:	4770      	bx	lr

080082f2 <__lo0bits>:
 80082f2:	6803      	ldr	r3, [r0, #0]
 80082f4:	0001      	movs	r1, r0
 80082f6:	2207      	movs	r2, #7
 80082f8:	0018      	movs	r0, r3
 80082fa:	4010      	ands	r0, r2
 80082fc:	4213      	tst	r3, r2
 80082fe:	d00d      	beq.n	800831c <__lo0bits+0x2a>
 8008300:	3a06      	subs	r2, #6
 8008302:	2000      	movs	r0, #0
 8008304:	4213      	tst	r3, r2
 8008306:	d105      	bne.n	8008314 <__lo0bits+0x22>
 8008308:	3002      	adds	r0, #2
 800830a:	4203      	tst	r3, r0
 800830c:	d003      	beq.n	8008316 <__lo0bits+0x24>
 800830e:	40d3      	lsrs	r3, r2
 8008310:	0010      	movs	r0, r2
 8008312:	600b      	str	r3, [r1, #0]
 8008314:	4770      	bx	lr
 8008316:	089b      	lsrs	r3, r3, #2
 8008318:	600b      	str	r3, [r1, #0]
 800831a:	e7fb      	b.n	8008314 <__lo0bits+0x22>
 800831c:	b29a      	uxth	r2, r3
 800831e:	2a00      	cmp	r2, #0
 8008320:	d101      	bne.n	8008326 <__lo0bits+0x34>
 8008322:	2010      	movs	r0, #16
 8008324:	0c1b      	lsrs	r3, r3, #16
 8008326:	b2da      	uxtb	r2, r3
 8008328:	2a00      	cmp	r2, #0
 800832a:	d101      	bne.n	8008330 <__lo0bits+0x3e>
 800832c:	3008      	adds	r0, #8
 800832e:	0a1b      	lsrs	r3, r3, #8
 8008330:	071a      	lsls	r2, r3, #28
 8008332:	d101      	bne.n	8008338 <__lo0bits+0x46>
 8008334:	3004      	adds	r0, #4
 8008336:	091b      	lsrs	r3, r3, #4
 8008338:	079a      	lsls	r2, r3, #30
 800833a:	d101      	bne.n	8008340 <__lo0bits+0x4e>
 800833c:	3002      	adds	r0, #2
 800833e:	089b      	lsrs	r3, r3, #2
 8008340:	07da      	lsls	r2, r3, #31
 8008342:	d4e9      	bmi.n	8008318 <__lo0bits+0x26>
 8008344:	3001      	adds	r0, #1
 8008346:	085b      	lsrs	r3, r3, #1
 8008348:	d1e6      	bne.n	8008318 <__lo0bits+0x26>
 800834a:	2020      	movs	r0, #32
 800834c:	e7e2      	b.n	8008314 <__lo0bits+0x22>
	...

08008350 <__i2b>:
 8008350:	b510      	push	{r4, lr}
 8008352:	000c      	movs	r4, r1
 8008354:	2101      	movs	r1, #1
 8008356:	f7ff feff 	bl	8008158 <_Balloc>
 800835a:	2800      	cmp	r0, #0
 800835c:	d107      	bne.n	800836e <__i2b+0x1e>
 800835e:	2146      	movs	r1, #70	@ 0x46
 8008360:	4c05      	ldr	r4, [pc, #20]	@ (8008378 <__i2b+0x28>)
 8008362:	0002      	movs	r2, r0
 8008364:	4b05      	ldr	r3, [pc, #20]	@ (800837c <__i2b+0x2c>)
 8008366:	0020      	movs	r0, r4
 8008368:	31ff      	adds	r1, #255	@ 0xff
 800836a:	f000 fcc5 	bl	8008cf8 <__assert_func>
 800836e:	2301      	movs	r3, #1
 8008370:	6144      	str	r4, [r0, #20]
 8008372:	6103      	str	r3, [r0, #16]
 8008374:	bd10      	pop	{r4, pc}
 8008376:	46c0      	nop			@ (mov r8, r8)
 8008378:	0800961a 	.word	0x0800961a
 800837c:	08009609 	.word	0x08009609

08008380 <__multiply>:
 8008380:	b5f0      	push	{r4, r5, r6, r7, lr}
 8008382:	0014      	movs	r4, r2
 8008384:	690a      	ldr	r2, [r1, #16]
 8008386:	6923      	ldr	r3, [r4, #16]
 8008388:	000d      	movs	r5, r1
 800838a:	b089      	sub	sp, #36	@ 0x24
 800838c:	429a      	cmp	r2, r3
 800838e:	db02      	blt.n	8008396 <__multiply+0x16>
 8008390:	0023      	movs	r3, r4
 8008392:	000c      	movs	r4, r1
 8008394:	001d      	movs	r5, r3
 8008396:	6927      	ldr	r7, [r4, #16]
 8008398:	692e      	ldr	r6, [r5, #16]
 800839a:	6861      	ldr	r1, [r4, #4]
 800839c:	19bb      	adds	r3, r7, r6
 800839e:	9300      	str	r3, [sp, #0]
 80083a0:	68a3      	ldr	r3, [r4, #8]
 80083a2:	19ba      	adds	r2, r7, r6
 80083a4:	4293      	cmp	r3, r2
 80083a6:	da00      	bge.n	80083aa <__multiply+0x2a>
 80083a8:	3101      	adds	r1, #1
 80083aa:	f7ff fed5 	bl	8008158 <_Balloc>
 80083ae:	4684      	mov	ip, r0
 80083b0:	2800      	cmp	r0, #0
 80083b2:	d106      	bne.n	80083c2 <__multiply+0x42>
 80083b4:	21b1      	movs	r1, #177	@ 0xb1
 80083b6:	4662      	mov	r2, ip
 80083b8:	4b44      	ldr	r3, [pc, #272]	@ (80084cc <__multiply+0x14c>)
 80083ba:	4845      	ldr	r0, [pc, #276]	@ (80084d0 <__multiply+0x150>)
 80083bc:	0049      	lsls	r1, r1, #1
 80083be:	f000 fc9b 	bl	8008cf8 <__assert_func>
 80083c2:	0002      	movs	r2, r0
 80083c4:	19bb      	adds	r3, r7, r6
 80083c6:	3214      	adds	r2, #20
 80083c8:	009b      	lsls	r3, r3, #2
 80083ca:	18d3      	adds	r3, r2, r3
 80083cc:	9301      	str	r3, [sp, #4]
 80083ce:	2100      	movs	r1, #0
 80083d0:	0013      	movs	r3, r2
 80083d2:	9801      	ldr	r0, [sp, #4]
 80083d4:	4283      	cmp	r3, r0
 80083d6:	d328      	bcc.n	800842a <__multiply+0xaa>
 80083d8:	0023      	movs	r3, r4
 80083da:	00bf      	lsls	r7, r7, #2
 80083dc:	3314      	adds	r3, #20
 80083de:	9304      	str	r3, [sp, #16]
 80083e0:	3514      	adds	r5, #20
 80083e2:	19db      	adds	r3, r3, r7
 80083e4:	00b6      	lsls	r6, r6, #2
 80083e6:	9302      	str	r3, [sp, #8]
 80083e8:	19ab      	adds	r3, r5, r6
 80083ea:	9307      	str	r3, [sp, #28]
 80083ec:	2304      	movs	r3, #4
 80083ee:	9305      	str	r3, [sp, #20]
 80083f0:	0023      	movs	r3, r4
 80083f2:	9902      	ldr	r1, [sp, #8]
 80083f4:	3315      	adds	r3, #21
 80083f6:	4299      	cmp	r1, r3
 80083f8:	d305      	bcc.n	8008406 <__multiply+0x86>
 80083fa:	1b0c      	subs	r4, r1, r4
 80083fc:	3c15      	subs	r4, #21
 80083fe:	08a4      	lsrs	r4, r4, #2
 8008400:	3401      	adds	r4, #1
 8008402:	00a3      	lsls	r3, r4, #2
 8008404:	9305      	str	r3, [sp, #20]
 8008406:	9b07      	ldr	r3, [sp, #28]
 8008408:	429d      	cmp	r5, r3
 800840a:	d310      	bcc.n	800842e <__multiply+0xae>
 800840c:	9b00      	ldr	r3, [sp, #0]
 800840e:	2b00      	cmp	r3, #0
 8008410:	dd05      	ble.n	800841e <__multiply+0x9e>
 8008412:	9b01      	ldr	r3, [sp, #4]
 8008414:	3b04      	subs	r3, #4
 8008416:	9301      	str	r3, [sp, #4]
 8008418:	681b      	ldr	r3, [r3, #0]
 800841a:	2b00      	cmp	r3, #0
 800841c:	d052      	beq.n	80084c4 <__multiply+0x144>
 800841e:	4663      	mov	r3, ip
 8008420:	4660      	mov	r0, ip
 8008422:	9a00      	ldr	r2, [sp, #0]
 8008424:	611a      	str	r2, [r3, #16]
 8008426:	b009      	add	sp, #36	@ 0x24
 8008428:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800842a:	c302      	stmia	r3!, {r1}
 800842c:	e7d1      	b.n	80083d2 <__multiply+0x52>
 800842e:	682c      	ldr	r4, [r5, #0]
 8008430:	b2a4      	uxth	r4, r4
 8008432:	2c00      	cmp	r4, #0
 8008434:	d01f      	beq.n	8008476 <__multiply+0xf6>
 8008436:	2300      	movs	r3, #0
 8008438:	0017      	movs	r7, r2
 800843a:	9e04      	ldr	r6, [sp, #16]
 800843c:	9303      	str	r3, [sp, #12]
 800843e:	ce08      	ldmia	r6!, {r3}
 8008440:	6839      	ldr	r1, [r7, #0]
 8008442:	9306      	str	r3, [sp, #24]
 8008444:	466b      	mov	r3, sp
 8008446:	8b1b      	ldrh	r3, [r3, #24]
 8008448:	b288      	uxth	r0, r1
 800844a:	4363      	muls	r3, r4
 800844c:	181b      	adds	r3, r3, r0
 800844e:	9803      	ldr	r0, [sp, #12]
 8008450:	0c09      	lsrs	r1, r1, #16
 8008452:	181b      	adds	r3, r3, r0
 8008454:	9806      	ldr	r0, [sp, #24]
 8008456:	0c00      	lsrs	r0, r0, #16
 8008458:	4360      	muls	r0, r4
 800845a:	1840      	adds	r0, r0, r1
 800845c:	0c19      	lsrs	r1, r3, #16
 800845e:	1841      	adds	r1, r0, r1
 8008460:	0c08      	lsrs	r0, r1, #16
 8008462:	b29b      	uxth	r3, r3
 8008464:	0409      	lsls	r1, r1, #16
 8008466:	4319      	orrs	r1, r3
 8008468:	9b02      	ldr	r3, [sp, #8]
 800846a:	9003      	str	r0, [sp, #12]
 800846c:	c702      	stmia	r7!, {r1}
 800846e:	42b3      	cmp	r3, r6
 8008470:	d8e5      	bhi.n	800843e <__multiply+0xbe>
 8008472:	9b05      	ldr	r3, [sp, #20]
 8008474:	50d0      	str	r0, [r2, r3]
 8008476:	682c      	ldr	r4, [r5, #0]
 8008478:	0c24      	lsrs	r4, r4, #16
 800847a:	d020      	beq.n	80084be <__multiply+0x13e>
 800847c:	2100      	movs	r1, #0
 800847e:	0010      	movs	r0, r2
 8008480:	6813      	ldr	r3, [r2, #0]
 8008482:	9e04      	ldr	r6, [sp, #16]
 8008484:	9103      	str	r1, [sp, #12]
 8008486:	6831      	ldr	r1, [r6, #0]
 8008488:	6807      	ldr	r7, [r0, #0]
 800848a:	b289      	uxth	r1, r1
 800848c:	4361      	muls	r1, r4
 800848e:	0c3f      	lsrs	r7, r7, #16
 8008490:	19c9      	adds	r1, r1, r7
 8008492:	9f03      	ldr	r7, [sp, #12]
 8008494:	b29b      	uxth	r3, r3
 8008496:	19c9      	adds	r1, r1, r7
 8008498:	040f      	lsls	r7, r1, #16
 800849a:	431f      	orrs	r7, r3
 800849c:	6007      	str	r7, [r0, #0]
 800849e:	ce80      	ldmia	r6!, {r7}
 80084a0:	6843      	ldr	r3, [r0, #4]
 80084a2:	0c3f      	lsrs	r7, r7, #16
 80084a4:	4367      	muls	r7, r4
 80084a6:	b29b      	uxth	r3, r3
 80084a8:	0c09      	lsrs	r1, r1, #16
 80084aa:	18fb      	adds	r3, r7, r3
 80084ac:	185b      	adds	r3, r3, r1
 80084ae:	0c19      	lsrs	r1, r3, #16
 80084b0:	9103      	str	r1, [sp, #12]
 80084b2:	9902      	ldr	r1, [sp, #8]
 80084b4:	3004      	adds	r0, #4
 80084b6:	42b1      	cmp	r1, r6
 80084b8:	d8e5      	bhi.n	8008486 <__multiply+0x106>
 80084ba:	9905      	ldr	r1, [sp, #20]
 80084bc:	5053      	str	r3, [r2, r1]
 80084be:	3504      	adds	r5, #4
 80084c0:	3204      	adds	r2, #4
 80084c2:	e7a0      	b.n	8008406 <__multiply+0x86>
 80084c4:	9b00      	ldr	r3, [sp, #0]
 80084c6:	3b01      	subs	r3, #1
 80084c8:	9300      	str	r3, [sp, #0]
 80084ca:	e79f      	b.n	800840c <__multiply+0x8c>
 80084cc:	08009609 	.word	0x08009609
 80084d0:	0800961a 	.word	0x0800961a

080084d4 <__pow5mult>:
 80084d4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80084d6:	2303      	movs	r3, #3
 80084d8:	0015      	movs	r5, r2
 80084da:	0007      	movs	r7, r0
 80084dc:	000e      	movs	r6, r1
 80084de:	401a      	ands	r2, r3
 80084e0:	421d      	tst	r5, r3
 80084e2:	d008      	beq.n	80084f6 <__pow5mult+0x22>
 80084e4:	4925      	ldr	r1, [pc, #148]	@ (800857c <__pow5mult+0xa8>)
 80084e6:	3a01      	subs	r2, #1
 80084e8:	0092      	lsls	r2, r2, #2
 80084ea:	5852      	ldr	r2, [r2, r1]
 80084ec:	2300      	movs	r3, #0
 80084ee:	0031      	movs	r1, r6
 80084f0:	f7ff fe9a 	bl	8008228 <__multadd>
 80084f4:	0006      	movs	r6, r0
 80084f6:	10ad      	asrs	r5, r5, #2
 80084f8:	d03d      	beq.n	8008576 <__pow5mult+0xa2>
 80084fa:	69fc      	ldr	r4, [r7, #28]
 80084fc:	2c00      	cmp	r4, #0
 80084fe:	d10f      	bne.n	8008520 <__pow5mult+0x4c>
 8008500:	2010      	movs	r0, #16
 8008502:	f7ff fd6d 	bl	8007fe0 <malloc>
 8008506:	1e02      	subs	r2, r0, #0
 8008508:	61f8      	str	r0, [r7, #28]
 800850a:	d105      	bne.n	8008518 <__pow5mult+0x44>
 800850c:	21b4      	movs	r1, #180	@ 0xb4
 800850e:	4b1c      	ldr	r3, [pc, #112]	@ (8008580 <__pow5mult+0xac>)
 8008510:	481c      	ldr	r0, [pc, #112]	@ (8008584 <__pow5mult+0xb0>)
 8008512:	31ff      	adds	r1, #255	@ 0xff
 8008514:	f000 fbf0 	bl	8008cf8 <__assert_func>
 8008518:	6044      	str	r4, [r0, #4]
 800851a:	6084      	str	r4, [r0, #8]
 800851c:	6004      	str	r4, [r0, #0]
 800851e:	60c4      	str	r4, [r0, #12]
 8008520:	69fb      	ldr	r3, [r7, #28]
 8008522:	689c      	ldr	r4, [r3, #8]
 8008524:	9301      	str	r3, [sp, #4]
 8008526:	2c00      	cmp	r4, #0
 8008528:	d108      	bne.n	800853c <__pow5mult+0x68>
 800852a:	0038      	movs	r0, r7
 800852c:	4916      	ldr	r1, [pc, #88]	@ (8008588 <__pow5mult+0xb4>)
 800852e:	f7ff ff0f 	bl	8008350 <__i2b>
 8008532:	9b01      	ldr	r3, [sp, #4]
 8008534:	0004      	movs	r4, r0
 8008536:	6098      	str	r0, [r3, #8]
 8008538:	2300      	movs	r3, #0
 800853a:	6003      	str	r3, [r0, #0]
 800853c:	2301      	movs	r3, #1
 800853e:	421d      	tst	r5, r3
 8008540:	d00a      	beq.n	8008558 <__pow5mult+0x84>
 8008542:	0031      	movs	r1, r6
 8008544:	0022      	movs	r2, r4
 8008546:	0038      	movs	r0, r7
 8008548:	f7ff ff1a 	bl	8008380 <__multiply>
 800854c:	0031      	movs	r1, r6
 800854e:	9001      	str	r0, [sp, #4]
 8008550:	0038      	movs	r0, r7
 8008552:	f7ff fe45 	bl	80081e0 <_Bfree>
 8008556:	9e01      	ldr	r6, [sp, #4]
 8008558:	106d      	asrs	r5, r5, #1
 800855a:	d00c      	beq.n	8008576 <__pow5mult+0xa2>
 800855c:	6820      	ldr	r0, [r4, #0]
 800855e:	2800      	cmp	r0, #0
 8008560:	d107      	bne.n	8008572 <__pow5mult+0x9e>
 8008562:	0022      	movs	r2, r4
 8008564:	0021      	movs	r1, r4
 8008566:	0038      	movs	r0, r7
 8008568:	f7ff ff0a 	bl	8008380 <__multiply>
 800856c:	2300      	movs	r3, #0
 800856e:	6020      	str	r0, [r4, #0]
 8008570:	6003      	str	r3, [r0, #0]
 8008572:	0004      	movs	r4, r0
 8008574:	e7e2      	b.n	800853c <__pow5mult+0x68>
 8008576:	0030      	movs	r0, r6
 8008578:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 800857a:	46c0      	nop			@ (mov r8, r8)
 800857c:	0800bf30 	.word	0x0800bf30
 8008580:	0800959a 	.word	0x0800959a
 8008584:	0800961a 	.word	0x0800961a
 8008588:	00000271 	.word	0x00000271

0800858c <__lshift>:
 800858c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800858e:	000c      	movs	r4, r1
 8008590:	0016      	movs	r6, r2
 8008592:	6923      	ldr	r3, [r4, #16]
 8008594:	1157      	asrs	r7, r2, #5
 8008596:	b085      	sub	sp, #20
 8008598:	18fb      	adds	r3, r7, r3
 800859a:	9301      	str	r3, [sp, #4]
 800859c:	3301      	adds	r3, #1
 800859e:	9300      	str	r3, [sp, #0]
 80085a0:	6849      	ldr	r1, [r1, #4]
 80085a2:	68a3      	ldr	r3, [r4, #8]
 80085a4:	9002      	str	r0, [sp, #8]
 80085a6:	9a00      	ldr	r2, [sp, #0]
 80085a8:	4293      	cmp	r3, r2
 80085aa:	db10      	blt.n	80085ce <__lshift+0x42>
 80085ac:	9802      	ldr	r0, [sp, #8]
 80085ae:	f7ff fdd3 	bl	8008158 <_Balloc>
 80085b2:	2300      	movs	r3, #0
 80085b4:	0001      	movs	r1, r0
 80085b6:	0005      	movs	r5, r0
 80085b8:	001a      	movs	r2, r3
 80085ba:	3114      	adds	r1, #20
 80085bc:	4298      	cmp	r0, r3
 80085be:	d10c      	bne.n	80085da <__lshift+0x4e>
 80085c0:	21ef      	movs	r1, #239	@ 0xef
 80085c2:	002a      	movs	r2, r5
 80085c4:	4b25      	ldr	r3, [pc, #148]	@ (800865c <__lshift+0xd0>)
 80085c6:	4826      	ldr	r0, [pc, #152]	@ (8008660 <__lshift+0xd4>)
 80085c8:	0049      	lsls	r1, r1, #1
 80085ca:	f000 fb95 	bl	8008cf8 <__assert_func>
 80085ce:	3101      	adds	r1, #1
 80085d0:	005b      	lsls	r3, r3, #1
 80085d2:	e7e8      	b.n	80085a6 <__lshift+0x1a>
 80085d4:	0098      	lsls	r0, r3, #2
 80085d6:	500a      	str	r2, [r1, r0]
 80085d8:	3301      	adds	r3, #1
 80085da:	42bb      	cmp	r3, r7
 80085dc:	dbfa      	blt.n	80085d4 <__lshift+0x48>
 80085de:	43fb      	mvns	r3, r7
 80085e0:	17db      	asrs	r3, r3, #31
 80085e2:	401f      	ands	r7, r3
 80085e4:	00bf      	lsls	r7, r7, #2
 80085e6:	0023      	movs	r3, r4
 80085e8:	201f      	movs	r0, #31
 80085ea:	19c9      	adds	r1, r1, r7
 80085ec:	0037      	movs	r7, r6
 80085ee:	6922      	ldr	r2, [r4, #16]
 80085f0:	3314      	adds	r3, #20
 80085f2:	0092      	lsls	r2, r2, #2
 80085f4:	189a      	adds	r2, r3, r2
 80085f6:	4007      	ands	r7, r0
 80085f8:	4206      	tst	r6, r0
 80085fa:	d029      	beq.n	8008650 <__lshift+0xc4>
 80085fc:	3001      	adds	r0, #1
 80085fe:	1bc0      	subs	r0, r0, r7
 8008600:	9003      	str	r0, [sp, #12]
 8008602:	468c      	mov	ip, r1
 8008604:	2000      	movs	r0, #0
 8008606:	681e      	ldr	r6, [r3, #0]
 8008608:	40be      	lsls	r6, r7
 800860a:	4306      	orrs	r6, r0
 800860c:	4660      	mov	r0, ip
 800860e:	c040      	stmia	r0!, {r6}
 8008610:	4684      	mov	ip, r0
 8008612:	9e03      	ldr	r6, [sp, #12]
 8008614:	cb01      	ldmia	r3!, {r0}
 8008616:	40f0      	lsrs	r0, r6
 8008618:	429a      	cmp	r2, r3
 800861a:	d8f4      	bhi.n	8008606 <__lshift+0x7a>
 800861c:	0026      	movs	r6, r4
 800861e:	3615      	adds	r6, #21
 8008620:	2304      	movs	r3, #4
 8008622:	42b2      	cmp	r2, r6
 8008624:	d304      	bcc.n	8008630 <__lshift+0xa4>
 8008626:	1b13      	subs	r3, r2, r4
 8008628:	3b15      	subs	r3, #21
 800862a:	089b      	lsrs	r3, r3, #2
 800862c:	3301      	adds	r3, #1
 800862e:	009b      	lsls	r3, r3, #2
 8008630:	50c8      	str	r0, [r1, r3]
 8008632:	2800      	cmp	r0, #0
 8008634:	d002      	beq.n	800863c <__lshift+0xb0>
 8008636:	9b01      	ldr	r3, [sp, #4]
 8008638:	3302      	adds	r3, #2
 800863a:	9300      	str	r3, [sp, #0]
 800863c:	9b00      	ldr	r3, [sp, #0]
 800863e:	9802      	ldr	r0, [sp, #8]
 8008640:	3b01      	subs	r3, #1
 8008642:	0021      	movs	r1, r4
 8008644:	612b      	str	r3, [r5, #16]
 8008646:	f7ff fdcb 	bl	80081e0 <_Bfree>
 800864a:	0028      	movs	r0, r5
 800864c:	b005      	add	sp, #20
 800864e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8008650:	cb01      	ldmia	r3!, {r0}
 8008652:	c101      	stmia	r1!, {r0}
 8008654:	429a      	cmp	r2, r3
 8008656:	d8fb      	bhi.n	8008650 <__lshift+0xc4>
 8008658:	e7f0      	b.n	800863c <__lshift+0xb0>
 800865a:	46c0      	nop			@ (mov r8, r8)
 800865c:	08009609 	.word	0x08009609
 8008660:	0800961a 	.word	0x0800961a

08008664 <__mcmp>:
 8008664:	b530      	push	{r4, r5, lr}
 8008666:	690b      	ldr	r3, [r1, #16]
 8008668:	6904      	ldr	r4, [r0, #16]
 800866a:	0002      	movs	r2, r0
 800866c:	1ae0      	subs	r0, r4, r3
 800866e:	429c      	cmp	r4, r3
 8008670:	d10f      	bne.n	8008692 <__mcmp+0x2e>
 8008672:	3214      	adds	r2, #20
 8008674:	009b      	lsls	r3, r3, #2
 8008676:	3114      	adds	r1, #20
 8008678:	0014      	movs	r4, r2
 800867a:	18c9      	adds	r1, r1, r3
 800867c:	18d2      	adds	r2, r2, r3
 800867e:	3a04      	subs	r2, #4
 8008680:	3904      	subs	r1, #4
 8008682:	6815      	ldr	r5, [r2, #0]
 8008684:	680b      	ldr	r3, [r1, #0]
 8008686:	429d      	cmp	r5, r3
 8008688:	d004      	beq.n	8008694 <__mcmp+0x30>
 800868a:	2001      	movs	r0, #1
 800868c:	429d      	cmp	r5, r3
 800868e:	d200      	bcs.n	8008692 <__mcmp+0x2e>
 8008690:	3802      	subs	r0, #2
 8008692:	bd30      	pop	{r4, r5, pc}
 8008694:	4294      	cmp	r4, r2
 8008696:	d3f2      	bcc.n	800867e <__mcmp+0x1a>
 8008698:	e7fb      	b.n	8008692 <__mcmp+0x2e>
	...

0800869c <__mdiff>:
 800869c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800869e:	000c      	movs	r4, r1
 80086a0:	b087      	sub	sp, #28
 80086a2:	9000      	str	r0, [sp, #0]
 80086a4:	0011      	movs	r1, r2
 80086a6:	0020      	movs	r0, r4
 80086a8:	0017      	movs	r7, r2
 80086aa:	f7ff ffdb 	bl	8008664 <__mcmp>
 80086ae:	1e05      	subs	r5, r0, #0
 80086b0:	d110      	bne.n	80086d4 <__mdiff+0x38>
 80086b2:	0001      	movs	r1, r0
 80086b4:	9800      	ldr	r0, [sp, #0]
 80086b6:	f7ff fd4f 	bl	8008158 <_Balloc>
 80086ba:	1e02      	subs	r2, r0, #0
 80086bc:	d104      	bne.n	80086c8 <__mdiff+0x2c>
 80086be:	4b40      	ldr	r3, [pc, #256]	@ (80087c0 <__mdiff+0x124>)
 80086c0:	4840      	ldr	r0, [pc, #256]	@ (80087c4 <__mdiff+0x128>)
 80086c2:	4941      	ldr	r1, [pc, #260]	@ (80087c8 <__mdiff+0x12c>)
 80086c4:	f000 fb18 	bl	8008cf8 <__assert_func>
 80086c8:	2301      	movs	r3, #1
 80086ca:	6145      	str	r5, [r0, #20]
 80086cc:	6103      	str	r3, [r0, #16]
 80086ce:	0010      	movs	r0, r2
 80086d0:	b007      	add	sp, #28
 80086d2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80086d4:	2600      	movs	r6, #0
 80086d6:	42b0      	cmp	r0, r6
 80086d8:	da03      	bge.n	80086e2 <__mdiff+0x46>
 80086da:	0023      	movs	r3, r4
 80086dc:	003c      	movs	r4, r7
 80086de:	001f      	movs	r7, r3
 80086e0:	3601      	adds	r6, #1
 80086e2:	6861      	ldr	r1, [r4, #4]
 80086e4:	9800      	ldr	r0, [sp, #0]
 80086e6:	f7ff fd37 	bl	8008158 <_Balloc>
 80086ea:	1e02      	subs	r2, r0, #0
 80086ec:	d103      	bne.n	80086f6 <__mdiff+0x5a>
 80086ee:	4b34      	ldr	r3, [pc, #208]	@ (80087c0 <__mdiff+0x124>)
 80086f0:	4834      	ldr	r0, [pc, #208]	@ (80087c4 <__mdiff+0x128>)
 80086f2:	4936      	ldr	r1, [pc, #216]	@ (80087cc <__mdiff+0x130>)
 80086f4:	e7e6      	b.n	80086c4 <__mdiff+0x28>
 80086f6:	6923      	ldr	r3, [r4, #16]
 80086f8:	3414      	adds	r4, #20
 80086fa:	9300      	str	r3, [sp, #0]
 80086fc:	009b      	lsls	r3, r3, #2
 80086fe:	18e3      	adds	r3, r4, r3
 8008700:	0021      	movs	r1, r4
 8008702:	9401      	str	r4, [sp, #4]
 8008704:	003c      	movs	r4, r7
 8008706:	9302      	str	r3, [sp, #8]
 8008708:	693b      	ldr	r3, [r7, #16]
 800870a:	3414      	adds	r4, #20
 800870c:	009b      	lsls	r3, r3, #2
 800870e:	18e3      	adds	r3, r4, r3
 8008710:	9303      	str	r3, [sp, #12]
 8008712:	0003      	movs	r3, r0
 8008714:	60c6      	str	r6, [r0, #12]
 8008716:	468c      	mov	ip, r1
 8008718:	2000      	movs	r0, #0
 800871a:	3314      	adds	r3, #20
 800871c:	9304      	str	r3, [sp, #16]
 800871e:	9305      	str	r3, [sp, #20]
 8008720:	4663      	mov	r3, ip
 8008722:	cb20      	ldmia	r3!, {r5}
 8008724:	b2a9      	uxth	r1, r5
 8008726:	000e      	movs	r6, r1
 8008728:	469c      	mov	ip, r3
 800872a:	cc08      	ldmia	r4!, {r3}
 800872c:	0c2d      	lsrs	r5, r5, #16
 800872e:	b299      	uxth	r1, r3
 8008730:	1a71      	subs	r1, r6, r1
 8008732:	1809      	adds	r1, r1, r0
 8008734:	0c1b      	lsrs	r3, r3, #16
 8008736:	1408      	asrs	r0, r1, #16
 8008738:	1aeb      	subs	r3, r5, r3
 800873a:	181b      	adds	r3, r3, r0
 800873c:	1418      	asrs	r0, r3, #16
 800873e:	b289      	uxth	r1, r1
 8008740:	041b      	lsls	r3, r3, #16
 8008742:	4319      	orrs	r1, r3
 8008744:	9b05      	ldr	r3, [sp, #20]
 8008746:	c302      	stmia	r3!, {r1}
 8008748:	9305      	str	r3, [sp, #20]
 800874a:	9b03      	ldr	r3, [sp, #12]
 800874c:	42a3      	cmp	r3, r4
 800874e:	d8e7      	bhi.n	8008720 <__mdiff+0x84>
 8008750:	0039      	movs	r1, r7
 8008752:	9c03      	ldr	r4, [sp, #12]
 8008754:	3115      	adds	r1, #21
 8008756:	2304      	movs	r3, #4
 8008758:	428c      	cmp	r4, r1
 800875a:	d304      	bcc.n	8008766 <__mdiff+0xca>
 800875c:	1be3      	subs	r3, r4, r7
 800875e:	3b15      	subs	r3, #21
 8008760:	089b      	lsrs	r3, r3, #2
 8008762:	3301      	adds	r3, #1
 8008764:	009b      	lsls	r3, r3, #2
 8008766:	9901      	ldr	r1, [sp, #4]
 8008768:	18cd      	adds	r5, r1, r3
 800876a:	9904      	ldr	r1, [sp, #16]
 800876c:	002e      	movs	r6, r5
 800876e:	18cb      	adds	r3, r1, r3
 8008770:	001f      	movs	r7, r3
 8008772:	9902      	ldr	r1, [sp, #8]
 8008774:	428e      	cmp	r6, r1
 8008776:	d311      	bcc.n	800879c <__mdiff+0x100>
 8008778:	9c02      	ldr	r4, [sp, #8]
 800877a:	1ee9      	subs	r1, r5, #3
 800877c:	2000      	movs	r0, #0
 800877e:	428c      	cmp	r4, r1
 8008780:	d304      	bcc.n	800878c <__mdiff+0xf0>
 8008782:	0021      	movs	r1, r4
 8008784:	3103      	adds	r1, #3
 8008786:	1b49      	subs	r1, r1, r5
 8008788:	0889      	lsrs	r1, r1, #2
 800878a:	0088      	lsls	r0, r1, #2
 800878c:	181b      	adds	r3, r3, r0
 800878e:	3b04      	subs	r3, #4
 8008790:	6819      	ldr	r1, [r3, #0]
 8008792:	2900      	cmp	r1, #0
 8008794:	d010      	beq.n	80087b8 <__mdiff+0x11c>
 8008796:	9b00      	ldr	r3, [sp, #0]
 8008798:	6113      	str	r3, [r2, #16]
 800879a:	e798      	b.n	80086ce <__mdiff+0x32>
 800879c:	4684      	mov	ip, r0
 800879e:	ce02      	ldmia	r6!, {r1}
 80087a0:	b288      	uxth	r0, r1
 80087a2:	4460      	add	r0, ip
 80087a4:	1400      	asrs	r0, r0, #16
 80087a6:	0c0c      	lsrs	r4, r1, #16
 80087a8:	1904      	adds	r4, r0, r4
 80087aa:	4461      	add	r1, ip
 80087ac:	1420      	asrs	r0, r4, #16
 80087ae:	b289      	uxth	r1, r1
 80087b0:	0424      	lsls	r4, r4, #16
 80087b2:	4321      	orrs	r1, r4
 80087b4:	c702      	stmia	r7!, {r1}
 80087b6:	e7dc      	b.n	8008772 <__mdiff+0xd6>
 80087b8:	9900      	ldr	r1, [sp, #0]
 80087ba:	3901      	subs	r1, #1
 80087bc:	9100      	str	r1, [sp, #0]
 80087be:	e7e6      	b.n	800878e <__mdiff+0xf2>
 80087c0:	08009609 	.word	0x08009609
 80087c4:	0800961a 	.word	0x0800961a
 80087c8:	00000237 	.word	0x00000237
 80087cc:	00000245 	.word	0x00000245

080087d0 <__d2b>:
 80087d0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80087d2:	2101      	movs	r1, #1
 80087d4:	0016      	movs	r6, r2
 80087d6:	001f      	movs	r7, r3
 80087d8:	f7ff fcbe 	bl	8008158 <_Balloc>
 80087dc:	1e04      	subs	r4, r0, #0
 80087de:	d105      	bne.n	80087ec <__d2b+0x1c>
 80087e0:	0022      	movs	r2, r4
 80087e2:	4b25      	ldr	r3, [pc, #148]	@ (8008878 <__d2b+0xa8>)
 80087e4:	4825      	ldr	r0, [pc, #148]	@ (800887c <__d2b+0xac>)
 80087e6:	4926      	ldr	r1, [pc, #152]	@ (8008880 <__d2b+0xb0>)
 80087e8:	f000 fa86 	bl	8008cf8 <__assert_func>
 80087ec:	033b      	lsls	r3, r7, #12
 80087ee:	007d      	lsls	r5, r7, #1
 80087f0:	0b1b      	lsrs	r3, r3, #12
 80087f2:	0d6d      	lsrs	r5, r5, #21
 80087f4:	d002      	beq.n	80087fc <__d2b+0x2c>
 80087f6:	2280      	movs	r2, #128	@ 0x80
 80087f8:	0352      	lsls	r2, r2, #13
 80087fa:	4313      	orrs	r3, r2
 80087fc:	9301      	str	r3, [sp, #4]
 80087fe:	2e00      	cmp	r6, #0
 8008800:	d025      	beq.n	800884e <__d2b+0x7e>
 8008802:	4668      	mov	r0, sp
 8008804:	9600      	str	r6, [sp, #0]
 8008806:	f7ff fd74 	bl	80082f2 <__lo0bits>
 800880a:	9b01      	ldr	r3, [sp, #4]
 800880c:	9900      	ldr	r1, [sp, #0]
 800880e:	2800      	cmp	r0, #0
 8008810:	d01b      	beq.n	800884a <__d2b+0x7a>
 8008812:	2220      	movs	r2, #32
 8008814:	001e      	movs	r6, r3
 8008816:	1a12      	subs	r2, r2, r0
 8008818:	4096      	lsls	r6, r2
 800881a:	0032      	movs	r2, r6
 800881c:	40c3      	lsrs	r3, r0
 800881e:	430a      	orrs	r2, r1
 8008820:	6162      	str	r2, [r4, #20]
 8008822:	9301      	str	r3, [sp, #4]
 8008824:	9e01      	ldr	r6, [sp, #4]
 8008826:	61a6      	str	r6, [r4, #24]
 8008828:	1e73      	subs	r3, r6, #1
 800882a:	419e      	sbcs	r6, r3
 800882c:	3601      	adds	r6, #1
 800882e:	6126      	str	r6, [r4, #16]
 8008830:	2d00      	cmp	r5, #0
 8008832:	d014      	beq.n	800885e <__d2b+0x8e>
 8008834:	2635      	movs	r6, #53	@ 0x35
 8008836:	4b13      	ldr	r3, [pc, #76]	@ (8008884 <__d2b+0xb4>)
 8008838:	18ed      	adds	r5, r5, r3
 800883a:	9b08      	ldr	r3, [sp, #32]
 800883c:	182d      	adds	r5, r5, r0
 800883e:	601d      	str	r5, [r3, #0]
 8008840:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8008842:	1a36      	subs	r6, r6, r0
 8008844:	601e      	str	r6, [r3, #0]
 8008846:	0020      	movs	r0, r4
 8008848:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 800884a:	6161      	str	r1, [r4, #20]
 800884c:	e7ea      	b.n	8008824 <__d2b+0x54>
 800884e:	a801      	add	r0, sp, #4
 8008850:	f7ff fd4f 	bl	80082f2 <__lo0bits>
 8008854:	9b01      	ldr	r3, [sp, #4]
 8008856:	2601      	movs	r6, #1
 8008858:	6163      	str	r3, [r4, #20]
 800885a:	3020      	adds	r0, #32
 800885c:	e7e7      	b.n	800882e <__d2b+0x5e>
 800885e:	4b0a      	ldr	r3, [pc, #40]	@ (8008888 <__d2b+0xb8>)
 8008860:	18c0      	adds	r0, r0, r3
 8008862:	9b08      	ldr	r3, [sp, #32]
 8008864:	6018      	str	r0, [r3, #0]
 8008866:	4b09      	ldr	r3, [pc, #36]	@ (800888c <__d2b+0xbc>)
 8008868:	18f3      	adds	r3, r6, r3
 800886a:	009b      	lsls	r3, r3, #2
 800886c:	18e3      	adds	r3, r4, r3
 800886e:	6958      	ldr	r0, [r3, #20]
 8008870:	f7ff fd1e 	bl	80082b0 <__hi0bits>
 8008874:	0176      	lsls	r6, r6, #5
 8008876:	e7e3      	b.n	8008840 <__d2b+0x70>
 8008878:	08009609 	.word	0x08009609
 800887c:	0800961a 	.word	0x0800961a
 8008880:	0000030f 	.word	0x0000030f
 8008884:	fffffbcd 	.word	0xfffffbcd
 8008888:	fffffbce 	.word	0xfffffbce
 800888c:	3fffffff 	.word	0x3fffffff

08008890 <__ssputs_r>:
 8008890:	b5f0      	push	{r4, r5, r6, r7, lr}
 8008892:	688e      	ldr	r6, [r1, #8]
 8008894:	b085      	sub	sp, #20
 8008896:	001f      	movs	r7, r3
 8008898:	000c      	movs	r4, r1
 800889a:	680b      	ldr	r3, [r1, #0]
 800889c:	9002      	str	r0, [sp, #8]
 800889e:	9203      	str	r2, [sp, #12]
 80088a0:	42be      	cmp	r6, r7
 80088a2:	d830      	bhi.n	8008906 <__ssputs_r+0x76>
 80088a4:	210c      	movs	r1, #12
 80088a6:	5e62      	ldrsh	r2, [r4, r1]
 80088a8:	2190      	movs	r1, #144	@ 0x90
 80088aa:	00c9      	lsls	r1, r1, #3
 80088ac:	420a      	tst	r2, r1
 80088ae:	d028      	beq.n	8008902 <__ssputs_r+0x72>
 80088b0:	2003      	movs	r0, #3
 80088b2:	6921      	ldr	r1, [r4, #16]
 80088b4:	1a5b      	subs	r3, r3, r1
 80088b6:	9301      	str	r3, [sp, #4]
 80088b8:	6963      	ldr	r3, [r4, #20]
 80088ba:	4343      	muls	r3, r0
 80088bc:	9801      	ldr	r0, [sp, #4]
 80088be:	0fdd      	lsrs	r5, r3, #31
 80088c0:	18ed      	adds	r5, r5, r3
 80088c2:	1c7b      	adds	r3, r7, #1
 80088c4:	181b      	adds	r3, r3, r0
 80088c6:	106d      	asrs	r5, r5, #1
 80088c8:	42ab      	cmp	r3, r5
 80088ca:	d900      	bls.n	80088ce <__ssputs_r+0x3e>
 80088cc:	001d      	movs	r5, r3
 80088ce:	0552      	lsls	r2, r2, #21
 80088d0:	d528      	bpl.n	8008924 <__ssputs_r+0x94>
 80088d2:	0029      	movs	r1, r5
 80088d4:	9802      	ldr	r0, [sp, #8]
 80088d6:	f7ff fbaf 	bl	8008038 <_malloc_r>
 80088da:	1e06      	subs	r6, r0, #0
 80088dc:	d02c      	beq.n	8008938 <__ssputs_r+0xa8>
 80088de:	9a01      	ldr	r2, [sp, #4]
 80088e0:	6921      	ldr	r1, [r4, #16]
 80088e2:	f7fe fcb5 	bl	8007250 <memcpy>
 80088e6:	89a2      	ldrh	r2, [r4, #12]
 80088e8:	4b18      	ldr	r3, [pc, #96]	@ (800894c <__ssputs_r+0xbc>)
 80088ea:	401a      	ands	r2, r3
 80088ec:	2380      	movs	r3, #128	@ 0x80
 80088ee:	4313      	orrs	r3, r2
 80088f0:	81a3      	strh	r3, [r4, #12]
 80088f2:	9b01      	ldr	r3, [sp, #4]
 80088f4:	6126      	str	r6, [r4, #16]
 80088f6:	18f6      	adds	r6, r6, r3
 80088f8:	6026      	str	r6, [r4, #0]
 80088fa:	003e      	movs	r6, r7
 80088fc:	6165      	str	r5, [r4, #20]
 80088fe:	1aed      	subs	r5, r5, r3
 8008900:	60a5      	str	r5, [r4, #8]
 8008902:	42be      	cmp	r6, r7
 8008904:	d900      	bls.n	8008908 <__ssputs_r+0x78>
 8008906:	003e      	movs	r6, r7
 8008908:	0032      	movs	r2, r6
 800890a:	9903      	ldr	r1, [sp, #12]
 800890c:	6820      	ldr	r0, [r4, #0]
 800890e:	f000 f9ce 	bl	8008cae <memmove>
 8008912:	2000      	movs	r0, #0
 8008914:	68a3      	ldr	r3, [r4, #8]
 8008916:	1b9b      	subs	r3, r3, r6
 8008918:	60a3      	str	r3, [r4, #8]
 800891a:	6823      	ldr	r3, [r4, #0]
 800891c:	199b      	adds	r3, r3, r6
 800891e:	6023      	str	r3, [r4, #0]
 8008920:	b005      	add	sp, #20
 8008922:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8008924:	002a      	movs	r2, r5
 8008926:	9802      	ldr	r0, [sp, #8]
 8008928:	f000 fa43 	bl	8008db2 <_realloc_r>
 800892c:	1e06      	subs	r6, r0, #0
 800892e:	d1e0      	bne.n	80088f2 <__ssputs_r+0x62>
 8008930:	6921      	ldr	r1, [r4, #16]
 8008932:	9802      	ldr	r0, [sp, #8]
 8008934:	f7ff fb0a 	bl	8007f4c <_free_r>
 8008938:	230c      	movs	r3, #12
 800893a:	2001      	movs	r0, #1
 800893c:	9a02      	ldr	r2, [sp, #8]
 800893e:	4240      	negs	r0, r0
 8008940:	6013      	str	r3, [r2, #0]
 8008942:	89a2      	ldrh	r2, [r4, #12]
 8008944:	3334      	adds	r3, #52	@ 0x34
 8008946:	4313      	orrs	r3, r2
 8008948:	81a3      	strh	r3, [r4, #12]
 800894a:	e7e9      	b.n	8008920 <__ssputs_r+0x90>
 800894c:	fffffb7f 	.word	0xfffffb7f

08008950 <_svfiprintf_r>:
 8008950:	b5f0      	push	{r4, r5, r6, r7, lr}
 8008952:	b0a1      	sub	sp, #132	@ 0x84
 8008954:	9003      	str	r0, [sp, #12]
 8008956:	001d      	movs	r5, r3
 8008958:	898b      	ldrh	r3, [r1, #12]
 800895a:	000f      	movs	r7, r1
 800895c:	0016      	movs	r6, r2
 800895e:	061b      	lsls	r3, r3, #24
 8008960:	d511      	bpl.n	8008986 <_svfiprintf_r+0x36>
 8008962:	690b      	ldr	r3, [r1, #16]
 8008964:	2b00      	cmp	r3, #0
 8008966:	d10e      	bne.n	8008986 <_svfiprintf_r+0x36>
 8008968:	2140      	movs	r1, #64	@ 0x40
 800896a:	f7ff fb65 	bl	8008038 <_malloc_r>
 800896e:	6038      	str	r0, [r7, #0]
 8008970:	6138      	str	r0, [r7, #16]
 8008972:	2800      	cmp	r0, #0
 8008974:	d105      	bne.n	8008982 <_svfiprintf_r+0x32>
 8008976:	230c      	movs	r3, #12
 8008978:	9a03      	ldr	r2, [sp, #12]
 800897a:	6013      	str	r3, [r2, #0]
 800897c:	2001      	movs	r0, #1
 800897e:	4240      	negs	r0, r0
 8008980:	e0cf      	b.n	8008b22 <_svfiprintf_r+0x1d2>
 8008982:	2340      	movs	r3, #64	@ 0x40
 8008984:	617b      	str	r3, [r7, #20]
 8008986:	2300      	movs	r3, #0
 8008988:	ac08      	add	r4, sp, #32
 800898a:	6163      	str	r3, [r4, #20]
 800898c:	3320      	adds	r3, #32
 800898e:	7663      	strb	r3, [r4, #25]
 8008990:	3310      	adds	r3, #16
 8008992:	76a3      	strb	r3, [r4, #26]
 8008994:	9507      	str	r5, [sp, #28]
 8008996:	0035      	movs	r5, r6
 8008998:	782b      	ldrb	r3, [r5, #0]
 800899a:	2b00      	cmp	r3, #0
 800899c:	d001      	beq.n	80089a2 <_svfiprintf_r+0x52>
 800899e:	2b25      	cmp	r3, #37	@ 0x25
 80089a0:	d148      	bne.n	8008a34 <_svfiprintf_r+0xe4>
 80089a2:	1bab      	subs	r3, r5, r6
 80089a4:	9305      	str	r3, [sp, #20]
 80089a6:	42b5      	cmp	r5, r6
 80089a8:	d00b      	beq.n	80089c2 <_svfiprintf_r+0x72>
 80089aa:	0032      	movs	r2, r6
 80089ac:	0039      	movs	r1, r7
 80089ae:	9803      	ldr	r0, [sp, #12]
 80089b0:	f7ff ff6e 	bl	8008890 <__ssputs_r>
 80089b4:	3001      	adds	r0, #1
 80089b6:	d100      	bne.n	80089ba <_svfiprintf_r+0x6a>
 80089b8:	e0ae      	b.n	8008b18 <_svfiprintf_r+0x1c8>
 80089ba:	6963      	ldr	r3, [r4, #20]
 80089bc:	9a05      	ldr	r2, [sp, #20]
 80089be:	189b      	adds	r3, r3, r2
 80089c0:	6163      	str	r3, [r4, #20]
 80089c2:	782b      	ldrb	r3, [r5, #0]
 80089c4:	2b00      	cmp	r3, #0
 80089c6:	d100      	bne.n	80089ca <_svfiprintf_r+0x7a>
 80089c8:	e0a6      	b.n	8008b18 <_svfiprintf_r+0x1c8>
 80089ca:	2201      	movs	r2, #1
 80089cc:	2300      	movs	r3, #0
 80089ce:	4252      	negs	r2, r2
 80089d0:	6062      	str	r2, [r4, #4]
 80089d2:	a904      	add	r1, sp, #16
 80089d4:	3254      	adds	r2, #84	@ 0x54
 80089d6:	1852      	adds	r2, r2, r1
 80089d8:	1c6e      	adds	r6, r5, #1
 80089da:	6023      	str	r3, [r4, #0]
 80089dc:	60e3      	str	r3, [r4, #12]
 80089de:	60a3      	str	r3, [r4, #8]
 80089e0:	7013      	strb	r3, [r2, #0]
 80089e2:	65a3      	str	r3, [r4, #88]	@ 0x58
 80089e4:	4b54      	ldr	r3, [pc, #336]	@ (8008b38 <_svfiprintf_r+0x1e8>)
 80089e6:	2205      	movs	r2, #5
 80089e8:	0018      	movs	r0, r3
 80089ea:	7831      	ldrb	r1, [r6, #0]
 80089ec:	9305      	str	r3, [sp, #20]
 80089ee:	f7fe fc24 	bl	800723a <memchr>
 80089f2:	1c75      	adds	r5, r6, #1
 80089f4:	2800      	cmp	r0, #0
 80089f6:	d11f      	bne.n	8008a38 <_svfiprintf_r+0xe8>
 80089f8:	6822      	ldr	r2, [r4, #0]
 80089fa:	06d3      	lsls	r3, r2, #27
 80089fc:	d504      	bpl.n	8008a08 <_svfiprintf_r+0xb8>
 80089fe:	2353      	movs	r3, #83	@ 0x53
 8008a00:	a904      	add	r1, sp, #16
 8008a02:	185b      	adds	r3, r3, r1
 8008a04:	2120      	movs	r1, #32
 8008a06:	7019      	strb	r1, [r3, #0]
 8008a08:	0713      	lsls	r3, r2, #28
 8008a0a:	d504      	bpl.n	8008a16 <_svfiprintf_r+0xc6>
 8008a0c:	2353      	movs	r3, #83	@ 0x53
 8008a0e:	a904      	add	r1, sp, #16
 8008a10:	185b      	adds	r3, r3, r1
 8008a12:	212b      	movs	r1, #43	@ 0x2b
 8008a14:	7019      	strb	r1, [r3, #0]
 8008a16:	7833      	ldrb	r3, [r6, #0]
 8008a18:	2b2a      	cmp	r3, #42	@ 0x2a
 8008a1a:	d016      	beq.n	8008a4a <_svfiprintf_r+0xfa>
 8008a1c:	0035      	movs	r5, r6
 8008a1e:	2100      	movs	r1, #0
 8008a20:	200a      	movs	r0, #10
 8008a22:	68e3      	ldr	r3, [r4, #12]
 8008a24:	782a      	ldrb	r2, [r5, #0]
 8008a26:	1c6e      	adds	r6, r5, #1
 8008a28:	3a30      	subs	r2, #48	@ 0x30
 8008a2a:	2a09      	cmp	r2, #9
 8008a2c:	d950      	bls.n	8008ad0 <_svfiprintf_r+0x180>
 8008a2e:	2900      	cmp	r1, #0
 8008a30:	d111      	bne.n	8008a56 <_svfiprintf_r+0x106>
 8008a32:	e017      	b.n	8008a64 <_svfiprintf_r+0x114>
 8008a34:	3501      	adds	r5, #1
 8008a36:	e7af      	b.n	8008998 <_svfiprintf_r+0x48>
 8008a38:	9b05      	ldr	r3, [sp, #20]
 8008a3a:	6822      	ldr	r2, [r4, #0]
 8008a3c:	1ac0      	subs	r0, r0, r3
 8008a3e:	2301      	movs	r3, #1
 8008a40:	4083      	lsls	r3, r0
 8008a42:	4313      	orrs	r3, r2
 8008a44:	002e      	movs	r6, r5
 8008a46:	6023      	str	r3, [r4, #0]
 8008a48:	e7cc      	b.n	80089e4 <_svfiprintf_r+0x94>
 8008a4a:	9b07      	ldr	r3, [sp, #28]
 8008a4c:	1d19      	adds	r1, r3, #4
 8008a4e:	681b      	ldr	r3, [r3, #0]
 8008a50:	9107      	str	r1, [sp, #28]
 8008a52:	2b00      	cmp	r3, #0
 8008a54:	db01      	blt.n	8008a5a <_svfiprintf_r+0x10a>
 8008a56:	930b      	str	r3, [sp, #44]	@ 0x2c
 8008a58:	e004      	b.n	8008a64 <_svfiprintf_r+0x114>
 8008a5a:	425b      	negs	r3, r3
 8008a5c:	60e3      	str	r3, [r4, #12]
 8008a5e:	2302      	movs	r3, #2
 8008a60:	4313      	orrs	r3, r2
 8008a62:	6023      	str	r3, [r4, #0]
 8008a64:	782b      	ldrb	r3, [r5, #0]
 8008a66:	2b2e      	cmp	r3, #46	@ 0x2e
 8008a68:	d10c      	bne.n	8008a84 <_svfiprintf_r+0x134>
 8008a6a:	786b      	ldrb	r3, [r5, #1]
 8008a6c:	2b2a      	cmp	r3, #42	@ 0x2a
 8008a6e:	d134      	bne.n	8008ada <_svfiprintf_r+0x18a>
 8008a70:	9b07      	ldr	r3, [sp, #28]
 8008a72:	3502      	adds	r5, #2
 8008a74:	1d1a      	adds	r2, r3, #4
 8008a76:	681b      	ldr	r3, [r3, #0]
 8008a78:	9207      	str	r2, [sp, #28]
 8008a7a:	2b00      	cmp	r3, #0
 8008a7c:	da01      	bge.n	8008a82 <_svfiprintf_r+0x132>
 8008a7e:	2301      	movs	r3, #1
 8008a80:	425b      	negs	r3, r3
 8008a82:	9309      	str	r3, [sp, #36]	@ 0x24
 8008a84:	4e2d      	ldr	r6, [pc, #180]	@ (8008b3c <_svfiprintf_r+0x1ec>)
 8008a86:	2203      	movs	r2, #3
 8008a88:	0030      	movs	r0, r6
 8008a8a:	7829      	ldrb	r1, [r5, #0]
 8008a8c:	f7fe fbd5 	bl	800723a <memchr>
 8008a90:	2800      	cmp	r0, #0
 8008a92:	d006      	beq.n	8008aa2 <_svfiprintf_r+0x152>
 8008a94:	2340      	movs	r3, #64	@ 0x40
 8008a96:	1b80      	subs	r0, r0, r6
 8008a98:	4083      	lsls	r3, r0
 8008a9a:	6822      	ldr	r2, [r4, #0]
 8008a9c:	3501      	adds	r5, #1
 8008a9e:	4313      	orrs	r3, r2
 8008aa0:	6023      	str	r3, [r4, #0]
 8008aa2:	7829      	ldrb	r1, [r5, #0]
 8008aa4:	2206      	movs	r2, #6
 8008aa6:	4826      	ldr	r0, [pc, #152]	@ (8008b40 <_svfiprintf_r+0x1f0>)
 8008aa8:	1c6e      	adds	r6, r5, #1
 8008aaa:	7621      	strb	r1, [r4, #24]
 8008aac:	f7fe fbc5 	bl	800723a <memchr>
 8008ab0:	2800      	cmp	r0, #0
 8008ab2:	d038      	beq.n	8008b26 <_svfiprintf_r+0x1d6>
 8008ab4:	4b23      	ldr	r3, [pc, #140]	@ (8008b44 <_svfiprintf_r+0x1f4>)
 8008ab6:	2b00      	cmp	r3, #0
 8008ab8:	d122      	bne.n	8008b00 <_svfiprintf_r+0x1b0>
 8008aba:	2207      	movs	r2, #7
 8008abc:	9b07      	ldr	r3, [sp, #28]
 8008abe:	3307      	adds	r3, #7
 8008ac0:	4393      	bics	r3, r2
 8008ac2:	3308      	adds	r3, #8
 8008ac4:	9307      	str	r3, [sp, #28]
 8008ac6:	6963      	ldr	r3, [r4, #20]
 8008ac8:	9a04      	ldr	r2, [sp, #16]
 8008aca:	189b      	adds	r3, r3, r2
 8008acc:	6163      	str	r3, [r4, #20]
 8008ace:	e762      	b.n	8008996 <_svfiprintf_r+0x46>
 8008ad0:	4343      	muls	r3, r0
 8008ad2:	0035      	movs	r5, r6
 8008ad4:	2101      	movs	r1, #1
 8008ad6:	189b      	adds	r3, r3, r2
 8008ad8:	e7a4      	b.n	8008a24 <_svfiprintf_r+0xd4>
 8008ada:	2300      	movs	r3, #0
 8008adc:	200a      	movs	r0, #10
 8008ade:	0019      	movs	r1, r3
 8008ae0:	3501      	adds	r5, #1
 8008ae2:	6063      	str	r3, [r4, #4]
 8008ae4:	782a      	ldrb	r2, [r5, #0]
 8008ae6:	1c6e      	adds	r6, r5, #1
 8008ae8:	3a30      	subs	r2, #48	@ 0x30
 8008aea:	2a09      	cmp	r2, #9
 8008aec:	d903      	bls.n	8008af6 <_svfiprintf_r+0x1a6>
 8008aee:	2b00      	cmp	r3, #0
 8008af0:	d0c8      	beq.n	8008a84 <_svfiprintf_r+0x134>
 8008af2:	9109      	str	r1, [sp, #36]	@ 0x24
 8008af4:	e7c6      	b.n	8008a84 <_svfiprintf_r+0x134>
 8008af6:	4341      	muls	r1, r0
 8008af8:	0035      	movs	r5, r6
 8008afa:	2301      	movs	r3, #1
 8008afc:	1889      	adds	r1, r1, r2
 8008afe:	e7f1      	b.n	8008ae4 <_svfiprintf_r+0x194>
 8008b00:	aa07      	add	r2, sp, #28
 8008b02:	9200      	str	r2, [sp, #0]
 8008b04:	0021      	movs	r1, r4
 8008b06:	003a      	movs	r2, r7
 8008b08:	4b0f      	ldr	r3, [pc, #60]	@ (8008b48 <_svfiprintf_r+0x1f8>)
 8008b0a:	9803      	ldr	r0, [sp, #12]
 8008b0c:	f7fd fe22 	bl	8006754 <_printf_float>
 8008b10:	9004      	str	r0, [sp, #16]
 8008b12:	9b04      	ldr	r3, [sp, #16]
 8008b14:	3301      	adds	r3, #1
 8008b16:	d1d6      	bne.n	8008ac6 <_svfiprintf_r+0x176>
 8008b18:	89bb      	ldrh	r3, [r7, #12]
 8008b1a:	980d      	ldr	r0, [sp, #52]	@ 0x34
 8008b1c:	065b      	lsls	r3, r3, #25
 8008b1e:	d500      	bpl.n	8008b22 <_svfiprintf_r+0x1d2>
 8008b20:	e72c      	b.n	800897c <_svfiprintf_r+0x2c>
 8008b22:	b021      	add	sp, #132	@ 0x84
 8008b24:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8008b26:	aa07      	add	r2, sp, #28
 8008b28:	9200      	str	r2, [sp, #0]
 8008b2a:	0021      	movs	r1, r4
 8008b2c:	003a      	movs	r2, r7
 8008b2e:	4b06      	ldr	r3, [pc, #24]	@ (8008b48 <_svfiprintf_r+0x1f8>)
 8008b30:	9803      	ldr	r0, [sp, #12]
 8008b32:	f7fe f8bd 	bl	8006cb0 <_printf_i>
 8008b36:	e7eb      	b.n	8008b10 <_svfiprintf_r+0x1c0>
 8008b38:	08009673 	.word	0x08009673
 8008b3c:	08009679 	.word	0x08009679
 8008b40:	0800967d 	.word	0x0800967d
 8008b44:	08006755 	.word	0x08006755
 8008b48:	08008891 	.word	0x08008891

08008b4c <__sflush_r>:
 8008b4c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8008b4e:	220c      	movs	r2, #12
 8008b50:	5e8b      	ldrsh	r3, [r1, r2]
 8008b52:	0005      	movs	r5, r0
 8008b54:	000c      	movs	r4, r1
 8008b56:	071a      	lsls	r2, r3, #28
 8008b58:	d456      	bmi.n	8008c08 <__sflush_r+0xbc>
 8008b5a:	684a      	ldr	r2, [r1, #4]
 8008b5c:	2a00      	cmp	r2, #0
 8008b5e:	dc02      	bgt.n	8008b66 <__sflush_r+0x1a>
 8008b60:	6c0a      	ldr	r2, [r1, #64]	@ 0x40
 8008b62:	2a00      	cmp	r2, #0
 8008b64:	dd4e      	ble.n	8008c04 <__sflush_r+0xb8>
 8008b66:	6ae7      	ldr	r7, [r4, #44]	@ 0x2c
 8008b68:	2f00      	cmp	r7, #0
 8008b6a:	d04b      	beq.n	8008c04 <__sflush_r+0xb8>
 8008b6c:	2200      	movs	r2, #0
 8008b6e:	2080      	movs	r0, #128	@ 0x80
 8008b70:	682e      	ldr	r6, [r5, #0]
 8008b72:	602a      	str	r2, [r5, #0]
 8008b74:	001a      	movs	r2, r3
 8008b76:	0140      	lsls	r0, r0, #5
 8008b78:	6a21      	ldr	r1, [r4, #32]
 8008b7a:	4002      	ands	r2, r0
 8008b7c:	4203      	tst	r3, r0
 8008b7e:	d033      	beq.n	8008be8 <__sflush_r+0x9c>
 8008b80:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 8008b82:	89a3      	ldrh	r3, [r4, #12]
 8008b84:	075b      	lsls	r3, r3, #29
 8008b86:	d506      	bpl.n	8008b96 <__sflush_r+0x4a>
 8008b88:	6863      	ldr	r3, [r4, #4]
 8008b8a:	1ad2      	subs	r2, r2, r3
 8008b8c:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 8008b8e:	2b00      	cmp	r3, #0
 8008b90:	d001      	beq.n	8008b96 <__sflush_r+0x4a>
 8008b92:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8008b94:	1ad2      	subs	r2, r2, r3
 8008b96:	2300      	movs	r3, #0
 8008b98:	0028      	movs	r0, r5
 8008b9a:	6ae7      	ldr	r7, [r4, #44]	@ 0x2c
 8008b9c:	6a21      	ldr	r1, [r4, #32]
 8008b9e:	47b8      	blx	r7
 8008ba0:	89a2      	ldrh	r2, [r4, #12]
 8008ba2:	1c43      	adds	r3, r0, #1
 8008ba4:	d106      	bne.n	8008bb4 <__sflush_r+0x68>
 8008ba6:	6829      	ldr	r1, [r5, #0]
 8008ba8:	291d      	cmp	r1, #29
 8008baa:	d846      	bhi.n	8008c3a <__sflush_r+0xee>
 8008bac:	4b29      	ldr	r3, [pc, #164]	@ (8008c54 <__sflush_r+0x108>)
 8008bae:	40cb      	lsrs	r3, r1
 8008bb0:	07db      	lsls	r3, r3, #31
 8008bb2:	d542      	bpl.n	8008c3a <__sflush_r+0xee>
 8008bb4:	2300      	movs	r3, #0
 8008bb6:	6063      	str	r3, [r4, #4]
 8008bb8:	6923      	ldr	r3, [r4, #16]
 8008bba:	6023      	str	r3, [r4, #0]
 8008bbc:	04d2      	lsls	r2, r2, #19
 8008bbe:	d505      	bpl.n	8008bcc <__sflush_r+0x80>
 8008bc0:	1c43      	adds	r3, r0, #1
 8008bc2:	d102      	bne.n	8008bca <__sflush_r+0x7e>
 8008bc4:	682b      	ldr	r3, [r5, #0]
 8008bc6:	2b00      	cmp	r3, #0
 8008bc8:	d100      	bne.n	8008bcc <__sflush_r+0x80>
 8008bca:	6560      	str	r0, [r4, #84]	@ 0x54
 8008bcc:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8008bce:	602e      	str	r6, [r5, #0]
 8008bd0:	2900      	cmp	r1, #0
 8008bd2:	d017      	beq.n	8008c04 <__sflush_r+0xb8>
 8008bd4:	0023      	movs	r3, r4
 8008bd6:	3344      	adds	r3, #68	@ 0x44
 8008bd8:	4299      	cmp	r1, r3
 8008bda:	d002      	beq.n	8008be2 <__sflush_r+0x96>
 8008bdc:	0028      	movs	r0, r5
 8008bde:	f7ff f9b5 	bl	8007f4c <_free_r>
 8008be2:	2300      	movs	r3, #0
 8008be4:	6363      	str	r3, [r4, #52]	@ 0x34
 8008be6:	e00d      	b.n	8008c04 <__sflush_r+0xb8>
 8008be8:	2301      	movs	r3, #1
 8008bea:	0028      	movs	r0, r5
 8008bec:	47b8      	blx	r7
 8008bee:	0002      	movs	r2, r0
 8008bf0:	1c43      	adds	r3, r0, #1
 8008bf2:	d1c6      	bne.n	8008b82 <__sflush_r+0x36>
 8008bf4:	682b      	ldr	r3, [r5, #0]
 8008bf6:	2b00      	cmp	r3, #0
 8008bf8:	d0c3      	beq.n	8008b82 <__sflush_r+0x36>
 8008bfa:	2b1d      	cmp	r3, #29
 8008bfc:	d001      	beq.n	8008c02 <__sflush_r+0xb6>
 8008bfe:	2b16      	cmp	r3, #22
 8008c00:	d11a      	bne.n	8008c38 <__sflush_r+0xec>
 8008c02:	602e      	str	r6, [r5, #0]
 8008c04:	2000      	movs	r0, #0
 8008c06:	e01e      	b.n	8008c46 <__sflush_r+0xfa>
 8008c08:	690e      	ldr	r6, [r1, #16]
 8008c0a:	2e00      	cmp	r6, #0
 8008c0c:	d0fa      	beq.n	8008c04 <__sflush_r+0xb8>
 8008c0e:	680f      	ldr	r7, [r1, #0]
 8008c10:	600e      	str	r6, [r1, #0]
 8008c12:	1bba      	subs	r2, r7, r6
 8008c14:	9201      	str	r2, [sp, #4]
 8008c16:	2200      	movs	r2, #0
 8008c18:	079b      	lsls	r3, r3, #30
 8008c1a:	d100      	bne.n	8008c1e <__sflush_r+0xd2>
 8008c1c:	694a      	ldr	r2, [r1, #20]
 8008c1e:	60a2      	str	r2, [r4, #8]
 8008c20:	9b01      	ldr	r3, [sp, #4]
 8008c22:	2b00      	cmp	r3, #0
 8008c24:	ddee      	ble.n	8008c04 <__sflush_r+0xb8>
 8008c26:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 8008c28:	0032      	movs	r2, r6
 8008c2a:	001f      	movs	r7, r3
 8008c2c:	0028      	movs	r0, r5
 8008c2e:	9b01      	ldr	r3, [sp, #4]
 8008c30:	6a21      	ldr	r1, [r4, #32]
 8008c32:	47b8      	blx	r7
 8008c34:	2800      	cmp	r0, #0
 8008c36:	dc07      	bgt.n	8008c48 <__sflush_r+0xfc>
 8008c38:	89a2      	ldrh	r2, [r4, #12]
 8008c3a:	2340      	movs	r3, #64	@ 0x40
 8008c3c:	2001      	movs	r0, #1
 8008c3e:	4313      	orrs	r3, r2
 8008c40:	b21b      	sxth	r3, r3
 8008c42:	81a3      	strh	r3, [r4, #12]
 8008c44:	4240      	negs	r0, r0
 8008c46:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8008c48:	9b01      	ldr	r3, [sp, #4]
 8008c4a:	1836      	adds	r6, r6, r0
 8008c4c:	1a1b      	subs	r3, r3, r0
 8008c4e:	9301      	str	r3, [sp, #4]
 8008c50:	e7e6      	b.n	8008c20 <__sflush_r+0xd4>
 8008c52:	46c0      	nop			@ (mov r8, r8)
 8008c54:	20400001 	.word	0x20400001

08008c58 <_fflush_r>:
 8008c58:	690b      	ldr	r3, [r1, #16]
 8008c5a:	b570      	push	{r4, r5, r6, lr}
 8008c5c:	0005      	movs	r5, r0
 8008c5e:	000c      	movs	r4, r1
 8008c60:	2b00      	cmp	r3, #0
 8008c62:	d102      	bne.n	8008c6a <_fflush_r+0x12>
 8008c64:	2500      	movs	r5, #0
 8008c66:	0028      	movs	r0, r5
 8008c68:	bd70      	pop	{r4, r5, r6, pc}
 8008c6a:	2800      	cmp	r0, #0
 8008c6c:	d004      	beq.n	8008c78 <_fflush_r+0x20>
 8008c6e:	6a03      	ldr	r3, [r0, #32]
 8008c70:	2b00      	cmp	r3, #0
 8008c72:	d101      	bne.n	8008c78 <_fflush_r+0x20>
 8008c74:	f7fe f9b8 	bl	8006fe8 <__sinit>
 8008c78:	220c      	movs	r2, #12
 8008c7a:	5ea3      	ldrsh	r3, [r4, r2]
 8008c7c:	2b00      	cmp	r3, #0
 8008c7e:	d0f1      	beq.n	8008c64 <_fflush_r+0xc>
 8008c80:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 8008c82:	07d2      	lsls	r2, r2, #31
 8008c84:	d404      	bmi.n	8008c90 <_fflush_r+0x38>
 8008c86:	059b      	lsls	r3, r3, #22
 8008c88:	d402      	bmi.n	8008c90 <_fflush_r+0x38>
 8008c8a:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8008c8c:	f7fe fad3 	bl	8007236 <__retarget_lock_acquire_recursive>
 8008c90:	0028      	movs	r0, r5
 8008c92:	0021      	movs	r1, r4
 8008c94:	f7ff ff5a 	bl	8008b4c <__sflush_r>
 8008c98:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8008c9a:	0005      	movs	r5, r0
 8008c9c:	07db      	lsls	r3, r3, #31
 8008c9e:	d4e2      	bmi.n	8008c66 <_fflush_r+0xe>
 8008ca0:	89a3      	ldrh	r3, [r4, #12]
 8008ca2:	059b      	lsls	r3, r3, #22
 8008ca4:	d4df      	bmi.n	8008c66 <_fflush_r+0xe>
 8008ca6:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8008ca8:	f7fe fac6 	bl	8007238 <__retarget_lock_release_recursive>
 8008cac:	e7db      	b.n	8008c66 <_fflush_r+0xe>

08008cae <memmove>:
 8008cae:	b510      	push	{r4, lr}
 8008cb0:	4288      	cmp	r0, r1
 8008cb2:	d902      	bls.n	8008cba <memmove+0xc>
 8008cb4:	188b      	adds	r3, r1, r2
 8008cb6:	4298      	cmp	r0, r3
 8008cb8:	d308      	bcc.n	8008ccc <memmove+0x1e>
 8008cba:	2300      	movs	r3, #0
 8008cbc:	429a      	cmp	r2, r3
 8008cbe:	d007      	beq.n	8008cd0 <memmove+0x22>
 8008cc0:	5ccc      	ldrb	r4, [r1, r3]
 8008cc2:	54c4      	strb	r4, [r0, r3]
 8008cc4:	3301      	adds	r3, #1
 8008cc6:	e7f9      	b.n	8008cbc <memmove+0xe>
 8008cc8:	5c8b      	ldrb	r3, [r1, r2]
 8008cca:	5483      	strb	r3, [r0, r2]
 8008ccc:	3a01      	subs	r2, #1
 8008cce:	d2fb      	bcs.n	8008cc8 <memmove+0x1a>
 8008cd0:	bd10      	pop	{r4, pc}
	...

08008cd4 <_sbrk_r>:
 8008cd4:	2300      	movs	r3, #0
 8008cd6:	b570      	push	{r4, r5, r6, lr}
 8008cd8:	4d06      	ldr	r5, [pc, #24]	@ (8008cf4 <_sbrk_r+0x20>)
 8008cda:	0004      	movs	r4, r0
 8008cdc:	0008      	movs	r0, r1
 8008cde:	602b      	str	r3, [r5, #0]
 8008ce0:	f7fb febc 	bl	8004a5c <_sbrk>
 8008ce4:	1c43      	adds	r3, r0, #1
 8008ce6:	d103      	bne.n	8008cf0 <_sbrk_r+0x1c>
 8008ce8:	682b      	ldr	r3, [r5, #0]
 8008cea:	2b00      	cmp	r3, #0
 8008cec:	d000      	beq.n	8008cf0 <_sbrk_r+0x1c>
 8008cee:	6023      	str	r3, [r4, #0]
 8008cf0:	bd70      	pop	{r4, r5, r6, pc}
 8008cf2:	46c0      	nop			@ (mov r8, r8)
 8008cf4:	20000984 	.word	0x20000984

08008cf8 <__assert_func>:
 8008cf8:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8008cfa:	0014      	movs	r4, r2
 8008cfc:	001a      	movs	r2, r3
 8008cfe:	4b09      	ldr	r3, [pc, #36]	@ (8008d24 <__assert_func+0x2c>)
 8008d00:	0005      	movs	r5, r0
 8008d02:	681b      	ldr	r3, [r3, #0]
 8008d04:	000e      	movs	r6, r1
 8008d06:	68d8      	ldr	r0, [r3, #12]
 8008d08:	4b07      	ldr	r3, [pc, #28]	@ (8008d28 <__assert_func+0x30>)
 8008d0a:	2c00      	cmp	r4, #0
 8008d0c:	d101      	bne.n	8008d12 <__assert_func+0x1a>
 8008d0e:	4b07      	ldr	r3, [pc, #28]	@ (8008d2c <__assert_func+0x34>)
 8008d10:	001c      	movs	r4, r3
 8008d12:	4907      	ldr	r1, [pc, #28]	@ (8008d30 <__assert_func+0x38>)
 8008d14:	9301      	str	r3, [sp, #4]
 8008d16:	9402      	str	r4, [sp, #8]
 8008d18:	002b      	movs	r3, r5
 8008d1a:	9600      	str	r6, [sp, #0]
 8008d1c:	f000 f886 	bl	8008e2c <fiprintf>
 8008d20:	f000 f894 	bl	8008e4c <abort>
 8008d24:	2000003c 	.word	0x2000003c
 8008d28:	0800968c 	.word	0x0800968c
 8008d2c:	080096c7 	.word	0x080096c7
 8008d30:	08009699 	.word	0x08009699

08008d34 <_calloc_r>:
 8008d34:	b570      	push	{r4, r5, r6, lr}
 8008d36:	0c0b      	lsrs	r3, r1, #16
 8008d38:	0c15      	lsrs	r5, r2, #16
 8008d3a:	2b00      	cmp	r3, #0
 8008d3c:	d11e      	bne.n	8008d7c <_calloc_r+0x48>
 8008d3e:	2d00      	cmp	r5, #0
 8008d40:	d10c      	bne.n	8008d5c <_calloc_r+0x28>
 8008d42:	b289      	uxth	r1, r1
 8008d44:	b294      	uxth	r4, r2
 8008d46:	434c      	muls	r4, r1
 8008d48:	0021      	movs	r1, r4
 8008d4a:	f7ff f975 	bl	8008038 <_malloc_r>
 8008d4e:	1e05      	subs	r5, r0, #0
 8008d50:	d01b      	beq.n	8008d8a <_calloc_r+0x56>
 8008d52:	0022      	movs	r2, r4
 8008d54:	2100      	movs	r1, #0
 8008d56:	f7fe f9e9 	bl	800712c <memset>
 8008d5a:	e016      	b.n	8008d8a <_calloc_r+0x56>
 8008d5c:	1c2b      	adds	r3, r5, #0
 8008d5e:	1c0c      	adds	r4, r1, #0
 8008d60:	b289      	uxth	r1, r1
 8008d62:	b292      	uxth	r2, r2
 8008d64:	434a      	muls	r2, r1
 8008d66:	b29b      	uxth	r3, r3
 8008d68:	b2a1      	uxth	r1, r4
 8008d6a:	4359      	muls	r1, r3
 8008d6c:	0c14      	lsrs	r4, r2, #16
 8008d6e:	190c      	adds	r4, r1, r4
 8008d70:	0c23      	lsrs	r3, r4, #16
 8008d72:	d107      	bne.n	8008d84 <_calloc_r+0x50>
 8008d74:	0424      	lsls	r4, r4, #16
 8008d76:	b292      	uxth	r2, r2
 8008d78:	4314      	orrs	r4, r2
 8008d7a:	e7e5      	b.n	8008d48 <_calloc_r+0x14>
 8008d7c:	2d00      	cmp	r5, #0
 8008d7e:	d101      	bne.n	8008d84 <_calloc_r+0x50>
 8008d80:	1c14      	adds	r4, r2, #0
 8008d82:	e7ed      	b.n	8008d60 <_calloc_r+0x2c>
 8008d84:	230c      	movs	r3, #12
 8008d86:	2500      	movs	r5, #0
 8008d88:	6003      	str	r3, [r0, #0]
 8008d8a:	0028      	movs	r0, r5
 8008d8c:	bd70      	pop	{r4, r5, r6, pc}

08008d8e <__ascii_mbtowc>:
 8008d8e:	b082      	sub	sp, #8
 8008d90:	2900      	cmp	r1, #0
 8008d92:	d100      	bne.n	8008d96 <__ascii_mbtowc+0x8>
 8008d94:	a901      	add	r1, sp, #4
 8008d96:	1e10      	subs	r0, r2, #0
 8008d98:	d006      	beq.n	8008da8 <__ascii_mbtowc+0x1a>
 8008d9a:	2b00      	cmp	r3, #0
 8008d9c:	d006      	beq.n	8008dac <__ascii_mbtowc+0x1e>
 8008d9e:	7813      	ldrb	r3, [r2, #0]
 8008da0:	600b      	str	r3, [r1, #0]
 8008da2:	7810      	ldrb	r0, [r2, #0]
 8008da4:	1e43      	subs	r3, r0, #1
 8008da6:	4198      	sbcs	r0, r3
 8008da8:	b002      	add	sp, #8
 8008daa:	4770      	bx	lr
 8008dac:	2002      	movs	r0, #2
 8008dae:	4240      	negs	r0, r0
 8008db0:	e7fa      	b.n	8008da8 <__ascii_mbtowc+0x1a>

08008db2 <_realloc_r>:
 8008db2:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8008db4:	0006      	movs	r6, r0
 8008db6:	000c      	movs	r4, r1
 8008db8:	0015      	movs	r5, r2
 8008dba:	2900      	cmp	r1, #0
 8008dbc:	d105      	bne.n	8008dca <_realloc_r+0x18>
 8008dbe:	0011      	movs	r1, r2
 8008dc0:	f7ff f93a 	bl	8008038 <_malloc_r>
 8008dc4:	0004      	movs	r4, r0
 8008dc6:	0020      	movs	r0, r4
 8008dc8:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8008dca:	2a00      	cmp	r2, #0
 8008dcc:	d103      	bne.n	8008dd6 <_realloc_r+0x24>
 8008dce:	f7ff f8bd 	bl	8007f4c <_free_r>
 8008dd2:	002c      	movs	r4, r5
 8008dd4:	e7f7      	b.n	8008dc6 <_realloc_r+0x14>
 8008dd6:	f000 f840 	bl	8008e5a <_malloc_usable_size_r>
 8008dda:	0007      	movs	r7, r0
 8008ddc:	4285      	cmp	r5, r0
 8008dde:	d802      	bhi.n	8008de6 <_realloc_r+0x34>
 8008de0:	0843      	lsrs	r3, r0, #1
 8008de2:	42ab      	cmp	r3, r5
 8008de4:	d3ef      	bcc.n	8008dc6 <_realloc_r+0x14>
 8008de6:	0029      	movs	r1, r5
 8008de8:	0030      	movs	r0, r6
 8008dea:	f7ff f925 	bl	8008038 <_malloc_r>
 8008dee:	9001      	str	r0, [sp, #4]
 8008df0:	2800      	cmp	r0, #0
 8008df2:	d101      	bne.n	8008df8 <_realloc_r+0x46>
 8008df4:	9c01      	ldr	r4, [sp, #4]
 8008df6:	e7e6      	b.n	8008dc6 <_realloc_r+0x14>
 8008df8:	002a      	movs	r2, r5
 8008dfa:	42bd      	cmp	r5, r7
 8008dfc:	d900      	bls.n	8008e00 <_realloc_r+0x4e>
 8008dfe:	003a      	movs	r2, r7
 8008e00:	0021      	movs	r1, r4
 8008e02:	9801      	ldr	r0, [sp, #4]
 8008e04:	f7fe fa24 	bl	8007250 <memcpy>
 8008e08:	0021      	movs	r1, r4
 8008e0a:	0030      	movs	r0, r6
 8008e0c:	f7ff f89e 	bl	8007f4c <_free_r>
 8008e10:	e7f0      	b.n	8008df4 <_realloc_r+0x42>

08008e12 <__ascii_wctomb>:
 8008e12:	0003      	movs	r3, r0
 8008e14:	1e08      	subs	r0, r1, #0
 8008e16:	d005      	beq.n	8008e24 <__ascii_wctomb+0x12>
 8008e18:	2aff      	cmp	r2, #255	@ 0xff
 8008e1a:	d904      	bls.n	8008e26 <__ascii_wctomb+0x14>
 8008e1c:	228a      	movs	r2, #138	@ 0x8a
 8008e1e:	2001      	movs	r0, #1
 8008e20:	601a      	str	r2, [r3, #0]
 8008e22:	4240      	negs	r0, r0
 8008e24:	4770      	bx	lr
 8008e26:	2001      	movs	r0, #1
 8008e28:	700a      	strb	r2, [r1, #0]
 8008e2a:	e7fb      	b.n	8008e24 <__ascii_wctomb+0x12>

08008e2c <fiprintf>:
 8008e2c:	b40e      	push	{r1, r2, r3}
 8008e2e:	b517      	push	{r0, r1, r2, r4, lr}
 8008e30:	4c05      	ldr	r4, [pc, #20]	@ (8008e48 <fiprintf+0x1c>)
 8008e32:	ab05      	add	r3, sp, #20
 8008e34:	cb04      	ldmia	r3!, {r2}
 8008e36:	0001      	movs	r1, r0
 8008e38:	6820      	ldr	r0, [r4, #0]
 8008e3a:	9301      	str	r3, [sp, #4]
 8008e3c:	f000 f83c 	bl	8008eb8 <_vfiprintf_r>
 8008e40:	bc1e      	pop	{r1, r2, r3, r4}
 8008e42:	bc08      	pop	{r3}
 8008e44:	b003      	add	sp, #12
 8008e46:	4718      	bx	r3
 8008e48:	2000003c 	.word	0x2000003c

08008e4c <abort>:
 8008e4c:	2006      	movs	r0, #6
 8008e4e:	b510      	push	{r4, lr}
 8008e50:	f000 fa18 	bl	8009284 <raise>
 8008e54:	2001      	movs	r0, #1
 8008e56:	f7fb fdd5 	bl	8004a04 <_exit>

08008e5a <_malloc_usable_size_r>:
 8008e5a:	1f0b      	subs	r3, r1, #4
 8008e5c:	681b      	ldr	r3, [r3, #0]
 8008e5e:	1f18      	subs	r0, r3, #4
 8008e60:	2b00      	cmp	r3, #0
 8008e62:	da01      	bge.n	8008e68 <_malloc_usable_size_r+0xe>
 8008e64:	580b      	ldr	r3, [r1, r0]
 8008e66:	18c0      	adds	r0, r0, r3
 8008e68:	4770      	bx	lr

08008e6a <__sfputc_r>:
 8008e6a:	6893      	ldr	r3, [r2, #8]
 8008e6c:	b510      	push	{r4, lr}
 8008e6e:	3b01      	subs	r3, #1
 8008e70:	6093      	str	r3, [r2, #8]
 8008e72:	2b00      	cmp	r3, #0
 8008e74:	da04      	bge.n	8008e80 <__sfputc_r+0x16>
 8008e76:	6994      	ldr	r4, [r2, #24]
 8008e78:	42a3      	cmp	r3, r4
 8008e7a:	db07      	blt.n	8008e8c <__sfputc_r+0x22>
 8008e7c:	290a      	cmp	r1, #10
 8008e7e:	d005      	beq.n	8008e8c <__sfputc_r+0x22>
 8008e80:	6813      	ldr	r3, [r2, #0]
 8008e82:	1c58      	adds	r0, r3, #1
 8008e84:	6010      	str	r0, [r2, #0]
 8008e86:	7019      	strb	r1, [r3, #0]
 8008e88:	0008      	movs	r0, r1
 8008e8a:	bd10      	pop	{r4, pc}
 8008e8c:	f000 f930 	bl	80090f0 <__swbuf_r>
 8008e90:	0001      	movs	r1, r0
 8008e92:	e7f9      	b.n	8008e88 <__sfputc_r+0x1e>

08008e94 <__sfputs_r>:
 8008e94:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8008e96:	0006      	movs	r6, r0
 8008e98:	000f      	movs	r7, r1
 8008e9a:	0014      	movs	r4, r2
 8008e9c:	18d5      	adds	r5, r2, r3
 8008e9e:	42ac      	cmp	r4, r5
 8008ea0:	d101      	bne.n	8008ea6 <__sfputs_r+0x12>
 8008ea2:	2000      	movs	r0, #0
 8008ea4:	e007      	b.n	8008eb6 <__sfputs_r+0x22>
 8008ea6:	7821      	ldrb	r1, [r4, #0]
 8008ea8:	003a      	movs	r2, r7
 8008eaa:	0030      	movs	r0, r6
 8008eac:	f7ff ffdd 	bl	8008e6a <__sfputc_r>
 8008eb0:	3401      	adds	r4, #1
 8008eb2:	1c43      	adds	r3, r0, #1
 8008eb4:	d1f3      	bne.n	8008e9e <__sfputs_r+0xa>
 8008eb6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08008eb8 <_vfiprintf_r>:
 8008eb8:	b5f0      	push	{r4, r5, r6, r7, lr}
 8008eba:	b0a1      	sub	sp, #132	@ 0x84
 8008ebc:	000f      	movs	r7, r1
 8008ebe:	0015      	movs	r5, r2
 8008ec0:	001e      	movs	r6, r3
 8008ec2:	9003      	str	r0, [sp, #12]
 8008ec4:	2800      	cmp	r0, #0
 8008ec6:	d004      	beq.n	8008ed2 <_vfiprintf_r+0x1a>
 8008ec8:	6a03      	ldr	r3, [r0, #32]
 8008eca:	2b00      	cmp	r3, #0
 8008ecc:	d101      	bne.n	8008ed2 <_vfiprintf_r+0x1a>
 8008ece:	f7fe f88b 	bl	8006fe8 <__sinit>
 8008ed2:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 8008ed4:	07db      	lsls	r3, r3, #31
 8008ed6:	d405      	bmi.n	8008ee4 <_vfiprintf_r+0x2c>
 8008ed8:	89bb      	ldrh	r3, [r7, #12]
 8008eda:	059b      	lsls	r3, r3, #22
 8008edc:	d402      	bmi.n	8008ee4 <_vfiprintf_r+0x2c>
 8008ede:	6db8      	ldr	r0, [r7, #88]	@ 0x58
 8008ee0:	f7fe f9a9 	bl	8007236 <__retarget_lock_acquire_recursive>
 8008ee4:	89bb      	ldrh	r3, [r7, #12]
 8008ee6:	071b      	lsls	r3, r3, #28
 8008ee8:	d502      	bpl.n	8008ef0 <_vfiprintf_r+0x38>
 8008eea:	693b      	ldr	r3, [r7, #16]
 8008eec:	2b00      	cmp	r3, #0
 8008eee:	d113      	bne.n	8008f18 <_vfiprintf_r+0x60>
 8008ef0:	0039      	movs	r1, r7
 8008ef2:	9803      	ldr	r0, [sp, #12]
 8008ef4:	f000 f93e 	bl	8009174 <__swsetup_r>
 8008ef8:	2800      	cmp	r0, #0
 8008efa:	d00d      	beq.n	8008f18 <_vfiprintf_r+0x60>
 8008efc:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 8008efe:	07db      	lsls	r3, r3, #31
 8008f00:	d503      	bpl.n	8008f0a <_vfiprintf_r+0x52>
 8008f02:	2001      	movs	r0, #1
 8008f04:	4240      	negs	r0, r0
 8008f06:	b021      	add	sp, #132	@ 0x84
 8008f08:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8008f0a:	89bb      	ldrh	r3, [r7, #12]
 8008f0c:	059b      	lsls	r3, r3, #22
 8008f0e:	d4f8      	bmi.n	8008f02 <_vfiprintf_r+0x4a>
 8008f10:	6db8      	ldr	r0, [r7, #88]	@ 0x58
 8008f12:	f7fe f991 	bl	8007238 <__retarget_lock_release_recursive>
 8008f16:	e7f4      	b.n	8008f02 <_vfiprintf_r+0x4a>
 8008f18:	2300      	movs	r3, #0
 8008f1a:	ac08      	add	r4, sp, #32
 8008f1c:	6163      	str	r3, [r4, #20]
 8008f1e:	3320      	adds	r3, #32
 8008f20:	7663      	strb	r3, [r4, #25]
 8008f22:	3310      	adds	r3, #16
 8008f24:	76a3      	strb	r3, [r4, #26]
 8008f26:	9607      	str	r6, [sp, #28]
 8008f28:	002e      	movs	r6, r5
 8008f2a:	7833      	ldrb	r3, [r6, #0]
 8008f2c:	2b00      	cmp	r3, #0
 8008f2e:	d001      	beq.n	8008f34 <_vfiprintf_r+0x7c>
 8008f30:	2b25      	cmp	r3, #37	@ 0x25
 8008f32:	d148      	bne.n	8008fc6 <_vfiprintf_r+0x10e>
 8008f34:	1b73      	subs	r3, r6, r5
 8008f36:	9305      	str	r3, [sp, #20]
 8008f38:	42ae      	cmp	r6, r5
 8008f3a:	d00b      	beq.n	8008f54 <_vfiprintf_r+0x9c>
 8008f3c:	002a      	movs	r2, r5
 8008f3e:	0039      	movs	r1, r7
 8008f40:	9803      	ldr	r0, [sp, #12]
 8008f42:	f7ff ffa7 	bl	8008e94 <__sfputs_r>
 8008f46:	3001      	adds	r0, #1
 8008f48:	d100      	bne.n	8008f4c <_vfiprintf_r+0x94>
 8008f4a:	e0ae      	b.n	80090aa <_vfiprintf_r+0x1f2>
 8008f4c:	6963      	ldr	r3, [r4, #20]
 8008f4e:	9a05      	ldr	r2, [sp, #20]
 8008f50:	189b      	adds	r3, r3, r2
 8008f52:	6163      	str	r3, [r4, #20]
 8008f54:	7833      	ldrb	r3, [r6, #0]
 8008f56:	2b00      	cmp	r3, #0
 8008f58:	d100      	bne.n	8008f5c <_vfiprintf_r+0xa4>
 8008f5a:	e0a6      	b.n	80090aa <_vfiprintf_r+0x1f2>
 8008f5c:	2201      	movs	r2, #1
 8008f5e:	2300      	movs	r3, #0
 8008f60:	4252      	negs	r2, r2
 8008f62:	6062      	str	r2, [r4, #4]
 8008f64:	a904      	add	r1, sp, #16
 8008f66:	3254      	adds	r2, #84	@ 0x54
 8008f68:	1852      	adds	r2, r2, r1
 8008f6a:	1c75      	adds	r5, r6, #1
 8008f6c:	6023      	str	r3, [r4, #0]
 8008f6e:	60e3      	str	r3, [r4, #12]
 8008f70:	60a3      	str	r3, [r4, #8]
 8008f72:	7013      	strb	r3, [r2, #0]
 8008f74:	65a3      	str	r3, [r4, #88]	@ 0x58
 8008f76:	4b59      	ldr	r3, [pc, #356]	@ (80090dc <_vfiprintf_r+0x224>)
 8008f78:	2205      	movs	r2, #5
 8008f7a:	0018      	movs	r0, r3
 8008f7c:	7829      	ldrb	r1, [r5, #0]
 8008f7e:	9305      	str	r3, [sp, #20]
 8008f80:	f7fe f95b 	bl	800723a <memchr>
 8008f84:	1c6e      	adds	r6, r5, #1
 8008f86:	2800      	cmp	r0, #0
 8008f88:	d11f      	bne.n	8008fca <_vfiprintf_r+0x112>
 8008f8a:	6822      	ldr	r2, [r4, #0]
 8008f8c:	06d3      	lsls	r3, r2, #27
 8008f8e:	d504      	bpl.n	8008f9a <_vfiprintf_r+0xe2>
 8008f90:	2353      	movs	r3, #83	@ 0x53
 8008f92:	a904      	add	r1, sp, #16
 8008f94:	185b      	adds	r3, r3, r1
 8008f96:	2120      	movs	r1, #32
 8008f98:	7019      	strb	r1, [r3, #0]
 8008f9a:	0713      	lsls	r3, r2, #28
 8008f9c:	d504      	bpl.n	8008fa8 <_vfiprintf_r+0xf0>
 8008f9e:	2353      	movs	r3, #83	@ 0x53
 8008fa0:	a904      	add	r1, sp, #16
 8008fa2:	185b      	adds	r3, r3, r1
 8008fa4:	212b      	movs	r1, #43	@ 0x2b
 8008fa6:	7019      	strb	r1, [r3, #0]
 8008fa8:	782b      	ldrb	r3, [r5, #0]
 8008faa:	2b2a      	cmp	r3, #42	@ 0x2a
 8008fac:	d016      	beq.n	8008fdc <_vfiprintf_r+0x124>
 8008fae:	002e      	movs	r6, r5
 8008fb0:	2100      	movs	r1, #0
 8008fb2:	200a      	movs	r0, #10
 8008fb4:	68e3      	ldr	r3, [r4, #12]
 8008fb6:	7832      	ldrb	r2, [r6, #0]
 8008fb8:	1c75      	adds	r5, r6, #1
 8008fba:	3a30      	subs	r2, #48	@ 0x30
 8008fbc:	2a09      	cmp	r2, #9
 8008fbe:	d950      	bls.n	8009062 <_vfiprintf_r+0x1aa>
 8008fc0:	2900      	cmp	r1, #0
 8008fc2:	d111      	bne.n	8008fe8 <_vfiprintf_r+0x130>
 8008fc4:	e017      	b.n	8008ff6 <_vfiprintf_r+0x13e>
 8008fc6:	3601      	adds	r6, #1
 8008fc8:	e7af      	b.n	8008f2a <_vfiprintf_r+0x72>
 8008fca:	9b05      	ldr	r3, [sp, #20]
 8008fcc:	6822      	ldr	r2, [r4, #0]
 8008fce:	1ac0      	subs	r0, r0, r3
 8008fd0:	2301      	movs	r3, #1
 8008fd2:	4083      	lsls	r3, r0
 8008fd4:	4313      	orrs	r3, r2
 8008fd6:	0035      	movs	r5, r6
 8008fd8:	6023      	str	r3, [r4, #0]
 8008fda:	e7cc      	b.n	8008f76 <_vfiprintf_r+0xbe>
 8008fdc:	9b07      	ldr	r3, [sp, #28]
 8008fde:	1d19      	adds	r1, r3, #4
 8008fe0:	681b      	ldr	r3, [r3, #0]
 8008fe2:	9107      	str	r1, [sp, #28]
 8008fe4:	2b00      	cmp	r3, #0
 8008fe6:	db01      	blt.n	8008fec <_vfiprintf_r+0x134>
 8008fe8:	930b      	str	r3, [sp, #44]	@ 0x2c
 8008fea:	e004      	b.n	8008ff6 <_vfiprintf_r+0x13e>
 8008fec:	425b      	negs	r3, r3
 8008fee:	60e3      	str	r3, [r4, #12]
 8008ff0:	2302      	movs	r3, #2
 8008ff2:	4313      	orrs	r3, r2
 8008ff4:	6023      	str	r3, [r4, #0]
 8008ff6:	7833      	ldrb	r3, [r6, #0]
 8008ff8:	2b2e      	cmp	r3, #46	@ 0x2e
 8008ffa:	d10c      	bne.n	8009016 <_vfiprintf_r+0x15e>
 8008ffc:	7873      	ldrb	r3, [r6, #1]
 8008ffe:	2b2a      	cmp	r3, #42	@ 0x2a
 8009000:	d134      	bne.n	800906c <_vfiprintf_r+0x1b4>
 8009002:	9b07      	ldr	r3, [sp, #28]
 8009004:	3602      	adds	r6, #2
 8009006:	1d1a      	adds	r2, r3, #4
 8009008:	681b      	ldr	r3, [r3, #0]
 800900a:	9207      	str	r2, [sp, #28]
 800900c:	2b00      	cmp	r3, #0
 800900e:	da01      	bge.n	8009014 <_vfiprintf_r+0x15c>
 8009010:	2301      	movs	r3, #1
 8009012:	425b      	negs	r3, r3
 8009014:	9309      	str	r3, [sp, #36]	@ 0x24
 8009016:	4d32      	ldr	r5, [pc, #200]	@ (80090e0 <_vfiprintf_r+0x228>)
 8009018:	2203      	movs	r2, #3
 800901a:	0028      	movs	r0, r5
 800901c:	7831      	ldrb	r1, [r6, #0]
 800901e:	f7fe f90c 	bl	800723a <memchr>
 8009022:	2800      	cmp	r0, #0
 8009024:	d006      	beq.n	8009034 <_vfiprintf_r+0x17c>
 8009026:	2340      	movs	r3, #64	@ 0x40
 8009028:	1b40      	subs	r0, r0, r5
 800902a:	4083      	lsls	r3, r0
 800902c:	6822      	ldr	r2, [r4, #0]
 800902e:	3601      	adds	r6, #1
 8009030:	4313      	orrs	r3, r2
 8009032:	6023      	str	r3, [r4, #0]
 8009034:	7831      	ldrb	r1, [r6, #0]
 8009036:	2206      	movs	r2, #6
 8009038:	482a      	ldr	r0, [pc, #168]	@ (80090e4 <_vfiprintf_r+0x22c>)
 800903a:	1c75      	adds	r5, r6, #1
 800903c:	7621      	strb	r1, [r4, #24]
 800903e:	f7fe f8fc 	bl	800723a <memchr>
 8009042:	2800      	cmp	r0, #0
 8009044:	d040      	beq.n	80090c8 <_vfiprintf_r+0x210>
 8009046:	4b28      	ldr	r3, [pc, #160]	@ (80090e8 <_vfiprintf_r+0x230>)
 8009048:	2b00      	cmp	r3, #0
 800904a:	d122      	bne.n	8009092 <_vfiprintf_r+0x1da>
 800904c:	2207      	movs	r2, #7
 800904e:	9b07      	ldr	r3, [sp, #28]
 8009050:	3307      	adds	r3, #7
 8009052:	4393      	bics	r3, r2
 8009054:	3308      	adds	r3, #8
 8009056:	9307      	str	r3, [sp, #28]
 8009058:	6963      	ldr	r3, [r4, #20]
 800905a:	9a04      	ldr	r2, [sp, #16]
 800905c:	189b      	adds	r3, r3, r2
 800905e:	6163      	str	r3, [r4, #20]
 8009060:	e762      	b.n	8008f28 <_vfiprintf_r+0x70>
 8009062:	4343      	muls	r3, r0
 8009064:	002e      	movs	r6, r5
 8009066:	2101      	movs	r1, #1
 8009068:	189b      	adds	r3, r3, r2
 800906a:	e7a4      	b.n	8008fb6 <_vfiprintf_r+0xfe>
 800906c:	2300      	movs	r3, #0
 800906e:	200a      	movs	r0, #10
 8009070:	0019      	movs	r1, r3
 8009072:	3601      	adds	r6, #1
 8009074:	6063      	str	r3, [r4, #4]
 8009076:	7832      	ldrb	r2, [r6, #0]
 8009078:	1c75      	adds	r5, r6, #1
 800907a:	3a30      	subs	r2, #48	@ 0x30
 800907c:	2a09      	cmp	r2, #9
 800907e:	d903      	bls.n	8009088 <_vfiprintf_r+0x1d0>
 8009080:	2b00      	cmp	r3, #0
 8009082:	d0c8      	beq.n	8009016 <_vfiprintf_r+0x15e>
 8009084:	9109      	str	r1, [sp, #36]	@ 0x24
 8009086:	e7c6      	b.n	8009016 <_vfiprintf_r+0x15e>
 8009088:	4341      	muls	r1, r0
 800908a:	002e      	movs	r6, r5
 800908c:	2301      	movs	r3, #1
 800908e:	1889      	adds	r1, r1, r2
 8009090:	e7f1      	b.n	8009076 <_vfiprintf_r+0x1be>
 8009092:	aa07      	add	r2, sp, #28
 8009094:	9200      	str	r2, [sp, #0]
 8009096:	0021      	movs	r1, r4
 8009098:	003a      	movs	r2, r7
 800909a:	4b14      	ldr	r3, [pc, #80]	@ (80090ec <_vfiprintf_r+0x234>)
 800909c:	9803      	ldr	r0, [sp, #12]
 800909e:	f7fd fb59 	bl	8006754 <_printf_float>
 80090a2:	9004      	str	r0, [sp, #16]
 80090a4:	9b04      	ldr	r3, [sp, #16]
 80090a6:	3301      	adds	r3, #1
 80090a8:	d1d6      	bne.n	8009058 <_vfiprintf_r+0x1a0>
 80090aa:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 80090ac:	07db      	lsls	r3, r3, #31
 80090ae:	d405      	bmi.n	80090bc <_vfiprintf_r+0x204>
 80090b0:	89bb      	ldrh	r3, [r7, #12]
 80090b2:	059b      	lsls	r3, r3, #22
 80090b4:	d402      	bmi.n	80090bc <_vfiprintf_r+0x204>
 80090b6:	6db8      	ldr	r0, [r7, #88]	@ 0x58
 80090b8:	f7fe f8be 	bl	8007238 <__retarget_lock_release_recursive>
 80090bc:	89bb      	ldrh	r3, [r7, #12]
 80090be:	065b      	lsls	r3, r3, #25
 80090c0:	d500      	bpl.n	80090c4 <_vfiprintf_r+0x20c>
 80090c2:	e71e      	b.n	8008f02 <_vfiprintf_r+0x4a>
 80090c4:	980d      	ldr	r0, [sp, #52]	@ 0x34
 80090c6:	e71e      	b.n	8008f06 <_vfiprintf_r+0x4e>
 80090c8:	aa07      	add	r2, sp, #28
 80090ca:	9200      	str	r2, [sp, #0]
 80090cc:	0021      	movs	r1, r4
 80090ce:	003a      	movs	r2, r7
 80090d0:	4b06      	ldr	r3, [pc, #24]	@ (80090ec <_vfiprintf_r+0x234>)
 80090d2:	9803      	ldr	r0, [sp, #12]
 80090d4:	f7fd fdec 	bl	8006cb0 <_printf_i>
 80090d8:	e7e3      	b.n	80090a2 <_vfiprintf_r+0x1ea>
 80090da:	46c0      	nop			@ (mov r8, r8)
 80090dc:	08009673 	.word	0x08009673
 80090e0:	08009679 	.word	0x08009679
 80090e4:	0800967d 	.word	0x0800967d
 80090e8:	08006755 	.word	0x08006755
 80090ec:	08008e95 	.word	0x08008e95

080090f0 <__swbuf_r>:
 80090f0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80090f2:	0006      	movs	r6, r0
 80090f4:	000d      	movs	r5, r1
 80090f6:	0014      	movs	r4, r2
 80090f8:	2800      	cmp	r0, #0
 80090fa:	d004      	beq.n	8009106 <__swbuf_r+0x16>
 80090fc:	6a03      	ldr	r3, [r0, #32]
 80090fe:	2b00      	cmp	r3, #0
 8009100:	d101      	bne.n	8009106 <__swbuf_r+0x16>
 8009102:	f7fd ff71 	bl	8006fe8 <__sinit>
 8009106:	69a3      	ldr	r3, [r4, #24]
 8009108:	60a3      	str	r3, [r4, #8]
 800910a:	89a3      	ldrh	r3, [r4, #12]
 800910c:	071b      	lsls	r3, r3, #28
 800910e:	d502      	bpl.n	8009116 <__swbuf_r+0x26>
 8009110:	6923      	ldr	r3, [r4, #16]
 8009112:	2b00      	cmp	r3, #0
 8009114:	d109      	bne.n	800912a <__swbuf_r+0x3a>
 8009116:	0021      	movs	r1, r4
 8009118:	0030      	movs	r0, r6
 800911a:	f000 f82b 	bl	8009174 <__swsetup_r>
 800911e:	2800      	cmp	r0, #0
 8009120:	d003      	beq.n	800912a <__swbuf_r+0x3a>
 8009122:	2501      	movs	r5, #1
 8009124:	426d      	negs	r5, r5
 8009126:	0028      	movs	r0, r5
 8009128:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800912a:	6923      	ldr	r3, [r4, #16]
 800912c:	6820      	ldr	r0, [r4, #0]
 800912e:	b2ef      	uxtb	r7, r5
 8009130:	1ac0      	subs	r0, r0, r3
 8009132:	6963      	ldr	r3, [r4, #20]
 8009134:	b2ed      	uxtb	r5, r5
 8009136:	4283      	cmp	r3, r0
 8009138:	dc05      	bgt.n	8009146 <__swbuf_r+0x56>
 800913a:	0021      	movs	r1, r4
 800913c:	0030      	movs	r0, r6
 800913e:	f7ff fd8b 	bl	8008c58 <_fflush_r>
 8009142:	2800      	cmp	r0, #0
 8009144:	d1ed      	bne.n	8009122 <__swbuf_r+0x32>
 8009146:	68a3      	ldr	r3, [r4, #8]
 8009148:	3001      	adds	r0, #1
 800914a:	3b01      	subs	r3, #1
 800914c:	60a3      	str	r3, [r4, #8]
 800914e:	6823      	ldr	r3, [r4, #0]
 8009150:	1c5a      	adds	r2, r3, #1
 8009152:	6022      	str	r2, [r4, #0]
 8009154:	701f      	strb	r7, [r3, #0]
 8009156:	6963      	ldr	r3, [r4, #20]
 8009158:	4283      	cmp	r3, r0
 800915a:	d004      	beq.n	8009166 <__swbuf_r+0x76>
 800915c:	89a3      	ldrh	r3, [r4, #12]
 800915e:	07db      	lsls	r3, r3, #31
 8009160:	d5e1      	bpl.n	8009126 <__swbuf_r+0x36>
 8009162:	2d0a      	cmp	r5, #10
 8009164:	d1df      	bne.n	8009126 <__swbuf_r+0x36>
 8009166:	0021      	movs	r1, r4
 8009168:	0030      	movs	r0, r6
 800916a:	f7ff fd75 	bl	8008c58 <_fflush_r>
 800916e:	2800      	cmp	r0, #0
 8009170:	d0d9      	beq.n	8009126 <__swbuf_r+0x36>
 8009172:	e7d6      	b.n	8009122 <__swbuf_r+0x32>

08009174 <__swsetup_r>:
 8009174:	4b2d      	ldr	r3, [pc, #180]	@ (800922c <__swsetup_r+0xb8>)
 8009176:	b570      	push	{r4, r5, r6, lr}
 8009178:	0005      	movs	r5, r0
 800917a:	6818      	ldr	r0, [r3, #0]
 800917c:	000c      	movs	r4, r1
 800917e:	2800      	cmp	r0, #0
 8009180:	d004      	beq.n	800918c <__swsetup_r+0x18>
 8009182:	6a03      	ldr	r3, [r0, #32]
 8009184:	2b00      	cmp	r3, #0
 8009186:	d101      	bne.n	800918c <__swsetup_r+0x18>
 8009188:	f7fd ff2e 	bl	8006fe8 <__sinit>
 800918c:	220c      	movs	r2, #12
 800918e:	5ea3      	ldrsh	r3, [r4, r2]
 8009190:	071a      	lsls	r2, r3, #28
 8009192:	d423      	bmi.n	80091dc <__swsetup_r+0x68>
 8009194:	06da      	lsls	r2, r3, #27
 8009196:	d407      	bmi.n	80091a8 <__swsetup_r+0x34>
 8009198:	2209      	movs	r2, #9
 800919a:	602a      	str	r2, [r5, #0]
 800919c:	2240      	movs	r2, #64	@ 0x40
 800919e:	2001      	movs	r0, #1
 80091a0:	4313      	orrs	r3, r2
 80091a2:	81a3      	strh	r3, [r4, #12]
 80091a4:	4240      	negs	r0, r0
 80091a6:	e03a      	b.n	800921e <__swsetup_r+0xaa>
 80091a8:	075b      	lsls	r3, r3, #29
 80091aa:	d513      	bpl.n	80091d4 <__swsetup_r+0x60>
 80091ac:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 80091ae:	2900      	cmp	r1, #0
 80091b0:	d008      	beq.n	80091c4 <__swsetup_r+0x50>
 80091b2:	0023      	movs	r3, r4
 80091b4:	3344      	adds	r3, #68	@ 0x44
 80091b6:	4299      	cmp	r1, r3
 80091b8:	d002      	beq.n	80091c0 <__swsetup_r+0x4c>
 80091ba:	0028      	movs	r0, r5
 80091bc:	f7fe fec6 	bl	8007f4c <_free_r>
 80091c0:	2300      	movs	r3, #0
 80091c2:	6363      	str	r3, [r4, #52]	@ 0x34
 80091c4:	2224      	movs	r2, #36	@ 0x24
 80091c6:	89a3      	ldrh	r3, [r4, #12]
 80091c8:	4393      	bics	r3, r2
 80091ca:	81a3      	strh	r3, [r4, #12]
 80091cc:	2300      	movs	r3, #0
 80091ce:	6063      	str	r3, [r4, #4]
 80091d0:	6923      	ldr	r3, [r4, #16]
 80091d2:	6023      	str	r3, [r4, #0]
 80091d4:	2308      	movs	r3, #8
 80091d6:	89a2      	ldrh	r2, [r4, #12]
 80091d8:	4313      	orrs	r3, r2
 80091da:	81a3      	strh	r3, [r4, #12]
 80091dc:	6923      	ldr	r3, [r4, #16]
 80091de:	2b00      	cmp	r3, #0
 80091e0:	d10b      	bne.n	80091fa <__swsetup_r+0x86>
 80091e2:	21a0      	movs	r1, #160	@ 0xa0
 80091e4:	2280      	movs	r2, #128	@ 0x80
 80091e6:	89a3      	ldrh	r3, [r4, #12]
 80091e8:	0089      	lsls	r1, r1, #2
 80091ea:	0092      	lsls	r2, r2, #2
 80091ec:	400b      	ands	r3, r1
 80091ee:	4293      	cmp	r3, r2
 80091f0:	d003      	beq.n	80091fa <__swsetup_r+0x86>
 80091f2:	0021      	movs	r1, r4
 80091f4:	0028      	movs	r0, r5
 80091f6:	f000 f88f 	bl	8009318 <__smakebuf_r>
 80091fa:	220c      	movs	r2, #12
 80091fc:	5ea3      	ldrsh	r3, [r4, r2]
 80091fe:	2101      	movs	r1, #1
 8009200:	001a      	movs	r2, r3
 8009202:	400a      	ands	r2, r1
 8009204:	420b      	tst	r3, r1
 8009206:	d00b      	beq.n	8009220 <__swsetup_r+0xac>
 8009208:	2200      	movs	r2, #0
 800920a:	60a2      	str	r2, [r4, #8]
 800920c:	6962      	ldr	r2, [r4, #20]
 800920e:	4252      	negs	r2, r2
 8009210:	61a2      	str	r2, [r4, #24]
 8009212:	2000      	movs	r0, #0
 8009214:	6922      	ldr	r2, [r4, #16]
 8009216:	4282      	cmp	r2, r0
 8009218:	d101      	bne.n	800921e <__swsetup_r+0xaa>
 800921a:	061a      	lsls	r2, r3, #24
 800921c:	d4be      	bmi.n	800919c <__swsetup_r+0x28>
 800921e:	bd70      	pop	{r4, r5, r6, pc}
 8009220:	0799      	lsls	r1, r3, #30
 8009222:	d400      	bmi.n	8009226 <__swsetup_r+0xb2>
 8009224:	6962      	ldr	r2, [r4, #20]
 8009226:	60a2      	str	r2, [r4, #8]
 8009228:	e7f3      	b.n	8009212 <__swsetup_r+0x9e>
 800922a:	46c0      	nop			@ (mov r8, r8)
 800922c:	2000003c 	.word	0x2000003c

08009230 <_raise_r>:
 8009230:	b570      	push	{r4, r5, r6, lr}
 8009232:	0004      	movs	r4, r0
 8009234:	000d      	movs	r5, r1
 8009236:	291f      	cmp	r1, #31
 8009238:	d904      	bls.n	8009244 <_raise_r+0x14>
 800923a:	2316      	movs	r3, #22
 800923c:	6003      	str	r3, [r0, #0]
 800923e:	2001      	movs	r0, #1
 8009240:	4240      	negs	r0, r0
 8009242:	bd70      	pop	{r4, r5, r6, pc}
 8009244:	6bc3      	ldr	r3, [r0, #60]	@ 0x3c
 8009246:	2b00      	cmp	r3, #0
 8009248:	d004      	beq.n	8009254 <_raise_r+0x24>
 800924a:	008a      	lsls	r2, r1, #2
 800924c:	189b      	adds	r3, r3, r2
 800924e:	681a      	ldr	r2, [r3, #0]
 8009250:	2a00      	cmp	r2, #0
 8009252:	d108      	bne.n	8009266 <_raise_r+0x36>
 8009254:	0020      	movs	r0, r4
 8009256:	f000 f831 	bl	80092bc <_getpid_r>
 800925a:	002a      	movs	r2, r5
 800925c:	0001      	movs	r1, r0
 800925e:	0020      	movs	r0, r4
 8009260:	f000 f81a 	bl	8009298 <_kill_r>
 8009264:	e7ed      	b.n	8009242 <_raise_r+0x12>
 8009266:	2a01      	cmp	r2, #1
 8009268:	d009      	beq.n	800927e <_raise_r+0x4e>
 800926a:	1c51      	adds	r1, r2, #1
 800926c:	d103      	bne.n	8009276 <_raise_r+0x46>
 800926e:	2316      	movs	r3, #22
 8009270:	6003      	str	r3, [r0, #0]
 8009272:	2001      	movs	r0, #1
 8009274:	e7e5      	b.n	8009242 <_raise_r+0x12>
 8009276:	2100      	movs	r1, #0
 8009278:	0028      	movs	r0, r5
 800927a:	6019      	str	r1, [r3, #0]
 800927c:	4790      	blx	r2
 800927e:	2000      	movs	r0, #0
 8009280:	e7df      	b.n	8009242 <_raise_r+0x12>
	...

08009284 <raise>:
 8009284:	b510      	push	{r4, lr}
 8009286:	4b03      	ldr	r3, [pc, #12]	@ (8009294 <raise+0x10>)
 8009288:	0001      	movs	r1, r0
 800928a:	6818      	ldr	r0, [r3, #0]
 800928c:	f7ff ffd0 	bl	8009230 <_raise_r>
 8009290:	bd10      	pop	{r4, pc}
 8009292:	46c0      	nop			@ (mov r8, r8)
 8009294:	2000003c 	.word	0x2000003c

08009298 <_kill_r>:
 8009298:	2300      	movs	r3, #0
 800929a:	b570      	push	{r4, r5, r6, lr}
 800929c:	4d06      	ldr	r5, [pc, #24]	@ (80092b8 <_kill_r+0x20>)
 800929e:	0004      	movs	r4, r0
 80092a0:	0008      	movs	r0, r1
 80092a2:	0011      	movs	r1, r2
 80092a4:	602b      	str	r3, [r5, #0]
 80092a6:	f7fb fba5 	bl	80049f4 <_kill>
 80092aa:	1c43      	adds	r3, r0, #1
 80092ac:	d103      	bne.n	80092b6 <_kill_r+0x1e>
 80092ae:	682b      	ldr	r3, [r5, #0]
 80092b0:	2b00      	cmp	r3, #0
 80092b2:	d000      	beq.n	80092b6 <_kill_r+0x1e>
 80092b4:	6023      	str	r3, [r4, #0]
 80092b6:	bd70      	pop	{r4, r5, r6, pc}
 80092b8:	20000984 	.word	0x20000984

080092bc <_getpid_r>:
 80092bc:	b510      	push	{r4, lr}
 80092be:	f7fb fb97 	bl	80049f0 <_getpid>
 80092c2:	bd10      	pop	{r4, pc}

080092c4 <__swhatbuf_r>:
 80092c4:	b570      	push	{r4, r5, r6, lr}
 80092c6:	000e      	movs	r6, r1
 80092c8:	001d      	movs	r5, r3
 80092ca:	230e      	movs	r3, #14
 80092cc:	5ec9      	ldrsh	r1, [r1, r3]
 80092ce:	0014      	movs	r4, r2
 80092d0:	b096      	sub	sp, #88	@ 0x58
 80092d2:	2900      	cmp	r1, #0
 80092d4:	da0c      	bge.n	80092f0 <__swhatbuf_r+0x2c>
 80092d6:	89b2      	ldrh	r2, [r6, #12]
 80092d8:	2380      	movs	r3, #128	@ 0x80
 80092da:	0011      	movs	r1, r2
 80092dc:	4019      	ands	r1, r3
 80092de:	421a      	tst	r2, r3
 80092e0:	d114      	bne.n	800930c <__swhatbuf_r+0x48>
 80092e2:	2380      	movs	r3, #128	@ 0x80
 80092e4:	00db      	lsls	r3, r3, #3
 80092e6:	2000      	movs	r0, #0
 80092e8:	6029      	str	r1, [r5, #0]
 80092ea:	6023      	str	r3, [r4, #0]
 80092ec:	b016      	add	sp, #88	@ 0x58
 80092ee:	bd70      	pop	{r4, r5, r6, pc}
 80092f0:	466a      	mov	r2, sp
 80092f2:	f000 f853 	bl	800939c <_fstat_r>
 80092f6:	2800      	cmp	r0, #0
 80092f8:	dbed      	blt.n	80092d6 <__swhatbuf_r+0x12>
 80092fa:	23f0      	movs	r3, #240	@ 0xf0
 80092fc:	9901      	ldr	r1, [sp, #4]
 80092fe:	021b      	lsls	r3, r3, #8
 8009300:	4019      	ands	r1, r3
 8009302:	4b04      	ldr	r3, [pc, #16]	@ (8009314 <__swhatbuf_r+0x50>)
 8009304:	18c9      	adds	r1, r1, r3
 8009306:	424b      	negs	r3, r1
 8009308:	4159      	adcs	r1, r3
 800930a:	e7ea      	b.n	80092e2 <__swhatbuf_r+0x1e>
 800930c:	2100      	movs	r1, #0
 800930e:	2340      	movs	r3, #64	@ 0x40
 8009310:	e7e9      	b.n	80092e6 <__swhatbuf_r+0x22>
 8009312:	46c0      	nop			@ (mov r8, r8)
 8009314:	ffffe000 	.word	0xffffe000

08009318 <__smakebuf_r>:
 8009318:	b5f0      	push	{r4, r5, r6, r7, lr}
 800931a:	2602      	movs	r6, #2
 800931c:	898b      	ldrh	r3, [r1, #12]
 800931e:	0005      	movs	r5, r0
 8009320:	000c      	movs	r4, r1
 8009322:	b085      	sub	sp, #20
 8009324:	4233      	tst	r3, r6
 8009326:	d007      	beq.n	8009338 <__smakebuf_r+0x20>
 8009328:	0023      	movs	r3, r4
 800932a:	3347      	adds	r3, #71	@ 0x47
 800932c:	6023      	str	r3, [r4, #0]
 800932e:	6123      	str	r3, [r4, #16]
 8009330:	2301      	movs	r3, #1
 8009332:	6163      	str	r3, [r4, #20]
 8009334:	b005      	add	sp, #20
 8009336:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8009338:	ab03      	add	r3, sp, #12
 800933a:	aa02      	add	r2, sp, #8
 800933c:	f7ff ffc2 	bl	80092c4 <__swhatbuf_r>
 8009340:	9f02      	ldr	r7, [sp, #8]
 8009342:	9001      	str	r0, [sp, #4]
 8009344:	0039      	movs	r1, r7
 8009346:	0028      	movs	r0, r5
 8009348:	f7fe fe76 	bl	8008038 <_malloc_r>
 800934c:	2800      	cmp	r0, #0
 800934e:	d108      	bne.n	8009362 <__smakebuf_r+0x4a>
 8009350:	220c      	movs	r2, #12
 8009352:	5ea3      	ldrsh	r3, [r4, r2]
 8009354:	059a      	lsls	r2, r3, #22
 8009356:	d4ed      	bmi.n	8009334 <__smakebuf_r+0x1c>
 8009358:	2203      	movs	r2, #3
 800935a:	4393      	bics	r3, r2
 800935c:	431e      	orrs	r6, r3
 800935e:	81a6      	strh	r6, [r4, #12]
 8009360:	e7e2      	b.n	8009328 <__smakebuf_r+0x10>
 8009362:	2380      	movs	r3, #128	@ 0x80
 8009364:	89a2      	ldrh	r2, [r4, #12]
 8009366:	6020      	str	r0, [r4, #0]
 8009368:	4313      	orrs	r3, r2
 800936a:	81a3      	strh	r3, [r4, #12]
 800936c:	9b03      	ldr	r3, [sp, #12]
 800936e:	6120      	str	r0, [r4, #16]
 8009370:	6167      	str	r7, [r4, #20]
 8009372:	2b00      	cmp	r3, #0
 8009374:	d00c      	beq.n	8009390 <__smakebuf_r+0x78>
 8009376:	0028      	movs	r0, r5
 8009378:	230e      	movs	r3, #14
 800937a:	5ee1      	ldrsh	r1, [r4, r3]
 800937c:	f000 f820 	bl	80093c0 <_isatty_r>
 8009380:	2800      	cmp	r0, #0
 8009382:	d005      	beq.n	8009390 <__smakebuf_r+0x78>
 8009384:	2303      	movs	r3, #3
 8009386:	89a2      	ldrh	r2, [r4, #12]
 8009388:	439a      	bics	r2, r3
 800938a:	3b02      	subs	r3, #2
 800938c:	4313      	orrs	r3, r2
 800938e:	81a3      	strh	r3, [r4, #12]
 8009390:	89a3      	ldrh	r3, [r4, #12]
 8009392:	9a01      	ldr	r2, [sp, #4]
 8009394:	4313      	orrs	r3, r2
 8009396:	81a3      	strh	r3, [r4, #12]
 8009398:	e7cc      	b.n	8009334 <__smakebuf_r+0x1c>
	...

0800939c <_fstat_r>:
 800939c:	2300      	movs	r3, #0
 800939e:	b570      	push	{r4, r5, r6, lr}
 80093a0:	4d06      	ldr	r5, [pc, #24]	@ (80093bc <_fstat_r+0x20>)
 80093a2:	0004      	movs	r4, r0
 80093a4:	0008      	movs	r0, r1
 80093a6:	0011      	movs	r1, r2
 80093a8:	602b      	str	r3, [r5, #0]
 80093aa:	f7fb fb4e 	bl	8004a4a <_fstat>
 80093ae:	1c43      	adds	r3, r0, #1
 80093b0:	d103      	bne.n	80093ba <_fstat_r+0x1e>
 80093b2:	682b      	ldr	r3, [r5, #0]
 80093b4:	2b00      	cmp	r3, #0
 80093b6:	d000      	beq.n	80093ba <_fstat_r+0x1e>
 80093b8:	6023      	str	r3, [r4, #0]
 80093ba:	bd70      	pop	{r4, r5, r6, pc}
 80093bc:	20000984 	.word	0x20000984

080093c0 <_isatty_r>:
 80093c0:	2300      	movs	r3, #0
 80093c2:	b570      	push	{r4, r5, r6, lr}
 80093c4:	4d06      	ldr	r5, [pc, #24]	@ (80093e0 <_isatty_r+0x20>)
 80093c6:	0004      	movs	r4, r0
 80093c8:	0008      	movs	r0, r1
 80093ca:	602b      	str	r3, [r5, #0]
 80093cc:	f7fb fb42 	bl	8004a54 <_isatty>
 80093d0:	1c43      	adds	r3, r0, #1
 80093d2:	d103      	bne.n	80093dc <_isatty_r+0x1c>
 80093d4:	682b      	ldr	r3, [r5, #0]
 80093d6:	2b00      	cmp	r3, #0
 80093d8:	d000      	beq.n	80093dc <_isatty_r+0x1c>
 80093da:	6023      	str	r3, [r4, #0]
 80093dc:	bd70      	pop	{r4, r5, r6, pc}
 80093de:	46c0      	nop			@ (mov r8, r8)
 80093e0:	20000984 	.word	0x20000984

080093e4 <_init>:
 80093e4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80093e6:	46c0      	nop			@ (mov r8, r8)
 80093e8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80093ea:	bc08      	pop	{r3}
 80093ec:	469e      	mov	lr, r3
 80093ee:	4770      	bx	lr

080093f0 <_fini>:
 80093f0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80093f2:	46c0      	nop			@ (mov r8, r8)
 80093f4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80093f6:	bc08      	pop	{r3}
 80093f8:	469e      	mov	lr, r3
 80093fa:	4770      	bx	lr
